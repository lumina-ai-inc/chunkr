/*
 * Chunkr API
 *
 * API service for document layout analysis and chunking to convert document into RAG/LLM-ready data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ishaan@lumina.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChunkProcessing : Controls the setting for the chunking and post-processing of each chunk.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChunkProcessing {
    /// Whether to ignore headers and footers in the chunking process. This is recommended as headers and footers break reading order across pages.
    #[serde(rename = "ignore_headers_and_footers", skip_serializing_if = "Option::is_none")]
    pub ignore_headers_and_footers: Option<bool>,
    /// The target number of words in each chunk. If 0, each chunk will contain a single segment.
    #[serde(rename = "target_length", skip_serializing_if = "Option::is_none")]
    pub target_length: Option<i32>,
    #[serde(rename = "tokenizer", skip_serializing_if = "Option::is_none")]
    pub tokenizer: Option<Box<models::ChunkProcessingTokenizer>>,
}

impl ChunkProcessing {
    /// Controls the setting for the chunking and post-processing of each chunk.
    pub fn new() -> ChunkProcessing {
        ChunkProcessing {
            ignore_headers_and_footers: None,
            target_length: None,
            tokenizer: None,
        }
    }
}

