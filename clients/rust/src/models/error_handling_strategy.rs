/*
 * Chunkr API
 *
 * API service for document layout analysis and chunking to convert document into RAG/LLM-ready data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ishaan@lumina.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ErrorHandlingStrategy : Controls how errors are handled during processing: - `Fail`: Stops processing and fails the task when any error occurs - `Continue`: Attempts to continue processing despite non-critical errors (eg. LLM refusals etc.)
/// Controls how errors are handled during processing: - `Fail`: Stops processing and fails the task when any error occurs - `Continue`: Attempts to continue processing despite non-critical errors (eg. LLM refusals etc.)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorHandlingStrategy {
    #[serde(rename = "Fail")]
    Fail,
    #[serde(rename = "Continue")]
    Continue,

}

impl std::fmt::Display for ErrorHandlingStrategy {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Fail => write!(f, "Fail"),
            Self::Continue => write!(f, "Continue"),
        }
    }
}

impl Default for ErrorHandlingStrategy {
    fn default() -> ErrorHandlingStrategy {
        Self::Fail
    }
}

