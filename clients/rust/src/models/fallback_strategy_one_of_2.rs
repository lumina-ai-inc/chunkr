/*
 * Chunkr API
 *
 * API service for document layout analysis and chunking to convert document into RAG/LLM-ready data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ishaan@lumina.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FallbackStrategyOneOf2 : Use a specific model as fallback
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FallbackStrategyOneOf2 {
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Use a specific model as fallback
    #[serde(rename = "value")]
    pub value: String,
}

impl FallbackStrategyOneOf2 {
    /// Use a specific model as fallback
    pub fn new(r#type: Type, value: String) -> FallbackStrategyOneOf2 {
        FallbackStrategyOneOf2 {
            r#type,
            value,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Model")]
    Model,
}

impl Default for Type {
    fn default() -> Type {
        Self::Model
    }
}

