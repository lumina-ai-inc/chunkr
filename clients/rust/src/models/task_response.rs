/*
 * Chunkr API
 *
 * API service for document layout analysis and chunking to convert document into RAG/LLM-ready data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ishaan@lumina.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TaskResponse {
    #[serde(rename = "configuration")]
    pub configuration: Box<models::Configuration>,
    /// The date and time when the task was created and queued.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The date and time when the task will expire.
    #[serde(rename = "expires_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<Option<String>>,
    /// The date and time when the task was finished.
    #[serde(rename = "finished_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub finished_at: Option<Option<String>>,
    /// A message describing the task's status or any errors that occurred.
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "output", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub output: Option<Option<Box<models::OutputResponse>>>,
    /// The date and time when the task was started.
    #[serde(rename = "started_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub started_at: Option<Option<String>>,
    #[serde(rename = "status")]
    pub status: models::Status,
    /// The unique identifier for the task.
    #[serde(rename = "task_id")]
    pub task_id: String,
    /// The presigned URL of the task.
    #[serde(rename = "task_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub task_url: Option<Option<String>>,
}

impl TaskResponse {
    pub fn new(configuration: models::Configuration, created_at: String, message: String, status: models::Status, task_id: String) -> TaskResponse {
        TaskResponse {
            configuration: Box::new(configuration),
            created_at,
            expires_at: None,
            finished_at: None,
            message,
            output: None,
            started_at: None,
            status,
            task_id,
            task_url: None,
        }
    }
}

