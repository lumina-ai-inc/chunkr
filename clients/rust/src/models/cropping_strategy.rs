/*
 * Chunkr API
 *
 * API service for document layout analysis and chunking to convert document into RAG/LLM-ready data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ishaan@lumina.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CroppingStrategy : Controls the cropping strategy for an item (e.g. segment, chunk, etc.) - `All` crops all images in the item - `Auto` crops images only if required for post-processing
/// Controls the cropping strategy for an item (e.g. segment, chunk, etc.) - `All` crops all images in the item - `Auto` crops images only if required for post-processing
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CroppingStrategy {
    #[serde(rename = "All")]
    All,
    #[serde(rename = "Auto")]
    Auto,

}

impl std::fmt::Display for CroppingStrategy {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::All => write!(f, "All"),
            Self::Auto => write!(f, "Auto"),
        }
    }
}

impl Default for CroppingStrategy {
    fn default() -> CroppingStrategy {
        Self::All
    }
}

