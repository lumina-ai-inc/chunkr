{
  "file_name": "Intel - A Novel Hashing Method Suitable for Lookup Functions  (February 2012).pdf",
  "task_id": "b8989959-e3c3-480a-85b3-4a17db19eced",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "a6c8d3a6-c27d-46fa-bd84-d5822780db2a",
            "bbox": {
              "left": 961.49994,
              "top": 67.75,
              "width": 162.41666,
              "height": 112.416664
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel2",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 19,
                  "top": 32,
                  "width": 137,
                  "height": 48
                },
                "text": "intel2",
                "confidence": 0.93721765
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a6c8d3a6-c27d-46fa-bd84-d5822780db2a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8b9e0585549c22501f194edb7b412dc8c7f01d35be717babdc2676fdd9b585bd",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a6c8d3a6-c27d-46fa-bd84-d5822780db2a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8b9e0585549c22501f194edb7b412dc8c7f01d35be717babdc2676fdd9b585bd\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a6c8d3a6-c27d-46fa-bd84-d5822780db2a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8b9e0585549c22501f194edb7b412dc8c7f01d35be717babdc2676fdd9b585bd)"
          }
        ],
        "chunk_length": 0
      },
      {
        "segments": [
          {
            "segment_id": "01c64640-463b-4541-84e8-b8488f391ba2",
            "bbox": {
              "left": 555.25,
              "top": 415.66666,
              "width": 487.41666,
              "height": 291.5833
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "A Novel Hashing Method Suitable for Lookup Functions",
            "segment_type": "Title",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/01c64640-463b-4541-84e8-b8488f391ba2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c198a22e7fa789006979a9579d48bdab0c87f3bcdfae7ba9187cf883906e4a72",
            "html": "<h1>A Novel Hashing Method Suitable for Lookup Functions</h1>",
            "markdown": "# A Novel Hashing Method Suitable for Lookup Functions\n\n"
          }
        ],
        "chunk_length": 8
      },
      {
        "segments": [
          {
            "segment_id": "a6978365-719c-418d-9089-4894b2b94e61",
            "bbox": {
              "left": 553.1666,
              "top": 732.3333,
              "width": 147.83333,
              "height": 22.833332
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "February 2012",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a6978365-719c-418d-9089-4894b2b94e61.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e92aee0e10744dd1be9f3a2229989a6ac947dfc862ed587f365f732641524e51",
            "html": "<p>February 2012</p>",
            "markdown": "February 2012\n\n"
          },
          {
            "segment_id": "8038d341-064e-446b-9bf7-8741ee515e2c",
            "bbox": {
              "left": 278.16666,
              "top": 438.5833,
              "width": 124.916664,
              "height": 24.916666
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "White Paper",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/8038d341-064e-446b-9bf7-8741ee515e2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2e34971c46acddda06976fae8a8ce03f8e2d4007181f7909ed83759a2dbc0873",
            "html": "<p>White Paper</p>",
            "markdown": "White Paper\n\n"
          },
          {
            "segment_id": "6fce65a1-e7f9-4f5f-84da-ab6b9034a06d",
            "bbox": {
              "left": 276.0833,
              "top": 492.74997,
              "width": 149.91666,
              "height": 52
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Vinodh Gopal Jim Guilford",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/6fce65a1-e7f9-4f5f-84da-ab6b9034a06d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=26154d7c29fd55c4360a3fbd89747aaafb36d3d4d1f507b754ab9489f8e736bc",
            "html": "<p>Vinodh Gopal Jim Guilford</p>",
            "markdown": "Vinodh Gopal Jim Guilford\n\n"
          },
          {
            "segment_id": "fe26430c-7aca-42b1-9cf2-68e04245c301",
            "bbox": {
              "left": 276.0833,
              "top": 576.0833,
              "width": 172.83333,
              "height": 49.916664
            },
            "page_number": 1,
            "page_width": 1275,
            "page_height": 1650,
            "content": "IA Architects Intel Corporation",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/fe26430c-7aca-42b1-9cf2-68e04245c301.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7800746db3585571085ae3058b0a19dabfec43b8e9dc08b01055938a3df2e34c",
            "html": "<p>IA Architects Intel Corporation</p>",
            "markdown": "IA Architects Intel Corporation\n\n"
          }
        ],
        "chunk_length": 12
      },
      {
        "segments": [
          {
            "segment_id": "70c6d92a-0d62-4e91-97b4-6bbcb9a63117",
            "bbox": {
              "left": 155.25,
              "top": 259.41666,
              "width": 518.6666,
              "height": 52
            },
            "page_number": 2,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Executive Summary",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/70c6d92a-0d62-4e91-97b4-6bbcb9a63117.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0a94b1433935fc8151a49307ec2d5b6429212e50e3d9c6f6991512114740bf5c",
            "html": "<h2>Executive Summary</h2>",
            "markdown": "## Executive Summary\n\n"
          },
          {
            "segment_id": "f5ed478f-ccb8-46d8-9fbd-c7c427c7e4ea",
            "bbox": {
              "left": 292.75,
              "top": 336.5,
              "width": 824.9166,
              "height": 226.99998
            },
            "page_number": 2,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/f5ed478f-ccb8-46d8-9fbd-c7c427c7e4ea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0eef063809de29fb69b2805391966c3b529bc27dfefdca6d80c49c19452ff405",
            "html": "<p>The paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation.</p>",
            "markdown": "The paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation.\n\n"
          },
          {
            "segment_id": "3261b48e-21b4-43a3-b28b-110b648b9961",
            "bbox": {
              "left": 299,
              "top": 609.4166,
              "width": 818.6666,
              "height": 274.91666
            },
            "page_number": 2,
            "page_width": 1275,
            "page_height": 1650,
            "content": "This paper describes a novel hashing method suitable for lookup functions, based on the crc32 instruction. We show how to compute a high-quality 64-bit hash digest at extremely high performance on Intel Â® processors. For large data buffers, the performance of our hash function tends to ~ 0.44 cycles/byte on a single thread of an Intel Â® Coreâ¢ i5 650 processor. Even for small buffers (~24 bytes), the performance is better than 1 cycle/byte.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/3261b48e-21b4-43a3-b28b-110b648b9961.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9f0ef806f9f78a32395fc5f275fcdc68faed746fa1a69f330bac33b7d968d7f1",
            "html": "<p>This paper describes a novel hashing method suitable for lookup functions, based on the crc32 instruction. We show how to compute a high-quality 64-bit hash digest at extremely high performance on Intel Â® processors. For large data buffers, the performance of our hash function tends to ~ 0.44 cycles/byte on a single thread of an Intel Â® Coreâ¢ i5 650 processor. Even for small buffers (~24 bytes), the performance is better than 1 cycle/byte.</p>",
            "markdown": "This paper describes a novel hashing method suitable for lookup functions, based on the crc32 instruction. We show how to compute a high-quality 64-bit hash digest at extremely high performance on Intel Â® processors. For large data buffers, the performance of our hash function tends to ~ 0.44 cycles/byte on a single thread of an Intel Â® Coreâ¢ i5 650 processor. Even for small buffers (~24 bytes), the performance is better than 1 cycle/byte.\n\n"
          },
          {
            "segment_id": "93f38b48-fd7a-418e-8f9f-d85a65751118",
            "bbox": {
              "left": 290.66666,
              "top": 938.5833,
              "width": 829.0833,
              "height": 226.99998
            },
            "page_number": 2,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The Intel Â® Embedded Design Center provides qualified developers with web-based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. www.intel.com/embedded/edc .",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/93f38b48-fd7a-418e-8f9f-d85a65751118.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ff071b42f93b11d30c260f3cd7addf90cef2c248e75ea9d91f5e75a8d433f3d",
            "html": "<p>The Intel Â® Embedded Design Center provides qualified developers with web-based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. www.intel.com/embedded/edc .</p>",
            "markdown": "The Intel Â® Embedded Design Center provides qualified developers with web-based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. www.intel.com/embedded/edc .\n\n"
          }
        ],
        "chunk_length": 188
      },
      {
        "segments": [
          {
            "segment_id": "7db1a177-775e-4241-ba65-3b22a4624fb8",
            "bbox": {
              "left": 155.25,
              "top": 236.49998,
              "width": 237.41666,
              "height": 56.166664
            },
            "page_number": 3,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Contents",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/7db1a177-775e-4241-ba65-3b22a4624fb8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=34a6af717db6eab69556c9743daefd9947d37068d5962de22a25fe35aeea8b12",
            "html": "<h2>Contents</h2>",
            "markdown": "## Contents\n\n"
          },
          {
            "segment_id": "732e3998-4b9b-4773-9506-fe9cad9cdf7a",
            "bbox": {
              "left": 971.9166,
              "top": 78.166664,
              "width": 152,
              "height": 108.24999
            },
            "page_number": 3,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 10,
                  "top": 28,
                  "width": 133,
                  "height": 52
                },
                "text": "intel",
                "confidence": 0.98851454
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/732e3998-4b9b-4773-9506-fe9cad9cdf7a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ab5284b8e84ad35b74ae0ad841495f19fb4e359d70c0e5cc21634c347063f82",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/732e3998-4b9b-4773-9506-fe9cad9cdf7a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ab5284b8e84ad35b74ae0ad841495f19fb4e359d70c0e5cc21634c347063f82\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/732e3998-4b9b-4773-9506-fe9cad9cdf7a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ab5284b8e84ad35b74ae0ad841495f19fb4e359d70c0e5cc21634c347063f82)"
          },
          {
            "segment_id": "de4ed81d-d1fa-4db9-8fce-f02ff6ade531",
            "bbox": {
              "left": 153.16666,
              "top": 319.8333,
              "width": 972.8333,
              "height": 374.91666
            },
            "page_number": 3,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Overview 4 Background of Hashing for Lookups 4 Description of the crc32-Based Hash method 5 Performance 6 Methodology. Results Testing for Quality 8 Conclusion 8 Contributors 9 References 9",
            "segment_type": "Table",
            "ocr": [
              {
                "bbox": {
                  "left": 3,
                  "top": 7,
                  "width": 102,
                  "height": 23
                },
                "text": "Overview",
                "confidence": 0.9945767
              },
              {
                "bbox": {
                  "left": 949,
                  "top": 9,
                  "width": 15,
                  "height": 21
                },
                "text": "4",
                "confidence": 0.9992181
              },
              {
                "bbox": {
                  "left": 2,
                  "top": 47,
                  "width": 378,
                  "height": 24
                },
                "text": "Background of Hashing for Lookups",
                "confidence": 0.9516586
              },
              {
                "bbox": {
                  "left": 951,
                  "top": 49,
                  "width": 11,
                  "height": 20
                },
                "text": "4",
                "confidence": 0.9990976
              },
              {
                "bbox": {
                  "left": 3,
                  "top": 87,
                  "width": 476,
                  "height": 23
                },
                "text": "Description of the crc32-Based Hash method",
                "confidence": 0.9543332
              },
              {
                "bbox": {
                  "left": 949,
                  "top": 89,
                  "width": 15,
                  "height": 20
                },
                "text": "5",
                "confidence": 0.98866373
              },
              {
                "bbox": {
                  "left": 0,
                  "top": 124,
                  "width": 141,
                  "height": 28
                },
                "text": "Performance",
                "confidence": 0.9935202
              },
              {
                "bbox": {
                  "left": 950,
                  "top": 131,
                  "width": 12,
                  "height": 19
                },
                "text": "6",
                "confidence": 0.92428774
              },
              {
                "bbox": {
                  "left": 136,
                  "top": 155,
                  "width": 146,
                  "height": 29
                },
                "text": "Methodology.",
                "confidence": 0.98640996
              },
              {
                "bbox": {
                  "left": 137,
                  "top": 186,
                  "width": 82,
                  "height": 23
                },
                "text": "Results",
                "confidence": 0.989728
              },
              {
                "bbox": {
                  "left": 1,
                  "top": 224,
                  "width": 200,
                  "height": 27
                },
                "text": "Testing for Quality",
                "confidence": 0.9648926
              },
              {
                "bbox": {
                  "left": 951,
                  "top": 228,
                  "width": 12,
                  "height": 20
                },
                "text": "8",
                "confidence": 0.9972638
              },
              {
                "bbox": {
                  "left": 3,
                  "top": 265,
                  "width": 117,
                  "height": 23
                },
                "text": "Conclusion",
                "confidence": 0.9936867
              },
              {
                "bbox": {
                  "left": 951,
                  "top": 268,
                  "width": 12,
                  "height": 19
                },
                "text": "8",
                "confidence": 0.9973622
              },
              {
                "bbox": {
                  "left": 1,
                  "top": 302,
                  "width": 139,
                  "height": 28
                },
                "text": "Contributors",
                "confidence": 0.9977488
              },
              {
                "bbox": {
                  "left": 952,
                  "top": 308,
                  "width": 11,
                  "height": 19
                },
                "text": "9",
                "confidence": 0.9905691
              },
              {
                "bbox": {
                  "left": 1,
                  "top": 344,
                  "width": 124,
                  "height": 25
                },
                "text": "References",
                "confidence": 0.9950091
              },
              {
                "bbox": {
                  "left": 952,
                  "top": 348,
                  "width": 12,
                  "height": 17
                },
                "text": "9",
                "confidence": 0.99730206
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/de4ed81d-d1fa-4db9-8fce-f02ff6ade531.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c0545ebf2a76c51b63c4311b911fbab79afc325e6d9daaa23e09363224f3d890",
            "html": "<table>\n  <tbody>\n    <tr>\n      <td>Overview</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>Background of Hashing for Lookups</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>Description of the crc32-Based Hash method</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <td>Performance</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <td>Methodology</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <td>Results</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <td>Testing for Quality</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <td>Conclusion</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <td>Contributors</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <td>References</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>",
            "markdown": "| Overview | 4 |\n| --- | --- |\n| Background of Hashing for Lookups | 4 |\n| Description of the crc32-Based Hash method | 5 |\n| Performance | 6 |\n| Methodology | 6 |\n| Results | 7 |\n| Testing for Quality | 8 |\n| Conclusion | 8 |\n| Contributors | 9 |\n| References | 9 |\n"
          },
          {
            "segment_id": "1d55fa26-a5df-4512-bf69-e7338ce87019",
            "bbox": {
              "left": 290.66666,
              "top": 1499,
              "width": 122.83333,
              "height": 20.75
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "326841-001",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/1d55fa26-a5df-4512-bf69-e7338ce87019.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d2a55bee741fcf4d0cb79ab28c5e03e34be51f60211eaf1cb4bc705c374df846",
            "html": "<p>326841-001</p>",
            "markdown": "326841-001\n\n"
          }
        ],
        "chunk_length": 43
      },
      {
        "segments": [
          {
            "segment_id": "4c45b9ab-f578-4764-9b98-09205e3bc7ae",
            "bbox": {
              "left": 140.66666,
              "top": 217.74998,
              "width": 251.99998,
              "height": 54.083332
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Overview",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/4c45b9ab-f578-4764-9b98-09205e3bc7ae.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=215fcfc2cf8a77ed8ef5746ceea05db76745d9efcd9e7baf4691e855d5da8226",
            "html": "<h2>Overview</h2>",
            "markdown": "## Overview\n\n"
          },
          {
            "segment_id": "d6e76668-2062-4748-b72e-7cfd793dff5a",
            "bbox": {
              "left": 963.5833,
              "top": 67.75,
              "width": 162.41666,
              "height": 114.49999
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel2",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 15,
                  "top": 31,
                  "width": 142,
                  "height": 49
                },
                "text": "intel2",
                "confidence": 0.91873926
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/d6e76668-2062-4748-b72e-7cfd793dff5a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2651a867057d2ae75128454d24039e3bc9c933658abdd844dedfbba2a940d227",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/d6e76668-2062-4748-b72e-7cfd793dff5a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2651a867057d2ae75128454d24039e3bc9c933658abdd844dedfbba2a940d227\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/d6e76668-2062-4748-b72e-7cfd793dff5a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2651a867057d2ae75128454d24039e3bc9c933658abdd844dedfbba2a940d227)"
          },
          {
            "segment_id": "07d14e4d-4674-483a-8623-916811ffe513",
            "bbox": {
              "left": 292.75,
              "top": 315.66666,
              "width": 812.4166,
              "height": 160.33333
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "This paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction [3]. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation and is useful in contexts such as network processing applications.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/07d14e4d-4674-483a-8623-916811ffe513.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=429ecdb0e158c3d115fc952a46895ef49968e8f958b05c9c466bf5bebac192aa",
            "html": "<p>This paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction [3]. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation and is useful in contexts such as network processing applications.</p>",
            "markdown": "This paper describes a novel hashing method suitable for lookup functions. Traditional methods are either of lower hash quality or inferior performance. In this paper, we show how to compute a high-quality hash digest at extremely high performance on Intel Â® processors using the crc32 instruction [3]. Our method also generates multiple 32-bit hashes of an input data buffer, which have low correlation and is useful in contexts such as network processing applications.\n\n"
          }
        ],
        "chunk_length": 74
      },
      {
        "segments": [
          {
            "segment_id": "7633c8b1-d8c9-4cc2-aeb0-b176577cdc44",
            "bbox": {
              "left": 140.66666,
              "top": 511.5,
              "width": 924.9166,
              "height": 52
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Background of Hashing for Lookups",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/7633c8b1-d8c9-4cc2-aeb0-b176577cdc44.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1fa59eec9b4e1447935d3b1094ece12758a6a602456885b4024c5be5ba63e283",
            "html": "<h2>Background of Hashing for Lookups</h2>",
            "markdown": "## Background of Hashing for Lookups\n\n"
          },
          {
            "segment_id": "6b0bf375-f619-4f56-95a2-789deac7ecaa",
            "bbox": {
              "left": 290.66666,
              "top": 601.0833,
              "width": 820.74994,
              "height": 199.91666
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Some of the best methods to perform hashing for lookups such as lookup, lookup2 and lookup3 have been developed by Bob Jenkins [1]. The requirements vary based on applications, but for the most critical usages in network processing, we need to generate a hash digest of an input data buffer of typically small size. In some instances, the data buffers are all fixed length, however in others they vary. Performance of the hash function and the hash quality are both critical. The hash function does not require cryptographic strength.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/6b0bf375-f619-4f56-95a2-789deac7ecaa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=726687000ae5ec36307aa82b3f3977b33e2631786cabd031a07fbc94cd245750",
            "html": "<p>Some of the best methods to perform hashing for lookups such as lookup, lookup2 and lookup3 have been developed by Bob Jenkins [1]. The requirements vary based on applications, but for the most critical usages in network processing, we need to generate a hash digest of an input data buffer of typically small size. In some instances, the data buffers are all fixed length, however in others they vary. Performance of the hash function and the hash quality are both critical. The hash function does not require cryptographic strength.</p>",
            "markdown": "Some of the best methods to perform hashing for lookups such as lookup, lookup2 and lookup3 have been developed by Bob Jenkins [1]. The requirements vary based on applications, but for the most critical usages in network processing, we need to generate a hash digest of an input data buffer of typically small size. In some instances, the data buffers are all fixed length, however in others they vary. Performance of the hash function and the hash quality are both critical. The hash function does not require cryptographic strength.\n\n"
          },
          {
            "segment_id": "20b3b786-1d05-47d0-93ab-3a2274adda06",
            "bbox": {
              "left": 290.66666,
              "top": 823.99994,
              "width": 824.9166,
              "height": 174.91666
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The digest size can be larger than 32 bits, such as 64 bits. In some usages, we need to generate a pair of 32-bit hash digests that have low correlation in addition to being individually strong. The general requirement is that we need a hash digest whose size is N*32 bits or a set of N 32-bit digests of low correlation. For the special case of 32-bit hashes, we can use the crc32 instruction, but the question is how to extend the power/speed of the crc32 instruction to the general case.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/20b3b786-1d05-47d0-93ab-3a2274adda06.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=db188b12700ddbdca40e23fa0a5cde77e7922e2dfbb5b8dbb514c69c95f68f38",
            "html": "<p>The digest size can be larger than 32 bits, such as 64 bits. In some usages, we need to generate a pair of 32-bit hash digests that have low correlation in addition to being individually strong. The general requirement is that we need a hash digest whose size is N*32 bits or a set of N 32-bit digests of low correlation. For the special case of 32-bit hashes, we can use the crc32 instruction, but the question is how to extend the power/speed of the crc32 instruction to the general case.</p>",
            "markdown": "The digest size can be larger than 32 bits, such as 64 bits. In some usages, we need to generate a pair of 32-bit hash digests that have low correlation in addition to being individually strong. The general requirement is that we need a hash digest whose size is N*32 bits or a set of N 32-bit digests of low correlation. For the special case of 32-bit hashes, we can use the crc32 instruction, but the question is how to extend the power/speed of the crc32 instruction to the general case.\n\n"
          },
          {
            "segment_id": "360cbfe4-b8d7-40b9-8b4e-7d6b308bb6c1",
            "bbox": {
              "left": 290.66666,
              "top": 1021.9166,
              "width": 824.9166,
              "height": 152
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "We describe a framework to achieve this and show the details of one such function that generates 64-bit digests (or pairs of 32-bit digests) called intel_hash64. Further details can be found in the patent application [2] on which the methods are based. We measured performance as the average cycles and the average rate in cycles / byte to hash a large number of unique data buffers.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/360cbfe4-b8d7-40b9-8b4e-7d6b308bb6c1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=923e9702790326e2837f9045add864031e622719d46b3a7b1beaf3d8e29213c9",
            "html": "<p>We describe a framework to achieve this and show the details of one such function that generates 64-bit digests (or pairs of 32-bit digests) called intel_hash64. Further details can be found in the patent application [2] on which the methods are based. We measured performance as the average cycles and the average rate in cycles / byte to hash a large number of unique data buffers.</p>",
            "markdown": "We describe a framework to achieve this and show the details of one such function that generates 64-bit digests (or pairs of 32-bit digests) called intel_hash64. Further details can be found in the patent application [2] on which the methods are based. We measured performance as the average cycles and the average rate in cycles / byte to hash a large number of unique data buffers.\n\n"
          },
          {
            "segment_id": "8ba4039d-a6bf-42b8-9bd0-8155e8f3df97",
            "bbox": {
              "left": 290.66666,
              "top": 1196.9166,
              "width": 816.5833,
              "height": 249.91666
            },
            "page_number": 4,
            "page_width": 1275,
            "page_height": 1650,
            "content": "In addition to checking the strength of our proposed hash function, we also checked the quality of a hash function derived from a cryptographic hash for reference (SHA1 based). One of the best known tests, the frog test [1], toggles bits in an attempt to generate digest collisions. We tested the hash functions for collisions with each individual 32-bit digest, and with a 64-bit digest created by concatenating the two 32-bit digests. The SHA1 algorithm generates a 160-bit digest, from which we had to form a 64-bit digest of the highest quality as measured by the frog test (for 32-bit digests). The SHA1 digest can be viewed as comprising five 32-bit digests, and we picked the best performing one (bits 127:96) as our first 32-bit digest. We constructed",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/8ba4039d-a6bf-42b8-9bd0-8155e8f3df97.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=43d0f5dd851087497c94be76065a035275f194efc882679d5e1b05f27edcd836",
            "html": "<p>In addition to checking the strength of our proposed hash function, we also checked the quality of a hash function derived from a cryptographic hash for reference (SHA1 based). One of the best known tests, the frog test [1], toggles bits in an attempt to generate digest collisions. We tested the hash functions for collisions with each individual 32-bit digest, and with a 64-bit digest created by concatenating the two 32-bit digests. The SHA1 algorithm generates a 160-bit digest, from which we had to form a 64-bit digest of the highest quality as measured by the frog test (for 32-bit digests). The SHA1 digest can be viewed as comprising five 32-bit digests, and we picked the best performing one (bits 127:96) as our first 32-bit digest. We constructed</p>",
            "markdown": "In addition to checking the strength of our proposed hash function, we also checked the quality of a hash function derived from a cryptographic hash for reference (SHA1 based). One of the best known tests, the frog test [1], toggles bits in an attempt to generate digest collisions. We tested the hash functions for collisions with each individual 32-bit digest, and with a 64-bit digest created by concatenating the two 32-bit digests. The SHA1 algorithm generates a 160-bit digest, from which we had to form a 64-bit digest of the highest quality as measured by the frog test (for 32-bit digests). The SHA1 digest can be viewed as comprising five 32-bit digests, and we picked the best performing one (bits 127:96) as our first 32-bit digest. We constructed\n\n"
          },
          {
            "segment_id": "5c41143f-9ae1-4eb0-96ad-e1f1bdf50056",
            "bbox": {
              "left": 969.8333,
              "top": 78.166664,
              "width": 154.08333,
              "height": 108.24999
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 16,
                  "top": 28,
                  "width": 121,
                  "height": 52
                },
                "text": "intel",
                "confidence": 0.991959
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5c41143f-9ae1-4eb0-96ad-e1f1bdf50056.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=553690dbea9c8275c4dc46dd984a27afe0b899bddcfadc64ce90281e72b86450",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5c41143f-9ae1-4eb0-96ad-e1f1bdf50056.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=553690dbea9c8275c4dc46dd984a27afe0b899bddcfadc64ce90281e72b86450\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5c41143f-9ae1-4eb0-96ad-e1f1bdf50056.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=553690dbea9c8275c4dc46dd984a27afe0b899bddcfadc64ce90281e72b86450)"
          },
          {
            "segment_id": "14a55a60-85db-4d46-9f1a-ac72632bdd96",
            "bbox": {
              "left": 290.66666,
              "top": 201.08333,
              "width": 806.1666,
              "height": 79.08333
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "our 2 nd 32-bit digest from the entire SHA1 digest with the function: SHA[31:0] ï SHA[64:32] ï SHA[127:96] â (SHA[95:64] ï SHA[159:128]). We found this function yielded the best quality, on par with the 1 st digest.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/14a55a60-85db-4d46-9f1a-ac72632bdd96.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ee853387d994ac8a32f0f4cde019fa1b354a286b97de8f8aaa42fa5865b91969",
            "html": "<p>our 2 nd 32-bit digest from the entire SHA1 digest with the function: SHA[31:0] ï SHA[64:32] ï SHA[127:96] â (SHA[95:64] ï SHA[159:128]). We found this function yielded the best quality, on par with the 1 st digest.</p>",
            "markdown": "our 2 nd 32-bit digest from the entire SHA1 digest with the function: SHA[31:0] ï SHA[64:32] ï SHA[127:96] â (SHA[95:64] ï SHA[159:128]). We found this function yielded the best quality, on par with the 1 st digest.\n\n"
          }
        ],
        "chunk_length": 416
      },
      {
        "segments": [
          {
            "segment_id": "16481b43-6e68-4453-ad35-3388f50dbf6b",
            "bbox": {
              "left": 138.58333,
              "top": 307.3333,
              "width": 954.0833,
              "height": 114.49999
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Description of the crc32-Based Hash method",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/16481b43-6e68-4453-ad35-3388f50dbf6b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5ca0e7f394a121a591358e592e637efa7063a4133a88840aed494e1096941d64",
            "html": "<h2>Description of the crc32-Based Hash method</h2>",
            "markdown": "## Description of the crc32-Based Hash method\n\n"
          },
          {
            "segment_id": "346494d9-0e66-4616-be59-0f9bcf3bf02a",
            "bbox": {
              "left": 186.5,
              "top": 463.5833,
              "width": 610.3333,
              "height": 22.833332
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Figure 1: Overall crc32-Based Method for Hash Functions",
            "segment_type": "Caption",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/346494d9-0e66-4616-be59-0f9bcf3bf02a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fdd78139c09ae13703b0a306e229257ac32643fad73c49fd20cc2c418161f684",
            "html": "<span class=\"caption\">Figure 1: Overall crc32-Based Method for Hash Functions</span>",
            "markdown": "Figure 1: Overall crc32-Based Method for Hash Functions\n\n"
          },
          {
            "segment_id": "55e3d29f-1e5a-483d-b827-7bbcbe45f97c",
            "bbox": {
              "left": 317.75,
              "top": 536.5,
              "width": 777,
              "height": 424.91666
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "inputdata Combiner CRC Fn One ormore CRC final digests Gn nonCRC",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 52,
                  "top": 12,
                  "width": 100,
                  "height": 29
                },
                "text": "inputdata",
                "confidence": 0.9930423
              },
              {
                "bbox": {
                  "left": 491,
                  "top": 71,
                  "width": 98,
                  "height": 26
                },
                "text": "Combiner",
                "confidence": 0.9824353
              },
              {
                "bbox": {
                  "left": 228,
                  "top": 83,
                  "width": 50,
                  "height": 26
                },
                "text": "CRC",
                "confidence": 0.99432033
              },
              {
                "bbox": {
                  "left": 121,
                  "top": 138,
                  "width": 30,
                  "height": 21
                },
                "text": "Fn",
                "confidence": 0.9840113
              },
              {
                "bbox": {
                  "left": 650,
                  "top": 177,
                  "width": 121,
                  "height": 25
                },
                "text": "One ormore",
                "confidence": 0.9449314
              },
              {
                "bbox": {
                  "left": 228,
                  "top": 208,
                  "width": 50,
                  "height": 27
                },
                "text": "CRC",
                "confidence": 0.99251336
              },
              {
                "bbox": {
                  "left": 647,
                  "top": 202,
                  "width": 123,
                  "height": 34
                },
                "text": "final digests",
                "confidence": 0.9710422
              },
              {
                "bbox": {
                  "left": 121,
                  "top": 300,
                  "width": 33,
                  "height": 20
                },
                "text": "Gn",
                "confidence": 0.97626686
              },
              {
                "bbox": {
                  "left": 199,
                  "top": 368,
                  "width": 97,
                  "height": 28
                },
                "text": "nonCRC",
                "confidence": 0.83046484
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/55e3d29f-1e5a-483d-b827-7bbcbe45f97c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4b0b031d974083cdd0fc9582c61b83d836ce944b88b42a08a3ae8296dc9d84c5",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/55e3d29f-1e5a-483d-b827-7bbcbe45f97c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4b0b031d974083cdd0fc9582c61b83d836ce944b88b42a08a3ae8296dc9d84c5\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/55e3d29f-1e5a-483d-b827-7bbcbe45f97c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4b0b031d974083cdd0fc9582c61b83d836ce944b88b42a08a3ae8296dc9d84c5)"
          },
          {
            "segment_id": "d15225ad-2daf-40ba-90cc-771d76cb4a59",
            "bbox": {
              "left": 290.66666,
              "top": 1013.5833,
              "width": 764.5,
              "height": 49.916664
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "In Figure 1, we show the generalized flow for computing multiple 32-bit digests:",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/d15225ad-2daf-40ba-90cc-771d76cb4a59.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cc9ffe8e7fe92c8d2b2190a1ff11b28ad245c47cb3d514396fdf33757a261bb5",
            "html": "<p>In Figure 1, we show the generalized flow for computing multiple 32-bit digests:</p>",
            "markdown": "In Figure 1, we show the generalized flow for computing multiple 32-bit digests:\n\n"
          },
          {
            "segment_id": "6e094764-ad8d-4862-9d0c-f39e9df0d3d3",
            "bbox": {
              "left": 328.16666,
              "top": 1082.3333,
              "width": 637.4166,
              "height": 27
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "ï· An intermediate digest computed as the CRC of the data",
            "segment_type": "List item",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/6e094764-ad8d-4862-9d0c-f39e9df0d3d3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ff81259a8d3c558e2d4bb8fd2fbdfac79b6f5f26d61b1b89017c04021cd099b0",
            "html": "<ul><li>ï· An intermediate digest computed as the CRC of the data</li></ul>",
            "markdown": "- ï· An intermediate digest computed as the CRC of the data\n\n"
          },
          {
            "segment_id": "3513600a-f20e-4f18-abec-234638f09b05",
            "bbox": {
              "left": 328.16666,
              "top": 1128.1666,
              "width": 722.8333,
              "height": 49.916664
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "ï· Some number of intermediate digests computed as the CRC of a modified form of the input data (using functions F1, F2, â¦)",
            "segment_type": "List item",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/3513600a-f20e-4f18-abec-234638f09b05.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5054b68f01abd7be64a30502e4e2bea27a8553d4c2d5b6ab099799af09c2512b",
            "html": "<ul><li>ï· Some number of intermediate digests computed as the CRC of a modified form of the input data (using functions F1, F2, â¦)</li></ul>",
            "markdown": "- ï· Some number of intermediate digests computed as the CRC of a modified form of the input data (using functions F1, F2, â¦)\n\n"
          },
          {
            "segment_id": "a78d260b-9cd2-43e0-9d04-73589712e76b",
            "bbox": {
              "left": 330.25,
              "top": 1199,
              "width": 785.3333,
              "height": 77
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "ï· Some number of intermediate digests computed by non-CRC operations (e.g., xor, add) on a modified form of the input data (using functions such as G1, G2, etc.)",
            "segment_type": "List item",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a78d260b-9cd2-43e0-9d04-73589712e76b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0cfaf4e18510c94e929dc9fd9d0ad17d0dd78d0a672e26024624dff59436f9dd",
            "html": "<ul><li>ï· Some number of intermediate digests computed by non-CRC operations (e.g., xor, add) on a modified form of the input data (using functions such as G1, G2, etc.)</li></ul>",
            "markdown": "- ï· Some number of intermediate digests computed by non-CRC operations (e.g., xor, add) on a modified form of the input data (using functions such as G1, G2, etc.)\n\n"
          },
          {
            "segment_id": "0e8e4a6c-1f5f-443d-b19a-08b77e4b5094",
            "bbox": {
              "left": 328.16666,
              "top": 1296.9166,
              "width": 772.8333,
              "height": 77
            },
            "page_number": 5,
            "page_width": 1275,
            "page_height": 1650,
            "content": "ï· A combination step that takes these intermediate digests and combines them with each other and possibly other data such as the input length to produce multiple final digests or a single larger digest",
            "segment_type": "List item",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/0e8e4a6c-1f5f-443d-b19a-08b77e4b5094.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f44c6ceca9358ad7eed0624bc94a6629c03a7c2d822c0d9a3d0f6fec5c56cbc3",
            "html": "<ul><li>ï· A combination step that takes these intermediate digests and combines them with each other and possibly other data such as the input length to produce multiple final digests or a single larger digest</li></ul>",
            "markdown": "- ï· A combination step that takes these intermediate digests and combines them with each other and possibly other data such as the input length to produce multiple final digests or a single larger digest\n\n"
          },
          {
            "segment_id": "ba43c2c9-8b9c-4c29-8281-042fcaf1ee81",
            "bbox": {
              "left": 292.75,
              "top": 203.16666,
              "width": 808.24994,
              "height": 74.916664
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "This generalized method is mainly intended for usages where we need at least two 32-bit digests. If we needed just one digest, the crc32 of the input data is a good digest.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ba43c2c9-8b9c-4c29-8281-042fcaf1ee81.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5db2a5fa52da609df8ed45f84dba7ef1e3bcf2c690b5791cbb8585c05fbc0848",
            "html": "<p>This generalized method is mainly intended for usages where we need at least two 32-bit digests. If we needed just one digest, the crc32 of the input data is a good digest.</p>",
            "markdown": "This generalized method is mainly intended for usages where we need at least two 32-bit digests. If we needed just one digest, the crc32 of the input data is a good digest.\n\n"
          },
          {
            "segment_id": "04e27c84-080b-40c6-a0a6-7f448e4cb23a",
            "bbox": {
              "left": 186.5,
              "top": 305.25,
              "width": 777,
              "height": 20.75
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Figure 2: Example of a crc32-Based Hash Function Returning two Digests",
            "segment_type": "Caption",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/04e27c84-080b-40c6-a0a6-7f448e4cb23a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0f083e1765ecb407facae0818d8b0bb6eccdfb35fd54a5346b7772cec8bd5779",
            "html": "<span class=\"caption\">Figure 2: Example of a crc32-Based Hash Function Returning two Digests</span>",
            "markdown": "Figure 2: Example of a crc32-Based Hash Function Returning two Digests\n\n"
          },
          {
            "segment_id": "440ad4af-97b2-456b-b0da-b3bce20add8e",
            "bbox": {
              "left": 438.5833,
              "top": 349,
              "width": 587.4166,
              "height": 224.91666
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "C = length of data <<< 19 while (more than 8 bytes of data left){ data_chunk = next 8 bytes of data A = CRC (A, data_chunk) B = CRC (B, data_chunk <<< 31) C = C ï data_chunk } Return A, CRC(B,C)",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/440ad4af-97b2-456b-b0da-b3bce20add8e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=30af2e882f34168f0f307f9d85a3b694fcb4d79688231445778da41eae07d9c6",
            "html": "<p>C = length of data <<< 19 while (more than 8 bytes of data left){ data_chunk = next 8 bytes of data A = CRC (A, data_chunk) B = CRC (B, data_chunk <<< 31) C = C ï data_chunk } Return A, CRC(B,C)</p>",
            "markdown": "C = length of data <<< 19 while (more than 8 bytes of data left){ data_chunk = next 8 bytes of data A = CRC (A, data_chunk) B = CRC (B, data_chunk <<< 31) C = C ï data_chunk } Return A, CRC(B,C)\n\n"
          },
          {
            "segment_id": "c47647f0-6867-43c2-af7b-6ae06ac730c2",
            "bbox": {
              "left": 292.75,
              "top": 601.0833,
              "width": 824.9166,
              "height": 174.91666
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The proposed intel_hash64 function is based on the pseudo-code shown in Figure 2. In the terminology of Figure 1, we can see that the F1 function is rotate-left-by-31 ( <<< 31 ) and the G1 function is the trivial identity function (i.e., output is the same as the input). The non-crc accumulating function is a bit-wise XOR operation ( ï ). The combiner block returns a computed crc (A) directly as the 1 st digest, but performs another final crc operation using the two intermediate digests B, C, and returns CRC(B,C) as the 2 nd digest.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/c47647f0-6867-43c2-af7b-6ae06ac730c2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=72630b913caa48751359130f66a3386495879e6472960bb7c5cce60c122111fe",
            "html": "<p>The proposed intel_hash64 function is based on the pseudo-code shown in Figure 2. In the terminology of Figure 1, we can see that the F1 function is rotate-left-by-31 ( <<< 31 ) and the G1 function is the trivial identity function (i.e., output is the same as the input). The non-crc accumulating function is a bit-wise XOR operation ( ï ). The combiner block returns a computed crc (A) directly as the 1 st digest, but performs another final crc operation using the two intermediate digests B, C, and returns CRC(B,C) as the 2 nd digest.</p>",
            "markdown": "The proposed intel_hash64 function is based on the pseudo-code shown in Figure 2. In the terminology of Figure 1, we can see that the F1 function is rotate-left-by-31 ( <<< 31 ) and the G1 function is the trivial identity function (i.e., output is the same as the input). The non-crc accumulating function is a bit-wise XOR operation ( ï ). The combiner block returns a computed crc (A) directly as the 1 st digest, but performs another final crc operation using the two intermediate digests B, C, and returns CRC(B,C) as the 2 nd digest.\n\n"
          }
        ],
        "chunk_length": 305
      },
      {
        "segments": [
          {
            "segment_id": "5057b53b-caa2-409a-a77b-369f6ec87184",
            "bbox": {
              "left": 140.66666,
              "top": 809.4166,
              "width": 333.25,
              "height": 52
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Performance",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5057b53b-caa2-409a-a77b-369f6ec87184.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=84ad17f675e5af56f1971686b9865f6ffde2cf87e188ff9e673cbc88bbc4855b",
            "html": "<h2>Performance</h2>",
            "markdown": "## Performance\n\n"
          },
          {
            "segment_id": "cc2eb29d-5152-46b5-a2c3-a34363e1f8c5",
            "bbox": {
              "left": 292.75,
              "top": 896.9166,
              "width": 812.4166,
              "height": 102
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The performance results provided in this section were measured on an Intel Â® Coreâ¢ i5 650 processor at a frequency of 3.20 GHz, supporting Intel Â® crc32 instruction. The tests were run with Intel Â® Turbo Boost Technology off, on a single thread .",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/cc2eb29d-5152-46b5-a2c3-a34363e1f8c5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a700723776bb49a5732beb08f2addbae08fe13da73ba62622e8d0ef181f14917",
            "html": "<p>The performance results provided in this section were measured on an Intel Â® Coreâ¢ i5 650 processor at a frequency of 3.20 GHz, supporting Intel Â® crc32 instruction. The tests were run with Intel Â® Turbo Boost Technology off, on a single thread .</p>",
            "markdown": "The performance results provided in this section were measured on an Intel Â® Coreâ¢ i5 650 processor at a frequency of 3.20 GHz, supporting Intel Â® crc32 instruction. The tests were run with Intel Â® Turbo Boost Technology off, on a single thread .\n\n"
          }
        ],
        "chunk_length": 45
      },
      {
        "segments": [
          {
            "segment_id": "fc13704f-6092-4595-893a-57913f616ba9",
            "bbox": {
              "left": 290.66666,
              "top": 1030.25,
              "width": 185.33333,
              "height": 27
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Methodology",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/fc13704f-6092-4595-893a-57913f616ba9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2068570699e3144860dfbf9e0612516d8401823a9b0d1bd1a438674ee007db30",
            "html": "<h2>Methodology</h2>",
            "markdown": "## Methodology\n\n"
          },
          {
            "segment_id": "e9c48df4-d076-44f9-92b8-a9dd8e7478ac",
            "bbox": {
              "left": 290.66666,
              "top": 1082.3333,
              "width": 826.99994,
              "height": 122.83333
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "We measured the performance of the hash function on data buffers of different sizes. We called the function to hash the same buffer a large number of times, collecting many timing measurements. For each data buffer, we then sorted the timings, discarded the top and bottom quartiles and averaged the rest.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/e9c48df4-d076-44f9-92b8-a9dd8e7478ac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=38ec897222eb50451a54bd5ad1eadc146bc4d1b62ff1797856462c27ff8ae735",
            "html": "<p>We measured the performance of the hash function on data buffers of different sizes. We called the function to hash the same buffer a large number of times, collecting many timing measurements. For each data buffer, we then sorted the timings, discarded the top and bottom quartiles and averaged the rest.</p>",
            "markdown": "We measured the performance of the hash function on data buffers of different sizes. We called the function to hash the same buffer a large number of times, collecting many timing measurements. For each data buffer, we then sorted the timings, discarded the top and bottom quartiles and averaged the rest.\n\n"
          },
          {
            "segment_id": "5517dabc-f162-437e-acf7-1e9e8f2df4f0",
            "bbox": {
              "left": 290.66666,
              "top": 1228.1666,
              "width": 826.99994,
              "height": 149.91666
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The timing was measured using the rdtsc () function which returns the processor time stamp counter (TSC). The TSC is the number of clock cycles since the last reset. The âTSC_initialâ is the TSC recorded before the function is called. After the function is complete, the rdtsc () was called again to record the new cycle count âTSC_finalâ. The effective cycle count for the called routine is computed using",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5517dabc-f162-437e-acf7-1e9e8f2df4f0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1b636cc4c0b6135c7dd219eee397eca97d200d214e835064a5c0dcbe7fdfea3",
            "html": "<p>The timing was measured using the rdtsc () function which returns the processor time stamp counter (TSC). The TSC is the number of clock cycles since the last reset. The âTSC_initialâ is the TSC recorded before the function is called. After the function is complete, the rdtsc () was called again to record the new cycle count âTSC_finalâ. The effective cycle count for the called routine is computed using</p>",
            "markdown": "The timing was measured using the rdtsc () function which returns the processor time stamp counter (TSC). The TSC is the number of clock cycles since the last reset. The âTSC_initialâ is the TSC recorded before the function is called. After the function is complete, the rdtsc () was called again to record the new cycle count âTSC_finalâ. The effective cycle count for the called routine is computed using\n\n"
          },
          {
            "segment_id": "2114726d-d5be-46be-be62-b4b32a2cdd87",
            "bbox": {
              "left": 292.75,
              "top": 1403.1666,
              "width": 397.8333,
              "height": 22.833332
            },
            "page_number": 6,
            "page_width": 1275,
            "page_height": 1650,
            "content": "# of cycles = (TSC_final-TSC_initial).",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/2114726d-d5be-46be-be62-b4b32a2cdd87.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d4f6069e3f426a448ffe1880bbf4bd45bfb0262b97e9ef16b279216fd1867f00",
            "html": "<p># of cycles = (TSC_final-TSC_initial).</p>",
            "markdown": "# of cycles = (TSC_final-TSC_initial).\n\n"
          },
          {
            "segment_id": "dca13603-2152-4b29-b639-279ce7875efa",
            "bbox": {
              "left": 969.8333,
              "top": 80.25,
              "width": 154.08333,
              "height": 108.24999
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 20,
                  "top": 30,
                  "width": 116,
                  "height": 44
                },
                "text": "intel",
                "confidence": 0.994219
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/dca13603-2152-4b29-b639-279ce7875efa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1fc854ac794f6decc5c7c0bf0d73f22ba2a6c8ba4d358390680fb911f3e888c0",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/dca13603-2152-4b29-b639-279ce7875efa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1fc854ac794f6decc5c7c0bf0d73f22ba2a6c8ba4d358390680fb911f3e888c0\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/dca13603-2152-4b29-b639-279ce7875efa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1fc854ac794f6decc5c7c0bf0d73f22ba2a6c8ba4d358390680fb911f3e888c0)"
          },
          {
            "segment_id": "ff3b14fe-f971-430e-951e-661500554f43",
            "bbox": {
              "left": 290.66666,
              "top": 201.08333,
              "width": 806.1666,
              "height": 52
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "A large number of such measurements were made for each data buffer and then averaged as described above.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ff3b14fe-f971-430e-951e-661500554f43.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c6688ffc5bead2a8ab677a683b3f3e93795f9ebff1757962c1198009f648a5b5",
            "html": "<p>A large number of such measurements were made for each data buffer and then averaged as described above.</p>",
            "markdown": "A large number of such measurements were made for each data buffer and then averaged as described above.\n\n"
          },
          {
            "segment_id": "ef745be9-16bd-4abe-8124-9b2d83bc4051",
            "bbox": {
              "left": 290.66666,
              "top": 276.0833,
              "width": 829.0833,
              "height": 202
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Note : Performance tests and ratings are measured using specific computer systems and/or components and reflect the approximate performance of Intel products as measured by those tests. Any difference in system hardware or software design or configuration may affect actual performance. Buyers should consult other sources of information to evaluate the performance of systems or components they are considering purchasing. For more information on performance tests and on the performance of Intel products, Go to:",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ef745be9-16bd-4abe-8124-9b2d83bc4051.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=28579f688da3df25e7ef8778273d9413eeb10065217b67cbd9a918b538947135",
            "html": "<p>Note : Performance tests and ratings are measured using specific computer systems and/or components and reflect the approximate performance of Intel products as measured by those tests. Any difference in system hardware or software design or configuration may affect actual performance. Buyers should consult other sources of information to evaluate the performance of systems or components they are considering purchasing. For more information on performance tests and on the performance of Intel products, Go to:</p>",
            "markdown": "Note : Performance tests and ratings are measured using specific computer systems and/or components and reflect the approximate performance of Intel products as measured by those tests. Any difference in system hardware or software design or configuration may affect actual performance. Buyers should consult other sources of information to evaluate the performance of systems or components they are considering purchasing. For more information on performance tests and on the performance of Intel products, Go to:\n\n"
          },
          {
            "segment_id": "d864de9a-1e1e-4bf8-bf3e-3037dc9a0255",
            "bbox": {
              "left": 290.66666,
              "top": 476.0833,
              "width": 783.25,
              "height": 24.916666
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "http://www.intel.com/performance/resources/benchmark_limitations.htm",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/d864de9a-1e1e-4bf8-bf3e-3037dc9a0255.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=92f6ecbae9fc93381145793c6104c28e2f47a6b8cd72d8f37cbd5e3f8ebfdd87",
            "html": "<p>http://www.intel.com/performance/resources/benchmark_limitations.htm</p>",
            "markdown": "http://www.intel.com/performance/resources/benchmark_limitations.htm\n\n"
          }
        ],
        "chunk_length": 220
      },
      {
        "segments": [
          {
            "segment_id": "e682325a-a2e9-4829-997f-35576052f6a9",
            "bbox": {
              "left": 292.75,
              "top": 528.1666,
              "width": 116.58333,
              "height": 31.166666
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Results",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/e682325a-a2e9-4829-997f-35576052f6a9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3b88e70d8254e9ca972d2516966ea36ed3b4a05bb1b11f715cc6863900fb7926",
            "html": "<h2>Results</h2>",
            "markdown": "## Results\n\n"
          },
          {
            "segment_id": "6c6cda55-93d8-48b9-9ba5-c03b38cb46fc",
            "bbox": {
              "left": 292.75,
              "top": 582.3333,
              "width": 822.8333,
              "height": 52
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "We show performance with a single thread in cycles for varying sizes of input data buffers with a single thread, for small buffer sizes.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/6c6cda55-93d8-48b9-9ba5-c03b38cb46fc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e8adda9f2b02651747d8c01aaeb8190614851381ac06e12cec7462b9949fe7ec",
            "html": "<p>We show performance with a single thread in cycles for varying sizes of input data buffers with a single thread, for small buffer sizes.</p>",
            "markdown": "We show performance with a single thread in cycles for varying sizes of input data buffers with a single thread, for small buffer sizes.\n\n"
          },
          {
            "segment_id": "0f00a6c6-b189-4278-adfb-8a79d184b5f5",
            "bbox": {
              "left": 186.5,
              "top": 655.25,
              "width": 685.3333,
              "height": 27
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Figure 3: Cycles vs. Data Buffer Size in Bytes with Single Thread",
            "segment_type": "Caption",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/0f00a6c6-b189-4278-adfb-8a79d184b5f5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6526b1f3a626c13d1c1f38ff3f56fc07eeeacf2b1527242d2c26d0e82f15c9b8",
            "html": "<span class=\"caption\">Figure 3: Cycles vs. Data Buffer Size in Bytes with Single Thread</span>",
            "markdown": "Figure 3: Cycles vs. Data Buffer Size in Bytes with Single Thread\n\n"
          },
          {
            "segment_id": "964b99e6-e7fd-4d95-8707-8094e7705e6c",
            "bbox": {
              "left": 290.66666,
              "top": 1267.75,
              "width": 816.5833,
              "height": 154.08333
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "For large buffers, the performance tends to ~ 0.44 cycles/byte . As can been seen from the graph, even for small buffers (~24 bytes), the performance is better than 1 cycle/byte. As the crc32 instruction has a latency of 3 cycles, and a throughput of 1 cycle, we anticipate that Intel Â® HT Technology will bring a substantial additional performance gain on applications using this hash function.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/964b99e6-e7fd-4d95-8707-8094e7705e6c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=86f54846a3b17cd296020f9523ac9b176a1e86c248db0954452cf0c66ff406b0",
            "html": "<p>For large buffers, the performance tends to ~ 0.44 cycles/byte . As can been seen from the graph, even for small buffers (~24 bytes), the performance is better than 1 cycle/byte. As the crc32 instruction has a latency of 3 cycles, and a throughput of 1 cycle, we anticipate that Intel Â® HT Technology will bring a substantial additional performance gain on applications using this hash function.</p>",
            "markdown": "For large buffers, the performance tends to ~ 0.44 cycles/byte . As can been seen from the graph, even for small buffers (~24 bytes), the performance is better than 1 cycle/byte. As the crc32 instruction has a latency of 3 cycles, and a throughput of 1 cycle, we anticipate that Intel Â® HT Technology will bring a substantial additional performance gain on applications using this hash function.\n\n"
          },
          {
            "segment_id": "c7f4db30-8eea-4328-8666-d8b019402353",
            "bbox": {
              "left": 294.8333,
              "top": 699,
              "width": 824.9166,
              "height": 549.9166
            },
            "page_number": 7,
            "page_width": 1275,
            "page_height": 1650,
            "content": "25 intel_hash64 20 15 10 5 0 0 8 16 24 32",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 7,
                  "top": 19,
                  "width": 36,
                  "height": 30
                },
                "text": "25",
                "confidence": 0.99958575
              },
              {
                "bbox": {
                  "left": 330,
                  "top": 11,
                  "width": 182,
                  "height": 28
                },
                "text": "intel_hash64",
                "confidence": 0.9900267
              },
              {
                "bbox": {
                  "left": 7,
                  "top": 114,
                  "width": 36,
                  "height": 29
                },
                "text": "20",
                "confidence": 0.9992852
              },
              {
                "bbox": {
                  "left": 8,
                  "top": 207,
                  "width": 36,
                  "height": 29
                },
                "text": "15",
                "confidence": 0.9996116
              },
              {
                "bbox": {
                  "left": 8,
                  "top": 301,
                  "width": 36,
                  "height": 29
                },
                "text": "10",
                "confidence": 0.99964833
              },
              {
                "bbox": {
                  "left": 24,
                  "top": 394,
                  "width": 20,
                  "height": 29
                },
                "text": "5",
                "confidence": 0.9989183
              },
              {
                "bbox": {
                  "left": 26,
                  "top": 488,
                  "width": 16,
                  "height": 24
                },
                "text": "0",
                "confidence": 0.87810975
              },
              {
                "bbox": {
                  "left": 52,
                  "top": 518,
                  "width": 19,
                  "height": 27
                },
                "text": "0",
                "confidence": 0.9846377
              },
              {
                "bbox": {
                  "left": 237,
                  "top": 518,
                  "width": 20,
                  "height": 27
                },
                "text": "8",
                "confidence": 0.99509794
              },
              {
                "bbox": {
                  "left": 413,
                  "top": 517,
                  "width": 37,
                  "height": 29
                },
                "text": "16",
                "confidence": 0.99905
              },
              {
                "bbox": {
                  "left": 598,
                  "top": 517,
                  "width": 36,
                  "height": 29
                },
                "text": "24",
                "confidence": 0.99968773
              },
              {
                "bbox": {
                  "left": 784,
                  "top": 519,
                  "width": 34,
                  "height": 26
                },
                "text": "32",
                "confidence": 0.999534
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/c7f4db30-8eea-4328-8666-d8b019402353.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e28ab6052546308ee2bdc65a2e2e311f2c631b073a02ece9b367e09e77a8a153",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/c7f4db30-8eea-4328-8666-d8b019402353.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e28ab6052546308ee2bdc65a2e2e311f2c631b073a02ece9b367e09e77a8a153\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/c7f4db30-8eea-4328-8666-d8b019402353.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e28ab6052546308ee2bdc65a2e2e311f2c631b073a02ece9b367e09e77a8a153)"
          }
        ],
        "chunk_length": 116
      },
      {
        "segments": [
          {
            "segment_id": "31fad036-168e-43e2-980c-66e5668ea67d",
            "bbox": {
              "left": 142.75,
              "top": 207.33333,
              "width": 487.41666,
              "height": 56.166664
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Testing for Quality",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/31fad036-168e-43e2-980c-66e5668ea67d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e6f800527c1cc08a9c7f805a7ee127a8a46ed11ff2bc840f0b84e9320909d2bc",
            "html": "<h2>Testing for Quality</h2>",
            "markdown": "## Testing for Quality\n\n"
          },
          {
            "segment_id": "f7d6b75a-cedf-43ed-a4b8-2663ddcf6fc9",
            "bbox": {
              "left": 290.66666,
              "top": 299,
              "width": 822.8333,
              "height": 254.08333
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Using the frog test, we tested our hash function and the reference one derived from SHA1 for quality. The test sets bits in the input data in an attempt to generate digest collisions through the careful, similar construction of input. All the inputs to the hash function are the same fixed length, and consist of zero bytes with very few bits set. The original program tested 64- bit digests. We modified this to also test 32-bit digests.  Results for this test are reported as the logarithm of the highest number of data pairs tested before the first collision is found. The higher the score, the better is the hash quality. The tests are exponential in nature, running for weeks if a collision cannot be found within 2 67 pairs.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/f7d6b75a-cedf-43ed-a4b8-2663ddcf6fc9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=19037943f02c94e3b5febba6eed7de42e20b18daabb2ed4f1b9128b973eb49e4",
            "html": "<p>Using the frog test, we tested our hash function and the reference one derived from SHA1 for quality. The test sets bits in the input data in an attempt to generate digest collisions through the careful, similar construction of input. All the inputs to the hash function are the same fixed length, and consist of zero bytes with very few bits set. The original program tested 64- bit digests. We modified this to also test 32-bit digests.  Results for this test are reported as the logarithm of the highest number of data pairs tested before the first collision is found. The higher the score, the better is the hash quality. The tests are exponential in nature, running for weeks if a collision cannot be found within 2 67 pairs.</p>",
            "markdown": "Using the frog test, we tested our hash function and the reference one derived from SHA1 for quality. The test sets bits in the input data in an attempt to generate digest collisions through the careful, similar construction of input. All the inputs to the hash function are the same fixed length, and consist of zero bytes with very few bits set. The original program tested 64- bit digests. We modified this to also test 32-bit digests.  Results for this test are reported as the logarithm of the highest number of data pairs tested before the first collision is found. The higher the score, the better is the hash quality. The tests are exponential in nature, running for weeks if a collision cannot be found within 2 67 pairs.\n\n"
          },
          {
            "segment_id": "3a9eb0f9-db25-4740-bf71-7914bd13615e",
            "bbox": {
              "left": 186.5,
              "top": 574,
              "width": 445.74997,
              "height": 24.916666
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Figure 4: Results of the hash quality tests",
            "segment_type": "Caption",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/3a9eb0f9-db25-4740-bf71-7914bd13615e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=39f3424c7346496362dc7382e6008918c1ce09371a4e437b97d1503373e3f488",
            "html": "<span class=\"caption\">Figure 4: Results of the hash quality tests</span>",
            "markdown": "Figure 4: Results of the hash quality tests\n\n"
          },
          {
            "segment_id": "5e060440-58c3-4545-9136-ae8ecc76f9d8",
            "bbox": {
              "left": 376.0833,
              "top": 609.4166,
              "width": 451.99997,
              "height": 189.5
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "frog32 frog_64 Digest1 Digest2 sha1 >=68 33 33 intelhash64 >=67 39 39",
            "segment_type": "Table",
            "ocr": [
              {
                "bbox": {
                  "left": 320,
                  "top": 30,
                  "width": 75,
                  "height": 17
                },
                "text": "frog32",
                "confidence": 0.9641854
              },
              {
                "bbox": {
                  "left": 177,
                  "top": 51,
                  "width": 77,
                  "height": 22
                },
                "text": "frog_64",
                "confidence": 0.99164563
              },
              {
                "bbox": {
                  "left": 275,
                  "top": 75,
                  "width": 71,
                  "height": 20
                },
                "text": "Digest1",
                "confidence": 0.991179
              },
              {
                "bbox": {
                  "left": 367,
                  "top": 75,
                  "width": 74,
                  "height": 20
                },
                "text": "Digest2",
                "confidence": 0.9941105
              },
              {
                "bbox": {
                  "left": 62,
                  "top": 121,
                  "width": 47,
                  "height": 19
                },
                "text": "sha1",
                "confidence": 0.98033816
              },
              {
                "bbox": {
                  "left": 192,
                  "top": 122,
                  "width": 62,
                  "height": 17
                },
                "text": ">=68",
                "confidence": 0.98101795
              },
              {
                "bbox": {
                  "left": 320,
                  "top": 120,
                  "width": 29,
                  "height": 20
                },
                "text": "33",
                "confidence": 0.998386
              },
              {
                "bbox": {
                  "left": 415,
                  "top": 120,
                  "width": 28,
                  "height": 20
                },
                "text": "33",
                "confidence": 0.99841905
              },
              {
                "bbox": {
                  "left": 24,
                  "top": 163,
                  "width": 123,
                  "height": 22
                },
                "text": "intelhash64",
                "confidence": 0.99015677
              },
              {
                "bbox": {
                  "left": 197,
                  "top": 166,
                  "width": 57,
                  "height": 18
                },
                "text": ">=67",
                "confidence": 0.974933
              },
              {
                "bbox": {
                  "left": 317,
                  "top": 165,
                  "width": 31,
                  "height": 19
                },
                "text": "39",
                "confidence": 0.99919444
              },
              {
                "bbox": {
                  "left": 412,
                  "top": 165,
                  "width": 30,
                  "height": 19
                },
                "text": "39",
                "confidence": 0.99912363
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5e060440-58c3-4545-9136-ae8ecc76f9d8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d5204a2b17f56c2cf8c77aee8bbf55fb68f806242f20e2d726899879095989b5",
            "html": "<table>\n  <thead>\n    <tr>\n      <th colspan=\"2\" rowspan=\"2\"></th>\n      <th colspan=\"2\" style=\"background-color: lightblue;\">\n        <div>frog_32</div>\n      </th>\n    </tr>\n    <tr>\n      <th style=\"background-color: lightblue;\">Digest1</th>\n      <th style=\"background-color: lightblue;\">Digest2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colspan=\"2\" style=\"background-color: lightgray;\">sha1</td>\n      <td>>=68</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\" style=\"background-color: lightgray;\">intel_hash64</td>\n      <td>>=67</td>\n      <td>39</td>\n    </tr>\n  </tbody>\n</table>",
            "markdown": "|  |  | \n        <div>frog_32</div>\n       |  |\n| --- | --- | --- | --- |\n|  |  | Digest1 | Digest2 |\n| sha1 |  | >=68 | 33 |\n| intel_hash64 |  | >=67 | 39 |\n"
          },
          {
            "segment_id": "78ec9c6d-29ce-4ad5-b99e-b7f254b89b08",
            "bbox": {
              "left": 292.75,
              "top": 817.74994,
              "width": 822.8333,
              "height": 102
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Due to run-time of the tests, the frog_64 test results are incomplete, and the â>=â implies that no collisions were found at that point, but the test was still running. Note that the frog_32 tests are much faster and intel_hash64 is much better than SHA1 for 32-bit digests .",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/78ec9c6d-29ce-4ad5-b99e-b7f254b89b08.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d838dde923ee1a49308a18a2c0c23e599fe24a6185dbb3ae481280db7f04a3b1",
            "html": "<p>Due to run-time of the tests, the frog_64 test results are incomplete, and the â>=â implies that no collisions were found at that point, but the test was still running. Note that the frog_32 tests are much faster and intel_hash64 is much better than SHA1 for 32-bit digests .</p>",
            "markdown": "Due to run-time of the tests, the frog_64 test results are incomplete, and the â>=â implies that no collisions were found at that point, but the test was still running. Note that the frog_32 tests are much faster and intel_hash64 is much better than SHA1 for 32-bit digests .\n\n"
          },
          {
            "segment_id": "12d378b6-2923-4c8c-978a-e9812ac00b1d",
            "bbox": {
              "left": 292.75,
              "top": 940.6666,
              "width": 824.9166,
              "height": 126.99999
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "For the 64-bit collision tests, both functions show extremely strong quality since a completely random mapping to 64-bit values is expected to result in a collision by 2 63 pairs. It is also noted in Bobâs article that both lookup.c and lookup2.c start seeing collisions after 2 53 key-pairs, whereas lookup3.c gets its first collision shortly after 2 63 pairs.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/12d378b6-2923-4c8c-978a-e9812ac00b1d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8f99b658db83aeb7492843d84fa75ff38fb6731b052bc658df133a1f204c37c",
            "html": "<p>For the 64-bit collision tests, both functions show extremely strong quality since a completely random mapping to 64-bit values is expected to result in a collision by 2 63 pairs. It is also noted in Bobâs article that both lookup.c and lookup2.c start seeing collisions after 2 53 key-pairs, whereas lookup3.c gets its first collision shortly after 2 63 pairs.</p>",
            "markdown": "For the 64-bit collision tests, both functions show extremely strong quality since a completely random mapping to 64-bit values is expected to result in a collision by 2 63 pairs. It is also noted in Bobâs article that both lookup.c and lookup2.c start seeing collisions after 2 53 key-pairs, whereas lookup3.c gets its first collision shortly after 2 63 pairs.\n\n"
          }
        ],
        "chunk_length": 261
      },
      {
        "segments": [
          {
            "segment_id": "a361317a-a154-4717-af8d-5df73538eabe",
            "bbox": {
              "left": 140.66666,
              "top": 1088.5833,
              "width": 283.25,
              "height": 62.416664
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Conclusion",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a361317a-a154-4717-af8d-5df73538eabe.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f4190f7b66b1e086466f6647d5559f8bfdf8a4548e88bb95dd919dc37eda64fa",
            "html": "<h2>Conclusion</h2>",
            "markdown": "## Conclusion\n\n"
          },
          {
            "segment_id": "ecac66c2-1098-4cc5-a3be-d8a4d9146d67",
            "bbox": {
              "left": 292.75,
              "top": 1186.5,
              "width": 814.49994,
              "height": 152
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "In this paper, we show how to compute a high-quality hash digest at extremely high performance on an Intel Â® Coreâ¢ i5 650 processor using the crc32 instruction. We describe a general method using CRC calculations and show how that can be used to generate larger digests than the degree of the CRC Polynomial. The functions can generate larger digests or multiple uncorrelated digests.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ecac66c2-1098-4cc5-a3be-d8a4d9146d67.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=36945e2018dc3cbe0e5f86fcc1b685a59e06cb6ac2c71903148fd6ab793ce891",
            "html": "<p>In this paper, we show how to compute a high-quality hash digest at extremely high performance on an Intel Â® Coreâ¢ i5 650 processor using the crc32 instruction. We describe a general method using CRC calculations and show how that can be used to generate larger digests than the degree of the CRC Polynomial. The functions can generate larger digests or multiple uncorrelated digests.</p>",
            "markdown": "In this paper, we show how to compute a high-quality hash digest at extremely high performance on an Intel Â® Coreâ¢ i5 650 processor using the crc32 instruction. We describe a general method using CRC calculations and show how that can be used to generate larger digests than the degree of the CRC Polynomial. The functions can generate larger digests or multiple uncorrelated digests.\n\n"
          },
          {
            "segment_id": "8a459c9e-b254-4cbb-b300-68c74d7ff115",
            "bbox": {
              "left": 292.75,
              "top": 1359.4166,
              "width": 824.9166,
              "height": 49.916664
            },
            "page_number": 8,
            "page_width": 1275,
            "page_height": 1650,
            "content": "It is possible to develop higher-performance functions for specific usages that target very large data buffers or work only on fixed sized buffers, but such",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/8a459c9e-b254-4cbb-b300-68c74d7ff115.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=78adfd8a6ad0639aebeef75cfdadbb1150dac8e02ec665699fd8b730f7e29e3b",
            "html": "<p>It is possible to develop higher-performance functions for specific usages that target very large data buffers or work only on fixed sized buffers, but such</p>",
            "markdown": "It is possible to develop higher-performance functions for specific usages that target very large data buffers or work only on fixed sized buffers, but such\n\n"
          },
          {
            "segment_id": "ba93bad4-b0b9-414e-85b4-174b670fa434",
            "bbox": {
              "left": 969.8333,
              "top": 78.166664,
              "width": 154.08333,
              "height": 108.24999
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "intel",
            "segment_type": "Picture",
            "ocr": [
              {
                "bbox": {
                  "left": 16,
                  "top": 28,
                  "width": 121,
                  "height": 52
                },
                "text": "intel",
                "confidence": 0.991959
              }
            ],
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ba93bad4-b0b9-414e-85b4-174b670fa434.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b874a0f3a16dcf1fc5e5ed3f952129b424d21c85387a1705eed05f1d38f9eea",
            "html": "<img src=\"https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ba93bad4-b0b9-414e-85b4-174b670fa434.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b874a0f3a16dcf1fc5e5ed3f952129b424d21c85387a1705eed05f1d38f9eea\" />",
            "markdown": "![Image](https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/ba93bad4-b0b9-414e-85b4-174b670fa434.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b874a0f3a16dcf1fc5e5ed3f952129b424d21c85387a1705eed05f1d38f9eea)"
          },
          {
            "segment_id": "b56990f9-d3b8-4175-8e96-a12cc20923c6",
            "bbox": {
              "left": 292.75,
              "top": 203.16666,
              "width": 735.3333,
              "height": 49.916664
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "optimizations have not been attempted in the current versions of our functions.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/b56990f9-d3b8-4175-8e96-a12cc20923c6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2e062e73b0a744e2a6da5d9a6d01b69516e4c44f9cc1e4c6e3aae0c9bbdf9ad8",
            "html": "<p>optimizations have not been attempted in the current versions of our functions.</p>",
            "markdown": "optimizations have not been attempted in the current versions of our functions.\n\n"
          }
        ],
        "chunk_length": 102
      },
      {
        "segments": [
          {
            "segment_id": "1b5a4120-86c0-464f-820e-33deb2a1717d",
            "bbox": {
              "left": 140.66666,
              "top": 278.16666,
              "width": 329.0833,
              "height": 58.249996
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Contributors",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/1b5a4120-86c0-464f-820e-33deb2a1717d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0dfa75906a116e9edb69b1d8e74cd4ef24ae30b90c431bc20027027564750c92",
            "html": "<h2>Contributors</h2>",
            "markdown": "## Contributors\n\n"
          },
          {
            "segment_id": "c8ce810f-b321-4c08-9150-2e269566d832",
            "bbox": {
              "left": 294.8333,
              "top": 374,
              "width": 804.0833,
              "height": 52
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "We thank Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk and Wajdi Feghali of Intel Corporation for their substantial contributions to this work.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/c8ce810f-b321-4c08-9150-2e269566d832.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=220d4dbfcfd98e0e3844289593de513ff0b0df4108a3c802c4988b41daa1dd11",
            "html": "<p>We thank Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk and Wajdi Feghali of Intel Corporation for their substantial contributions to this work.</p>",
            "markdown": "We thank Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk and Wajdi Feghali of Intel Corporation for their substantial contributions to this work.\n\n"
          }
        ],
        "chunk_length": 22
      },
      {
        "segments": [
          {
            "segment_id": "6add25bc-3333-4f84-9016-1c26c00b413f",
            "bbox": {
              "left": 140.66666,
              "top": 446.91666,
              "width": 291.5833,
              "height": 62.416664
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "References",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/6add25bc-3333-4f84-9016-1c26c00b413f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bf4146487c77d4aa1d6440da41fda680eb932403e2897f541cef48d25f599f29",
            "html": "<h2>References</h2>",
            "markdown": "## References\n\n"
          },
          {
            "segment_id": "8966524d-4849-4ad6-8e71-681f2bb239c4",
            "bbox": {
              "left": 292.75,
              "top": 544.8333,
              "width": 635.3333,
              "height": 27
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "[1] Bob Jenkinsâ Hash functions http://burtleburtle.net/bob/",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/8966524d-4849-4ad6-8e71-681f2bb239c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d1f38b7dfdd63a7751def6bc30674e1df6460ebcc90d17bb8615961bf0489cdb",
            "html": "<p>[1] Bob Jenkinsâ Hash functions http://burtleburtle.net/bob/</p>",
            "markdown": "[1] Bob Jenkinsâ Hash functions http://burtleburtle.net/bob/\n\n"
          },
          {
            "segment_id": "a71fafae-5be0-4ca5-8e65-68a72a05f5e3",
            "bbox": {
              "left": 292.75,
              "top": 590.6666,
              "width": 779.0833,
              "height": 77
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "[2] US Patent Application: âA Novel Hashing Method suitable for Lookupsâ Vinodh Gopal, Jim Guilford, Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk, Wajdi Feghali",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/a71fafae-5be0-4ca5-8e65-68a72a05f5e3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a363d8de5406a08304e42a9f62df136d515b4ac73c801fa3055c9372e80a9632",
            "html": "<p>[2] US Patent Application: âA Novel Hashing Method suitable for Lookupsâ Vinodh Gopal, Jim Guilford, Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk, Wajdi Feghali</p>",
            "markdown": "[2] US Patent Application: âA Novel Hashing Method suitable for Lookupsâ Vinodh Gopal, Jim Guilford, Schuyler Eldridge, Gil Wolrich, Erdinc Ozturk, Wajdi Feghali\n\n"
          },
          {
            "segment_id": "3929972c-aa36-450d-921d-fd21855df029",
            "bbox": {
              "left": 290.66666,
              "top": 688.5833,
              "width": 793.6666,
              "height": 77
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "[3] Intel Â® 64 and IA-32 Architectures Software Developer's Manual Volume 2A: Instruction Set Reference, A-M http://www.intel.com/products/processor/manuals/",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/3929972c-aa36-450d-921d-fd21855df029.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=898733f133a73ee8b2236d5df4d3efc43222a5d9ba76bff5b2c849a277cc261c",
            "html": "<p>[3] Intel Â® 64 and IA-32 Architectures Software Developer's Manual Volume 2A: Instruction Set Reference, A-M http://www.intel.com/products/processor/manuals/</p>",
            "markdown": "[3] Intel Â® 64 and IA-32 Architectures Software Developer's Manual Volume 2A: Instruction Set Reference, A-M http://www.intel.com/products/processor/manuals/\n\n"
          },
          {
            "segment_id": "bdb2c97d-2de9-460e-bb95-0ed2aaf94e65",
            "bbox": {
              "left": 292.75,
              "top": 884.4166,
              "width": 810.3333,
              "height": 152
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The Intel Â® Embedded Design Center provides qualified developers with web- based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. http://intel.com/embedded/edc .",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/bdb2c97d-2de9-460e-bb95-0ed2aaf94e65.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7855c7b65b2724efbc31904803e545bf4546928155484e9d42e79f954d01d4ae",
            "html": "<p>The Intel Â® Embedded Design Center provides qualified developers with web- based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. http://intel.com/embedded/edc .</p>",
            "markdown": "The Intel Â® Embedded Design Center provides qualified developers with web- based access to technical resources. Access Intel Confidential design materials, step-by step guidance, application reference solutions, training, Intelâs tool loaner program, and connect with an e-help desk and the embedded community. Design Fast. Design Smart. Get started today. http://intel.com/embedded/edc .\n\n"
          }
        ],
        "chunk_length": 98
      },
      {
        "segments": [
          {
            "segment_id": "9cfec404-a38f-4b35-ae29-a02d87cfb766",
            "bbox": {
              "left": 423.99997,
              "top": 1061.5,
              "width": 118.666664,
              "height": 35.333332
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Authors",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/9cfec404-a38f-4b35-ae29-a02d87cfb766.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7a2ca702afd3daaed8b094012959238619bfc1b55b020d456675308bb96d4e42",
            "html": "<h2>Authors</h2>",
            "markdown": "## Authors\n\n"
          },
          {
            "segment_id": "e546ad03-4014-4b90-a72e-d80f61fbc5fe",
            "bbox": {
              "left": 423.99997,
              "top": 1109.4166,
              "width": 674.9166,
              "height": 49.916664
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Vinodh Gopal and Jim Guilford are IA Architects with the IAG Group at Intel Corporation.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/e546ad03-4014-4b90-a72e-d80f61fbc5fe.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3075852fea03e837d80820e9bdbd8f304ff2026550210bfe3748b036d2287bf4",
            "html": "<p>Vinodh Gopal and Jim Guilford are IA Architects with the IAG Group at Intel Corporation.</p>",
            "markdown": "Vinodh Gopal and Jim Guilford are IA Architects with the IAG Group at Intel Corporation.\n\n"
          }
        ],
        "chunk_length": 16
      },
      {
        "segments": [
          {
            "segment_id": "2c040824-95aa-4366-9b1e-af2603a5d4d8",
            "bbox": {
              "left": 423.99997,
              "top": 1174,
              "width": 145.75,
              "height": 31.166666
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Acronyms",
            "segment_type": "Section header",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/2c040824-95aa-4366-9b1e-af2603a5d4d8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a73e32c2a096972f15411a4a99ff79d1992fd18ae7cf4ef9f16d95180955084a",
            "html": "<h2>Acronyms</h2>",
            "markdown": "## Acronyms\n\n"
          },
          {
            "segment_id": "479416eb-ab6e-4664-86a9-3a8242dba045",
            "bbox": {
              "left": 423.99997,
              "top": 1217.75,
              "width": 293.66666,
              "height": 27
            },
            "page_number": 9,
            "page_width": 1275,
            "page_height": 1650,
            "content": "IA Intel Â® Architecture",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/479416eb-ab6e-4664-86a9-3a8242dba045.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3219c2739dd0dbe780ebdd4eba008df82e2321ba2c3b07e6280fda1531635022",
            "html": "<p>IA Intel Â® Architecture</p>",
            "markdown": "IA Intel Â® Architecture\n\n"
          },
          {
            "segment_id": "4585c230-e625-49d0-a5f9-5c702c35f4ca",
            "bbox": {
              "left": 290.66666,
              "top": 205.24998,
              "width": 866.5833,
              "height": 195.75
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "INFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL PRODUCTS.  NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT.  EXCEPT AS PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/4585c230-e625-49d0-a5f9-5c702c35f4ca.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5eeda315b9eef008e81d2b22d7091d55e40ab1063ac46bbf4c3cd0fcd9db9823",
            "html": "<p>INFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL PRODUCTS.  NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT.  EXCEPT AS PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.</p>",
            "markdown": "INFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL PRODUCTS.  NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT.  EXCEPT AS PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.\n\n"
          },
          {
            "segment_id": "e513a1ee-6b18-457c-be94-b7a6931b1fa6",
            "bbox": {
              "left": 290.66666,
              "top": 419.8333,
              "width": 854.0833,
              "height": 243.66666
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "A \"Mission Critical Application\" is any application in which failure of the Intel Product could result, directly or indirectly, in personal injury or death.  SHOULD YOU PURCHASE OR USE INTEL'S PRODUCTS FOR ANY SUCH MISSION CRITICAL APPLICATION, YOU SHALL INDEMNIFY AND HOLD INTEL AND ITS SUBSIDIARIES, SUBCONTRACTORS AND AFFILIATES, AND THE DIRECTORS, OFFICERS, AND EMPLOYEES OF EACH, HARMLESS AGAINST ALL CLAIMS COSTS, DAMAGES, AND EXPENSES AND REASONABLE ATTORNEYS' FEES ARISING OUT OF, DIRECTLY OR INDIRECTLY, ANY CLAIM OF PRODUCT LIABILITY, PERSONAL INJURY, OR DEATH ARISING IN ANY WAY OUT OF SUCH MISSION CRITICAL APPLICATION, WHETHER OR NOT INTEL OR ITS SUBCONTRACTOR WAS NEGLIGENT IN THE DESIGN, MANUFACTURE, OR WARNING OF THE INTEL PRODUCT OR ANY OF ITS PARTS.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/e513a1ee-6b18-457c-be94-b7a6931b1fa6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=199e845225a2f5e5f2652819ac73b9435cd51ba6f981d1e4d37bf16989644183",
            "html": "<p>A \"Mission Critical Application\" is any application in which failure of the Intel Product could result, directly or indirectly, in personal injury or death.  SHOULD YOU PURCHASE OR USE INTEL'S PRODUCTS FOR ANY SUCH MISSION CRITICAL APPLICATION, YOU SHALL INDEMNIFY AND HOLD INTEL AND ITS SUBSIDIARIES, SUBCONTRACTORS AND AFFILIATES, AND THE DIRECTORS, OFFICERS, AND EMPLOYEES OF EACH, HARMLESS AGAINST ALL CLAIMS COSTS, DAMAGES, AND EXPENSES AND REASONABLE ATTORNEYS' FEES ARISING OUT OF, DIRECTLY OR INDIRECTLY, ANY CLAIM OF PRODUCT LIABILITY, PERSONAL INJURY, OR DEATH ARISING IN ANY WAY OUT OF SUCH MISSION CRITICAL APPLICATION, WHETHER OR NOT INTEL OR ITS SUBCONTRACTOR WAS NEGLIGENT IN THE DESIGN, MANUFACTURE, OR WARNING OF THE INTEL PRODUCT OR ANY OF ITS PARTS.</p>",
            "markdown": "A \"Mission Critical Application\" is any application in which failure of the Intel Product could result, directly or indirectly, in personal injury or death.  SHOULD YOU PURCHASE OR USE INTEL'S PRODUCTS FOR ANY SUCH MISSION CRITICAL APPLICATION, YOU SHALL INDEMNIFY AND HOLD INTEL AND ITS SUBSIDIARIES, SUBCONTRACTORS AND AFFILIATES, AND THE DIRECTORS, OFFICERS, AND EMPLOYEES OF EACH, HARMLESS AGAINST ALL CLAIMS COSTS, DAMAGES, AND EXPENSES AND REASONABLE ATTORNEYS' FEES ARISING OUT OF, DIRECTLY OR INDIRECTLY, ANY CLAIM OF PRODUCT LIABILITY, PERSONAL INJURY, OR DEATH ARISING IN ANY WAY OUT OF SUCH MISSION CRITICAL APPLICATION, WHETHER OR NOT INTEL OR ITS SUBCONTRACTOR WAS NEGLIGENT IN THE DESIGN, MANUFACTURE, OR WARNING OF THE INTEL PRODUCT OR ANY OF ITS PARTS.\n\n"
          },
          {
            "segment_id": "4f090a82-6ee5-4e59-8263-674cd15a4153",
            "bbox": {
              "left": 290.66666,
              "top": 682.3333,
              "width": 843.6666,
              "height": 118.666664
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Intel may make changes to specifications and product descriptions at any time, without notice. Designers must not rely on the absence or characteristics of any features or instructions marked \"reserved\" or \"undefined\".  Intel reserves these for future definition and shall have no responsibility whatsoever for conflicts or incompatibilities arising from future changes to them.  The information here is subject to change without notice.  Do not finalize a design with this information.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/4f090a82-6ee5-4e59-8263-674cd15a4153.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ffff72355d26ae1ba19c776b4590e56d4af057f472908e060752385e9b43f521",
            "html": "<p>Intel may make changes to specifications and product descriptions at any time, without notice. Designers must not rely on the absence or characteristics of any features or instructions marked \"reserved\" or \"undefined\".  Intel reserves these for future definition and shall have no responsibility whatsoever for conflicts or incompatibilities arising from future changes to them.  The information here is subject to change without notice.  Do not finalize a design with this information.</p>",
            "markdown": "Intel may make changes to specifications and product descriptions at any time, without notice. Designers must not rely on the absence or characteristics of any features or instructions marked \"reserved\" or \"undefined\".  Intel reserves these for future definition and shall have no responsibility whatsoever for conflicts or incompatibilities arising from future changes to them.  The information here is subject to change without notice.  Do not finalize a design with this information.\n\n"
          },
          {
            "segment_id": "bc8f0360-ff2d-423c-ad6b-7b718ee6d6fc",
            "bbox": {
              "left": 290.66666,
              "top": 819.8333,
              "width": 860.3333,
              "height": 68.666664
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "The products described in this document may contain design defects or errors known as errata which may cause the product to deviate from published specifications.  Current characterized errata are available on request.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/bc8f0360-ff2d-423c-ad6b-7b718ee6d6fc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7e4ca629b234b1975b719afda40972923911cd34da341c497bd7906dea85d230",
            "html": "<p>The products described in this document may contain design defects or errors known as errata which may cause the product to deviate from published specifications.  Current characterized errata are available on request.</p>",
            "markdown": "The products described in this document may contain design defects or errors known as errata which may cause the product to deviate from published specifications.  Current characterized errata are available on request.\n\n"
          },
          {
            "segment_id": "490e7e20-b71a-45b5-aed0-4801c4b4145d",
            "bbox": {
              "left": 290.66666,
              "top": 907.3333,
              "width": 841.5833,
              "height": 43.666664
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Contact your local Intel sales office or your distributor to obtain the latest specifications and before placing your product order.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/490e7e20-b71a-45b5-aed0-4801c4b4145d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1b2b651f81bacb0c49a1e51fc0ae3675c078259b34b2738e6c92f4c5431fe23c",
            "html": "<p>Contact your local Intel sales office or your distributor to obtain the latest specifications and before placing your product order.</p>",
            "markdown": "Contact your local Intel sales office or your distributor to obtain the latest specifications and before placing your product order.\n\n"
          },
          {
            "segment_id": "5c9a5723-d123-4f39-8cbc-ec7f591b04f1",
            "bbox": {
              "left": 290.66666,
              "top": 969.8333,
              "width": 862.4166,
              "height": 68.666664
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Copies of documents which have an order number and are referenced in this document, or other Intel literature, may be obtained by calling 1-800-548-4725, or go to: http://www.intel.com/design/literature.htm",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/5c9a5723-d123-4f39-8cbc-ec7f591b04f1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=43c2c3d3ee852be55cbd7d8232f22d1181e9a150c529f5bf88844a311bec195a",
            "html": "<p>Copies of documents which have an order number and are referenced in this document, or other Intel literature, may be obtained by calling 1-800-548-4725, or go to: http://www.intel.com/design/literature.htm</p>",
            "markdown": "Copies of documents which have an order number and are referenced in this document, or other Intel literature, may be obtained by calling 1-800-548-4725, or go to: http://www.intel.com/design/literature.htm\n\n"
          },
          {
            "segment_id": "b04d5591-5c25-4e81-ac2d-b9b7fba9a06e",
            "bbox": {
              "left": 290.66666,
              "top": 1057.3333,
              "width": 860.3333,
              "height": 168.66666
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "This paper is for informational purposes only. THIS DOCUMENT IS PROVIDED \"AS IS\" WITH NO WARRANTIES WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to use of information in this specification. No license, express or implied, by estoppel or otherwise, to any intellectual property rights is granted herein.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/b04d5591-5c25-4e81-ac2d-b9b7fba9a06e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d5f7a5becef62241b85c97357d4c436cd66144b038be2d65bfef0425ed5147de",
            "html": "<p>This paper is for informational purposes only. THIS DOCUMENT IS PROVIDED \"AS IS\" WITH NO WARRANTIES WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to use of information in this specification. No license, express or implied, by estoppel or otherwise, to any intellectual property rights is granted herein.</p>",
            "markdown": "This paper is for informational purposes only. THIS DOCUMENT IS PROVIDED \"AS IS\" WITH NO WARRANTIES WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to use of information in this specification. No license, express or implied, by estoppel or otherwise, to any intellectual property rights is granted herein.\n\n"
          },
          {
            "segment_id": "26e4d5c4-b2b8-4625-905f-cdc0ee9bbc37",
            "bbox": {
              "left": 290.66666,
              "top": 1244.8333,
              "width": 614.5,
              "height": 18.666666
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Intel is a trademark of Intel Corporation in the U.S. and other countries.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/26e4d5c4-b2b8-4625-905f-cdc0ee9bbc37.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9884c6f4ecadda18df5afd60a40c07f8d2775d4c0c6f560e530abd3edde6cfbd",
            "html": "<p>Intel is a trademark of Intel Corporation in the U.S. and other countries.</p>",
            "markdown": "Intel is a trademark of Intel Corporation in the U.S. and other countries.\n\n"
          },
          {
            "segment_id": "41b43cfb-af71-4640-8c07-e09fd085818e",
            "bbox": {
              "left": 292.75,
              "top": 1284.4166,
              "width": 585.3333,
              "height": 18.666666
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "*Other names and brands may be claimed as the property of others.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/41b43cfb-af71-4640-8c07-e09fd085818e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f7cb7c7ee7c9b24fa6e97b99670ed1c68f69a23214260cb975ace428edf8ef31",
            "html": "<p>*Other names and brands may be claimed as the property of others.</p>",
            "markdown": "*Other names and brands may be claimed as the property of others.\n\n"
          },
          {
            "segment_id": "8236b651-784f-47a6-b4f2-121f6fe27ffe",
            "bbox": {
              "left": 290.66666,
              "top": 1321.9166,
              "width": 476.99997,
              "height": 18.666666
            },
            "page_number": 10,
            "page_width": 1275,
            "page_height": 1650,
            "content": "Copyright Â© 2012 Intel Corporation. All rights reserved.",
            "segment_type": "Text",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/b8989959-e3c3-480a-85b3-4a17db19eced/images/8236b651-784f-47a6-b4f2-121f6fe27ffe.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T035019Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=82d5192aec70e5287d1eae882427be59dddef5a072835df4f7a285664b2039f2",
            "html": "<p>Copyright Â© 2012 Intel Corporation. All rights reserved.</p>",
            "markdown": "Copyright Â© 2012 Intel Corporation. All rights reserved.\n\n"
          }
        ],
        "chunk_length": 471
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "A Novel Hashing Method Suitable for Lookup Functions\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "Vinodh Gopal, Jim Guilford\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "February 2012\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "U.S. and other countries\n"
        }
      ]
    }
  }
}