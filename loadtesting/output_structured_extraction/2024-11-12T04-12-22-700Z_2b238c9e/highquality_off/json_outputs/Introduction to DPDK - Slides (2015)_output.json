{
  "file_name": "Introduction to DPDK - Slides (2015).pdf",
  "task_id": "e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "f8c855c6-63fd-4e29-8dfd-416ea2126409",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 1,
            "page_width": 720,
            "page_height": 540,
            "content": "Introduction to dpdk\r\nNetwork Platforms Group – September 2015",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/f8c855c6-63fd-4e29-8dfd-416ea2126409.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e22f3f5614e7a879435a7f4154c5c94d9bc9e856702c47662c7068ad5257f54b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "afba9984-5f88-4f64-b573-53dd813647e9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 2,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nLegal Disclaimer\r\nTechnology Disclaimer:\r\nIntel technologies’ features and benefits depend on system configuration and may require enabled \r\nhardware, software or service activation. Performance varies depending on system configuration. No \r\ncomputer system can be absolutely secure. Check with your system manufacturer or retailer or learn \r\nmore at [intel.com]. \r\nPerformance Disclaimers (include only the relevant ones):\r\nCost reduction scenarios described are intended as examples of how a given Intel- based product, in \r\nthe specified circumstances and configurations, may affect future costs and provide cost savings. \r\nCircumstances will vary. Intel does not guarantee any costs or cost reduction.\r\nResults have been estimated or simulated using internal Intel analysis or architecture simulation or \r\nmodeling, and provided to you for informational purposes. Any differences in your system hardware, \r\nsoftware or configuration may affect your actual performance.\r\nGeneral Disclaimer:\r\n© Copyright 2015 Intel Corporation. All rights reserved. Intel, the Intel logo, Intel Inside, the Intel Inside \r\nlogo, Intel. Experience What’s Inside are trademarks of Intel. Corporation in the U.S. and/or other \r\ncountries. *Other names and brands may be claimed as the property of others.\r\n2",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/afba9984-5f88-4f64-b573-53dd813647e9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a69eb76ff5117e884327d30b5c6fc8fdf8cb5a1dcc4f21efece6693e9ea3b750",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a55c9d43-b27e-4766-abc4-7f6693c72746",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 3,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nOverview of DPDK\r\n• Why DPDK – PMD vs Linux interrupt driver, memory config, user space.\r\n• Licensing\r\n• Packet processing concepts\r\n• DPDK component libraries\r\n• Memory IA – NUMA, Caching, huge pages, TLBs on IA\r\n• Memory DPDK – mem pools, buffers, allocation etc.\r\nTopics",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/a55c9d43-b27e-4766-abc4-7f6693c72746.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5dd94cdacea72fd42b4fe7eadb26fc4b8a75d52a3f66e711aa005e651e86cc81",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "41128e75-09fb-4e78-9d41-fae3b6c5efd3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 4,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nData Plane Development Kit (DPDK)\r\n• Big Idea\r\nSoftware solution for accelerating Packet Processing workloads on IA.\r\n• Deployment Models • Performance\r\n• Commercial Support\r\n• Delivers 25X performance jump over Linux • Free, Open Source, BSD License\r\n• Comprehensive Virtualization support • Enjoys vibrant community support\r\nConcepts Code Commercial\r\n1.1\r\n28.5\r\n0\r\n10\r\n20\r\n30\r\nLinux Intel® DPDK\r\nPer Core L3 \r\nPerformance \r\n(Mpps)\r\nPlatform\r\nDisclaimer: Software and workloads used in performance tests may have been optimized for performance only on Intel microprocessors. Performance tests, such as SYSmark and MobileMark, are measured using specific computer systems, components, software, \r\noperations and functions. Any change to any of those factors may cause the results to vary. You should consult other information and performance tests to assist you in fully evaluating your contemplated purchases, including the performance of that product when \r\ncombined with other products.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/41128e75-09fb-4e78-9d41-fae3b6c5efd3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bc5e248bc22a0357b451600a21234ef49db3bdecfacb2e89e2133181c3d89f12",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "fc3b02c6-9a47-41b4-b267-2773b855e00e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 5,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n5\r\nWhere is DPDK today?\r\nFree, Open-sourced, community driven, BSD \r\nLicensed\r\n• Git: http://dpdk.org/git/dpdk\r\nMultiple CPU architectures supported (on dpdk.org)\r\n• Intel x86_64, ia32, Power 7/8, Tilera (EZChip)\r\nMultiple vendor NICs supported in open source\r\n• R2.1: Intel, Cisco (VIC), Mellanox, Broadcom (Qlogic), Chelsio\r\n• R2.2: +NetFPGA, +others\r\nMultiple OS Distributions\r\nMultiple virtualized environments\r\n• KVM, VMware, Xen\r\nSome closed source drivers/ports\r\nVirtual\r\nRouter\r\nVirtual\r\nVPN\r\nVirtual\r\nFirewall\r\nNFV and SDN Infrastructure\r\nNIC\r\nSilicon\r\nSwitch\r\nSilicon\r\nChipset & \r\nAcceleration\r\nx86 \r\nCPU\r\nLinux",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/fc3b02c6-9a47-41b4-b267-2773b855e00e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c5e12515351164ab1981f2047724859f50cc004608c9039a4f6b796074c1ddf0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 471
      },
      {
        "segments": [
          {
            "segment_id": "402e706c-4599-465b-9218-a5c97c679b36",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 6,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\ndpdk.org\r\n Multiple maintainers and patch policy established\r\n Lack of community support for TSC or moving to \r\na Linux Foundation project\r\n1.53M lines of code - 128 contributors\r\n Test framework and test cases expediting \r\nquality of patches and automated daily \r\nregression testing \r\nDPDK Community\r\n0\r\n20\r\n40\r\n60\r\n80\r\n100\r\n0\r\n200\r\n400\r\n600\r\n800\r\n1000\r\n1.5 1.6 1.7 1.8 2.0 2.1\r\nDPDK Release Stats\r\nTotal Contributors Non-Intel/6Wind Contributors\r\nTotal Commits",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/402e706c-4599-465b-9218-a5c97c679b36.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=eafdfa67fe1c27d699cd3a98f427c606e56c0b961476f25e71ff5836bb2f47ae",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "39661331-2420-4f68-8f0e-1ba8d38c94f8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 7,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• DPDK is BSD licensed:\r\n• http://opensource.org/licenses/BSD-3-Clause\r\n• User is free to modify, copy and re-use code\r\n• No need to provide source code in derived software (unlike GPL license)\r\nLicensing",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/39661331-2420-4f68-8f0e-1ba8d38c94f8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ce3648039e031101fec2c1cbd311c8b76118a17207e1ac1b0a13d0902d47554b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dc5ed822-1d46-4bed-b540-247f1e7557df",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 8,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• DPDK was officially launched on Sep 17, 2010 under the most liberal BSD \r\nopen source license.\r\n• Since April 2013, DPDK is available at www.dpdk.org as a fully independent, \r\nopen source community.\r\n• Many silicon suppliers have independently built and publically announced \r\nsupport for DPDK, such as Tilera, Netronome, Cavium and Xilinx.\r\n• DPDK now available on Red Hat Enterprise Linux Extras channel\r\nDPDK: a full open source community effort",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/dc5ed822-1d46-4bed-b540-247f1e7557df.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dd534cef1e30d5c6a6ebb919d2a62f4985f07e09b83d15b13d83ed8d2a2302b9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "937c517d-22b7-44c3-8c51-d77930928b7a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 9,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nData Plane Development Kit\r\n• Libraries for network application development \r\non Intel Platforms \r\n• Speeds up networking functions\r\n• Enables user space application development\r\n• Facilitates both run-to-completion and pipeline \r\nmodels\r\n• Free, Open-sourced, BSD Licensed\r\n• http://www.intel.com/go/dpdk\r\n• Git: http://dpdk.org/git/dpdk\r\n• Scales from Intel Atom to multi-socket Intel \r\nXeon architecture platforms\r\n• About 30 pre-built example applications\r\nEAL\r\nMALLOC\r\nMBUF\r\nMEMPOO\r\nL\r\nRING\r\nTIMER\r\nCore \r\nLibraries\r\nKNI\r\nPOWER\r\nIVSHMEM\r\nPlatform\r\nLPM\r\nEXACT \r\nMATCH\r\nACL\r\nClassify\r\nE1000\r\nIXGBE\r\nVMXNET3\r\nIGB\r\ni40e\r\nVIRTIO\r\nPacket Access\r\n(PMD – Native & Virtual)\r\nETHDEV\r\nXENVIRT\r\nPCAP\r\nRING\r\nMETER\r\nSCHED\r\nQoS\r\nDPDK Sample \r\nApplications\r\nLinux Kernel\r\nUser Space\r\nKNI IGB_UIO\r\nCustomer Applications ISV Eco-System \r\nApplications\r\n3\r\nrd Party \r\nNIC",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/937c517d-22b7-44c3-8c51-d77930928b7a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8035c07b003840ea3bf5d510640744847fa516b3a5c9f1d3973fc5b641b488d9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "23e0646b-975b-4184-b2fb-97f08c325d3d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 10,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nBuild with DPDK\r\nProvided Sample Applications\r\nTest PMD\r\nCLI\r\nCore \r\nCmpnts\r\nL2 Fwd\r\nIPv4 Re\u0002assmbly\r\nIPv4 \r\nM’Cast IPv4 Frag\r\nLink \r\nStatus\r\nQAT\r\nVM Pwr\r\nMgmt\r\nLinux \r\nExcptn\r\nPath\r\nMulti\u0002Process\r\nLoad \r\nBalancing\r\nQuota & \r\nW’marks\r\nQoS\r\nMetering\r\nQoS\r\nSchdling\r\nGreen L3 \r\nFwd\r\nVirt L3 \r\nFwd\r\nPacket \r\nDistri\u0002butor\r\nIPv4 L3 \r\nFwd\r\nKNI\r\nVLAN\u0002based \r\nFiltering\r\nVHost\r\nTimer\r\nDPDK\r\n• Over 30 pre-built sample \r\napplications\r\n• Provide a great jump start \r\nfor accelerating \r\nworkloads with DPDK\r\nIP \r\nPipeline",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/23e0646b-975b-4184-b2fb-97f08c325d3d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ac93bbfc7bf912bd36693e774c065d8caf26f5bfcafd2c5a3e7314473135572f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 378
      },
      {
        "segments": [
          {
            "segment_id": "1f3d0aab-dc20-4117-a1e2-2538247a0b99",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 11,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nIntel Packet Processing Concepts\r\n• DPDK is designed for high-speed packet processing on IA. This is achieved by optimizing the software libraries to IA with some of the following concepts\r\n• Huge Pages Cache alignment Ptheads with Affinity\r\n• Prefetching New Instructions NUMA\r\n• Intel® DDIO Memory Interleave Memory Channel \r\n• Intel® Data Direct I/O Technology (Intel® DDIO)\r\n– Enabled by default in all Intel® Xeon® processor E5-based platforms\r\n– Enables PCIe adapters to route I/O traffic directly to L3 cache, reducing unnecessary trips to system memory, providing more than double the throughput of previous-generation servers, while \r\nfurther reducing power consumption and I/O latency.\r\n• Pthreads\r\n– On startup of the DPDK specifies the cores to be used via the Pthread call with affinity to tie an application to a core. Reducing the kernel’s ability of moving the application to another local or\r\nremote core affecting performance. \r\n– The user may still use Ptheads or Fork calls after the DPDK has started to allow threads to float or multiple thread to be tied to a single core.\r\n• NUMA\r\n– DPDK utilizes NUMA memory for allocation of resources to improve performance for processing and PCIe I/O local to a processor. \r\n– With out the NUMA set in a dual socket system memory is interleaved between the two sockets.\r\n Huge Pages\r\n– DPDK utilizes 2M and 1G hugepages to reduce the case of TLB misses which can significantly affect a cores overall performance. \r\n• Cache Alignment\r\n– Better performance by aligning structures on 64 Byte cache lines. \r\n• Software Prefetching\r\n– needs to be issued “appropriately” ahead of time to be effective. Too early could cause eviction before use\r\n– Allows cache to be populated before data is accessed\r\n• Memory channel use\r\n– Memory pools add padding to objects to ensure even use of memory channels\r\n– Number of channels specified at application start up",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/1f3d0aab-dc20-4117-a1e2-2538247a0b99.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=54bcc3f1afa4a5cbbbc7fc30eab282d4f5d87fb45501fb62dc353f865025b934",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ec6d3685-85c7-45af-9280-0435bb8ad9d2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 12,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nThe libraries/components (1)\r\nLibrary\r\nlibrte_eal Environment Abstraction Layer. Meant to hide system/OS specifics from \r\n“common” upper layers\r\nlibrte_malloc rte_malloc() - replacement for malloc(). Allows allocation of data structures \r\nbacked by huge pages\r\nlibrte_mempool\r\nlibrte_mbuf\r\nMemory management: DPDK buffer pool management and packet buffer \r\nimplementations\r\nlibrte_ring High speed ring for inter-core/process pointer passing\r\nlibrte_timer Timer routines \r\nlibrte_lpm Accelerated longest prefix match\r\nlibrte_hash Hash driven key-value exact match for tuple matching\r\nlibrte_acl Accelerated implementation of an Access Control List",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/ec6d3685-85c7-45af-9280-0435bb8ad9d2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2232a6e7099acc45b187c197f173939f3ac17235ab0700d1e835443e1e60a336",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9747d5c1-def5-45f6-87a7-c5edb91e17cb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 13,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nThe libraries/components (2)\r\nLibrary\r\nlibrte_meter Meter/mark library: Implements srTCM (RFC 2697) and trTCM RFC 2698)\r\nlibrte_sched Hierarchical traffic shaper in software\r\nlibrte_pmd* Packet Access “Poll” mode drivers\r\nlibrte_ether Generic Ethernet device abstraction – the DPDK PMD API\r\nlibrte_cmdline Command line parser library\r\nlibrte_distributor A work queue distributor \r\nlibrte_power Power management primitives\r\nlibrte_ivshmem Shared memory implementation for inter-VM communication\r\nKNI, librte_kni Kernel Network Interface – implements a kernel netdev for passing packets into \r\nthe kernel from DPDK",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/9747d5c1-def5-45f6-87a7-c5edb91e17cb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3d448f226cdf78ce862ce571387c7c1a4e67ea105fc9ba05aad2ff16a508e919",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d4a5559d-31a4-43a1-87aa-22e0a63c1511",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 14,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nRelationship of DPDK Libraries",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/d4a5559d-31a4-43a1-87aa-22e0a63c1511.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=89cd0625bf93411939940acdaf4f593d678a7b5a758051967d078c915908618e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 485
      },
      {
        "segments": [
          {
            "segment_id": "d3a63290-aa5f-452c-b13d-706a9af6eb6e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 15,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nThe Buffer manager allocates memory from the \r\nEAL and creates pools with fixed element sizes\r\n Typical usage is packet buffers, descriptor ring buffers \r\netc. \r\n Intent is to speed up runtime allocation/deallocation\r\n Does not support runtime resizing of pools\r\nHandles striping of buffers across a contiguous \r\nmemory space\r\n Required to make sure we balance incoming packet load \r\nacross all available memory channels\r\nOptimized for performance\r\n Cache alignment/page alignment\r\n Per core buffer caches for each buffer pool so that can \r\nallocate/deallocate without locks\r\n Bulk allocation/deallocation support\r\nMemory Pool\r\nPkt Buffers \r\n(60K 2K buffers)\r\nEvents\r\n(2K 100B buffers)\r\nEvents\r\n(2K 100B buffers)\r\nProcessor 0\r\n10G\r\nDPDK\r\nC4\r\nData \r\nPlane\r\nDPDK\r\nC3\r\nData \r\nPlane\r\nDPDK\r\nC2\r\nData \r\nPlane\r\nDPDK\r\nC1\r\nData \r\nPlane\r\n10G\r\nRings \r\nfor \r\nCached \r\nbuffers\r\nThe Buffer Management API\r\n(librte_mempool)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/d3a63290-aa5f-452c-b13d-706a9af6eb6e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bc74bb1a365023d9904e00bd3454c0211c621b6ee8c1a801a84ae18a7c14f455",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "44716ad5-5786-4ee5-a1c2-f5bd0223a3b6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 16,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nConcept is similar to Linux SKB or BSD mbuf\r\n Used to manage packet + metadata associated with the packet\r\n mbufs can be chained to provide a larger virtual buffer to \r\ntransmit/receive jumbo packets\r\nOptimized for performance\r\n Alignment, and structure of elements is taken care of\r\n Immediately precedes the packet buffer\r\nWill have macros/functions that allow operations\r\n To insert data at head or tail (pull/push)\r\n Chain manipulation etc.\r\nPacket Buffer Management Structure\r\n(librte_mbuf)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/44716ad5-5786-4ee5-a1c2-f5bd0223a3b6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=84fe5aca7e1cbc12308458b615d12a386aa72a6c379df6f5bc2ac2b8913a118e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "24ea2eff-1297-4d40-9058-33f55d8e6a16",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 17,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nQueue/Ring Management API\r\n(librte_ring)\r\nEffectively a FIFO implementation in software\r\n Lockless implementations for single or multi-producer, single consumer enqueue/dequeue\r\n Supports bulk enqueue/dequeue to support packet-bunching \r\n Implements high & low water mark thresholds for backpresssure/flow control\r\nEssential to optimizing for throughput\r\n Used to decouple stages of a pipeline (example later in slide-deck)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/24ea2eff-1297-4d40-9058-33f55d8e6a16.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=672876010b40b49d9fdf6b80ae6d3f12c89a87c7d6f444722b182617c0b7013c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 277
      },
      {
        "segments": [
          {
            "segment_id": "90c049ae-7e86-4439-a0df-1b5c6f89d940",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 18,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nDPDK Feature List\r\n• Supported Operating Systems\r\n Fedora release Ubuntu*\r\n Wind River* Linux* Red Hat* Enterprise Linux\r\n SUSE Enterprise Linux*\r\n• Core components\r\n rte_mempool: allocator for fixed-sized objects\r\n rte_ring: single- or multi- consumer/producer queue \r\nimplementation\r\n rte_timer: implementation of timers\r\n rte_malloc: malloc-like allocator\r\n rte_mbuf: network packet buffers, including \r\nfragmented buffers\r\n rte_hash: support for exact-match flow classification in \r\nsoftware\r\n rte_lpm: support for longest prefix match in software \r\nfor IPv4 and IPv6\r\n rte_sched: support for QoS scheduling\r\n rte_meter: support for QoS traffic metering\r\n rte_power: support for power management\r\n• Environment Abstraction Layer (librte_eal)\r\n Multi-process support\r\n Multi-thread support\r\n 1 Gbyte and 2 Mbyte page support\r\n Atomic integer operations\r\n Querying CPU support of specific features\r\n High Precision Event Timer support (HPET)\r\n PCI device enumeration and blacklisting\r\n Spin locks and R/W locks\r\n• Poll Mode Driver - Common (rte_ether)\r\n VLAN support\r\n Support for Receive Side Scaling (RSS)\r\n IEEE1588\r\n Buffer chaining; Jumbo frames\r\n TX checksum calculation\r\n Configuration of promiscuous mode, and multicast \r\npacket receive filtering\r\n L2 Mac address filtering\r\n Statistics recording\r\n• Poll Mode Driver - 1 GbE Controllers (librte_pmd_e1000) \r\nsupport for\r\n Intel® 82576 Gigabit Ethernet Controller (previously \r\ncode named “Kawela”)\r\n Intel® 82580 Gigabit Ethernet Controller (previously \r\ncode named “Barton Hills”)\r\n Intel® I350 Gigabit Ethernet Controller (previously code \r\nnamed “Powerville”)\r\n Intel® 82574L Gigabit Ethernet Controller - Intel® \r\nGigabit CT\r\n Desktop Adapter (previously code named “Hartwell”)\r\n Intel® Ethernet Controller I210 (previously code named \r\n“Springville”)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/90c049ae-7e86-4439-a0df-1b5c6f89d940.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=28871aab73d66bb88270a4cd09722ab42c0c9f688fac26e94fc942abfaba66b8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 264
      },
      {
        "segments": [
          {
            "segment_id": "7596362c-2095-4f90-8f54-79e12ede490b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 19,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nDPDK Feature List Continued…\r\n• Poll Mode Driver - 10 GbE Controllers \r\n(librte_pmd_ixgbe) support for\r\n Intel® 82599 10 Gigabit Ethernet Controller (previously \r\ncode named “Niantic”)\r\n Intel® Ethernet Server Adapter X520-T2 (previously \r\ncode named “Iron Pond”)\r\n Intel® Ethernet Controller X540-T2 (previously code \r\nnamed “Twin Pond”)\r\n Virtual Machine Device Queues (VMDq) and Data \r\nCenter Bridging (DCB) to divide incoming traffic into \r\n128 RX queues. DCB is also supported for transmitting \r\npackets.\r\n auto negotiation down to 1 Gb\r\n Flow Director\r\n• Quality of Service (QoS)\r\n Hierarchical scheduler implementing 5-level \r\nscheduling hierarchy (port, subport, pipe, traffic class, \r\nqueue) with 64K leaf nodes (packet queues).\r\n Packet dropper based on Random Early Detection \r\n(RED) congestion control mechanism.\r\n Traffic Metering based on Single Rate Three Color \r\nMarker (srTCM) and Two Rate Three Color Marker \r\n(trTCM).\r\n Quality of Service (QoS) Hierarchical Scheduler: \r\nSubport Traffic Class Oversubscription\r\n• Virtualization (KVM)\r\n Para-virtualization supports\r\n• virtio front-end poll mode driver in guest virtual machine\r\n• vHost raw socket interface as virtio back-end via KNI\r\n SR-IOV Switching for the 10G Ethernet Controller supports\r\n• Support Physical Function to start/stop Virtual Function \r\nTraffic\r\n• Support Traffic Mirroring (Pool, VLAN, Uplink and \r\nDownlink)\r\n• Support VF multiple MAC addresses (Exact/Hash match), \r\nVLAN filtering\r\n• Support VF receive mode configuration\r\n• Miscellaneous\r\n New libpcap-based poll-mode driver, including support for \r\nreading from 3rd Party NICs using Linux kernel drivers\r\n Support for building the DPDK as a shared library\r\n Support for multiple instances of the DPDK\r\n Multi-thread Kernel NIC Interface (KNI) for interaction with \r\nkernel",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/7596362c-2095-4f90-8f54-79e12ede490b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f2e8c3d549a1988c19a3500e61bbf1c3eb29e849dc9658f884c158158c5efcc2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "177b1c65-f32d-42f3-8f3d-f9cde746780c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 20,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nProcessor 0\r\nPhysical \r\nCore 0\r\nLinux* Control Plane\r\nNUMA\r\nPool Caches\r\nQueue/Rings\r\nBuffers\r\n10 GbE\r\n10 GbE\r\nPhysical\r\nCore 1\r\nDPDK\r\nPMD Packet I/O \r\nPacket work\r\nRx\r\nTx\r\nPhysical\r\nCore 2\r\nDPDK\r\nPMD Packet I/O \r\nFlow work\r\nRx\r\nTx\r\nPhysical\r\nCore 3\r\nDPDK\r\nPMD Packet I/O \r\nFlow \r\nClassification\r\nApp A, B, C\r\nRx\r\nTx\r\nPhysical\r\nCore 5\r\nDPDK\r\nPMD Packet I/O \r\nFlow Classification\r\nApp A, B, C\r\nRx\r\nTx\r\nRun to Completion model\r\n• I/O and Application workload can be handled on a single core\r\n• I/O can be scaled over multiple cores\r\nPCIe* connectivity and core usage\r\nUsing run-to-completion or pipeline software models\r\n10 GbE\r\nPipeline model\r\n• I/O application disperses packets to other cores\r\n• Application work performed on other cores\r\nProcessor 1\r\nPhysical \r\nCore 4\r\nDPDK\r\n10 GbE\r\nPhysical\r\nCore 5\r\nDPDK\r\nPhysical\r\nCore 0\r\nDPDK\r\nPMD Packet I/O \r\nHash\r\nPhysical\r\nCore 1\r\nDPDK App \r\nA\r\nApp \r\nB\r\nApp \r\nC\r\nPhysical\r\nCore 2\r\nDPDK App \r\nA\r\nApp \r\nB\r\nApp \r\nC\r\nPhysical\r\nCore 3\r\nDPDK\r\nRx\r\nTx\r\n10 GbE\r\nPkt Pkt\r\nPhysical\r\nCore 4\r\nDPDK\r\nPMD Packet I/O \r\nFlow Classification\r\nApp A, B, C\r\nRx\r\nTx\r\nPkt Pkt\r\nPkt Pkt\r\nPkt\r\nPkt\r\nRSS \r\nMode\r\nQPI\r\nPCIe PCIe PCIe\r\nPCIe PCIe\r\nNUMA\r\nPool Caches\r\nQueue/Rings\r\nBuffers\r\nLook at more I/O on \r\nfewer cores with \r\nvectorization",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/177b1c65-f32d-42f3-8f3d-f9cde746780c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8da375e1b8aae4948ab72331cd81dd3a3a26ce6cd78487fe2c09dbf60cad636",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 486
      },
      {
        "segments": [
          {
            "segment_id": "37dc759f-f0f2-4c81-9241-5e7ffe4820f8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 21,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nApplications will generally employ both models\r\nTechnical questions to consider:\r\n How many cycles/packet do I need for my algorithms? \r\n Are there large data structures that need to be shared\r\nwith read/write access across packets? \r\n Will I support timer / packet ordering functions? \r\n Can I take advantage of a specific optimization\r\nif you restrict an algorithm to one core?\r\n How much data would I need to exchange between\r\nsoftware modules?\r\nWhen to Choose Run-to-Completion vs. Pipeline",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/37dc759f-f0f2-4c81-9241-5e7ffe4820f8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=878dd2a1941fcae3d08b74b54c2506ffb4a08159d1010a643f0a107592e62854",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5fd6d7e2-7754-4177-a6be-c69cf44c7403",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 22,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nGeneral architecture questions to consider:\r\n Do some cores have easier/faster access to a hw resource?\r\n Do you want to view cores as offload engines? \r\nDevelopment environment questions to consider: \r\n Do you need to employ legacy software modules?\r\n Does ease-of-code-maintenance trump performance?\r\nMore Run-to-Completion vs. Pipeline… ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/5fd6d7e2-7754-4177-a6be-c69cf44c7403.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d53c77af1ba30c282f52935221805ac2eae09acd63a1e73f2cfeb80ad103e08b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ab588239-03bf-4193-9e1c-db55f8a3df2c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 23,
            "page_width": 720,
            "page_height": 540,
            "content": "NUMA\r\nNon Uniform Memory Access",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/ab588239-03bf-4193-9e1c-db55f8a3df2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b55b8ec800c488961ee3539b49abd84b4ea8040f821ebd26708586fab44987a1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f8187b1d-97b6-484d-894a-3761f74fd06b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 24,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nNon-Uniform Memory Access (NUMA)\r\nFSB architecture (legacy)\r\n All memory in one location\r\nStarting with Intel® Core™ microarchitecture (Nehalem)\r\n Memory located in multiple places\r\nLatency to memory dependent on location\r\nLocal memory\r\n Highest BW\r\n Lowest latency\r\nRemote Memory \r\n Higher latency\r\nIVB\r\nEP\r\nIVB\r\nEP\r\nEnsure software is NUMA-optimized for best performance\r\nPCH\r\nl",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/f8187b1d-97b6-484d-894a-3761f74fd06b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a62c0af32a5ed27ebaa8c34312263742b7136a29abbc73f9b4143fcf8339142d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "12f24716-bd6d-4e71-92d4-87e8ec3a019b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 25,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nNIC\r\nPCH\r\nCore 0\r\nI$ D$\r\nCore 1\r\nI$ D$\r\nL2 Cache\r\nCore 2\r\nI$ D$\r\nCore 3\r\nI$ D$\r\nL2 Cache\r\nrx_queue 0\r\nrx_queue 1\r\nrx_queue 3\r\nhash = (tcp->th_sport) ^\r\n(tcp->th_dport) ^\r\n(ip->ip_src.s_addr) ^\r\n(ip->ip_dst.s_addr);\r\nhash = hash % PRIME_NUMBER;\r\nreturn lookup_table[hash];\r\nDCA\r\nMemory\r\nMemory\r\nMemory\r\nMemory\r\nMemory\r\nMemory\r\nrx_queue 2\r\nPTU Metrics\r\n• MEM_UNCORE_RETIRED.REMOTE_DRAM\r\n• MEM_INSTRUCTIONS_RETIRED.LATENCY_ABOVE_THRESHOLD\r\nDMI\r\nPCIe\r\nQPI\r\nNUMA Considerations for Data Structure Allocation",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/12f24716-bd6d-4e71-92d4-87e8ec3a019b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9bc11a1ba4c7bceb63ea47c7e582c40430b941b9775615d40f23dad22fc4cdc3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2c49a0c5-37a6-42bf-a6ae-24ecfef4c69a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 26,
            "page_width": 720,
            "page_height": 540,
            "content": "Caching on Intel Architecture",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/2c49a0c5-37a6-42bf-a6ae-24ecfef4c69a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2a512eb4c6f08520e4d2655327c3b8df2148bc1d146f46ae939ce31a9d90734",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0db424ba-8c7c-479b-98de-b83554b997c6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 27,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nCaching on IA\r\n• IA Processors have cache integrated on processor die.\r\n• Fast access SRAM\r\n• Code & data from system memory (DRAM) stored in fast access cache \r\nmemory\r\n• Without a cache – CPU runs out of instructions from system memory\r\n• CPU Core “stalls” – waiting for data\r\n• Cache miss (data not in cache)\r\n• CPU needs to get data from system memory\r\n• Cache populated with required data\r\n• Not just the data required, but a block of info is copied\r\n• “Cache line” – 64 Bytes on IA (IVB, HSW etc.)\r\n• Cache hit – data present in cache",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/0db424ba-8c7c-479b-98de-b83554b997c6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=793dcca0470aa0448a3467fc1b02d868ae1730b94d5d0258154fe4a8b68099ee",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d60359b4-7836-43db-add3-fe3b16b1f33d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 28,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nCaching on IA\r\n•What can be cached?\r\n• Only DRAM can be cached\r\n• IO, MMIO never cached\r\n•L1 cache is smallest, and fastest.\r\n•L1 Code cache is read-only\r\n•Address residing in L1/L2 must be present in L3 cache – “inclusive cache”",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/d60359b4-7836-43db-add3-fe3b16b1f33d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bf1f6e124c240ab219c246106fb573577a8d703a4d4206527e2f791f00bd0247",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 428
      },
      {
        "segments": [
          {
            "segment_id": "a6d78df5-230d-4bd3-bc07-05560b73dc55",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 29,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n•TLBs – Translation Lookaside Buffers – 2 types\r\n• Instruction TLB\r\n• Data TLB\r\n•TLB is cache – maps virtual memory to physical memory\r\n• When memory requested by application, OS maps virtual address from \r\nprocess to physical address in memory\r\n• Mapping of virtual to physical memory – Page Table Entry (PTE)\r\n• TLB is a cache for the Page Table\r\n• If data is found in TLB during address lookup\r\n• TLB hit\r\n• Otherwise – TLB miss (page walk) - performance hit\r\n• Huge pages (Linux) – can alleviate\r\nTranslation Lookaside Buffers (TLBs)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/a6d78df5-230d-4bd3-bc07-05560b73dc55.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0204e133306dab1055acdbdf34b62f50f89825da98dc649d4a0e74998940649f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5f5df453-6392-4875-89f0-f3e9c314584a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 30,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nTranslation Lookaside Buffers (TLBs)\r\n• TLBs are a cache for page tables\r\n• If memory address lookup is not in TLB -> TLB miss\r\n• We must then “walk the page tables”\r\n• This is slow, and costly\r\n• We need to minimise TLB misses\r\n• Solution is to use huge pages\r\n• Use 2M or 1G huge pages instead of default 4k pages",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/5f5df453-6392-4875-89f0-f3e9c314584a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9ee8a66aa6c0d117b24d479024211515994886b38dae58a2103ce69fa83d59f5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1f92cf9f-1b6f-4cf2-a939-c9e8397b0b47",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 31,
            "page_width": 720,
            "page_height": 540,
            "content": "Huge pages",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/1f92cf9f-1b6f-4cf2-a939-c9e8397b0b47.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0bad229fc67d4e8ce8382cb5a2b22aeaf22a8a30a41d46a65f0a2396398417d9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3e4ee6dd-4487-4442-a3a3-74bfde531c68",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 32,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• All memory addresses virtual\r\n Memory appears contiguous to applications, even if physically \r\nfragmented\r\n• Map virtual address to physical address\r\n Use page tables to translate virtual address to physical address\r\n Default page size in Linux on IA is 4kb.\r\n 4 layers of page tables\r\nHuge Pages",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/3e4ee6dd-4487-4442-a3a3-74bfde531c68.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=62f41d8992737ef523c476e79afea0d1ef7a6d78630a55f4c8ea98fb8603aa4e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a79c997d-6850-4e53-8901-058fcd990c72",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 33,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n1\r\n2\r\nWhy Hugepages?\r\nDTLB:\r\n• 4K pages 64 entries, maps 256 KB, so to access 16G of memory 32MB of PTE tables read by CPU\r\n• 2M pages 32 entries, maps 64 MB, so to access 16G of memory 64Kb of PDE tables read by CPU, fits into CPU cache\r\nOne 2MB page = 512 of 4KB pages,\r\n512 less page cross penalties\r\nFour memory accesses to get \r\nto the page data\r\nThree memory accesses to get \r\nto the page data\r\nTLB maps page numbers to page frames. Each TLB miss requires page walk.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/a79c997d-6850-4e53-8901-058fcd990c72.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cb393a8d2e1358e098bdb1935c2ba9018354311db1b06d945aa590b7bc5266e4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "64ff43fd-6afe-42d7-adff-2a595d5440c7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 34,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• Use Linux hugepage support through “hugetlbfs” filesystem\r\n• Each page is 2MB in size equivalent to 512 4KB pages\r\n• Each page requires only 1 DTLB entry\r\n• Reduce DTLB misses, and therefore page walks\r\n• Gives improved performance\r\n• Need to enable & allocate huge pages with Linux boot command (in GRUB \r\nfile)\r\n Better to enable at boot time – prevents fragmentation in physical \r\nmemory\r\nHuge Pages",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/64ff43fd-6afe-42d7-adff-2a595d5440c7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2e4ec1b9ccdd7d8201987ecf5c98cc7a312a8afff494660f90ec77018dc89156",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "70d3e8f3-f949-4973-811b-6d12c6750bc7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 35,
            "page_width": 720,
            "page_height": 540,
            "content": "Memory Configuration\r\nDPDK",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/70d3e8f3-f949-4973-811b-6d12c6750bc7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=762c919682cb2b46d529218afd1ddb71052f8b8dfbbcdb817e73108ae26f6fb8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "31648e8d-c8af-416d-8bbf-99651ba8033c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 36,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• For DPDK application – allocated all memory from huge pages\r\n• Allocate all memory at initialisation time (not during run time).\r\n• Pools of buffers created.\r\n Buffers taken from pools as needed for packet processing\r\n Returned to pool after use\r\n Never need to use “malloc” at runtime.\r\n DPDK takes care of aligning memory to cache lines\r\nMemory allocation",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/31648e8d-c8af-416d-8bbf-99651ba8033c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7debfe1a730bd0733ac2facd0a8ed60888aded32d05e5f8acfe35abb5f0c3f9f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 462
      },
      {
        "segments": [
          {
            "segment_id": "4dc23b23-ad56-48fd-9dd8-b2ca4658ed46",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 37,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0 Memory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory Zone: \r\nMALLOC_HEAP0\r\nMalloc heap\r\nMemory Object Hierarchy",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/4dc23b23-ad56-48fd-9dd8-b2ca4658ed46.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4cca4bfb64cb78135ee438414c4f7e583e32e4b911e8c6241e82bff41418930d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e46dbaab-e0df-480b-bdc1-010d5154ffec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 38,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nHugepages\r\n• Use Linux hugepage support through “hugetlbfs” filesystem\r\n• Each page is 2MB in size equivalent to 512 4KB pages\r\n• Each page requires only 1 DTLB entry\r\n• Reduce DTLB misses, and therefore page walks\r\n• Gives improved performance\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0\r\nMemory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory \r\nZone: \r\nMALLOC_HEAP\r\n0\r\nMalloc heap",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/e46dbaab-e0df-480b-bdc1-010d5154ffec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1895fc16d59597d2bd43434b65f12ba4b7f887a8754bb58fe8500d9a57f231b7",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5de4afb7-5a4d-45de-bbac-39138b834a36",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 39,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Segments\r\n• Internal unit for memory management is the memory segment\r\n• Always backed by Huge Page (2 MB/1 GB page) memory\r\n• Each segment is contiguous in physical and virtual memory\r\n• Broken out into smaller memory zones for individual objects\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0\r\nMemory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory \r\nZone: \r\nMALLOC_HEAP\r\n0\r\nMalloc heap",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/5de4afb7-5a4d-45de-bbac-39138b834a36.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c8540acbaeaea9fccecbee33da9341354c87824daa59b8899ba86d668435b939",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "74466104-e8dd-4d6e-a3ac-1351d1a64cbe",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 40,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Zones\r\n• Most basic unit of memory allocation – named block of memory\r\n• Allocate-only, cannot free\r\n• Cannot span a segment boundary – contiguous memory\r\n• Physical address of allocated block available to caller\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0\r\nMemory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory Zone: \r\nMALLOC_HEAP0\r\nMalloc heap",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/74466104-e8dd-4d6e-a3ac-1351d1a64cbe.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ac6dcb0690d45f7196c0faf8806e25ea60aea4bf936080e5f36cbc3342c3b38",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 401
      },
      {
        "segments": [
          {
            "segment_id": "c37c9ee5-9708-4278-8b12-3782e2d8267d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 41,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMalloc support – rte_malloc/rte_free\r\n• Malloc library provided to allow easier application porting\r\n• Backed by one or more memzones\r\n• Uses hugepage memory, but supports memory freeing\r\n• Not lock-free – avoid in data path\r\n• Physical address information not available per-allocation\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0\r\nMemory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory \r\nZone: \r\nMALLOC_HEAP\r\n0\r\nMalloc heap",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/c37c9ee5-9708-4278-8b12-3782e2d8267d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1f69a35ff3c7f2ef3873ecd9a06dc112d71ac2854edcbfa6610ebe1df157113",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "93809ac0-25d7-4679-99ba-1c893a53812a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 42,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Pools\r\n• Pool of fixed-size buffers\r\n• One pool can be safely shared among many threads\r\n• Lock-free allocation and freeing of buffers to/from pool\r\n• Designed for fast-path use\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nMemory Segment 0 Memory Segment 1 Memory Segment N\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\n2MB\r\npage\r\nPhysically\r\ncontiguous memory\r\nPhysically \r\ncontiguous memory\r\nMemory \r\nZone: \r\nRG_RX_RING_0\r\nMemory Zone: MP_mbuf_pool\r\nMemory \r\nZone: \r\nRG_TX_RING_0\r\nRing:\r\nRX_RING_0\r\nRing:\r\nTX_RING_0\r\nMemory Pool: mbuf_pool\r\nMemory \r\nZone: \r\nMALLOC_HEAP\r\n0\r\nMalloc heap",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/93809ac0-25d7-4679-99ba-1c893a53812a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3055d15282ed2a10d76c24363aa4e41faba26fffed904ade0f4a0b91dfdbd318",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9750b302-9d57-4020-aa22-524e5970cf6c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 43,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Pools (continued)\r\nMemory Pool\r\nPkt Buffers \r\n(60K 2K \r\nbuffers)\r\nEvents\r\n(2K 100B \r\nbuffers)\r\nEvents\r\n(2K 100B \r\nbuffers)\r\nProcessor 0\r\n10G\r\nDPDK\r\nC4\r\nData \r\nPlane\r\nDPDK\r\nC3\r\nData \r\nPlane\r\nDPDK\r\nC2\r\nData \r\nPlane\r\nDPDK\r\nC1\r\nData \r\nPlane\r\n10G\r\nPer-core \r\ncached \r\nbuffers\r\n• Size fixed at creation time:\r\n• Fixed size elements\r\n• Fixed number of elements\r\n• Multi-producer / multi-consumer safe\r\n• Safe for fast-path use\r\n• Typical usage is packet buffers\r\n• Optimized for performance:\r\n• No locking, use CAS instructions\r\n• All objects cache aligned\r\n• Per core caches to minimise contention / use \r\nof CAS instructions\r\n• Support for bulk allocation / freeing of buffers",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/9750b302-9d57-4020-aa22-524e5970cf6c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5097f2d5b7190f3f1b94db9aea937d186ecd993a5e57a39ebe773f61fdb86891",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "cd2237c0-a4af-4421-b0cf-d442d2c86e31",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 44,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\n• rte_eal_init()\r\n Initialises Environment Abstraction Layer\r\n Takes care of allocating memory from huge pages\r\n• rte_mempool_create()\r\n Create pool of message buffers (mbufs)\r\n This pool is used to hold packet data\r\n mbufs taken from and returned to this pool\r\nMemory allocation",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/cd2237c0-a4af-4421-b0cf-d442d2c86e31.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4c1b930928c605b16c7fb893577b17d0a1d69bd9650e912941a5f77e2f4b81d5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6525ffdd-1f39-4749-8415-69707f23f811",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 45,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Buffer - mbuf\r\nMemory buffer structure used throughout DPDK\r\nHeader holds meta-data about packet and buffer\r\n Buffer & packet length\r\n Buffer physical address\r\n RSS hash or flow director filter information\r\n Offload flags\r\nBody holds packet data plus room for additional headers and footers.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/6525ffdd-1f39-4749-8415-69707f23f811.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f8efa245a776344b0130cebed19e574f908aae149e13d2d65b9b2b18f5ea6056",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e924bb08-802d-4487-b8c1-1261bc521f23",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 46,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nMemory Buffer – chained mbuf\r\nMbufs generally used with memory pools\r\nSize of mbuf fixed when the mempool is created\r\nFor packets too big for a single mbuf, the mbufs can be linked together in an \r\n“mbuf chain”",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/e924bb08-802d-4487-b8c1-1261bc521f23.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9f003f59a1bd28b7657ae1fa36090f7bda83c8760f96f336c2c1c91cc85a5527",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 465
      },
      {
        "segments": [
          {
            "segment_id": "8a6b9d43-d6c0-40e5-869d-9343ec79b4b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 47,
            "page_width": 720,
            "page_height": 540,
            "content": "Network Platforms Group\r\nDPDK version 2.1 currently available on www.dpdk.org\r\nSome of the new Features in 2.1:\r\nWatch out for:\r\n• DPDK 2.2 Coming November 2015 \r\n• Further BrightTalks in this series on DPDK\r\n• DPDK Userspace 2015 Summit – Dublin, Ireland – October 8-9th 2015\r\nDPDK Versions\r\n Cuckoo Hash + Updated Jhash.\r\n IEEE1588 Support\r\n PCI Hot Plug – PMD Support\r\no e1000 hotplug\r\no ixgbe hotplug\r\no i40e hotplug\r\no fm10k hotplug\r\n Packet Framework Enhancements\r\no New configuration file syntax\r\no New implementation of pass-through \r\npipeline, firewall pipeline, routing \r\npipeline, and flow classification\r\no Master pipeline with CLI interface\r\n I40e: Mirroring Rule\r\n I40e: Double VLAN Strip/Insert\r\n I40e: Unified Packet Type\r\n I40e Flow Director (L2_payload Type and VF Filtering)\r\n VXLAN Offload Sample Application\r\n Extended NIC statistics\r\n Dynamic Memzone\r\n Red Rock Canyon (FM10K) Features \r\no fm10k promiscuous\r\no mac vlan filtering,\r\no Tx checksum offload)\r\n Interrupt Mode\r\n Cisco Ethtool (excl. sample app)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/8a6b9d43-d6c0-40e5-869d-9343ec79b4b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=895f2744f2124220ad1932e4e8e741495de359e88ed14d7f70722d2b0376fe90",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "15cca917-4678-4ded-bf71-4f5cf56696c8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 48,
            "page_width": 720,
            "page_height": 540,
            "content": "",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/e4f9ff2c-f1fe-4bf9-8e88-9d0fbf843ca8/images/15cca917-4678-4ded-bf71-4f5cf56696c8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041739Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=05cdcf225983f54232b8c09ec4b3128a6f3698af0f0a23ea4d1eda6e0db92ed0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 165
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "Data Plane Development Kit (DPDK)\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "Network Platforms Group\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "September 2015\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "U.S. and/or other countries.\nDublin, Ireland"
        }
      ]
    }
  }
}