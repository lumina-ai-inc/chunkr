{
  "file_name": "Intel AVX-512 Instructions and Their Use in the Implementation of Math Functions - Slides (s1-cornea).pdf",
  "task_id": "f4cf83de-6b88-4b5b-892f-687ccfafe9d4",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "f1e32311-cc3a-430e-b4b6-65805beb90b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 1,
            "page_width": 720,
            "page_height": 540,
            "content": "Intel® AVX-512 Instructions and Their \r\nUse in the Implementation of Math \r\nFunctions \r\nMarius Cornea, Intel Corporation",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/f1e32311-cc3a-430e-b4b6-65805beb90b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d05101ef68c9d7a2432e85d9e7ffcf7814848d6024ed7e2eaa7d8ef4fc838650",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3d78094a-953c-431a-a933-ad6a49db7547",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 2,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nIntel SIMD ISA Evolution\r\nP4\r\n(Prescott,\r\n2004)\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nCore\r\n(Merom,\r\n2006)\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nPIII\r\n(Katmai,\r\n1999)\r\nMMX\r\nSSE\r\nP4\r\n(Willamette,\r\n2000)\r\nMMX\r\nSSE\r\nSSE2\r\nPII\r\n(Klamath,\r\n1997)\r\nMMX\r\nCore\r\n(Penryn,\r\n2007)\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nCore\r\n(Nehalem,\r\n2008)\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nSSE4.1 SSE4.1\r\nSSE4.2\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nSSE4.1\r\nSSE4.2\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nSSE4.1\r\nSSE4.2\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nSSE4.1\r\nSSE4.2\r\nMMX\r\nSSE\r\nSSE2\r\nSSE3\r\nSSSE3\r\nSSE4.1\r\nSSE4.2\r\nAVX\r\nAVX2\r\nAVX512F\r\nAVX\r\nAVX2\r\nAVX512F\r\nAVX512 \r\nDQ/BW/VL\r\nAVX AVX\r\nAVX2\r\nCore \r\n(Sky Lake)\r\nCore\r\n(Haswell,\r\n2013)\r\nXeon Phi™\r\n(Knights\r\nLanding)\r\nCore\r\n(Sandy \r\nBridge,\r\n2011)\r\n64b \r\nSIMD\r\n128b \r\nSIMD\r\n256b \r\nSIMD\r\n512b \r\nSIMD\r\nIntel Restricted Secret\r\n2\r\nSIMD extensions on top of x86/x87\r\nAVX512 \r\nER/CD",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/3d78094a-953c-431a-a933-ad6a49db7547.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dc69f4755aa2648bd05e7ca57c41865dc3e323a44660cbc6d29fba62e335a5d4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b08855cc-e6e3-48c1-91d1-1271d9ce8626",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 3,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nNew Features Supporting Math Functions \r\nin AVX512F, AVX512DQ, and AVX512ER\r\nStatic Rounding and Exception Suppression Controls\r\nReciprocal/Reciprocal Square Root Approximations, 14-Bit: VRCP14, VRSQRT14\r\nReciprocal/Reciprocal Square Root Approximations, 28-Bit: VRCP28, VRSQRT28\r\nExponential Approximations: VEXP2\r\nNew Permute Instructions: VPERM, VPERMI2\r\nInstructions to Extract Exponent, Mantissa Fields: VGETEXP, VGETMANT\r\nInstruction to Scale FP values by Power of 2: VSCALEF\r\nInstruction to Round to Given Number of Fraction Bits: VRNDSCALE\r\nInstruction to Extract Reduced Argument: VREDUCE\r\nInstruction to Test FP Input Type: VFPCLASS\r\nInstruction to Fix Up Special FP Values: VFIXUPIMM\r\nRange Restriction Calculation Instruction: VRANGE\r\n3",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/b08855cc-e6e3-48c1-91d1-1271d9ce8626.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=29de2728591cae9f84084371b54251795e380230ebb23c2a6331469f60ea62a5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c1b8bd3e-973f-4a9f-a2bd-cd382b69f318",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 4,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nWhere To Use These New Instructions?\r\nNewton-Raphson Iterations for inverse, division, and square root (they are \r\nself-correcting , and have a fast convergence rate)\r\n Start with an initial approximation of the inverse r (or inverse of the square \r\nroot)\r\n Iterate using FMA (might need extended precision or extra exponent bits or \r\nrange reduction to avoid potential underflow/overflow/loss of precision):\r\ne = (1 – x × r)rn\r\nr' = (r + e × r)rn\r\n Stop when the error requirement is met\r\nTable Driven Algorithms \r\n From the input argument x, deduce variable y belonging to a much smaller \r\ndomain, such that f(x) can easily be calculated from f(y)\r\n For example, to compute exponential functions, decompose\r\nx = x’ + (x-x’) = round(x’) + (x’ – round(x’)) + (x-x’)\r\nwhere x’ is x rounded to a given number of fraction bits and \r\ny = (x-x’)\r\n Calculate f(y) with a low-degree polynomial\r\n Reconstruct f(x) from f(y); this may involve a table look-up\r\n4",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/c1b8bd3e-973f-4a9f-a2bd-cd382b69f318.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=76cdbb82ca384684eba194a2803d9376caa043ce194cf6b7e84a8ad282e637fe",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 467
      },
      {
        "segments": [
          {
            "segment_id": "9cf29c45-8738-4a3d-bc3a-4de349c80e1c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 5,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nStatic Rounding and \r\nException Suppression Controls\r\nStatic (per instruction) rounding: a rounding attribute in the EVEX \r\ninstruction prefix can override the MXCSR rounding mode\r\nStatic rounding also implies exception suppression (SAE) – they are \r\nlinked together in the instruction encoding; behavior: as if all FP \r\nexceptions are disabled, and no status flags are set\r\nStatic rounding enables better accuracy control in intermediate steps\r\n E.g. the RN mode is used in intermediate steps for SW division and SW square root \r\nfor extra precision; the default MXCSR rounding mode is used in the last step\r\n The LSB matters e.g. in range reduction for trigonometric functions and other \r\ncases\r\nThe SAE mode is useful when correct IEEE FP status flag settings are \r\nneeded\r\n Special cases can execute silently in the main path\r\n The precision flag can be set correctly in SW sequences such as division, square \r\nroot\r\n5",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/9cf29c45-8738-4a3d-bc3a-4de349c80e1c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cd9642f4c49cc09de69f185c11ad403803174e2c538e92413a214800861fee14",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f5832c99-4789-4556-9379-2c4d8d5a9b04",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 6,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nNew Reciprocal/Reciprocal Square Root \r\nApproximation Instructions\r\nVRCP14PS/PD, VRSQRT14PS/PD\r\n 14-bit accuracy – e.g. eliminates one NR iteration for double precision (DP) \r\ncalculations\r\n DP instruction is available - no more conversions needed between SP and DP\r\n512-bit SW division and square root implementations can have \r\nup to 2X better throughput than the HW instructions (but HW \r\ninstructions have better latency) \r\nShort RCP/RSQRT approximations can be used also in many \r\ntranscendental function implementations\r\n E.g. in logarithm and inverse trigonometric function implementations\r\nVRCP28PS/PD, VRSQRT28PS/PD\r\nVEXP2PS/PD\r\n6",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/f5832c99-4789-4556-9379-2c4d8d5a9b04.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=40d0a738b0386d5518ef6d23f4b5d6024eb399569766aa66635605c7598c1b7d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d5122f71-fc1d-4856-b94d-143c122f0e34",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 7,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nEvolution of Reciprocal Approximations\r\nTrans11\r\n(RCPPS,RSQRTPS)\r\n14-Bit\r\n(RCP14PD, RSQRT14PS,…)\r\n28-Bit\r\n(RCP28PD, RSQRT28PS,…)\r\nAVX512F\r\nAVX512ER\r\n• Relative error: 2-11\r\n•\r\n SP only\r\n• Does not handle denormals\r\n• Does not report exceptions\r\n• Relative error: 2-14\r\n•\r\n SP and DP\r\n• Handles denormals\r\n• Does not report exceptions\r\n• Saves one NR iteration\r\n• Relative error: 2-28 (*)\r\n•\r\n SP and DP\r\n• Does not handle denormals\r\n• Reports exceptions\r\n• Saves two NR iterations\r\n(*) The Binary32 format precision is of only 24 bits (less than 28). After rounding, the final error\r\nends up in the range of ~ 2-23.4xxxx , very close to being IEEE correctly-rounded\r\n7\r\n11-Bit SSE (RCPPS,RSQRTPS)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/d5122f71-fc1d-4856-b94d-143c122f0e34.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5d5d3352a783ac162d756f594686310fc04694fcb2f037a547a779f4b1b5bfc1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 411
      },
      {
        "segments": [
          {
            "segment_id": "7d1ab2ea-c342-41c5-a6a5-940a9f47f5aa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 8,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nNew Permute Instructions\r\nPermute instructions can be used in place of vector gather, e.g. for small \r\nlookup tables\r\nVPERMI2PS/PD, VPERMT2PS/PD\r\n VPERMI2PS zmm1, zmm2, zmm3\r\n Permute single-precision FP values from two tables in zmm3 and zmm2 using the indices \r\nin zmm1 and store the result in zmm1\r\n VPERMT2PS zmm1, zmm2, zmm3 (overwrites one table)\r\n Permute single-precision FP values from two tables in zmm3 and zmm1 using indices in \r\nzmm2 and store the result in zmm1\r\n Useful for 32-element lookup (SP), or 16-element lookup (DP)\r\nVPERMPS/PD\r\n VPERMPS zmm1, zmm2, zmm3\r\n Permute single-precision floating-point values in zmm3 using indices in zmm2 and store \r\nthe result in zmm1\r\n Useful for16-element lookup (SP), 8-element lookup (DP)\r\nCompared to designs using vector gather for table lookup, \r\nimplementations using smaller lookup tables (permutes) and somewhat \r\nlonger polynomials can achieve ~2X better throughput\r\n8",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/7d1ab2ea-c342-41c5-a6a5-940a9f47f5aa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1c0eedd2aea86fb1de9fad1d1134bdd7fda379e305afde9be35e289565b27925",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4078532c-6757-44f6-8675-69c25ffc1dc4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 9,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nExtract Exponent, Mantissa Fields\r\nVGETEXPPS/PD dst, src \r\n VGETEXPPD zmm1, zmm2{sae}\r\n Convert the exponent of the packed double-precision floating-point \r\nvalues in the source operand to DP FP results representing the unbiased \r\ninteger exponents, and store the results in the destination\r\n dst = floor(log2(|src|)\r\nVGETMANTPS/PD dst, src, imm8\r\n src mantissa is normalized to one of 4 possible ranges: [1,2), [1/2,2), [1/2,1), \r\nor [3/4,3/2); the range is specified by imm8[1:0]\r\n imm8[3:2] is used to control the output sign (same sign, or positive), and \r\noptionally to trigger the Invalid exception if src<0 (useful e.g. for log, sqrt)\r\nFacilitates efficient, branch-free implementations, because \r\ndenormals and other special arguments are processed on the \r\nmain path, at no extra cost\r\n9",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/4078532c-6757-44f6-8675-69c25ffc1dc4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2481f8fe1ed368584b3d30d3f7f9740b9df62df69e48a80706649b38dc6da1cf",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d217e337-d31e-435c-b753-2a2367dc1a30",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 10,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nExample: Logarithm Function\r\nIf x = 2\r\nN × mx, where mx is the mantissa (significand), then\r\nlog2(x) = N + log2(mx) = N + log2(1+r)\r\nlog(x) = N × log(2.0) + log(mx) = N × log(2.0) + log(1+r) \r\nN and mx are computed using VGETEXP and VGETMANT, with\r\nr = mx - 1\r\nlog2(1+r) can be approximated with a piecewise polynomial \r\n(without a constant term)\r\n10",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/d217e337-d31e-435c-b753-2a2367dc1a30.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=33a8100daec93c42cc5381ec33bdce3c1daf89430a8ab62d1216b9dd89e8ce3c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 396
      },
      {
        "segments": [
          {
            "segment_id": "75e44519-4ac2-4d83-bb28-3aece3ee72d5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 11,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nScale by a Power of 2\r\nVSCALEFPS/PD dst, src1, src2\r\n VSCALEFPS zmm1, zmm2, zmm3\r\n Scale the packed single/double precision floating-point values in zmm2 \r\n(src1) using floating-point values from zmm3 (src2)\r\n dst = src1 × 2\r\nfloor(src2)\r\n Accepts all FP operands and covers special cases (Inf, NaN), eliminating the \r\nneed for other fix-up steps\r\nCan be used e.g. to improve the exp function throughput: no \r\nneed to extract the exponent k separately and to form 2K\r\n Replace the final scaling in the exp implementation with VSCALEF\r\n Facilitates branch-free implementations (for up to 1 ulp accuracy level, \r\nincluding gradual underflow results)\r\n No effect on exp latency\r\nVSCALEF can also be used e.g. in a branch-free implementation \r\nof cbrt, or in SW division and square root\r\n11",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/75e44519-4ac2-4d83-bb28-3aece3ee72d5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9921cb1db775a30eebfda92fe5f821a8b5df278d81a5c53decbfe928d5489569",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "721e8eef-a6cf-4674-9bf5-c8e5fb0dc2e5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 12,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nExample: SW Division\r\nBranch-free implementation of division:\r\nx = 2\r\nVGETEXP(x) * VGETMANT(x, 0), where VGETMANT(x,0) \r\nnormalizes x to [1,2), and transfers the sign of src to dst\r\na/b = VSCALEF( VGETMANT(a,0) / VGETMANT(b,0), \r\nVGETEXP(a) - VGETEXP(b))\r\nwhere VGETMANT(a,0) / VGETMANT(b,0) can be calculated with a \r\nNR-iteration, without possible overflow, underflow, or loss of \r\nprecision in the intermediate steps\r\nSpecial cases (0, Inf, NAN) are also handled by VSCALEF\r\n12",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/721e8eef-a6cf-4674-9bf5-c8e5fb0dc2e5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d137a8dc13e95b67a7b7273ad6608f74792fe42cc26a6ebc52aee92db226c397",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1e009dd5-0156-4175-808a-af79e85d23f1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 13,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nRound to a Given Number of Fraction Bits\r\nVRNDSCALEPS/PD dst, src, imm8\r\n VRNDSCALEPD zmm1, zmm2{sae}, imm8\r\n Rounds the packed double-precision FP values in zmm2 to a number of \r\nfraction bits specified by the imm8 field. Stores the result in zmm1 \r\n ROUNDSCALE(x) = 2-M*Round_to_INT(x*2M, round_ctrl), \r\nwhere round_ctrl = imm8[3:0] & M=imm8[7:4] - an integer M in 0 …15\r\n round_ctrl = imm8[3:0] are the same as for VROUND:\r\n bit 3 – Suppress Precision Exception\r\n bit 2 chooses the rounding control from either MXCSR or imm8\r\n bits 1,0 are the rounding control override (RN, RD, RU, or RZ)\r\n dst = 2-M* VROUND(src × 2M, imm8[3:0])\r\n There is no overflow/underflow\r\nCan help in reducing the latency of some transcendental function \r\nimplementations, e.g. in the exp2 argument reduction step\r\nCan also help eliminate a MUL from some sequences\r\n13",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/1e009dd5-0156-4175-808a-af79e85d23f1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0fccb25a9a2cfcc88a9bd7c0651f5f4f74de91cfdbebeb87243b1067ad02ffa8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 410
      },
      {
        "segments": [
          {
            "segment_id": "9f59f60f-b985-42b5-9038-06c429521f52",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 14,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nExtract the Reduced Argument\r\nVREDUCEPS/PD dst, src, imm8\r\n VREDUCEPS zmm1, zmm2{sae}, imm8\r\n Subtracts the integer part and the leading M fractional bits from \r\nthe binary FP source value, where M is an unsigned integer \r\nspecified by imm8[7:4]; i.e. it performs a reduction transformation \r\non the packed single precision floating-point values in zmm2. \r\nStores the result in zmm1 register \r\n dst = src – VRNDSCALE(src, imm8) = src – (ROUND(2M*src))*2\r\n-M\r\n ROUND() treats src, 2M, and their product as binary FP numbers \r\nwith normalized significand and biased exponents\r\n If src= 2p*m, where m is the normalized significand and p is the \r\nunbiased exponent, then for RN 0<=|dst|<=2p-M-1, and for other \r\nrounding modes 0<=|dst|<=2p-M\r\nHelps reduce computation latency \r\nUsage examples: exp2, atan\r\n14",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/9f59f60f-b985-42b5-9038-06c429521f52.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d4824d2a3e837cb0e5e7f1db9739869f45096458b90b0c5cc0abaf23ed5120c8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b1843cc9-a75c-48de-a87b-f0b860c6818a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 15,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nTest Floating-Point Input Type\r\nVFPCLASSPS/PD mask_dst, src, imm8\r\n Set mask if input is in the specified combination of these classes: \r\nQNaN, Neg, Denorm, -Inf, +Inf, -0, +0, SNaN\r\n One imm8 bit is reserved for each input class listed\r\n Set the imm8 bits for the input classes to be tested\r\nHelps filter out special cases for branching, or for setting \r\nspecial results (under mask)\r\n vector masks make it easier to treat special inputs in a branch-free \r\nmanner, even without a FIXUP instruction\r\n15",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/b1843cc9-a75c-48de-a87b-f0b860c6818a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=50840f332a8d2a67221633a748d9fff1828cafd66ff887f0cc8a351815fb5eb2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "37db9f38-c458-43b3-8ce3-21a88ffe6235",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 16,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nFix Up Special Values\r\nVFIXUPIMMPD/PS dst, src, tbl32, imm8\r\n tbl32 is a 32-bit table storing the desired response for each of 8 possible \r\ninput types: QNaN, SNaN, Zero, One, -Inf, +Inf, Negative, Positive (not 0 or 1)\r\n There are 16 possible responses (including that of leaving the destination \r\nregister unmodified)\r\n The type of the input is checked, and then tbl32 is accessed to determine the \r\noutput, based on the input type\r\n Invalid or Divide-by-Zero exceptions are raised for certain input types, if \r\nspecified by the imm8 value \r\nCan be used at the end of a computation, to set special results \r\naccording to standard specification (e.g. IEEE, DX10)\r\n16",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/37db9f38-c458-43b3-8ce3-21a88ffe6235.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=20612085294e76fca102ad9a36fff81b5198623cb2d916480c94b527450db2e5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "42b97ac7-21fb-439d-8315-150ccb42f9c9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 17,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nRange Calculation\r\nVRANGEPS/PD dst, src1, src2, imm8\r\n Computes min, max, minabs, or maxabs values according to the IEEE \r\nstandard 754-2008\r\n imm8[1:0] selects one of four functions\r\n imm8[3:2] used to select desired sign of the result\r\nCan be used e.g. at the beginning of a Fast2Sum algorithm \r\n(need a > b) \r\ns = (a + b)\r\nrn\r\nz = (s − a)\r\nrn\r\nt = (b − z)\r\nrn\r\n17",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/42b97ac7-21fb-439d-8315-150ccb42f9c9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bdf5883fa5429e5cedb987ec8c1dd1cf879481c1449ca2aeb65fef5b715ebbc1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "46ca3e02-b1c6-42af-ba79-e0c92bef9eb8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 18,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\n• https://software.intel.com/sites/default/files/managed/0d/53/\r\n319433-022.pdf\r\n• http://www.intel.com/products/processor/manuals/\r\n18\r\nReferences",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/46ca3e02-b1c6-42af-ba79-e0c92bef9eb8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8b77a0b860042dfb55d118b0186dfcda87bbeca165755d3d7969bdb862fbe221",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 512
      },
      {
        "segments": [
          {
            "segment_id": "c87f04bd-331c-4efa-a0da-5bac989b4e71",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 19,
            "page_width": 720,
            "page_height": 540,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. *Other names and brands may be claimed as the property of others. Optimization Notice\r\nLegal Disclaimer & Optimization Notice\r\nINFORMATION IN THIS DOCUMENT IS PROVIDED “AS IS”. NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR \r\nOTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. INTEL ASSUMES NO \r\nLIABILITY WHATSOEVER AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO THIS \r\nINFORMATION INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, \r\nMERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.\r\nSoftware and workloads used in performance tests may have been optimized for performance only on Intel \r\nmicroprocessors. Performance tests, such as SYSmark and MobileMark, are measured using specific computer \r\nsystems, components, software, operations and functions. Any change to any of those factors may cause the results \r\nto vary. You should consult other information and performance tests to assist you in fully evaluating your \r\ncontemplated purchases, including the performance of that product when combined with other products. \r\nCopyright © 2015, Intel Corporation. All rights reserved. Intel, Pentium, Xeon, Xeon Phi, Core, VTune, Cilk, and the Intel \r\nlogo are trademarks of Intel Corporation in the U.S. and other countries.\r\nOptimization Notice\r\nIntel’s compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that \r\nare not unique to Intel microprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and \r\nother optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on \r\nmicroprocessors not manufactured by Intel. Microprocessor-dependent optimizations in this product are intended \r\nfor use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture are reserved for Intel \r\nmicroprocessors. Please refer to the applicable product User and Reference Guides for more information regarding \r\nthe specific instruction sets covered by this notice.\r\nNotice revision #20110804\r\n19",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/c87f04bd-331c-4efa-a0da-5bac989b4e71.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2660f07f20d43628652daac573da2f0532171bba6ccaad88253dcc3000c67413",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "30b88c8c-38bd-49de-86de-101d0dee63de",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 720,
              "height": 540
            },
            "page_number": 20,
            "page_width": 720,
            "page_height": 540,
            "content": "",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f4cf83de-6b88-4b5b-892f-687ccfafe9d4/images/30b88c8c-38bd-49de-86de-101d0dee63de.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042320Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fc6600b4834d52a49be399deabc2b115d59607a24413c3a95f4f77086bafa71e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 306
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "Intel® AVX-512 Instructions and Their Use in the Implementation of Math Functions\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "Marius Cornea, Intel Corporation\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "2015\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "Intel Corporation"
        }
      ]
    }
  }
}