{
  "file_name": "Intel - PMU Sharing Guidelines (30388).pdf",
  "task_id": "f6b43926-22a6-4c07-8762-6ffdc86b51f2",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "7d1abb40-6c12-4f6e-b02f-6627051df34a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 1,
            "page_width": 612,
            "page_height": 792,
            "content": "White Paper \r\nPerformance Monitoring Unit Sharing Guide \r\nPeggy Irelan and Shihjong Kuo ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/7d1abb40-6c12-4f6e-b02f-6627051df34a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=70d0935d6292fd63f0816f037c5cc1c82b4f8659c2463b0d43b2ea2f643d5fc5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a26b2286-b6bd-4052-9485-3e30b8666444",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 2,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nTable of Contents \r\n1. About this document ................................................................................................................................... 4 \r\n2. Programmer’s Reference Manual Volume 3B and these Guidelines ....................................... 5 \r\n3. Sharing guidelines ........................................................................................................................................ 7 \r\n4. Appendix – MSR Definition(s) ................................................................................................................... 9 \r\nAcknowledgements\r\nThis material has been reviewed and updated in coordination with ecosystem OEMs, OSVs, \r\nVMVs, ISVs and Tool providers. \r\nThanks to all the technical contributors and facilitators for supporting the breath of the \r\nreviews. \r\nA special thanks to VMware* for raising attention to this issue and the impact to the \r\necosystem, and for providing the motivation to start the development of these guidelines. \r\n* Other names and brands may be claimed as the property of others",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/a26b2286-b6bd-4052-9485-3e30b8666444.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dac18dffa58f5c298f43c05de51bc8152a76fc8d3202ca8f6f741346a6566cae",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 123
      },
      {
        "segments": [
          {
            "segment_id": "91592d5c-a07a-4ae6-9fd1-5da4e38c0df0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 3,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nTerms \r\nTerm Definition \r\nPerfMon \r\nShort for Performance Monitoring. The term used for the current \r\ncollective monitoring hardware resources e.g. counter/controls etc \r\nsupported on Intel platforms.\r\nPMU \r\nThe Performance Monitoring Unit of processors supporting Intel® 64 and \r\nIA-32 architectures. Generally, it consists of collections of MSRs. The \r\ncollection of MSRs include counter registers, event programming MSRs, \r\nglobal event control MSRs. PMUs of older processors are model-specific; \r\nPMU interfaces in more recent processors are evolving towards higher \r\ndegrees of architectural stability. \r\nMSR \r\nModel Specific Register. PMU counter and counter control registers are \r\nimplemented as MSR registers. They are accessed via the RDMSR and \r\nWRMSR instruction. Certain counter registers can be accessed via the \r\nRDPMC instruction. As defined in Volume 2B of the Programmer’s \r\nReference Manual. RDPMC is available to software at any privilege level; \r\nRDMSR and WRMSR are available only to software running at ring 0. \r\nPEBS \r\nPrecise Event Based Sampling. A special counting mode in which \r\ncounters can be configured to overflow, interrupt the processor, and \r\ncapture machine state at that point. \r\nCPL and Ring Level \r\nIntel processors operate in privilege levels zero through three. Typically \r\noperating system code executes in privilege level 0. User (or privilege \r\nlevels 1, 2, or 3) refers to less privileged states of execution. User code \r\ntypically executes at privilege level 3. \r\nIn-use \r\nDefines a software convention between software agent’s interactions\r\nwith PMU hardware with respect to the subscription of PMU hardware. A \r\nset of PMU hardware (a counter control register, associated counter MSR, \r\nor feature) is “in-use” if conditions described in the guidelines section of \r\nthis document are met. \r\nAgent \r\nShort for PMU agent. A PMU agent is a privileged software process that \r\nreads and writes to PMU hardware. Specifically, it could be any one of the \r\nfollowing: \r\nFirmware (BIOS), OS, hosted VMM, Performance Monitoring tools, ISR, or \r\nany other ring 0 software. \r\nFirst-use Agent A PMU agent that discovers a set of PMU hardware was not in-use and \r\nprograms that piece of PMU hardware to in-use state. \r\nISR Interrupt Service Routine.\r\nPMI \r\nPerformance Monitoring Interrupt. This interrupt is generated when a \r\ncounter overflows and has been programmed to generate an interrupt, or \r\nwhen the PEBS interrupt threshold has been reached. \r\nThe interrupt vector for this interrupt is controlled through the Local \r\nVector Table in the Local APIC. \r\nVMX Virtual Machine eXtensions. Hardware extensions provided to enable x86 \r\nhardware virtualization. \r\nSMM System Management Mode.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/91592d5c-a07a-4ae6-9fd1-5da4e38c0df0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=873eb53fe69b6409779e5be83258bf384a2a4b96ac525e5893f71b2281611061",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 402
      },
      {
        "segments": [
          {
            "segment_id": "ebca8e61-9acc-4b11-b7fa-bfcff1c5b1c8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 4,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\n About this document \r\nUntil fairly recently, the performance monitoring unit (PMU) of Intel® processors employed \r\nmodel-specific programming interfaces and required unique treatment by performance\u0002monitoring users or software agents. \r\nIn order to facilitate simpler development and maintenance of performance monitoring \r\ntools, Intel has begun the transition to create an architecturally-defined approach for \r\nsoftware agents to interacting with the PMU. This approach is known as \"architectural \r\nPerformance Monitoring (PerfMon),\" as opposed to the traditional \"model-specific \r\nPerformance Monitoring (PerfMon).\" The purpose of architectural PerfMon is to provide a \r\nfunctionally and logically consistent set of capabilities with a consistent hardware \r\ninterface that developers can rely on now and in the future. \r\nPerformance Monitoring (PerfMon) is a limited system resource. While programming control \r\nof PMU hardware is available on a first come first serve basis, there is currently no \r\nhardware mechanism available to ‘reserve’ a piece of PMU resource. A software agent can \r\nintentionally or unintentionally overwrite previously programmed PMU settings. This \r\nsituation can be improved with software updates and PMU sharing guidelines between \r\nusers or agents. \r\nThis paper provides a set of guidelines between multiple software agents sharing the PMU \r\nhardware on Intel processors. These conventions are not attempting to address PerfMon \r\nvirtualization but how independent software components (e.g., BIOS and OS; e.g., hosted \r\nVirtual Machine Monitor (VMM) and hosting OS) can coordinate use of PerfMon. In the case \r\nof PerfMon virtualization (HV and guest), the software is not fully independent, and a \r\nHyperVisor/VMM can use different approaches, as long as it uses these conventions \r\nglobally relative to other independent software (e.g., BIOS). All PerfMon resource \r\ndefinitions are documented in Volume 3B of the Intel® 64 and IA-32 Architectures \r\nSoftware Developer's Manual.\r\nUsage and access, beyond Ring 0 programming, is not restricted. These guidelines are for \r\nsoftware agents including Firmware (BIOS), VMM, OS and Tools that program and utilize or \r\nplan to utilize PerfMon resources. \r\nThese guidelines are not setting requirement for PerfMon virtualization under VMX. \r\nAll conventions are recommendations. There is no new hardware or hardware \r\nenforcement being defined by this paper. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/ebca8e61-9acc-4b11-b7fa-bfcff1c5b1c8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e71389b488a319832231434380f9beee46a13e232bb28589f14007b98e39124a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 342
      },
      {
        "segments": [
          {
            "segment_id": "433d65f8-7e1f-4523-9866-22087b1c31aa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 5,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nProgrammer’s Reference Manual Volume 3B and these Guidelines \r\nPerfMon support and usage expectations outlined Programmer’s Reference Manual \r\nVolume 3B must still be followed: \r\n• Facility enumeration: The version identifier is retrieved by querying \r\nCPUID.0AH:EAX[bits 7:0]. If the version identifier is greater than zero, architectural \r\nperformance monitoring capability is supported. Software queries the CPUID.0AH \r\nfor the version identifier first; it then analyzes the value returned in \r\nCPUID.0AH.EAX, CPUID.0AH.EBX to determine the facilities available. \r\no Bits 8 through 15 of CPUID.0AH.EAX indicate the number of performance \r\nmonitoring counters available on the logical processor (each \r\nIA32_PERFEVTSELx MSR is paired to the corresponding IA32_PMCx MSR). \r\no Bits 0 through 5 of CPUID.0AH.EDX indicate the number of fixed-function \r\nperformance counters available per thread. \r\n• Events only supported by enumeration: A processor that supports architectural \r\nperformance monitoring may not support all the predefined architectural \r\nperformance events (Table 18-6). CPUID.0AH:EAX[31:24] indicates events not \r\navailable. \r\n• No software precision programming decisions or functionality: Programming \r\ndecisions or software decisions for functionality should not be based on the event \r\nvalues or dependent on the existence of performance monitoring events. \r\n• Known starting state: Software requires a known starting state. After CPU reset, \r\nall counters and control registers are disabled and clear/reset to ‘0. The only \r\nexception to this is the IA32_PERF_GLOBAL_CTRL control MSR, all programmable \r\ncounter global enable bits are reset to ‘1. \r\n \r\nGeneral PerfMon programming guidelines: \r\n• Disable PerfMon counter(s), using IA32_PERF_GLOBAL_CTRL or \r\nIA32_PERFEVTSELx.ENABLE, before programming (writing) the counter \r\n(IA32_PMCx) MSRs. \r\n• Utilize kernel preemption disabling facilities provided before reading the in-use \r\nindication and programming the counter(s) to reduce race conditions. \r\n• To facilitate sharing agents must move to read-modify-write to access MSRs. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/433d65f8-7e1f-4523-9866-22087b1c31aa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cd2d8dee47103263645972ffd2049796dc2db6cfdfc1f2132c2347a13185fb91",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7ef1f19f-ab58-4148-b1b9-7a1cd39084ba",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 6,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\n• An ‘in-use’ resource is indicated by the following: \r\no Programmable counter is in-use if the ‘Event select field’ in \r\nIA32_PERFEVNTSELx is non-zero. \r\no A fixed counter is in-use if its ‘Enable field’ in IA32_FIXED_CTR_CTRL is non\u0002zero. \r\no PMI or APIC Performance Monitoring Interrupt Vector is in-use if: \r\n The ‘INT/PMI’ bit, bit 20, in any IA32_PERFEVNTSELx is non-zero. \r\nor \r\n The ‘INT/PMI’ bit, the 4th bit in the corresponding fixed counter \r\ncontrol field in IA32_FIXED_CTR_CTRL, is non-zero. E.g. If the \r\nplatform supports 3 fixed counters. The PMI in-use check is \r\nIA32_FIXED_CTR_CTRL bits 3, 7 or 11 are non-zero the PMI vector is \r\nin-use. \r\no Model specific feature or event MSRs are in-use if the ‘programming/enable’ \r\nMSR is non-zero. \r\n For example on Intel® Core™ i7 processor : \r\n• PEBS is ‘in-use’ if (0x3F1) MS_PEBS_ENABLE[3:0] != 0. \r\n• Load Latency feature is ‘in-use’ if (0x3F1) \r\nMS_PEBS_ENABLE[35:32] != 0. \r\n• Extended filter MSRs for the following: \r\no Offcore Traffic events are ‘in-use’ if (0x1A6/0x1A7) \r\nMS_OFFCORE_REQ0/1 != 0. \r\no LBR filter is enabled/’in-use’ if (0x1C8) \r\nMS_LBR_FILTER_SELECT != 0. \r\n Note: Model specific PerfMon events/features and the \r\ncorresponding MSRs are subject to change. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/7ef1f19f-ab58-4148-b1b9-7a1cd39084ba.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1d7ecbc13e367be312abc83163277ba72f48bab753418d3f93a443e65a0430a6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 470
      },
      {
        "segments": [
          {
            "segment_id": "f2c13193-b1c6-4e21-8f10-c88eafbac256",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 7,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nSharing Guidelines \r\nAgents must provide a software calling and launch configuration facility to relinquish or \r\nrelease the use of PerfMon resources. \r\no Agents must be able to be configured and function without PerfMon resources. \r\no Discontinue or relinquish use of the counter by zeroing the counter control register \r\n(IA32_PERFEVNTSELx) or control field and the corresponding counter. \r\no Agents must discontinue or relinquish PerfMon resource on exit or unload. \r\no Note: Tools agents that follow these conventions and utilize counter resources \r\nare at risk of being ‘killed’ by the user such that the tool is not able to cleanly \r\nrelease the counter resources. Tools should maintain a resource usage history and \r\nclean exit information file so that if they are launched again they can reclaim the \r\npreviously used resources. \r\no If the Tool is not able to cleanly exit, and does not implement a kill-reclaim \r\ncapability, these resources will remain in-use until reboot. Tools should \r\ndocument the impact to the platform when the user kills the application \r\nand does not reboot the system.\r\nAgents should program the counter at the first opportunity. \r\no An agent that discovers a counter is in-use, at first opportunity or later, will \r\nassume the counter has been claimed by another agent and will not change its \r\nprogramming or disable it. \r\no This includes the VMM. The VMM should ensure any counter in-use by \r\nfirmware is not disabled. \r\no If an agent has programmed counters at its first opportunity, that agent reserves \r\nthe right to \"reclaim\" these counters if the counter, at any point, is reprogrammed \r\nby another agent. \r\nAgents should consume a minimal set of resources. \r\no If at all possible, use a fixed function counter. \r\no If a programmable counter is required, use the least capable counter. \r\no For example, on Intel® Core™ processors and Intel® Core™ Duo \r\nprocessors Precise Event Based Sample (PEBS) is only available on counter \r\n0. If at all possible, agents should avoid using counter 0 to allow PEBS to be \r\nutilized by another agent. \r\nIf at all possible, configure the fixed counter(s) to be an always running (monotonically \r\nincreasing) counter(s) and not reprogram. \r\no Program the counters to count all ring levels and not generate a PMI (performance \r\nmonitoring interrupt). \r\no This enables agents to check the corresponding 4-bit counter control for ‘free \r\nrunning’ configurations for possible read-only sharing. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/f2c13193-b1c6-4e21-8f10-c88eafbac256.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fdbdf4ae9518ed47290c377112901464df17a080ff65d6c03612186540b33bcb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 392
      },
      {
        "segments": [
          {
            "segment_id": "dc6b67c0-0388-4f10-b3e9-81676b656037",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 8,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\no For example, Fixed Counter 0 is free running if IA32_FIXED_CTR_CTRL[3:0] \r\n= 3, Fixed Counter 1 is free running if IA32_FIXED_CTR_CTRL[7:4] = 3, \r\nFixed Counter 2 is free running if IA32_FIXED_CTR_CTRL[11:8] = 3. \r\nUsing Performance Monitoring Interrupts (PMI): If the agents require ‘sampling’ or enabling \r\nPMI, the agent must: \r\no Poll for an available resource including PMI vector and check for other user(s). \r\no If other agents are using counters, do not use the ‘Freeze PerfMon on PMI’ feature \r\nin IA32_DEBUGCTL MSR. Setting this bit will disable all counters upon interrupt, \r\npossibly negatively impacting other users. \r\no Software must utilize the software freeze, read-modify-write to \r\nIA32_PERF_GLOBAL_CTRL MSR, in the interrupt service routine and only \r\ndisable counters under their programming control. \r\nAgents are free to utilize the SMM Freeze feature in IA32_DEBUGCTL MSR. Firmware must \r\nnot disable this feature while in SMM. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/dc6b67c0-0388-4f10-b3e9-81676b656037.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=56daf3c73b59dc0cb7efbb610055564cd0d42d0286a9244bf3782cbbd591d554",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "aec337f7-9771-45e4-98bd-495ddd85afdd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 9,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nAppendix – MSR Definition(s) \r\nMSR definitions below for Intel® Core™ i7 processor. \r\nGlobal Control and Status MSR ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/aec337f7-9771-45e4-98bd-495ddd85afdd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=79fd83ef82b9bc6c2695be520bec96931e49b69b5807622c10bd2184e58be9c3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "beb31bb0-d1e6-4464-8e59-c91a579adfeb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 10,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nIA32_PERFEVNTSELx MSR \r\nIA32_FIXED_CTR_CTRL MSR ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/beb31bb0-d1e6-4464-8e59-c91a579adfeb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a385946c3de09802e4a79fd8a8b51bd8307a13abcf5c16a11e87024814c293fb",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "59fd3f87-e083-4891-95a1-e9787505ff9a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 11,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nIA32_PERF_CAPABILITIES MSR \r\nMS_PEBS_ENABLE MSR (Intel® Core™ i7 processor ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/59fd3f87-e083-4891-95a1-e9787505ff9a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e97cf3b5cfd8cf23fc53e2a20fd007aa4cd298cee3a91b7704d72aff9d806d6f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "53514660-024e-4001-8a21-909e59e8f7b4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 12,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nIA32_DEBUGCTL MSR ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/53514660-024e-4001-8a21-909e59e8f7b4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7fec0dd9b541a6d81796a3fe1c54a09376b9333fe4e9efd3bd5ff146f085cb53",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 187
      },
      {
        "segments": [
          {
            "segment_id": "ad4b39d8-6d1a-4422-a43b-124640fa9f55",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 13,
            "page_width": 612,
            "page_height": 792,
            "content": "PMU Sharing Guide \r\nAbout the Authors \r\nPeggy Irelan is a Principal Engineer within the Software & Services Group a\r\nIntel. She works on processor observation/monitoring hardware \r\narchitecture and usage models. She has a particular interest in advancing \r\n‘smart software’ enabled through hardware feedback, monitoring/sensing. \r\nIn her spare time, Peggy likes to try new adventures, the latest of which is \r\nscuba diving this year reaching PADI Rescue Diver certification while \r\nexploring Beqa, Fiji and Moorea, Tahiti. She can be reached at \r\nt \r\npeggy.j.irelan@intel.com\r\n \r\nShihjong Kuo is a technical lead in Server Platform Group. He works on CPU feature \r\ndocumentation and instruction set enabling. He can be reached at shihjong.kuo@intel.com.\r\n \r\nINFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL® PRODUCTS. NO LICENSE, \r\nEXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS IS \r\nGRANTED BY THIS DOCUMENT. EXCEPT AS PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR \r\nSUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER, AND INTEL DISCLAIMS ANY EXPRESS OR \r\nIMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS INCLUDING LIABILITY OR \r\nWARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT \r\nOF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT. \r\nUNLESS OTHERWISE AGREED IN WRITING BY INTEL, THE INTEL PRODUCTS ARE NOT DESIGNED NOR \r\nINTENDED FOR ANY APPLICATION IN WHICH THE FAILURE OF THE INTEL PRODUCT COULD CREATE A \r\nSITUATION WHERE PERSONAL INJURY OR DEATH MAY OCCUR. \r\nIntel may make changes to specifications and product descriptions at any time, without notice. Designers \r\nmust not rely on the absence or characteristics of any features or instructions marked \"reserved\" or \r\n\"undefined.\" Intel reserves these for future definition and shall have no responsibility whatsoever for \r\nconflicts or incompatibilities arising from future changes to them. The information here is subject to \r\nchange without notice. Do not finalize a design with this information. \r\nThe products described in this document may contain design defects or errors known as errata which may \r\ncause the product to deviate from published specifications. Current characterized errata are available on \r\nrequest. \r\nContact your local Intel sales office or your distributor to obtain the latest specifications and before \r\nplacing your product order. \r\nCopies of documents which have an order number and are referenced in this document, or other Intel \r\nliterature, may be obtained by calling 1-800-548-4725, or by visiting Intel's Web Site. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/f6b43926-22a6-4c07-8762-6ffdc86b51f2/images/ad4b39d8-6d1a-4422-a43b-124640fa9f55.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041450Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5fd00734ed033be27805c30d1700cd5861ad575c431f57dcb30b90c8e3311c62",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 385
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "PMU Sharing Guide\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "\"Peggy Irelan and Shihjong Kuo\"\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "I am unable to find the publication date of the document.  Therefore, I cannot provide a value for `date_published`.\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "Fiji, Tahiti\n"
        }
      ]
    }
  }
}