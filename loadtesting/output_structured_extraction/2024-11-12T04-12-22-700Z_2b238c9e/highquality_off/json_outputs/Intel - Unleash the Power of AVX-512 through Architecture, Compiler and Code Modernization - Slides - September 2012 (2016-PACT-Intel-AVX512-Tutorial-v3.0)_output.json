{
  "file_name": "Intel - Unleash the Power of AVX-512 through Architecture, Compiler and Code Modernization - Slides - September 2012 (2016-PACT-Intel-AVX512-Tutorial-v3.0).pdf",
  "task_id": "93d8d835-722d-4029-8127-68317e55dc81",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "6eb719f4-ff79-48af-8c1f-ad698b8fe643",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 1,
            "page_width": 792,
            "page_height": 612,
            "content": "Xinmin Tian, Robert Geva, and Bob Valentine \r\nIntel Corporation\r\nSeptember 11, 2016\r\nPACT 2016 Tutorial, Haifa, Israel ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/6eb719f4-ff79-48af-8c1f-ad698b8fe643.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7d7a617cb8669929924c9476de7fa29a21b77ec0feff186b3fa4ff35de0942bf",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6b26788c-bae9-4167-b4aa-e88b0c032a37",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 2,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAgenda\r\nSection I - AVX-512 Architecture Insights \r\nSection II - Intel® Compiler: Putting SIMD Vectorization to Work\r\nSection III - Code Modernization: Best Practices for Vector Programming\r\n2",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/6b26788c-bae9-4167-b4aa-e88b0c032a37.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0740e2404208c76215c931d0237c94e863d5f3258dcd709cf2f954614916e59b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d8f009ad-63db-4970-9e97-75c50ac9f11f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 3,
            "page_width": 792,
            "page_height": 612,
            "content": "Robert Valentine – Senior Principal Engineer \r\nIntel Corporation\r\nSeptember 11, 2016 \r\nPACT 2016 Tutorial, Haifa, Israel",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d8f009ad-63db-4970-9e97-75c50ac9f11f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c3bbffc30ea3419229f48e74b69ac2086c02ea410f94a0e20101c1956c0324cd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a5e37b51-69c2-4b02-8df4-86ebc3ce4c72",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 4,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSection I: Agenda\r\n Introduction: Intel® ISA Roadmap \r\n Deep dive: AVX1/2/AVX512 ISA\r\n AVX-512 F: Common ISA Extension\r\n AVX-512 ERI & PRI: Intel® Xeon Phi™ Product Only\r\n Xeon additions to AVX-512 F\r\n Summary",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a5e37b51-69c2-4b02-8df4-86ebc3ce4c72.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=03fc597e322cffba28c06bc2252d47d9c95a7346531ab2d3fe4a139ecdc8b9fd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f429a827-87fc-4941-8324-05066da6b7fa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 5,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nIntel® Advanced Vector Extensions\r\nSince 2001: \r\n128-bit Vectors\r\nAVX 1.0: 2X flops: 256-bit wide floating-point vectors\r\nHalf-float support, Random Numbers\r\nAVX2: FMA (2x peak flops)\r\n256-bit integer SIMD. “Gather” Instructions.\r\nSandy Bridge\r\n(32 nm Tock)\r\nPerformance / core\r\n2010 2011 2012 2013\r\nIvybridge\r\n(22nm Tick)\r\nHaswell\r\n(22 nm Tock)\r\nKnights Landing\r\nFuture Xeon\r\n512- bit Vectors\r\n32 registers\r\nGoal: 8X peak FLOPs over 4 generations Masking, Broadcast\r\n2016",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f429a827-87fc-4941-8324-05066da6b7fa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=60d9c8bad5b8bb24840c535503fe2ae0e934507be61e0ddd88aa089a547bc855",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "339f7aa8-edc1-4bcb-9d87-fcf943275bba",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 6,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nConsistent Developer Tools and Programming Models\r\nCode Base\r\nMany-core\r\nIntel® Xeon Phi™\r\nCoprocessor\r\nMulticore\r\nIntel® Xeon \r\nProcessors\r\n6\r\nStandards Parallel Programming Models Vectorize, Parallelize, & Optimize\r\nXeon Xeon Phi\r\nNo\r\nAm I running an \r\nISV\r\nor in-house \r\napplication?\r\nCan my workload \r\nscale to over 100 \r\nthreads?\r\nCan my \r\nworkload benefit \r\nfrom large \r\nvectors?\r\nCan my workload \r\nbenefit from more \r\nmemory \r\nbandwidth?\r\nContact ISV to find \r\nout if and when \r\nthey will support \r\nXeon Phi.\r\nIn-house\r\nNo\r\nNot ready\r\nor suitable\r\nNo\r\nISV\r\nReady\r\nYes Yes\r\nNo\r\nAm I capable & \r\nmotivated to pursue \r\nhigh levels of \r\nparallelism?\r\nIs my application \r\nready for high \r\nparallelism? \r\nYes\r\nNo\r\nYes Yes",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/339f7aa8-edc1-4bcb-9d87-fcf943275bba.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bfb8b00dfc49792301d28d5f3ff5659933de17bef92aa41d2193d21f8d1bdaad",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1081ae0c-fa7a-40dd-a629-7b949c7ea6bf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 7,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nIntel® AVX Technology\r\nHaswell\r\n512b AVX512\r\nServer: 64SP / 32 DP \r\nClient: 32 SP / 16 DP \r\nFlops/Cycle (FMA)\r\n256b AVX2\r\n32 SP / 16 DP \r\nFlops/Cycle (FMA)\r\nSandy Bridge Future (in planning, subject to change)\r\n256b AVX1\r\n16 SP / 8 DP\r\nFlops/Cycle\r\nAVX512\r\n512-bit FP/Integer\r\n32 registers\r\n8 mask registers\r\nEmbedded rounding \r\nEmbedded broadcast\r\nScalar/SSE/AVX “promotions”\r\nNative media additions\r\nHPC additions\r\nTranscendental support\r\nGather/Scatter\r\nAVX AVX2\r\n256-bit basic FP\r\n16 registers\r\nNDS (and AVX128)\r\nImproved blend\r\nMASKMOV\r\nImplicit unaligned\r\nFloat16 (IVB 2012)\r\n256-bit FP FMA\r\n256-bit integer\r\nPERMD\r\nGather\r\nSNB-2011 HSW-2013 Future Processor (Knight \r\nLanding & future Xeon)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/1081ae0c-fa7a-40dd-a629-7b949c7ea6bf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=55ccf8dcc944ab6a5acbbf2ff0d0ce5a9c8d9970b89ec340d3ef0260b31f9907",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 484
      },
      {
        "segments": [
          {
            "segment_id": "987a3545-d1f3-4d2e-b4cc-104c78734f06",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 8,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512 Big Picture\r\n Deep dive: AVX1/2/AVX512 ISA\r\n AVX-512 F: Common ISA Extension\r\n AVX-512 ERI & PRI: Intel® Xeon Phi™ Product Only\r\n Xeon additions to AVX-512 F",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/987a3545-d1f3-4d2e-b4cc-104c78734f06.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5d2b0288d9392c21eda348184fef36e2fb36392831cf8758c05517ce943b9f7e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2cd2636b-50b4-4916-9160-1c2fd6a2f9d1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 9,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512 big picture\r\nAVX512F\r\n ‘Foundation’ of architecture, required for any AVX512 implementation\r\n– Many D/Q/SP/DP promotions from AVX2 with AAVX512 features\r\n– Masking, 32 registers, embedded broadcast or rounding, 512-bit Vector Length\r\n– New instructions added to accelerate HPC workloads\r\n Implementations add features to AVX512F “base”\r\n– “base” will grow as MIC/Xeon converge on features\r\nAVX512CD Conflict Detect : instructions tailored for vectorizing loops with potential address conflicts\r\nAVX512ER Exponential and Reciprocal : 'wide' approximateion of Log (22 bits) and RCP/RSQRT (28 bits)\r\nAVX512PF Prefetch : Multi-address prefetch instructions using gather/scatter semantics\r\nAVX512DQ Additional D/Q/SP/DP instructions (converts, transcendental support, etc)\r\nAVX512BW 512-bit Byte/Word support (promotions from AVX2, some additions)\r\nAVX512VL Vector Length Orthogonality : ability to operate on sub-512 vector sizes ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/2cd2636b-50b4-4916-9160-1c2fd6a2f9d1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47d3851bc9f7f4483aa918321c10ef0f068a2d305ee81a0adb54a6a0a9818b7c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9eefe8df-007c-4093-b74d-badc425efce0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 10,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nXeon & Xeon PhiTM New ISA: What Is Where?\r\nComplex & versatile big cores\r\n•Big focus on latency and single-thread\r\n•State-of-the-art SIMD support for HPC and Enterprise\r\n•Best balance of performance for any workload\r\nSmall & efficient cores\r\n•Big focus on throughput and many-threads\r\n•State-of-the-art SIMD support for HPC\r\n•Industry performance-per-watt leadership \r\nKNL\r\nXeon Phi\r\nSSE*\r\nAVX\r\nAVX2\r\nFuture\r\nXeon\r\nSSE*\r\nAVX\r\nAVX2\r\nSNB\r\nSSE*\r\nAVX\r\nHSW\r\nSSE*\r\nAVX\r\nAVX2\r\nNHM\r\nSSE*\r\nKNL and Xeon are the first \r\n“unification” platforms:\r\nAVX512F is the common \r\nSIMD foundation for HPC \r\nsoftware development\r\nAVX512F AVX512F\r\nAVX512CD AVX512CD\r\nAVX512ER\r\nAVX512PF\r\nPftchwt1\r\nAVX512DQ\r\nAVX512BW\r\nAVX512VL",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9eefe8df-007c-4093-b74d-badc425efce0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c259d3bfc4c96e9ce9a87d3894085ac981eba829fa7af63f8fcd10f62a3de1c2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5d81f810-81cb-46f5-9da5-782569f24998",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 11,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 features (I): More & Bigger Registers\r\nAVX: VADDPS YMM0, YMM3, [mem]\r\n Up to 16 AVX registers\r\n– 8 in 32-bit mode\r\n 256-bit width\r\n– 8 x FP32\r\n– 4 x FP64\r\nAVX-512: VADDPS ZMM0, ZMM24, [mem]\r\n Up to 32 AVX registers\r\n– 8 in 32-bit mode\r\n 512-bit width\r\n– 16 x FP32\r\n– 8 x FP64\r\nBut you need many more features\r\nto use all that real estate effectively…\r\nfloat32 A[N], B[N];\r\nfor(i=0; i<8; i++)\r\n{\r\nA[i] = A[i] + B[i];\r\n}\r\nfloat32 A[N], B[N];\r\nfor(i=0; i<16; i++)\r\n{\r\nA[i] = A[i] + B[i]; \r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/5d81f810-81cb-46f5-9da5-782569f24998.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2fbcde216c51efb8aa4129e623a2030a98d36a7225c31c0524c77cdffcde6961",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 441
      },
      {
        "segments": [
          {
            "segment_id": "9e5a3cd8-c531-4298-8075-6cdbce52c1e5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 12,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 Mask Registers\r\n8 Mask registers of size 64-bits\r\n k1-k7 can be used for predication \r\n– k0 can be used as a destination or source for mask manipulation \r\noperations\r\n4 different mask granularities.\r\nFor instance, at 512b:\r\n Packed Integer Byte use mask bits [63:0]\r\n– VPADDB zmm1 {k1}, zmm2, zmm3\r\n Packed Integer Word use mask bits [31:0]\r\n– VPADDW zmm1 {k1}, zmm2, zmm3\r\n Packed IEEE FP32 and Integer Dword use mask bits [15:0]\r\n– VADDPS zmm1 {k1}, zmm2, zmm3\r\n Packed IEEE FP64 and Integer Qword use mask bits [7:0]\r\n– VADDPD zmm1 {k1}, zmm2, zmm3\r\na7 a6 a5 a4 a3 a2 a1 a0 zmm1\r\nb7 b6 b5 b4 b3 b2 b1 b0 zmm2\r\nzmm3\r\nk1\r\nb7+c7 a6 b5+c5 b4+c4 b3+c3 b2+c2 a1 a0 zmm1\r\n+ + + + + + + +\r\n1 0 1 1 1 1 0 0\r\nc7 c6 c5 c4 c3 c2 c1 c0\r\n128 256 512\r\nByte 16 32 64\r\nWord 8 16 32\r\nDw ord/SP 4 8 16\r\nQw ord/DP 2 4 8\r\nVector Length\r\n \r\nelement \r\nsize \r\nVADDPD zmm1 {k1}, zmm2, zmm3",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9e5a3cd8-c531-4298-8075-6cdbce52c1e5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=84a7c585ceab99e712dfef1d84b78d7d63e8a57c782bac0b997c81ac7f2ea911",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1cbc570c-8073-436d-a54a-dd530b49058e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 13,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 Features (II): Masking\r\nVADDPS ZMM0 {k1}, ZMM3, [mem]\r\n Mask bits used to:\r\n1. Suppress individual elements read from memory \r\n– hence not signaling any memory fault\r\n2. Avoid actual independent operations within an \r\ninstruction happening \r\n– and hence not signaling any FP fault\r\n3. Avoid the individual destination elements being \r\nupdated,\r\n– or alternatively, force them to zero (zeroing)\r\nfor (I in vector length)\r\n{\r\nif (no_masking or mask[I]) {\r\ndest[I] = OP(src2, src3)\r\n} else {\r\nif (zeroing_masking)\r\ndest[I] = 0\r\nelse\r\n// dest[I] is preserved\r\n}\r\n}\r\nCaveat: vector shuffles do not suppress memory fault exceptions \r\nmask refers to “output” not to “input”",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/1cbc570c-8073-436d-a54a-dd530b49058e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b223ecfa4a31632400e5b78bf216efbf257af6c073a22d57d5235cf63b989952",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0f42bde5-3c85-49a0-8aed-a404d09825f1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 14,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nWhy True Masking?\r\nMemory fault suppression\r\n Vectorize code without touching\r\nmemory that the correspondent scalar code would not \r\ntouch\r\n– Typical examples are if-conditional statements or loop \r\nremainders\r\n– AVX is forced to use VMASKMOV* (risc)\r\nMXCSR flag updates and fault handlers\r\n Avoid spurious floating-point exceptions without having to \r\ninject neutral data\r\nZeroing/merging\r\n Use zeroing to avoid false dependencies in OOO \r\narchitecture\r\n Use merging to avoid extra blends in if-then-else clauses \r\n(predication) for great code density\r\nfloat32 A[N], B[N], C[N];\r\nfor(i=0; i<16; i++)\r\n{\r\nif(B[i] != 0) {\r\nA[i] = A[i] / B[i]; \r\nelse {\r\nA[i] = A[i] / C[i]; \r\n}\r\n}\r\nVMOVUPS zmm2, A\r\nVCMPPS k1, zmm0, B\r\nVDIVPS zmm1 {k1}{z}, zmm2, B\r\nKNOT k2, k1\r\nVDIVPS zmm1 {k2}, zmm2, C\r\nVMOVUPS A, zmm1",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/0f42bde5-3c85-49a0-8aed-a404d09825f1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1a2580f318abc7ee4f619878331d58907fd03b41f2d8f2c54907d098334e43c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 485
      },
      {
        "segments": [
          {
            "segment_id": "b31527fc-e401-42e8-a637-82ca5593a522",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 15,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nEmbedded Broadcasts and Masking Support\r\nVFMADD231PS zmm1, zmm2, C {1to16}\r\n Scalars from memory are first class citizens\r\n– Broadcast one scalar from memory into all vector \r\nelements before operation\r\n Memory fault suppression avoids fetching the scalar \r\nif no mask bit is set to 1\r\nOther “tuples” supported\r\n Memory only touched if at least one consumer lane \r\nneeds the data\r\n For instance, when broadcast a tuple of 4 elements, \r\nthe semantics check for every element being really \r\nused\r\n– E.g.: element 1 checks for mask bits 1, 5, 9, 13, …\r\nfloat32 A[N], B[N], C;\r\nfor(i=0; i<8; i++)\r\n{\r\nif(A[i]!=0.0) \r\nA[i] = A[i] + C* B[i];\r\n}\r\nVBROADCASTSS zmm1 {k1}, [rax]\r\nVBROADCASTF64X2 zmm2 {k1}, [rax]\r\nVBROADCASTF32X4 zmm3 {k1}, [rax]\r\nVBROADCASTF32X8 zmm4, {k1}, [rax]\r\n…",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/b31527fc-e401-42e8-a637-82ca5593a522.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7fd93648d23b73bb7c71fab1591c87e8403af8669c0bbdf4f8d73489a0616b0e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "940496cd-24c5-45bc-b667-03577b084d52",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 16,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 Features: \r\nEmbedded Rounding Control & SAE (Suppress All Exceptions)\r\n MXCSR.RC can be overridden on a per instruction basis (Embedded Rounding Control )\r\n– VADDPS ZMM1 {k1}, ZMM2, ZMM3 {rne-sae}\r\n– VADDSS XMM1 {k1}, XMM2, XMM3 {rrtz-sae}\r\n “Suspend All Exceptions” (always implied by using Embedded Rounding Control)\r\nNO MXCSR updates / exception reporting for any element\r\nExpected usage of this feature\r\n Library codes can control effect of rounding and updates to MXCSR until the end stages of complex SW routines\r\n– E.g.: avoid spurious overflow/underflow reporting in intermediate computations\r\n– E.g: make sure that RM=rne regardless of the contents of MXCSR\r\n Saving, modifying and restoring MXCSR is generally slower and more and cumbersome\r\n– Must use LDMXCSR to change fault masks, clear sticky bits or set a default rounding mode\r\n– Do not need to use MXCSR OR embedded rounding for truncating FP conversion to int (use CVTT* instructions)\r\nRestricted to :\r\nFP instructions\r\n512-bit or scalar\r\nReg-reg operands ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/940496cd-24c5-45bc-b667-03577b084d52.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b1a557f879d1f8199c260e31f1c50dd185e91f96d805e599051a5df61314afac",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0b1d08a6-86df-4764-a012-c6499c0af787",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 17,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 F: \r\nCommon Xeon Phi (KNL) and Xeon Vector ISA Extension\r\nAVX-512 Foundation is the common SIMD foundation \r\nfor HPC software development\r\nFirst on KNL\r\nPlanned on a future Xeon",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/0b1d08a6-86df-4764-a012-c6499c0af787.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7ada96b7f1c97c2dcbe936407a6e588eee0c07c4033a35e8dbfca806c700fad4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "be927524-e225-43ef-a1e2-e0a2192af189",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 18,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 F Designed for HPC\r\nQuadword\r\ninteger \r\narithmetic\r\nIncluding \r\ngather/scatter \r\nwith D/Qword \r\nindices\r\nMath support\r\nIEEE division \r\nand square root\r\nDP \r\ntranscendental \r\nprimitives\r\nNew \r\ntranscendental \r\nsupport \r\ninstructions\r\nNew \r\npermutation \r\nprimitives\r\nTwo source \r\nshuffles\r\nCompress & \r\nExpand\r\nBit \r\nmanipulation\r\nVector rotate\r\nUniversal \r\nternary logical \r\noperation\r\nNew mask \r\ninstructions\r\n• Promotions of many AVX and AVX2 instructions to AVX-512\r\n32-bit and 64-bit floating-point instructions from AVX\r\nScalar and 512-bit\r\n32-bit and 64-bit integer instructions from AVX2\r\n• Many new instructions to speedup HPC workloads",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/be927524-e225-43ef-a1e2-e0a2192af189.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d847c9f4c1a8308aa5516cf806dc8d696b25d3b77f0fd12bc64c350bf6cda27a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 490
      },
      {
        "segments": [
          {
            "segment_id": "e2fcf9e2-4bd9-4581-b2a5-fc9fa4068a25",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 19,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nQuadword Integer Arithmetic\r\nInstruction Description\r\nVPADDQ zmm1 {k1}, zmm2, zmm3 INT64 addition\r\nVPSUBQ zmm1 {k1}, zmm2, zmm3 INT64 subtraction\r\nVP{SRA,SRL,SLL}Q zmm1 {k1}, zmm2, imm8 INT64 shift (imm8)\r\nVP{SRA,SRL,SLL}VQ zmm1 {k1}, zmm2, zmm3 INT64 shift (variable)\r\nVP{MAX,MIN}Q zmm1 {k1}, zmm2, zmm3 INT64 max, min\r\nVP{MAX,MIN}UQ zmm1 {k1}, zmm2, zmm3 UINT64 max, min\r\nVPABSQ zmm1 {k1}, zmm2, zmm3 INT64 absolute value\r\nVPMUL{DQ,UDQ} zmm1 {k1}, zmm2, zmm3 32x32 = 64 integer multiply\r\nLong int and packed pointer manipulation\r\n64-bit integer trending towards becoming a first class citizen\r\nRemoves the need for expensive SW emulation sequences\r\nNote: VPMULQ and int64 <-> FP converts not in AVX-512 F",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/e2fcf9e2-4bd9-4581-b2a5-fc9fa4068a25.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6f68bf0c9c07ab60031e8f80574f975d8ab23e0b1df542affa5bf182ca9548ef",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "12e22ebf-8e22-4e83-bcbe-4c7bc556dc17",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 20,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMath Support\r\nInstruction\r\nVGETXEXP{PS,PD,SS,SD}\r\nVGETMANT{PS,PD,SS,SD}\r\nVRNDSCALE{PS,PD,SS,SD} \r\nVSCALEF {PS,PD,SS,SD} \r\nVFIXUPIMM{PS,PD,SS,SD}\r\nVRCP14{PS,PD,SS,SD} \r\nVRSQRT14{PS,PD,SS,SD} \r\nVDIV{PS,PD,SS,SD}\r\nVSQRT{PS,PD,SS,SD}\r\nzmm1 {k1}, zmm2 Obtain exponent in FP format\r\nzmm1 {k1}, zmm2 Obtain normalized mantissa\r\nzmm1 {k1}, zmm2, imm8 Round to scaled integral number\r\nzmm1 {k1}, zmm2, zmm3 X*2y , X <= getmant, Y <= getexp\r\nzmm1, zmm2, zmm3, imm8 Patch output numbers based on inputs\r\nzmm1 {k1}, zmm2 Approx. reciprocal() with rel. error 2-14\r\nzmm1 {k1}, zmm2 Approx. rsqrt() with rel. error 2-14\r\nzmm1 {k1}, zmm2, zmm3 IEEE division\r\nzmm1 {k1}, zmm2 IEEE square root\r\n30\r\nPackage to aid with Math library writing\r\n• Good value upside in financial applications \r\n• Available in PS, PD, SS and SD data types\r\n• Great in combination with embedded RC",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/12e22ebf-8e22-4e83-bcbe-4c7bc556dc17.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c963e806c63473318cd18dc14055b4ee5ed406c1fa949ee5ca4b145b3f54bf95",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "64fa7253-899e-444b-8496-3e7ccb102dea",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 21,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nNew 2-Source Shuffles\r\n2-Src Shuffles\r\nVSHUF{PS,PD}\r\nVPUNPCK{H,L}{DQ,QDQ}\r\nVUNPCK{H,L}{PS,PD}\r\nVPERM{I,D}2{D,Q,PS,PD}\r\nVSHUF{F,I}32X4\r\nH’ G’ F’ E’ D’ C’ B’ A’ H G F E D C B A\r\nzmm2 zmm3 15 0 10 11 2 2 0 9\r\nzmm1\r\nH’ A C’ D’ C C A B’ zmm1\r\nLong standing customer request\r\n• 16/32-entry table lookup (transcendental support)\r\n• AOS  SOA support, matrix transpose\r\n• Variable VALIGN emulation\r\n… 10 9 8 7 6 5 4 3 2 1 0",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/64fa7253-899e-444b-8496-3e7ccb102dea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ad575169ac9f5af8b4ace3093956695140cb5d9af5b4de8bda30b211cb60b2f0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "55b0bbc1-ce53-4389-b0da-352e54310697",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 22,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nGather & Scatter\r\nVMOVDQU64 zmm1, Q[rsi]\r\nVMOVDQU64 zmm2, R[rsi]\r\nVGATHERQQ zmm0 {k2}, [rax+zmm1*8]\r\nVSCATTERQQ [rax+zmm2*8] {k3}, zmm0 \r\nD/Q/SP/DP element types\r\nD/Q indices\r\nInstruction can partially execute \r\nk-reg Mask used as completion mask\r\nfor(j=0, i=0; i<N; i++) \r\n{\r\nB[R[i]] = A[Q[i]];\r\n}\r\nA B Q R\r\nG/S implementation attempts to ‘max out’ DCU BW\r\nPerformance gains come from vectorizing REST of algorithm\r\nAlgorithm shown could get some gain (24 load dispatches  10 per 8 elements)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/55b0bbc1-ce53-4389-b0da-352e54310697.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5653dc74e4a9d1c291aba3181383db1432fa29c2776e7622de471e9600430a8c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 465
      },
      {
        "segments": [
          {
            "segment_id": "310a8f4b-252d-415b-afd2-5e642eace95f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 23,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nExpand & Compress\r\nVEXPANDPS zmm0 {k2}, [rax] \r\nMoves compressed (consecutive) elements in register or memory to sparse \r\nelements in register (controlled by mask), with merging or zeroing [rax]\r\nzmm0 Y 7 Y Y 6 5 Y 4 3 Y 2 1 Y Y Y 0\r\nk2 = 0x4DB1 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1\r\nmem 15 14 … 8 7 6 5 4 3 2 1 0 lsb\r\nlsb\r\nAllows vectorization of conditional loops\r\n• Opposite operation (compress) in AVX512F\r\n• Similar to FORTRAN pack/unpack intrinsics\r\n• Provides mem fault suppression\r\n• Faster than alternative gather/scatter\r\nfor(j=0, i=0; i<N; i++) \r\n{\r\nif(C[i] != 0.0) \r\n{\r\nB[i] = A[i] * C[j++];\r\n}\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/310a8f4b-252d-415b-afd2-5e642eace95f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=93087ef42367c02a135bdd86bf1f023fcf1c1ee7533d3e73e196e74918d01467",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0c440b6f-8d95-4c78-b73e-5f7a24fa6e95",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 24,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nBit Manipulation\r\nInstruction Description\r\nKUNPCKBW k1, k2, k3 Interleave bytes in k2 and k3\r\nKSHIFT{L,R}W k1, k2, imm8 Shift bits left/right using imm8\r\nVPROR{D,Q} zmm1 {k1}, zmm2, imm8 Rotate bits right using imm8\r\nVPROL{D,Q} zmm1 {k1}, zmm2, imm8 Rotate bits left using imm8\r\nVPRORV{D,Q} zmm1 {k1}, zmm2, zmm3/mem Rotate bits right w/ variable ctrl\r\nVPROLV{D,Q} zmm1 {k1}, zmm2, zmm3/mem Rotate bits left w/ variable ctrl\r\nBasic bit manipulation operations on mask and vector operands\r\n• Useful to manipulate mask registers\r\n• Have uses in cryptography algorithms",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/0c440b6f-8d95-4c78-b73e-5f7a24fa6e95.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f6d2e7617c31ca0f186c878ee89798a366ae0620860bd0b61a40ab06b426bbb8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a6ecb4ae-13b7-4b10-838a-501ab5f4e89e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 25,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVPTERNLOG – Ternary Logic Instruction\r\n Take every bit of three sources to obtain a 3-bit index N\r\n– Obtain Nth bit from imm8\r\nImm8[7:0]\r\nDest[i]\r\nSrc0[i] Src1[i] Src2[i]\r\nAny arbitrary truth table of 3 values can be implemented\r\nandor, andxor, vote, parity, bitwise-cmov, etc\r\neach column in the right table corresponds to imm8\r\nS1 S2 S3 ANDOR VOTE (S1)?S3:S2\r\n0 0 0 0 0 0\r\n0 0 1 1 0 1\r\n0 1 0 0 0 0\r\n0 1 1 1 1 1\r\n1 0 0 0 0 0\r\n1 0 1 1 1 0\r\n1 1 0 1 1 1\r\n1 1 1 1 1 1\r\nVPTERNLOGD zmm0 {k2}, zmm15, zmm3/[rax], imm8",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a6ecb4ae-13b7-4b10-838a-501ab5f4e89e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=aa87d0bec5b525893f7ff88d5a11b88247ddacc5aefbf2fc8cb906cedc849406",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "18b9d684-72b3-47e6-96d3-e2ac5a85806b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 26,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX-512 ERI & AVX-512 PRI: Xeon Phi Only",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/18b9d684-72b3-47e6-96d3-e2ac5a85806b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=aa63c8680e5a027da418c29532747c2a3ec4eb365eaab27f10bb0063d5ae63be",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 418
      },
      {
        "segments": [
          {
            "segment_id": "5982151b-ca4e-4508-8ca8-e2b8cd5dffd0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 27,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nXeon Phi Only Instructions\r\nSet of segment-specific instruction extensions \r\n First appear on KNL\r\n Will be supported in all future Xeon Phi processors\r\n May or may not show up on a later Xeon processor\r\nAddress two HPC customer requests\r\n Ability to maximize memory bandwidth\r\n– Hardware prefetching is too restrictive\r\n– Conventional software prefetching results in instructions overhead\r\n Competitive support for transcendental sequences\r\n– Mostly division and square root\r\n– Differentiating factor in HPC/TPT",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/5982151b-ca4e-4508-8ca8-e2b8cd5dffd0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c8d8cb3d87bc8531c642d71c8c24086df1bc0d1268cf5d46afee04f1390e0c31",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "aaf17ee4-0ccf-4ec3-8fcf-62b269b1a9d6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 28,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nKNL AVX512 additions\r\nCPUID Instructions Motivation AVX-512 PRI\r\nPREFETCHWT1 Reduce ring traffic in core-to-core data communication\r\nVGATHERPF{D,Q}{0,1}PS Reduce overhead of software prefetching:\r\ndedicate side engine to prefetch sparse structures while devoting \r\nthe main CPU to pure raw flops\r\nVSCATTERPF{D,Q}{0,1}PS\r\nAVX-512 ERI\r\nVEXP2{PS,PD} Speed-up key FSI workloads: Black-Scholes, Montecarlo\r\nVRCP28{PS,PD} Key building block to speed up most transcendental sequences \r\n(in particular, division and square root):\r\nIncreasing precision from 14=>28 allows to reduce one complete \r\nVRSQRT28{PS,PD} Newton-Raphson iteration",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/aaf17ee4-0ccf-4ec3-8fcf-62b269b1a9d6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e962b652d29d6ada142217d43db4b1e1eb23bbcac9714f5f6ab25be820430dd4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4c80f351-be23-4491-9dd6-130c21a2c533",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 29,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSummary of AVX512 on KNL\r\nAVX-512 F: new 512-bit vector ISA extension\r\n Common between Xeon and Xeon Phi (KNL)\r\nAVX-512 CDI Conflict detection instructions\r\n Improves autovectorization of Histogram data patterns\r\n On Xeon Phi first\r\nAVX-512 ERI & PRI \r\n 28-bit transcendentals and new prefetch instructions\r\n On Xeon Phi only",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/4c80f351-be23-4491-9dd6-130c21a2c533.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6f4981b18e7fbd608891c205194c2e967d0713b2954f74c6a49e059d5f8854c9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8847cf7a-dbaf-4dde-a992-8ae4ebf8c2d7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 30,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nXeon additions to AVX512F",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/8847cf7a-dbaf-4dde-a992-8ae4ebf8c2d7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4a03dcb0c2800b247aa76aed102938d702a05177f97d1640d0d5c8841e2977d0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c0f77de7-9926-4119-898a-e3bcc405549d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 31,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512DQ \r\nComplete Qword support\r\n VPMULLQ packed 64x64  64\r\n Packed/Scalar converts of signed/unsigned to SP/DP\r\n Arithmatic shift right\r\n Etc\r\nExtend mask architecture to word and byte \r\n Byte masks are natural for packed Qword operands\r\nMinor additions to transcendental support\r\nConvert AVX512 mask  ‘SSE/AVX’ mask\r\n‘aggregate datatype’ support\r\n Broadcast/insert/extract complex singles etc",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/c0f77de7-9926-4119-898a-e3bcc405549d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bf23722e8aeda2a442a7e74d22b631f55e6ede0e63fd0d8f0a4606b86d5d585c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f736613d-4832-4954-95d9-e7cca0485561",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 32,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512DQ : additional HPC focus\r\nNew Instr\r\nVBROADCAST{F32X8,F64X2,I32X8,I64X2}\r\nVBROADCAST{I32X2}\r\nVEXTRACT{F32X8,F64X2,I32X8,I64X2}\r\nVINSERT{F32X8,F64X2,I32X8,I64X2}\r\nVCVT{,T}{PS,PD}2{QQ,UQQ}\r\nVCVT{QQ,UQQ}2{PS,PD}\r\nVCVT{,T}{PS,PD}2{QQ,UQQ}\r\nVFPCLASS{PS,PD}\r\nVRANGE{PS,PD}\r\nVREDUCE{PS,PD}\r\nVPMULLQ\r\nK{AND,ANDN,OR,XNOR,XOR,NOT}B\r\nK{MOV,ORTEST,SHIFR,SHIFTL}B \r\nK{ADD,TEST}{B,W}\r\nVPMOV{D2M,Q2M}, VPMOV{M2D,M2Q}\r\n64\r\nTuple support: 32X8, 64X2, 32X2\r\nInt64  FP conversions\r\nBoth unsigned and signed\r\nTranscendental package v2\r\nINT64 arithmetic support\r\nByte support for mask instructions\r\nExpanded mask functionality",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f736613d-4832-4954-95d9-e7cca0485561.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=be8d51442fae880e5b8c42bef1e04d4c2ebecaae009fbad9ed5408770468a545",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 452
      },
      {
        "segments": [
          {
            "segment_id": "2a52f026-8f82-4a94-bd56-177674870185",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 33,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512BW \r\nFull support for Byte/Word operations\r\n MMX/SSE2/AVX2 re-promoted to AVX512 semantics\r\nMask operations extended to 32/64 bits\r\n 32-bit mask refers to AVX512 ‘short’ operands\r\n 64-bit mask refers to AVX512 byte operands\r\nLoads/Stores/Broadcastsfor AVX512 semantics\r\nPermute architecture extended to words\r\n Vpermw, vpermi2w, vpermt2w\r\nNew PSAD instruction,etc",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/2a52f026-8f82-4a94-bd56-177674870185.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c055909b8fa98bfe00aab8eb57efb7353d5e09b14404e3ed62d966081d265aa4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2b254092-db6e-49e9-8880-1c3dbb9bf9bc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 34,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512BW : Byte and Word Support\r\nAV512BW\r\nVPBROADCAST{B,W}\r\nVPSRLDQ, VPSLLDQ\r\nVP{SRL,SRA,SLL}{V}W\r\nVPMOV{WB,SWB, USWB}\r\nVPTESTM{B,W}\r\nVPMADW\r\nVPTESTNM{B,W}\r\nVDBPSADBW\r\nVPERMW, VPERM{I,T}2W\r\nVMOVDQU{8,16}\r\nVPBLENDM{B,W}\r\n{KAND,KANDN}{D,Q}\r\n{KOR,KXNOR,KXOR}{D,Q}\r\nKNOT{D,Q}\r\nKORTEST{D,Q}\r\nAV512BW\r\nKTEST{D,Q}\r\nKSHIFT{L,R}{D,Q}\r\nKUNPACK{WD,DQ}\r\nKADD{D,Q}\r\nVPMOV{B2M,W2M,M2B,M2W}\r\nVPCMP{,EQ,GT}{B,W,UB,UW}\r\nVP{ABS,AVG}{B,W}\r\nVP{ADD,SUB}{,S,US}{B,W}\r\nVPALIGNR\r\nVP{EXTR,INSR}{B,W}\r\nVPMADD{UBSW,WD}\r\nVP{MAX,MIN}{S,U}{B,W}\r\nVPMOV{SX,ZX}BW\r\nVPMUL{HRS,H,L}W\r\nVPSADBW\r\nAV512BW\r\nVPSHUFB, VPSHUF{H,L}W\r\nVP{SRA,SRL,SLL}{,V}{W}\r\nVPUNPCK{H,L}{BW,WD}\r\n131",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/2b254092-db6e-49e9-8880-1c3dbb9bf9bc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=98d20eedd913c18c9b70d7dc44f7f4ac8a580a08c18cbe735388c70b3db7d019",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "08ac3645-e80a-47fe-9896-29b37a44cf69",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 35,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512VL : Vector Length Orthogonality\r\nAllow AVX512 instructions to operate on sub-vectors (lower 256/128 bits)\r\n Eases code generation for mixed data types\r\n– Partial masks are functionally correct, why not use them?\r\n– VL is in static in opcode, provides information EARLY in pipeline\r\n– Clock gating of unneeded execution elements / buses\r\n– Disabling RF read ports\r\n– Preventing ‘false overlap/forwarding’ from being detected in memory\r\n– Creating partial masks wastes instruction BW\r\nAVX512VL is NOT a “list of instructions”\r\n “orthogonal feature’ applying to “all” AVX512 instructions\r\n– obvious caveats when instruction has implicit 256/512 width",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/08ac3645-e80a-47fe-9896-29b37a44cf69.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c7c631ee03940820c09e59ff41a40375f4d1d8f2331d566ea71f98f068dfb5f2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3d42a3bd-e253-4c43-9e86-f20f94245822",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 36,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAVX512VL : Down-promotions\r\nVL orthogonality\r\nV{ADD,MUL,SUB}{PS,PD}\r\nVALIGN{D,Q}\r\nVBLENDM{PS,PD}, VPBLENDM{D,Q}\r\nVBROADCAST{SS,SD,F32X4,I32X4}\r\nVCMP{SS,SD}\r\nVCOMPRESS{PS,PD}, VPCOMPRESS{D,Q}\r\nVCVT{DQ,UDQ}2{PS,PD}\r\nVCVT{,T}{PS,PD}2{DQ,UDQ}\r\nVCVT{PS2PD,PD2PS}\r\nVCVT{PS2PH,PH2PS}\r\nVDIV{PS,PD}\r\nVEXPAND{PS,PD}, VPEXPAND{D,Q}\r\nVEXTRACT{F32X4,I32X4}\r\nV{MAX,MIN}{PS,PD}\r\nOut of 450 AVX512 Instructions\r\nVF{N}MADD{132,213,231}{PS,PD}\r\nVF{N}MSUB{132,213,231}{PS,PD\r\nVFMADDSUB{132,213,231}{PS,PD}\r\nVFMSUBADD{132,213,231}{PS,PD}\r\nVGATHER{D,Q}{PS,PD}\r\nVPGATHER{D,Q}{D,Q}\r\nV{MAX,MIN}{PS,PD}\r\nVMOV{APS,UPS,DQA32,DQA64}\r\nVMOV{DDUP,SHDUP,SLDUP} \r\nVMOVNT{DQ,DQA,PS,PD}\r\nVP{ABS,ADD,SUB}{D,Q}\r\nVP{AND,ANDN,OR,XOR}{D,Q}\r\nVPCMP{,EG,GR}{D,Q,UD,UQ}\r\nVPERM{D,Q,PS,PD}\r\n318\r\nVPERMIL{PS,PD}, VSHUF{PS,PD}\r\nVP{MAX,MIN}{D,Q,UD,UQ}\r\nVPMOX{SX,ZX}{B,W}{D,Q}\r\nVPMOX{SX,ZX}DQ\r\nVPMUL{DQ,UDQ,LD}\r\nVP{SLL,SRL,SRA}{,V}{D,Q}\r\nVPTESTM{D,Q}\r\nVPUNPCK{H,L}{DQ,QDQ}\r\nV{RCP,RSQRT}14{PS,PD}\r\nVUNPCK{H,L}{PS,PD}\r\nVPTERNLOG{D,Q}\r\nVPMOVQ{,S,US}Q{QB,QW,QD,DB,DW}\r\nVSHUF{F32X4,F64X2,I32X4,I64X2}\r\nVPERM{T,I}2{D,Q,PS,PD}\r\nEtc probably more than are shown",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/3d42a3bd-e253-4c43-9e86-f20f94245822.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=035edd8940ea92324b3f1112c42de4573d46ef7e04fc9913bfc14f9977bc888a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1de44c9c-87d5-4e09-b484-24b9dbef3584",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 37,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSummary of Xeon AVX512 Additions\r\nMore Qword support\r\n Packed converts, VPMULLQ etc\r\nSupport for mixing AVX and AVX512 style masks \r\n VPMOVM2*, VPMOV*2M\r\nAll HLL datatypes at maximum SIMD width\r\n # elements = VL / element_size\r\nVL aids mixing datatypes\r\n VL = # elements * element_size\r\nVL specifies memory access sizes exactly\r\n Masks provide architectural support, but HW prefers a ‘static’ knowledge",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/1de44c9c-87d5-4e09-b484-24b9dbef3584.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f181d760d79a2c5429a679de8689e1ef40e959485f17c21767883e829674651e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 434
      },
      {
        "segments": [
          {
            "segment_id": "9368c295-6553-4e3a-bfa3-9fd9ad8a6d76",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 38,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSummary\r\nAVX512 is a comprehensive addition to intels SIMD Instruction set\r\n~2x performance on BLAS routines\r\nnew features to increase the vectorization coverage (masks, VPCOMRESS)\r\nembedded rounding and new instructions accelerate math libraries\r\nKnights Landing emphasis on HPC \r\nsupport for D/Q/SP/DP and additional specialized instructions\r\nXeon adds support for all HLL datatypes\r\nAVX512 is designed for compilers as well as programmers",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9368c295-6553-4e3a-bfa3-9fd9ad8a6d76.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ceb87d9299eb97ecde521e3a46a6ccc365157db84e4d3d7d2355067968511f4a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4d7aa659-7df8-4915-bfff-595207448e70",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 39,
            "page_width": 792,
            "page_height": 612,
            "content": "Xinmin Tian – Senior Principal Engineer \r\nIntel Compiler and Languages, SSG, Intel Corporation\r\nSeptember 11, 2016\r\nPACT 2016 Tutorial, Haifa, Israel ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/4d7aa659-7df8-4915-bfff-595207448e70.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8b154b95c4ce0011a19e819df4399162e3c57e293cb8a4a9dae4641902640c0d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c2c9ed63-98b8-43e6-8675-31a8b5c912d8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 40,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSection II: Agenda\r\nSeamless Vectorization and Parallelization Integration Showcase\r\nLearnings: Cray*, Intel® Pentium® 4 (90nm) SSE3 and SIMD Vectorization Hurdles \r\nSuccesses: Putting SIMD Vectorization to Work \r\n Mixed data type Vectorization\r\n Function vectorization\r\n Outer loop vectorization\r\n SIMD Loop Vectorization with Cross-iteration Dependency \r\n Less-than-full-vector Vectorization\r\n Predication and Masking\r\n Gather/Scatter Optimization\r\nAdvances: Tackle C++ Challenges and Beyond C/C++/Fortran \r\nSummary: Close to Metal Performance\r\n2",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/c2c9ed63-98b8-43e6-8675-31a8b5c912d8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=08397f8af5e68d6901b909f317b14d190c4875e21b9d84a34c869373f3fd0490",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5f244754-8ba1-449b-a4c7-f57baffa113b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 41,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMandelbrot: ~2698x Speedup on Xeon Phi™--Isn’t it Cool?\r\n#pragma omp parallel for schedule(guided) \r\nfor (int32_t y = 0; y < ImageHeight; ++y) {\r\nfloat c_im = max_imag - y * imag_factor;\r\n#pragma omp simd simdlen(32)\r\nfor (int32_t x = 0; x < ImageWidth; ++x) {\r\nfcomplex in_vals_tmp = (min_real + x * real_factor) + (c_im * 1.0iF);\r\ncount[y][x] = mandel(in_vals_tmp, max_iter);\r\n}\r\n}\r\n#pragma omp parallel for schedule(guided) \r\nfor (int32_t y = 0; y < ImageHeight; ++y) {\r\nfloat c_im = max_imag - y * imag_factor;\r\n#pragma omp simd simdlen(32)\r\nfor (int32_t x = 0; x < ImageWidth; ++x) {\r\nfcomplex in_vals_tmp = (min_real + x * real_factor) + (c_im * 1.0iF);\r\ncount[y][x] = mandel(in_vals_tmp, max_iter);\r\n}\r\n}\r\n#pragma omp declare simd uniform(max_iter), simdlen(32) \r\nuint32_t mandel(fcomplex c, uint32_t max_iter)\r\n{ uint32_t count = 1; fcomplex z = c;\r\nwhile ((cabsf(z) < 2.0f) && (count < max_iter)) {\r\nz = z * z + c; count++;\r\n}\r\nreturn count;\r\n}\r\n#pragma omp declare simd uniform(max_iter), simdlen(32) \r\nuint32_t mandel(fcomplex c, uint32_t max_iter)\r\n{ uint32_t count = 1; fcomplex z = c;\r\nwhile ((cabsf(z) < 2.0f) && (count < max_iter)) {\r\nz = z * z + c; count++;\r\n}\r\nreturn count;\r\n}\r\n3\r\n1.00 1.00 1.00 7.77 1.0015.54 1.0033.19 1.00 1.00 1.00 65.18 114.10 141.54\r\n29.9931.01 29.97 29.99 29.98 29.98 29.98 29.98\r\n241.92\r\n480.26\r\n1,026.36\r\n2,017.62\r\n2,586.15 2,697.98\r\n0.00\r\n500.00\r\n1,000.00\r\n1,500.00\r\n2,000.00\r\n2,500.00\r\n1 Thread 8 Threads 16 Threads 32 Threads 64 Threads 128 Threads 256 Threads\r\nMandelbrot Normalized Speedup with OMP PAR+SIMD on Xeon Phi(TM)\r\nSerial OpenMP PAR OpenMP SIMD OpenMP PAR+SIMD\r\nIntel Xeon Phi™ system, Linux64, 64 cores running 256 threads at 1.30GHz, \r\n32 KB L1, 1024 KB L2 per core. Intel C/C++ Compiler 16.0 Update 2 build.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/5f244754-8ba1-449b-a4c7-f57baffa113b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d7f20bf817561905d844a19a95410006fec82a522c0300f597a7faeaa9c54ce6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 505
      },
      {
        "segments": [
          {
            "segment_id": "1cc1935e-c1ff-46d7-a161-bdd8077d9017",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 42,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCACM 1978\r\nCompiler vectorization “solved” in 1978 \r\nLearnings: Compiler Vectorization in 1978 \r\nc\r\nc*******************************************************************************\r\nc*** KERNEL 1 HYDRO FRAGMENT\r\nc*******************************************************************************\r\nc\r\ncdir$ ivdep\r\n1001 DO 1 k = 1,n\r\n1 X(k)= Q + Y(k) * (R * ZX(k+10) + T * ZX(k+11))\r\nc\r\nLivermore loop #1 \r\nSmall loop, simple data and \r\ncontrol flow\r\nCompiler auto-vectorization\r\nbecomes reality through \r\ndependency analysis\r\n4",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/1cc1935e-c1ff-46d7-a161-bdd8077d9017.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3f960748c4683ee61e081e37e63a6d90485c6ed507a3f786121e65bd16c651b5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d98c5884-d7d7-4277-a03f-fd49f324030a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 43,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLearnings: 2004 Intel® Pentium® 4 SSE3 on 90nm\r\nMemory\r\nOps:\r\n3 SIMD loads\r\n1 SIMD store\r\n3 Arithmetic Ops\r\n1 shuffle Ops\r\nOps not available in SSE2\r\nmovddup\r\naddsubpd\r\nMemory\r\na b c d\r\na b\r\nac bc\r\nc c d d\r\nb a\r\nbd ad\r\nac - bd ad + bc\r\nac - bd ad + bc\r\nmovapd movddup movddup\r\nmulpd shufpd\r\nmulpd\r\naddsubpd\r\nmovapd\r\nComplex Multiplication with SSE3: (a + ib)(c + id) = (ac – bd) + i (ad + bc)\r\n4 Scalar loads, 6 Arithmetic Ops, 2 Scalar stores \r\nPerformance can be improved up to ~75%, SPEC2000FP/168.wupwise 10-15% \r\n5",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d98c5884-d7d7-4277-a03f-fd49f324030a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9ed6e6c11d70489d5a607315b602c79b6abf8b87160fe1aaa312002edb654321",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3860f10b-6e6b-444f-97b1-8592087a9101",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 44,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n44\r\nLearnings: Program Factors Impact on Vectorization\r\nLoop-carried dependencies\r\nfor (i = 1; i < nx; i++) {\r\nx = x0 + i * h;\r\nsumx = sumx + func(x, y, xp);\r\n}\r\nFunction calls\r\nstruct _x { int d; int bound; };\r\nvoid doit(int *a, struct _x *x)\r\n{ \r\nfor(int i = 0; i < x->bound; i++)\r\na[i] = 0;\r\n}\r\nUnknown loop iteration count\r\nIndirect memory access\r\nOuter loops Pointer aliasing\r\nfor(j = 0; j <= MAX; j++) {\r\nfor(i = 0; i <= MAX; i++) {\r\nD[i][j] += 1; \r\n}\r\n}\r\nvoid scale(int *a, int *b)\r\n{ \r\nfor (int i = 0; i < 1000; i++) \r\nb[i] = z * a[i];\r\n}\r\nfor (i=0; i<N; i++) \r\nA[B[i]] += C[i]*D[i]\r\nDO I = 2, N\r\nA(I) = A(I-1) + B(I)\r\nENDDO\r\nmany ……\r\n6",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/3860f10b-6e6b-444f-97b1-8592087a9101.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=342ec97344a711fa751d6db1cd8ef40b21b63cc2af561d300d34a516c9df6634",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9a10e0f8-4e04-4b3a-b097-37f55b23d7e2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 45,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLearnings: SIMD Vectorization Hurdles\r\nVector code generation has become a more difficult problem increasing need for user guided \r\nexplicit vectorization that maps concurrent execution to simd hardware\r\nTwo fundamental problems:\r\n Data divergence\r\n Control divergence \r\np=0\r\n2\r\nAre all\r\nlanes done?\r\np=0..1\r\nFunction call\r\nx1\r\ny1\r\nVector Function call\r\nx1, x2\r\ny1, y2\r\n#pragma omp simd reduction(+:….)\r\nfor(p=0; p<N; p++) {\r\n// Blue work\r\nif(…) {\r\n// Green work\r\n} else {\r\n// Red work\r\n}\r\nwhile(…) {\r\n// Gold work\r\n// Purple work\r\n}\r\ny = foo (x);\r\nPink work\r\n}\r\np=1\r\n3\r\nFunction call\r\nx2\r\ny2\r\n7",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9a10e0f8-4e04-4b3a-b097-37f55b23d7e2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e7181da8864eb202dacb8e529687f15e24f5e6c8a89c5ba27acd29ba0b97f7ba",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1965a57d-7c09-4114-9c1d-a8fa0afb5e7e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 46,
            "page_width": 792,
            "page_height": 612,
            "content": "Successes: \r\nPutting SIMD \r\nVectorization to Work\r\nIntel brings ICC Vectorization\r\nTechnology to LLVM \r\nVectorizer",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/1965a57d-7c09-4114-9c1d-a8fa0afb5e7e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b84601514bf686b5a202ac5a3b3c63b86776d4af85da10eade6e7596d83fd82c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 502
      },
      {
        "segments": [
          {
            "segment_id": "f8408a93-d2ea-4512-b193-2a13cf9397c7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 47,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMixed Data Type Vectorization\r\nvoid foo(int n, float *A, double *B) {\r\nint i;\r\nfloat t = 0.0f;\r\n#pragma omp simd\r\nfor (i=0; i<n; i++) {\r\nA[i] = t;\r\nB[i] = t;\r\nt += 1.0f;\r\n}\r\n}\r\nMatch the number of elements.\r\n A[ i ] = … for 2 or 4 elements at a time\r\n B[ i ] = … for 2 or 4 elements at a time\r\nmixed.c(5) (col. 3): remark: LOOP WAS VECTORIZED.\r\na3 a2 a1 a0\r\nb1 b0\r\na3 a2 a1 a0\r\nb1 b0\r\nb3 b2\r\nNaïve: use full vectors\r\n4 != 2. Give up (bad)\r\nMatch: 2=2. Good\r\nMatch: 4=2x2. Good\r\n47\r\na3 a2 a1 a0\r\nb1 b0\r\n9",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f8408a93-d2ea-4512-b193-2a13cf9397c7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9c4bc266cae53cb8c6ca3d08725ff10e4447d645417ce751bad20f72f7fdf8b1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "478a89ec-6d24-4183-82ce-2d45db244e09",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 48,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nFunction Vectorization\r\n#pragma omp declare simd\r\nfloat sfoo(float x)\r\n{ … … \r\n}\r\nScalar C function\r\nsfoo(x0)->r0\r\nsfoo(x1)->r1\r\nsfoo(x2)->r2\r\nsfoo(x3)->r3\r\nsfoo(x4)->r4\r\n… …\r\nScalar execution\r\n__m128 vfoo(__m128 vx)\r\n{….\r\n}\r\nVector C function\r\nCompiler created\r\nVector execution\r\nvfoo(x0…x3)->r0…r3\r\nvfoo(X4…X7)->r4…r7\r\n… …\r\nsfoo(x0)->r0 sfoo(x1)->r1 sfoo(x2)->r2 sfoo(x3)->r3\r\nsfoo(x4)->r4 sfoo(x5)->r5 sfoo(x6)->r6 sfoo(x7)->r7\r\nsfoo(x8)->r8 sfoo(x9)->r9 … … … …\r\n… … \r\n10",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/478a89ec-6d24-4183-82ce-2d45db244e09.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e91aeefdaa41e88f99feb108a479f911d2c450e8db8af4b644f0a32c3b9249a7",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a77fc60a-c7c2-41b0-b00a-f3af02c10daf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 49,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nRecursive Function Vectorization\r\n#pragma omp declare simd [processor(cpu-id)]\r\nint binsearch(int key, int lo, int hi) {\r\nint ans;\r\nif ( lo > hi) {\r\nans = -1;\r\n} \r\nelse {\r\nint mid = lo + ((hi - lo) >> 1);\r\nint t = sortedarr[mid];\r\nif (key == t) {\r\nans = mid;\r\n} \r\nelse if ( key > t) {\r\nans = binsearch(key, mid + 1, hi);\r\n} \r\nelse {\r\nans = binsearch(key, lo, mid - 1);\r\n}\r\n}\r\nreturn ans;\r\n}\r\n#pragma omp simd\r\nfor (int i=0; i<M; i++) {\r\nans[i] = binsearch(keys[i], 0, N-1);\r\n}\r\n11",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a77fc60a-c7c2-41b0-b00a-f3af02c10daf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=04156253985fc2bbd62b0dfee298f24e4c69313a8ee13ff27d659d707bd45170",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d1063114-4496-40f8-b099-d215351756fd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 50,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nOpenMP* SIMD PROCESSOR Clause \r\nNew PROCESSOR clause extension to #pragma omp declare simd ( to \r\ndefine a SIMD routine) to target a specific processor\r\n• Similar to Intel® Cilk™ Plus extensions for declaring SIMD functions\r\n• Available for C/C++ and Fortran\r\n• Intel extension – NOT part of official OpenMP specification \r\n• Helpful to allow programmers to leverage e.g. Intel® AVX-2 and Intel® AVX\u0002512 beyond default Intel® SSE2 support ( YMM+ZMM registers/operands \r\nadditionally to XMM ) \r\n12",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d1063114-4496-40f8-b099-d215351756fd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9f6cdd9ab41056481e9e2ed8b7fb642734ff98255830881156f75cc7a5e7cc38",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 436
      },
      {
        "segments": [
          {
            "segment_id": "ec8e8c8e-5d7b-4c49-abd1-4cea6ce0198f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 51,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nProcessor Name Identifiers \r\n pentium_4\r\n pentium_m\r\n pentium_4_sse3\r\n core_2_duo_ssse3\r\n core_2_duo_sse4_1\r\n atom\r\n core_i7_sse4_2\r\n core_aes_pclmulqdq\r\n core_2nd_gen_avx\r\n core_3rd_gen_avx\r\n future_cpu_18 // KNF\r\n mic\r\n future_cpu_19 // KNC\r\n future_cpu_20 // HSW - no TSX\r\n core_4th_gen_avx // HSW – no TSX\r\n core_4th_gen_avx_tsx // HSW - TSX\r\n future_cpu_21 // BDW - NO TSX\r\n future_cpu_21_tsx // BDW - TSX\r\n future_cpu_22 // KNL\r\n future_cpu_23 // SKL 29\r\n13",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/ec8e8c8e-5d7b-4c49-abd1-4cea6ce0198f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cbabdd1566dddc0021a93a67250dcf1a27ed98f054a3b56ff58296da355b0290",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dd189d75-b8de-458c-a29e-a9d4d66bed84",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 52,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVortex Code: Outer Loop Vectorization\r\n#pragma omp simd // simd pragma for outer-loop at call-site of SIMD-function\r\nfor (int i = beg*16; i < end*16; ++i) {\r\nparticleVelocity_block(px[i], py[i], pz[i], destvx + i, destvy + i, destvz + i, vel_block_start, vel_block_end);\r\n}\r\n#pragama omp declare simd linear(velx,vely,velz) uniform(start,end) aligned(velx:64, vely:64, velz:64)\r\nstatic void particleVelocity_block(const float posx, const float posy, const float posz,\r\nfloat *velx, float *vely, float *velz, int start, int end) {\r\nfor (int j = start; j < end; ++j) {\r\nconst float del_p_x = posx - px[j];\r\nconst float del_p_y = posy - py[j];\r\nconst float del_p_z = posz - pz[j];\r\nconst float dxn= del_p_x * del_p_x + del_p_y * del_p_y + del_p_z * del_p_z +pa[j]* pa[j];\r\nconst float dxctaui = del_p_y * tz[j] - ty[j] * del_p_z;\r\nconst float dyctaui = del_p_z * tx[j] - tz[j] * del_p_x;\r\nconst float dzctaui = del_p_x * ty[j] - tx[j] * del_p_y;\r\nconst float dst = 1.0f/std::sqrt(dxn);\r\nconst float dst3 = dst*dst*dst;\r\n*velx -= dxctaui * dst3;\r\n*vely -= dyctaui * dst3;\r\n*velz -= dzctaui * dst3;\r\n}\r\n}\r\nKNC performance improvement \r\nover 2X going \r\nfrom inner to outer-loop vectorization\r\n14",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/dd189d75-b8de-458c-a29e-a9d4d66bed84.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d9fa1dfd060949a6c611c0b6229ec57301390d5a32973ba0dbbafe98eb1da166",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "55209bfb-fd29-4197-bc07-b72ce5a8a3ac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 53,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSIMD Loops with Cross-Iteration Dependencies \r\nOpenMP* 4.5: Extend ordered Blocks in SIMD Contexts\r\nSemantics:\r\n The ordered with simd clause construct specifies a structured block in the simd loop or SIMD function that \r\nwill be executed in the order of the loop iterations w.r.t to dependency constraints or sequence of call to \r\nSIMD functions. \r\nRules: \r\n #pragma omp ordered simd is only allowed inside a SIMD loop or SIMD-enabled function. \r\n #pragma omp ordered simd region must be a single-entry and single-exit code block\r\n The strict ordered execution is only guaranteed for the block itself\r\n Execution remains weakly ordered w.r.t. to outside of the block or other ordered blocks\r\n Data dependencies between statements of the same block will be correctly resolved\r\n Other non-vector dependencies originating in ordered block still lead to undefined behavior\r\n#pragma omp ordered [simd]\r\nstructured code block\r\n!$omp ordered [simd] \r\nstructured code block\r\n!$omp end ordered \r\nC and C++: Fortran:\r\n15",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/55209bfb-fd29-4197-bc07-b72ce5a8a3ac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4443200aa46898cb9239adb52d6be511b2339d2e5faa88d4c594114da12defc8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 492
      },
      {
        "segments": [
          {
            "segment_id": "8088dd5d-4cd3-4160-9cd7-2de066989e2c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 54,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nOrdered SIMD Examples\r\n#pragma omp simd\r\nfor (i = 0; i < N; i++) \r\n{\r\n...\r\n#pragma omp ordered simd\r\n{\r\na[indices[i]] += b[i]; // index conflict\r\n}\r\n...\r\n#pragma omp ordered simd\r\n{\r\nif (c[i] > 0)\r\nq[j++] = b[i]; // compress pattern\r\n}\r\n...\r\n#pragma omp ordered simd\r\n{\r\nlock(L) // atomic update\r\nif (x > 10) x = 0;\r\nunlock(L)\r\n}\r\n...\r\n}\r\n#pragma omp simd\r\nfor (i = 0; i < N; i++) {\r\n...\r\n#pragma omp ordered simd\r\n{\r\nif (c[i] > 0)\r\nq[j++] = b[i]; // 1st compress\r\n}\r\n...\r\n#pragma omp ordered simd\r\n{ // 2nd compress\r\nif (c[i] > 0) // Order of stores will\r\nq[j++] = d[i]; // be changed w.r.t\r\n// to serial execution\r\n}\r\n}\r\nCompiler \r\nwon’t \r\ncomplain!\r\nOK: Not OK w.r.t serial:\r\n16",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/8088dd5d-4cd3-4160-9cd7-2de066989e2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=58a074d0ee0864cfbda02331e197fd914930a8e1479f2bb8a3b84b48afa85cc8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a18f79e5-ec18-4912-bb4e-7baee2cbfcf2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 55,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n+-\r\nORDERED SIMD not always best Approach \r\n#pragma omp simd\r\nfor(int i=0; i < VL; i++) {\r\n…\r\nval = values[i];\r\ngrp = groups[i];\r\n#pragma omp ordered simd // conflict\r\n{ g_total[grp] += val; }\r\n…\r\n}\r\n0 3 2 3 0 2 1 2\r\n5 7 8 9 3 6 5 3\r\n5 0 0 0 3 0 0 0\r\n0 0 0 0 0 0 5 0\r\n0 0 8 0 0 6 0 3\r\n0 7 0 9 0 0 0 0\r\n8\r\n5\r\n17\r\n16\r\ng_total\r\nPrivate copies\r\nreduce\r\nSolution: array reductions\r\ngrp :\r\nval :\r\n+=\r\n#pragma omp simd reduction(+:g_total)\r\nfor(int i=0; i < VL; i++) {\r\n…\r\nval = values[i];\r\ngrp = groups[i];\r\ng_total[grp] += val;\r\n…\r\n}\r\n0 0 0\r\n0 0\r\n0 0 0 0\r\n0 0 0\r\ngrp 0 3 2 3 0 2 1 2\r\n(indices):\r\nv (values): 5 7 8 9 3 6 5 3\r\ng_total: 8 5 17 16\r\n+= +=\r\n?\r\n5 814? ?7\r\n17",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a18f79e5-ec18-4912-bb4e-7baee2cbfcf2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=be5760557ddf7c24ee7d5ac0bbefec163a4f058836100ae1633ac32a5073d7b8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 347
      },
      {
        "segments": [
          {
            "segment_id": "eb97e65f-4aa9-47dc-b266-d7b2941b4b43",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 56,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLess-Than-Full-Vector Vectorization\r\nfloat foo(float *y, int n) \r\n{ int k; float x = 10.0f;\r\n#pragma omp simd\r\nfor (k = 0; k < n; k++) {\r\nx = x + fsqrt(y[k]) \r\n} \r\nreturn x\r\n}\r\nmisalign = &y[0] & 63\r\npeeledTripCount = (63 – misalign)/sizeof(float)\r\nx = 10.0f;\r\ndo k0 = 0, peeledTripCount-1 // peeling loop \r\nx = x + fsqrt(y[k0]) \r\nenddo\r\nx1_v512 = (m512)0\r\nx2_v512 = (m512)0\r\nmainTripCount = n – ((n – peeledTripCount) & 31)\r\ndo k1 = peeledTripCount, mainTripCount-1, 32\r\nx1_v512 = _mm512_add_ps( _mm512_fsqrt(y[k1:16]),x1_v512)\r\nx2_v512 = _mm512_add_ps( _mm512_fsqrt(y[k1+16:16]), x2_v512)\r\nenddo\r\n// perform vector add on two vector x1_v512 and x2_v512\r\nx1_v512 = _mm512_add_ps(x1_v512, x2_512); \r\n// perform horizontal add on all elements of x1_v512, and\r\n// the add x for using its value in the remainder loop \r\nx = x + _mm512_hadd_ps(x1_512)\r\ndo k2 = mainTripCount, n // Remainder loop \r\nx = x + fsqrt(y[k2]) \r\nenddo\r\n18",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/eb97e65f-4aa9-47dc-b266-d7b2941b4b43.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e465cd3fb380d0f568d6763ba1f9e286d6e28a6011f86afc8076de235998ea6c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "13cf9998-22f4-4221-b34c-a2319cf0130f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 57,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLess-Than-Full-Vector Vectorization\r\nmisalign = &y[0] & 63\r\npeeledTripCount = (63 – misalign) / sizeof(float)\r\nx = 10.0f;\r\n// create a vector: <0,1,2,…15> \r\nk0_v512 = _mm512_series_pi(0, 1, 16) \r\n// create vector: all 16 elements are peeledTripCount\r\npeeledTripCount_v512 = \r\n_mm512_broadcast_pi32(peeledTripCount)\r\nx1_v512 = (m512)0\r\nx2_v512 = (m512)0\r\ndo k0 = 0, peeledTripCount-1, 16\r\n// generate mask for vectorizing peeling loop\r\nmask = _mm512_compare_pi32_mask_lt(k0_v512, \r\npeeledTriPCount_v512)\r\nx1_v512 = _mm512_add_ps_mask(\r\n_mm512_fsqrt(y[k0:16]), x1_v512, mask)\r\nenddo\r\nmainTripcount = n – ((n – peeledTripCount) & 31)\r\ndo k1 = peeledTripCount, mainTripCount-1, 32\r\nx1_v512 = _mm512_add_ps( _mm512_fsqrt(y[k1:16]), x1_v512)\r\nx2_v512 = _mm512_add_ps( _mm512_fsqrt(y[k1+16:16]), x2_v512)\r\nenddo\r\n// create a vector: <mainTripCount, mainTripCount+1 … mainTripCount+15>\r\nk2_v512 = _mm512_series_pi(mainTripCount, 1, 16) \r\n// create a vector: all 16 elements has the same value n \r\nn_v512 = _mm512_broadcast_pi32(n) \r\nstep_v512 = _mm512_broadcast_pi32(16) \r\ndo k2 = mainTripCount, n, 16 // vectorized remainder loop\r\nmask = _mm512_compare_pi32_mask_lt(k2_v512, n_v512) \r\nx1_v512 = _mm512_add_ps_mask(\r\n_mm512_fsqrt(y[k2:16]), x1_v512, mask)\r\nk2_v512 = _mm512_add_ps(k2_v512, step_v512)\r\nenddo\r\nx1_v512 = _mm512_add_ps(x1_v512, x2_512);\r\n// perform horizontal add on 8 elements and final reduction sum to write\r\n// the result back to x. \r\nx = x + _mm512_hadd_ps(x1_512) \r\n19",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/13cf9998-22f4-4221-b34c-a2319cf0130f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e638454a28392066554b5738840e1e5d36b9b9b4f95919576d5df60ffd4aeacb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 372
      },
      {
        "segments": [
          {
            "segment_id": "98d55711-1a6a-4778-ba68-50100690decf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 58,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nPredication and Masking\r\nNo conditional execution inside SIMD vector loop\r\n Except special vector conditions\r\n Conditions transformed to vector predicates\r\n Control flow is flattened\r\nPredicated execution\r\n Masking\r\n Blending with speculation\r\nMasking on loads/stores\r\n Available on AVX512\r\n Limited availability in Intel® MIC Arch, AVX2, and AVX\r\n Emulated on SSE\r\nBlending\r\n Safety to be proved\r\n Only reverse conditions\r\n#pragma omp simd\r\nfor (i=0; i<n; i++) {\r\nif (A[i]>0) {\r\nB[i] = C[i] + 20;\r\n}\r\nelse {\r\nB[i] = C[i] + 100;\r\n}\r\n}\r\nM = (A[i:i+3] > 0);\r\nB[i:i+3]{M}= C[i:i+3]{M}+{M}20;\r\nB[i:i+3]{~M}= C[i:i+3]{~M}+{~M}100;\r\nM = (A[i:i+3] > 0);\r\nB[i:i+3] = (C[i:i+3]+20)&M | (C[i:i+3]+100)&~M;\r\nBefore vectorizer\r\nFlattened \r\nmasked\r\nlucky\r\nBlended if \r\nyou are \r\nAvoid B Avoid Branchy Code ranchy Code  Improve SIMD Vector mprove SIMD Vector Efficiency fficiency\r\n20",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/98d55711-1a6a-4778-ba68-50100690decf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2d6611e597310a2a6ccb41c344044d0fd582c2fcdb2fa91e1fd444dffe2ed9fe",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "910cde46-457c-4a8e-9da1-8ba30e75f0d4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 59,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nNeighboring Gather/Scatter Optimization\r\nfor (int i = 0; i < size; ++i) {\r\n#pragma omp simd\r\nfor (int j = i + 1; j < size; ++j) {\r\npij = pi - data[5 * j];\r\nqij = qi - data[5 * j + 1];\r\nrij = ri - data[5 * j + 2];\r\n...\r\nBefore:\r\n3 gathers\r\ndata[5*j]\r\ndata[5*j+1]\r\ndata[5*j+2]\r\nAfter:\r\nloads + “the magic”\r\ndata[5*j]\r\ndata[5*j+1]\r\ndata[5*j+2]\r\n...\r\n...\r\n2x kernel speed-up on HSW\r\n...\r\n21",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/910cde46-457c-4a8e-9da1-8ba30e75f0d4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9936a993a8215ed87684fbba5bf8dcd560f7ab193a245a6b8799e217c77997c0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "71e31876-bce7-4788-9ea7-704ee1818139",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 60,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nOptimization of neighboring Gathers\r\n• Complete support for unmasked strided (d[i]) and \r\nindexed (d[ind[i]]) loads of 1, 2, 4, 8 and 16-byte \r\nelements for SSE2-AVX512\r\n• Provides more effective CPU resources usage for \r\ncases with data locality\r\n• May require additional source changes to enable \r\nthe pattern recognition (e.g. restrict, base/index \r\nhoisting, loads grouping)\r\n• Also reflected in optimization report: \r\nremark #34030: adjacent sparse (strided) loads \r\noptimized for speed. \r\nDetails: stride { 12 }, types { F32-V512, F32-\r\nV512, F32-V512 }, number of elements { 16 }, \r\nselect mask { 0x000000007 }.\r\nstruct {\r\nTYPE f0;\r\n…\r\nTYPE fN;\r\n} d[];\r\nfor (int i = 0; i < size; ++i) \r\ntmp += d[i].f0 + … + d[i].fN;\r\nvgatherdps 0(%rcx,%zmm0,4), %zmm6{%k1}\r\nvgatherdps 4(%rcx,%zmm0,4), %zmm7{%k2}\r\nvgatherdps 8(%rcx,%zmm0,4), %zmm9{%k3}\r\nBefore (TYPE=FLOAT, N=2) \r\nNow (TYPE=FLOAT, N=2) \r\nvmovups (%rcx), %zmm10\r\nvmovups 64(%rcx), %zmm9\r\nvmovups 128(%rcx), %zmm14\r\nvpermi2ps %zmm9, %zmm10, %zmm7\r\nvpermi2ps %zmm9, %zmm10, %zmm8\r\nvpermt2ps %zmm9, %zmm1, %zmm10\r\nvpermi2ps %zmm7, %zmm14, %zmm11\r\nvpermi2ps %zmm8, %zmm14, %zmm12\r\nvpermt2ps %zmm10, %zmm0, %zmm14\r\n60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/71e31876-bce7-4788-9ea7-704ee1818139.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=25e68e92dbd1c2e0866f5ab1bfa9ce7394cc23793cc235d44218bc8524b87e1a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 445
      },
      {
        "segments": [
          {
            "segment_id": "54511e0e-5e0f-416c-ba16-05a15d37bdd1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 61,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nOpenMP SIMD Linear(ref/val/uval)\r\nRationale:\r\n For implicitly reference linear parameters \r\nit is nice to have reference as linear \r\nOpenMP 4.5 syntax:\r\n Linearity specification for references vs. values\r\n linear(val(var):[step]) – the value is linear even if passed by \r\nreference\r\n If passed by reference the vector of references is \r\npassed\r\n linear(uval(var):[step]) – value passed by \r\nreference is linear\r\n The reference to the first lane is passed, \r\nother values constructed using step\r\n linear(ref(var):step) – for parameters passed by\r\nreference the underlying reference is linear\r\n Access will be sequential or strided\r\ndepending on step\r\n Original linear(var:[step]) – the same as\r\nlinear(val(var):[step])\r\n!$omp declare simd\r\nREAL FUNCTION FOO(X, Y)\r\nREAL, VALUE :: Y << by reference \r\nREAL, VALUE :: X << by reference\r\nFOO = X + Y << gathers!!!!\r\nEND FUNCTION FOO\r\n…\r\n!omp$ simd private(X,Y)\r\nDO I= 0, N\r\nY = B(I)\r\nX = A(I)\r\nC(I) += FOO(X, Y)\r\nENDDO\r\n!$omp declare simd linear(ref(x),ref(y)) \r\nREAL FUNCTION FOO(X, Y)\r\nREAL, VALUE :: Y << by reference \r\nREAL, VALUE :: X << by reference\r\nFOO = X + Y << sequential reads\r\nEND FUNCTION FOO\r\n…\r\n!omp$ simd private(X,Y)\r\nDO I= 0, N\r\nY = B(I)\r\nX = A(I)\r\nC(I) += FOO(X, Y)\r\nENDDO\r\n61",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/54511e0e-5e0f-416c-ba16-05a15d37bdd1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8166498e10b0ee37c1f2b1d6b9e5c284b8a5110043ff26b7e8cce42afa4a1eb3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7c7ba881-10c0-4547-b7dc-d15ba29638e7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 62,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLinear(ref/val/uval) Examples\r\nThings to remember:\r\n linear(ref(x:[step])) matches to unit/non-unit stride arguments if step match\r\n linear(ref(x)) matches to private arguments: these are allocated sequentially\r\n linear(uval(x)) is preferred to linear(val(x)) for by-reference passed read-only linears: uval facilitates more efficient parameter \r\npassing. If both specified uval is matched\r\nLinear(val)/linear(uval): \r\ninterface\r\nreal function func1(x, i)\r\n!$omp declare simd(func1) uniform(x) linear(val(i):1)\r\nreal(8), intent(inout) :: x(*)\r\ninteger, intent(in), value :: i\r\nend function func1\r\nreal function func2(x, i)\r\n!$omp declare simd(func2) uniform(x) linear(uval(i):1)\r\nreal(8), intent(inout) :: x(*)\r\ninteger, intent(in), value :: i\r\nend function func2\r\nend interface\r\n…\r\n!$omp simd linear(k:1)\r\ndo i=1, n\r\nx(i) = func1(x, k) << k passed as vector of refs\r\nx(i) = func2(x, k) << k passed as single ref\r\nk = k + 1\r\nenddo\r\nlinear(ref):\r\n#pragma omp declare simd linear(ref(p)) void add_one(int& p) { p += 1; }\r\nint a[NN];\r\n#prgma omp simd linear(p) for (i = 0; i < NN; i++) {\r\nadd_one(*p); <<< unit-stride load\r\np++; }\r\n#prgma omp simd private(p) for (i = 0; i < NN; i++) {\r\np = a[i];\r\nadd_one(p); <<< private b[i] = p; }\r\n#prgma omp simd\r\nfor (i = 0; i < NN; i++) {\r\nadd_one(i); <<< match, incorrect\r\n}\r\n62",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/7c7ba881-10c0-4547-b7dc-d15ba29638e7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d7c4fbd463f0611ef713ece9f2ce9249bbc24fac420f4623f1d04900982a0118",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 456
      },
      {
        "segments": [
          {
            "segment_id": "a3996d91-54e4-4957-9430-78a78901fa42",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 63,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSIMD Data Layout Template (SDLT) Library\r\n#include <stdio.h>\r\n#include <iostream>\r\n#define N 1024\r\ntypedef struct RGBs {\r\nfloat r; float g; float b;\r\n} RGBTy;\r\nvoid main()\r\n{\r\nRGBTy a[N];\r\n#pragma omp simd\r\nfor(int k=0; k<N; k++) {\r\na[k].r = k*1.5; a[k].g = k*2.5; a[k].b = k*3.5;\r\n}\r\nstd::cout << \"k =\" << 10 <<\r\n\", a[k].r =\" << a[10].r <<\r\n\", a[k].g =\" << a[10].g <<\r\n\", a[k].b =\" << a[10].b << std::endl;\r\n}\r\n#include <stdio.h>\r\n#include <sdlt/primitive.h>\r\n#include <sdlt/soa1d_container.h>\r\n#define N 1024\r\ntypedef struct RGBs {\r\nfloat r; float g; float b;\r\n} RGBTy;\r\nSDLT_PRIMITIVE(RGBTy, r, g, b)\r\nvoid main()\r\n{\r\nsdlt::soa1d_container<RGBTy> aContainer(N);\r\nauto a = aContainer.access();\r\n#pragma omp simd\r\nfor(int k=0; k<N; k++) {\r\na[k].r() = k*1.5; a[k].g() = k*2.5; a[k].b() = k*3.5;\r\n}\r\nstd::cout << \"k =\" << 10 <<\r\n\", a[k].r =\" << a[10].r() <<\r\n\", a[k].g =\" << a[10].g() <<\r\n\", a[k].b =\" << a[10].b() << std::endl;\r\n}\r\nr r r r …\r\ng g g g …\r\nb b b b …\r\nr g b r g b r g b …\r\n25",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a3996d91-54e4-4957-9430-78a78901fa42.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fb8bf01309ebd2946fe8186b6c1eb297647fa56e7eb7ba1c05f44ea624b10ce4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b0b726c5-fbc1-4bd4-a105-86ab9b6e921e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 64,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSDLT: AOS vs. SOA \r\n..B1.5: # Preds ..B1.5 ..B1.4\r\nvpaddd %zmm4, %zmm3, %zmm12 #19.3\r\nvcvtdq2ps %zmm3, %zmm7 #21.17\r\nvcvtdq2ps %zmm12, %zmm10 #21.17\r\nvmulps %zmm7, %zmm2, %zmm5 #21.19\r\nvmulps %zmm7, %zmm1, %zmm6 #22.19\r\nvmulps %zmm7, %zmm0, %zmm8 #23.19\r\nvmulps %zmm10, %zmm2, %zmm3 #21.19\r\nvmulps %zmm10, %zmm1, %zmm9 #22.19\r\nvmulps %zmm10, %zmm0, %zmm11 #23.19\r\nvmovups %zmm5, (%rsi,%rcx,4) #21.15\r\nvmovups %zmm6, (%rdx,%rcx,4) #22.15\r\nvmovups %zmm8, (%rax,%rcx,4) #23.15\r\nvmovups %zmm3, 64(%rsi,%rcx,4) #21.15\r\nvmovups %zmm9, 64(%rdx,%rcx,4) #22.15\r\nvmovups %zmm11, 64(%rax,%rcx,4) #23.15\r\nvpaddd %zmm4, %zmm12, %zmm3 #19.3\r\naddq $32, %rcx #21.6\r\ncmpq $1024, %rcx #21.6\r\njb ..B1.5 # Prob 82% #21.6\r\n..B1.3: # Preds ..B1.3 ..B1.2\r\nvcvtdq2ps %zmm5, %zmm11 #18.15\r\nlea (%rsp,%rax), %rcx #18.6\r\nvcvtdq2ps %zmm4, %zmm12 #18.15\r\nvpaddd %zmm6, %zmm5, %zmm5 #16.3\r\nvpaddd %zmm6, %zmm4, %zmm4 #16.3\r\nvmulps %zmm11, %zmm3, %zmm7 #18.17\r\nvmulps %zmm12, %zmm3, %zmm8 #18.17\r\nvmulps %zmm11, %zmm2, %zmm9 #19.17\r\nvmulps %zmm12, %zmm2, %zmm10 #19.17\r\nvmulps %zmm11, %zmm1, %z #20.17\r\nvmulps %zmm12, %zmm1, %zmm1 #20.17\r\nkxnorw %k0, %k0, %k1 #18.6\r\nkxnorw %k0, %k0, %k2 #18.6\r\nkxnorw %k0, %k0, %k3 #19.6\r\nkxnorw %k0, %k0, %k4 #19.6\r\nkxnorw %k0, %k0, %k5 #20.6\r\nkxnorw %k0, %k0, %k6 #20.6\r\nvscatterdps %zmm7, (%rcx,%zmm0,4){%k1} #18.6\r\nvscatterdps %zmm8, 192(%rcx,%zmm0,4){%k2} #18.6\r\naddl $32, %edx #17.12\r\nlea 4(%rsp,%rax), %rsi #18.6\r\nvscatterdps %zmm9, (%rsi,%zmm0,4){%k3} #19.6\r\nlea 8(%rsp,%rax), %rdi #18.6\r\nvscatterdps %zmm10, 192(%rsi,%zmm0,4){%k4} #19.6\r\nvscatterdps %zmm13, (%rdi,%zmm0,4){%k5} #20.6\r\nvscatterdps %zmm14, 192(%rdi,%zmm0,4){%k6} #20.6\r\naddq $384, %rax #17.12\r\ncmpl $1024, %edx #17.12\r\njb ..B1.3 # Prob 82% #17.12\r\nAOS AVX512 ASM Code SOA / SDLT AVX512 ASM Code: scatter instructions are all gone\r\n26",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/b0b726c5-fbc1-4bd4-a105-86ab9b6e921e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=aa6f5cf8f9f55582b5eb10e1055e8c4795c711889c234554da01fb2853582807",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "986690dc-bc80-4aef-b260-1a4fc01afa27",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 65,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nProgrammer Friendly Optimization Report\r\n30",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/986690dc-bc80-4aef-b260-1a4fc01afa27.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37f34e9be9b27c2cc7eee487a13ef8dc6f17e4a6b0387934f5f24edc848d4052",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 499
      },
      {
        "segments": [
          {
            "segment_id": "adee477b-fb29-45ee-bbdf-d9894b9c7567",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 66,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n Significant improvement in variable names and memory references reporting\r\n16.0: remark #15346: vector dependence: assumed ANTI dependence between line 108 and line 116\r\n17.0: remark #15346: vector dependence: assumed ANTI dependence between *(s1) (108:2) and *(r+4) (116:2)\r\n More precise non-vectorization reasons\r\no E.g.: “exception handling for function call prevents vectorization”\r\n Gather and partial scalarization reasons reporting (-qopt-report:5)\r\n16.0: remark #15328: vectorization support: gather was emulated for the variable xyBase: indirect access \r\n[scalar_dslash_fused.cpp(334,27)]\r\n17.0: remark #15328: vectorization support: gather was emulated for the variable \r\n<xyBase[xbOffset][c][s][1]>, indirect access, part of index is conditional\r\n[scalar_dslash_fused.cpp(334,27)]\r\nOther reasons are:\r\no read from memory\r\no nonlinearly computed\r\no is result of a call to function\r\no is linear but may overflow  either in unsigned indexing or in address computation\r\no is private  memory privatization in explicit vectorization or serialized computation\r\n31\r\nOptimization Report Improvements",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/adee477b-fb29-45ee-bbdf-d9894b9c7567.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=032ea0b8e61c919c7dedf11f5e3d01f11b5f735fa9bee1768bce5f5325e22c06",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "776b1a01-dbfd-40c5-a6f2-615b25aa6d11",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 67,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n67\r\nVectorization Advisor\r\nAssist code vectorization for Intel® SIMD (Zakhar A. Matveev)\r\n All the data you need in \r\none place\r\n Combines Intel Compiler opt-report \r\nwith dynamic profile. \r\n Detects “hot” un\u0002vectorized or “under \r\nvectorized” loops.\r\n Identify performance \r\npenalties and recommend \r\nfixes\r\n Explicit advices with “true intelligence” \r\nincluding OpenMP4.x\r\n Memory layout (stride) \r\nanalysis \r\n Increase the confidence \r\nthat vectorization is safe \r\n32",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/776b1a01-dbfd-40c5-a6f2-615b25aa6d11.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b49cde5a6a4649bd4ba31e66130b679b3a64c08dc9c6b66251ede7fbb9842cd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ecb65572-60a3-4b36-88ae-18e7af5470c5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 68,
            "page_width": 792,
            "page_height": 612,
            "content": "Advances: \r\nTackle C++ Challenges \r\nand Beyond",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/ecb65572-60a3-4b36-88ae-18e7af5470c5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8353f0294c8861c8b274cbd398b256e4293e507b6cabc139d69ae1e1de2e9af",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 260
      },
      {
        "segments": [
          {
            "segment_id": "83454076-6129-4616-b7bf-b651476771ec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 69,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n Syntax\r\no Exactly same syntax as for usual vector functions\r\n Inheritance:\r\no Set of versions inherited and cannot be altered in \r\noverrides\r\no Implication: SIMDness should be introduced along \r\nwith virtual method, not in overrides\r\n Things to remember:\r\no Performance depends on divergence:\r\no uniform(this) fastest: single call per chunk\r\no Different overrides in lanes slowest: loop for each unique \r\ncall target\r\no Limitations:\r\no Multiple inheritance is not supported\r\no Pointers to virtual vector methods are not supported \r\nclass A {\r\npublic:\r\n#pragma omp declare simd linear(X) \r\n#pragma omp declare simd uniform(this) linear(X)\r\nvirtual int foo(int X);\r\n};\r\n#pragma omp declare simd uniform(this) linear(X)\r\nint A::foo(int X){ return X+1; }\r\nclass B : public A {\r\npublic:\r\n// #pragma omp declare simd linear(X) - inherited\r\n// #pragma omp declare simd uniform(this) linear(X)\r\nint foo(int X) { return (X*X); }\r\n};\r\nint main() {\r\nA* b[N], a = new B();\r\nint sum=0;\r\nfor (int i=0; i < N; i++) { \r\nb[i] = (i % 6) < 2 ? new A() : new B();\r\n}\r\n#pragma omp simd reduction (+:sum)\r\nfor (int i=0; i < N; i++) {\r\nsum += a->foo(i); // uniform(this) matched\r\n} // one call per chunk\r\n#pragma omp simd reduction (+:sum)\r\nfor (int i=0; i < N; i++) {\r\nsum += b[i]->foo(i); // linear(X) matched \r\n} // 1 or 2 calls per chunk\r\nVirtual SIMD Functions\r\n69 34",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/83454076-6129-4616-b7bf-b651476771ec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1e20cdae2f47686ebabecd9621716d0fad091a078f75ec5dab661c13a32966cc",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d844b872-3a8a-41db-bbc4-d822484a0b32",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 70,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n// SIMD vector pointer declaration annotation\r\n#pragma omp declare simd // universal but slowest definition matches the use in all three loops\r\n#pragma omp declare simd linear(in1), linear(ref(in2)), uniform(mul) // matches the use in the first loop\r\nint (*funcptr)(int* in1, int& in2, int mul);\r\n70\r\nSIMD Function Pointers\r\nint *a, *b, mul, *c;\r\nint *ndx, nn;\r\n...\r\n// loop examples\r\n#pragma omp simd\r\nfor (int i = 0; i < nn; i++) {\r\nc[i] = func(a + i, *(b + i), mul); // in the loop, the first arg is changed linearly, \r\n// the second reference is changed linearly too\r\n// the third parameter is not changed\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d844b872-3a8a-41db-bbc4-d822484a0b32.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2f6347d528c54689d8a3baf39bc339bb300637e83aac89bc1c8c89cbc44aee3f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 386
      },
      {
        "segments": [
          {
            "segment_id": "25fcff5c-7be4-4732-a723-a797280aee13",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 71,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n71\r\nVector Function Pointers\r\nEnable: -simd-function-pointers/ -Qsimd-function-pointers\r\nThe syntax:\r\n Apply usual vector function declaration to a function pointer variable or function pointer \r\ntypedef\r\n Assign address of compatible SIMD-enabled function to a pointer or pass as parameter\r\nThings to remember\r\n Performance depends on divergence\r\n Scalar function pointers and vector function pointers are binary incompatible\r\n Vector specifications are not part of a type (at least not in current implementation)\r\n They may not be used for function overloading or template instantiation. No specific \r\nname mangling done for e.g. parameters of such types. \r\n Situations that may lead to run-time ambiguities are caught and error “Error #3757: this use \r\nof a vector function type is not fully supported” reported\r\n If you are sure that no ambiguity possible (e.g. function accepting vector function pointer has \r\ndistinct name and fully declared before all uses) you may override the error via –wd3757 \r\ncommand line switch",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/25fcff5c-7be4-4732-a723-a797280aee13.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ccf9daa3fc4b92c80eaa527bc7ddfb02eee3dd93d4ccfb1f030a9c8349542abf",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d9e3e2ce-1410-4104-af94-f96e520d2cd6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 72,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVectorizing Loop with vcompress/vexpand\r\n72\r\nCompress\r\ncount = 0;\r\n#pragma omp simd\r\nfor(i){\r\nif (cond(i)){\r\n#pragma omp ordered simd\r\n{\r\ncount++;\r\nA[count] = B[i];//compress\r\n}\r\n}\r\n}\r\nExpand\r\ncount = 0;\r\n#pragma omp simd\r\nfor(i){\r\nif (cond(i)){\r\n#pragma omp ordered simd\r\n{\r\ncount++;\r\nA[i] = B[count];//expand\r\n}\r\n}\r\n}\r\nA[0] A[1] A[2] A[3]\r\nB[0] B[1] B[2] B[3]\r\nA[0] A[1] A[2] A[3]\r\nB[0] B[1] B[2] B[3]\r\nWhen cond(i) is\r\n[F T F T]",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d9e3e2ce-1410-4104-af94-f96e520d2cd6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0f7818226772b26815168da4b25c6f4a771273c01e49ef3766e4c9b1cfbb1f0f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "49719352-fa4e-419a-8d3c-4eadc7702141",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 73,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCompress/Expand with Monotonic Semantics\r\n73\r\ncount = 0; inc = 1;\r\n#pragma omp simd\r\nfor(i=0; i<N; i++) { \r\n#pragma omp ordered simd monotonic(count: inc) // proposed clause\r\n{\r\nif (cond(i)) {\r\nA[count] += B[i]; // compress\r\ncount+=inc\r\nB[i] = C[count]; // expand\r\n}\r\n}\r\n}\r\nVector Operation with compress/expand\r\n{\r\nst1 = count\r\nvt2 = maskload(B[i], cond(i))\r\ncompressstore(A[st1], cond(i), vt2)\r\ncount += popcount(cond(i))\r\nst1 += inc\r\nvt3 = expandload(C[st1], cond(i))\r\nmaskstore(B[i], cond(i), vt3)\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/49719352-fa4e-419a-8d3c-4eadc7702141.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e944f73ba691890d0fdb6ce9e6ca2b23ceb1243ea977ecd3508465d59dc33746",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 367
      },
      {
        "segments": [
          {
            "segment_id": "b1e3bac1-0cad-48e3-ab92-d72bbffe72fa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 74,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n74\r\nIntegral part of Intel® Parallel Studio XE\r\nAs a software developer, I care about: …and my challenges \r\nare: Intel compilers offer:\r\nPerformance – I develop \r\napplications that need to \r\nexecute FAST\r\nTaking advantage of the \r\nlatest hardware \r\ninnovations\r\nDevelopers the full power \r\nof the latest x86-\r\ncompatible processors \r\nand instruction sets\r\nProductivity – I need \r\nproductivity and ease of use \r\noffered by compilers\r\nFinding support for the\r\nleading languages and \r\nprogramming models\r\nSupport for the latest \r\nFortran, C/C++, and \r\nOpenMP* standards; \r\ncompatibility with leading \r\ncompilers and IDEs\r\nScalability – I develop and \r\ndebug my application locally, \r\nand deploy my application \r\nglobally\r\nMaintaining my code as \r\ncore counts and vector \r\nwidths increase at a fast \r\npace\r\nScalable performance \r\nwithout changing code as \r\nnewer generation \r\nprocessors are introduced",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/b1e3bac1-0cad-48e3-ab92-d72bbffe72fa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=45640f4241ee7e421fbcaddc54e94aa597a6158ad269f9d1c42c0f8bfba18e6c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5a8effae-09d1-41ad-8b31-a42c54f8e48c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 75,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSummary: Close to Metal Performance via Explicit \r\nSIMD Programming\r\nThe reality: \r\n There is no one single solution that would make all programmers happy after \r\ndecades of trying. \r\n There is no free lunch for effectively utilizing SIMD HW in multicore CPUs, \r\naccelerators and GPUs.\r\n There are many emerging programming models for multicore CPUs, accelerators \r\nand GPUs. \r\n Programming languages and compilers are driven by hardware and application\r\n The incremental approach of applying the learnings from HPC and graphics is \r\nworking \r\nSimple programming language extensions for computational use of SIMD Hardware\r\nPortable and consistent SIMD programming model across CPU, Coprocessors and GPUs\r\n40",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/5a8effae-09d1-41ad-8b31-a42c54f8e48c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=275194f28b72a8449aa03d84790db8b17e5c023d8600c6989582dade2c9ebc2d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8f13b34f-fec1-4131-a79b-7348786563f7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 76,
            "page_width": 792,
            "page_height": 612,
            "content": "Robert Geva – Senior Principal Engineer \r\nIntel Corporation \r\nSeptember 11, 2016\r\nPACT 2016 Tutorial, Haifa, Israel",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/8f13b34f-fec1-4131-a79b-7348786563f7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=78f9e5a27b4a6ff499f2034eb198572cb8a6889852ebdd8641357d919ac0f2fc",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a590c38b-e971-44a5-bfb0-091d63396bf3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 77,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSection III: Agenda\r\n•HW support growing over time\r\n•Performance impact of SIMD\r\n•Vector programming as part of parallel programming\r\nIntroduction\r\n•Based on joint projects with Intel’s customers\r\n•Myth debunking: vectorization is about adding #pragma to the right loops Case studies\r\n•Why OpenMP is inadequate\r\n•What stays similar to OpenMP\r\n•How it is different\r\n•Future extensions to the proposal\r\nThe proposal being \r\nprocessed at the \r\nC++ standard\r\n•Best practices in using the vector syntax in algorithms\r\n•AVX512 specific patterns Design patterns\r\n•How to write GPGPU kernels in OpenMP\r\n•Myth debunking: why the same code for CPU ad GPU cannot be optimal for the CPU\r\n•Performance data: methodology, case studies and results\r\nPerformance \r\nportability",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a590c38b-e971-44a5-bfb0-091d63396bf3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=36a7188a411823afb1cb74caae49ec08d64ed44c63b938cdbc6bc26070546f1e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 426
      },
      {
        "segments": [
          {
            "segment_id": "67f190ea-b21c-4302-abac-4974d66eca65",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 78,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n78\r\n0.00\r\n50.00\r\n100.00\r\n150.00\r\n200.00\r\n250.00\r\n300.00\r\nX2007 X2009 X2010 X2012 X2013 X2014 X2016\r\nThousands\r\nBinomial Options\r\n(1) Incremental growth in CPU resources\r\n(2) Improvements in compilers and parallel \r\nframeworks\r\n(3) Better Parallelization techniques\r\nCores SIMD LANES\r\nX2007 8 128 32\r\nX2009 8 128 32\r\nX2010 12 128 48\r\nX2012 16 256 128\r\nX2013 24 256 192\r\nX2014 36 256 288\r\nX2016 44 256 352 0\r\n50\r\n100\r\n150\r\n200\r\n250\r\n300\r\n350\r\n400\r\nX2007 X2009 X2010 X2012 X2013 X2014 X2016\r\nvector lanes \r\nParallel computing with Intel Architecture",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/67f190ea-b21c-4302-abac-4974d66eca65.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c120bd6f0690894b3f1e412c4e1de16355088fce48ec2cc6a3f3027847f5a031",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "79abd1aa-730c-4d37-8421-4412b1934a18",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 79,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nParallel performance over time\r\n0\r\n20\r\n40\r\n60\r\n80\r\n100\r\nHTN NHM WSM SNB IVB HSW\r\nLIBOR Market Model normalized\r\n0.00\r\n0.50\r\n1.00\r\n1.50\r\n2.00\r\n2.50\r\n3.00\r\n3.50\r\n4.00\r\n4.50\r\nHTN 3.0 NHM 2.9 WSM 3.3 SNB 2.9 IVB 2.7 HSW 2.2\r\nOptions Processed Per Sec, in \r\nBillions \r\nHigher is Better\r\nBlack Scholes DP\r\n0\r\n50\r\n100\r\n150\r\n200\r\n250\r\nHTN NHM WSM SNB IBV HSW BDW\r\nMonte Carlo Asian Options\r\nSS VS SP VP\r\n0\r\n50\r\n100\r\n150\r\n200\r\nX2007 X2009 X2010 X2012 X2013 X2014 X2016\r\nMonte Carlo American Options \r\nSS VS SP VP",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/79abd1aa-730c-4d37-8421-4412b1934a18.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ed4431b746faaed2b853edd06a9208fd4e72ed7c45c1e7288d5f408920d2729d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e0d69e79-9d49-4cb4-877f-7d775f86799e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 80,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nParallel Programming for Intel® Architecture\r\n(or, in general, for normal CPUs)\r\nCores\r\nVectors\r\nMemory, \r\ncaches\r\nData layout \r\nand \r\nalignment\r\nOpenMP TBB Cilk plus\r\nVector\r\nloops\r\nVector\r\nfunctions\r\nBlocking \r\nalgorithms\r\nManual \r\nlayout, ugly \r\ncode\r\nAoS  SoA\r\nlibrary\r\n4 considerations to take care of when writing \r\nan efficient, unconstrained parallel program \r\nArray \r\nnotations\r\nThreads, \r\nlocks\r\nIntrinsics\r\nDirectives \r\nfor \r\nalignment\r\nAligned \r\nallocators",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/e0d69e79-9d49-4cb4-877f-7d775f86799e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3a8e493a74304c76ef9043af392b9a777a74d6eaa7dd97e2be419711251728a1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "450b8c0c-82cf-40eb-879f-b345d04c9766",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 81,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n#1 Best Practice in Parallelizing a Loop Hierarchy\r\nIf still not enough parallelize try to add more \r\nwork or increase the problem size\r\nOtherwise parallelize an additional inner level\r\nIf that provides sufficient parallelism stop, don’t \r\noversubsribe\r\nParallelize at the outermost level, seek maximal \r\namount of work to execute in parallel\r\nA shallow hierarchy may result in a loop that has to be both parallelized \r\nand vectorized. In that case, it needs to both provide sufficient amount \r\nof work and uniform control flow and memory access\r\nIf vectorization of innermost loop \r\nis not profitable try to vectorize an \r\nouter loop\r\nTry to vectorize the innermost loop(s). \r\nEnsure minimal control flow divergence and \r\nmemory access uniformity\r\nMake sure the algorithm is cache \r\nefficient\r\nVectorize Innermost, Parallelize Outermost (VIPO)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/450b8c0c-82cf-40eb-879f-b345d04c9766.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b23c66207a4f425ffa376d9509c57ba649317aaf5cfe9f2e33a70184c22b6765",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 459
      },
      {
        "segments": [
          {
            "segment_id": "25b1f9a4-7759-42f7-aba1-28f86f6136ec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 82,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nrobert.geva@intel.com\r\nPerformance with vector parallelism \r\n9/18/2016\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\nMC Binomial BS\r\nSerial, single prec\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\nMC Binomial BS\r\nparallel, single prec\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nMC Binomial LMM\r\nserial, double prec\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\nMC Binomial LMM\r\nparallel, double prec\r\nSoftware and workloads used in performance tests may have been optimized for performance only on Intel microprocessors. \r\nPerformance tests, such as SYSmark and MobileMark, are measured using specific computer systems, components, software, operations and functions. \r\nAny change to any of those factors may cause the results to vary. You should consult other information and performance tests to assist you in fully evaluating your contemplated purchases, \r\nincluding the performance of that product when combined with other products. See backup slides for configuration details. For more information go to http://www.intel.com/performance\r\nConfiguration SOURCE: INTEL MEASURED RESULTS AS OF March, 2014",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/25b1f9a4-7759-42f7-aba1-28f86f6136ec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e20ec6fe65b0dec7f48fb5959bd90ca2a45903f54b1d7c51e18b119dc45a2bbd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8ef350c2-3297-4a1e-b9e0-987772bba484",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 83,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVector Programming (Part of Parallel Programming)\r\nLanguage \r\nspecification\r\nCompiler(s) \r\nimplementation\r\nAlgorithmic Best \r\nPractices\r\nSocialize\r\nEffective use of the new syntax\r\nEfficient design level considerations",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/8ef350c2-3297-4a1e-b9e0-987772bba484.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=45a85069fd920c330e68f4a49bcfe0b9af4c336459b00289816846cc9e8113ef",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "239f4128-398d-4a36-9af7-af5dce4e7c01",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 84,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCapabilities in Vector Programming\r\n1. Vector Loops\r\na) The syntax means that a loop is a vector loop\r\nb) Used mostly at the application level\r\nc) Syntax can look like OpenMP*, Intel® Cilk™, Intel® Threading Building \r\nBlocks, etc.\r\nd) The loop is single threaded and consistent with SIMD execution\r\ne) Additional syntax for more capabilities\r\n2. Vector Functions\r\na) The function is compiled as if it is part of the body of a vector loop\r\nb) For use in larger projects and for libraries\r\nc) Organizations interested in methodological\r\nparallel programming\r\nd) Additional syntax for more capabilities\r\n#pragma omp declare simd\r\nvec_add (float *a,float *b,float *c int i)\r\n{\r\na[i] = b[i]+c[i] ;\r\n}\r\n#pragma omp simd\r\nfor(i = 0; i<N; ++i) \r\n{\r\na[i] = b[i]+c[i] ;\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/239f4128-398d-4a36-9af7-af5dce4e7c01.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ee4c96f0f0772a6edeb1686a15cd48f98387a90fe668dbb179d311b10f9926ca",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "72f449ca-9476-4863-a436-741ddc53deaf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 85,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCase studies",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/72f449ca-9476-4863-a436-741ddc53deaf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=895d812cc07a492a50134391d66009885acc0fbaf558a23124bb5edbb492c136",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 395
      },
      {
        "segments": [
          {
            "segment_id": "9fe22c00-140d-4e9f-880f-6435f355627d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 86,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCase Study: Trinomial options\r\nVectorize the inner loop\r\nSoftware and workloads used in performance tests may have been optimized for performance only on Intel microprocessors. \r\nPerformance tests, such as SYSmark and MobileMark, are measured using specific computer systems, components, software, operations and functions. \r\nAny change to any of those factors may cause the results to vary. You should consult other information and performance tests to assist you in fully evaluating your contemplated purchases, \r\nsec How was it done\r\n31 GCC Baseline\r\n28.7 1.1X ICC Baseline\r\n19.0 1.6X Vectorize critical loop.\r\n14.3 2.2X Use AVX \r\n11.6 2.7X Add aligned vectors\r\n0.84 37X Parallelize with OMP\r\n0.60 51X Move to Intel® Xeon \r\nPhi coprocessor\r\n#pragma omp simd\r\nfor (int n = 0; n < 2*m + 1; n++)\r\n{ \r\nvCurrent[n] = fmax( BsAnalyticIntrinsicValue(TreeGetAdjustedSpot(m, n, params), kMod, isCall), \r\ndiscount*(ExpectedValue(vCurrent[n], vCurrent[n + 1], vCurrent[n + 2], params))); \r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9fe22c00-140d-4e9f-880f-6435f355627d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=19ae7e0b50f6ea1445301035becfdf2e9c7657bb5b8a8fd06cb7edd1e09e6fda",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f1fe05b4-d04d-4402-8d79-738bb55200c1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 87,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAsian Options example: Vectorize an outer loop \r\n#pragma omp parallel for simd reduction(+:val) reduction(+:val2)\r\nfor(int pos = 0; pos < RAND_N; pos++)\r\n{\r\n__declspec(align(64)) tfloat simStepResult[SIMSTEPS+1];\r\nsimStepResult[0] = 1.0;\r\ntfloat avgMean = 0.0;\r\nfor (int simStep =0; simStep < SIMSTEPS; simStep++)\r\n{\r\nlocation = pos*SIMSTEPS + simStep;\r\nsimStepResult[simStep+1] = simStepResult[simStep]*EXP(MuByT + VBySqrtT*l_Random[location]);\r\navgMean += simStepResult[simStep+1];\r\n}\r\n//Use Arithmetic Mean\r\navgMean *= Sval/SIMSTEPS;\r\ntfloat callValue = max((avgMean - Xval), 0);\r\nval += callValue;\r\nval2 += callValue * callValue;\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f1fe05b4-d04d-4402-8d79-738bb55200c1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8cb880cec1f22f5cc72055587105b52d55dfc3758b27ce2bfcf1e0968b9f78d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7e3b795b-d5a3-46a9-8603-6dec2042cb5a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 88,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLIBOR case study: Vectorize an outer loop with function calls\r\n#pragma omp declare simd\r\nstatic void path_calc_b1(REAL *z, REAL *L, REAL *L2, const REAL* lambda)\r\n{\r\nint i, n;\r\nREAL sqez, lam, con1, v, vrat;\r\nmemcpy(L2, L, NN*sizeof(REAL));\r\nfor (n = 0; n < NMAT; n++) {\r\nsqez = SQRT_DELTA * z[n];\r\nv =REAL(0);\r\nfor (i=n+1; i<NN; i++) {\r\nlam = lambda[i-n-1];\r\ncon1 = DELTA * lam;\r\nv += con1 * L[i] / (REAL(1) + DELTA * L[i]);\r\nvrat = std::exp(con1 * v + lam * (sqez - REAL(0.5) * con1));\r\nL[i] = L[i] * vrat;\r\nL2[i+(n+1)*NN] = L[i];\r\n}\r\n}\r\n}\r\n#pragma omp simd reduction(+: sumv) reduction(+: sumlb) \r\nfor (path=0; path<numPaths; path++) {\r\npath_calc_b1(ptrZ, L, L2, lambda);\r\npath_calc_b2(L_b, L2, lambda);\r\n}\r\nA few lines of code\r\nremoved to fit into\r\nthe page",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/7e3b795b-d5a3-46a9-8603-6dec2042cb5a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f76fa1c168a8647be2e2a3e9f4a36aa44f3eabc29c732b661bd372d55dedbaf4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "26e40998-0c9f-429c-a72e-8f5a11b52311",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 89,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMyth: To vectorize, I have \r\nto find the suitable loops \r\nand add #pragmas to \r\nthem.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/26e40998-0c9f-429c-a72e-8f5a11b52311.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ea41c7a24d5827ea4845310e3204c18f7d89a397d58ebd9cf8322e951a598d40",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 458
      },
      {
        "segments": [
          {
            "segment_id": "9bbaf505-dfc6-46d1-a446-07d6aa7b6c90",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 90,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nOpenMP parallelism: wrong way\r\nnbnds=jend-jstart+1 ! [jstart,jend)\r\n!$OMP PARALLEL FOR collapse(2)\r\nDO j=1,nbnds\r\nDO ir=1,nrxxs\r\nrho(ir,j)=CONJG(exxbuff(ir,j+jstart))*temppsi(ir)/Omega\r\nENDDO\r\nENDDO\r\nFFTm(rho) ! Batch 3D FFT\r\n!$OMP PARALLEL FOR collapse(2)\r\nDO j=1,nbnds\r\nDO ir=1,nrxxs\r\nvc(ir,j)=facb(ir)*rho(ir,j)*x(j+jstart)*y\r\nENDDO\r\nENDDO\r\ninvFFTm(vc) ! Batch 3D FFT\r\n!some more on vc\r\n!$OMP PARALLEL FOR\r\nDo ir=1,nrxxs\r\nDo j=1,nbnds\r\nresult(ir)=result(ir)+vc(ir,j)*exxbuff(ir,j+jstart)\r\nENDDO\r\nENDDO\r\ncollapse(2) introduced to expose \r\nparallelism over nbnds*nrxxs, but \r\n• temppsi shared by j \r\n• cannot be linearlized\r\n• poor cache use",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9bbaf505-dfc6-46d1-a446-07d6aa7b6c90.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b65c948fe3e00e70fc7a9091d9edd3bcc25c701e303e5505479b6e355c44d224",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c7c44fd4-5e8b-4f2f-b396-500cc16f105d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 91,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nBlocking: Parallelism, SIMD and Cache \r\nblocking\r\nnbnds=jend-jstart+1 ! [jstart,jend)\r\nnblocks=2048\r\n!$OMP PARALLEL FOR collapse(2)\r\nDO irb=1,nrxxs,nblocks\r\nDO j=1,nbnds\r\nirmax=min(nrxxs,irb+nblocks)\r\n!DIR$ vector nontemporal(rho)\r\nDO ir=irb,irmax\r\nrho(ir,j)=CONJG(exxbuff(ir,j+jstart))*temppsi(ir)/Omega\r\nENDDO\r\nENDDO\r\nENDDO\r\nEmpirically determined for this loop\r\n• irb-j loop better than j-irb\r\n• nblocks=2048\r\n• streaming stores (to be explored further later after dungeon)\r\nOther seemingly similar loops favor j-irb\r\nReduction kernels benefit from blocking",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/c7c44fd4-5e8b-4f2f-b396-500cc16f105d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=413c9252016ea286e658ec62e3e188ecf57872275bdf8f4e31502a0498706fbb",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d05f8bce-a039-4dd6-aa56-24ab9bc1d489",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 92,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n92\r\nSTAC-A2: breaking dependencies\r\nvoid sum(const int* in1, const int* in2, std::size_t\r\nsize, int* out)\r\n{\r\n#pragma omp simd\r\nfor(int i=0; i<size; ++i ){\r\nout[i] = in1[i] + in2[i];\r\n}\r\n}\r\nfor (unsigned p = 0; i < nPaths; ++p)\r\n{\r\ndouble mV[nTimeSteps];\r\ndouble mY[nTimeSteps];\r\n…..\r\nfor (unsigned int t = 0; t < nTimeSteps; ++t){\r\ndouble currState = mY[t] ; // Backward dependency\r\n….\r\ndouble logSpotPrice = func(currState, …);\r\nmY[t+1][p] = logSpotPrice * A[t];\r\nmV[t+1][p] = logSpotPrice * B[t] + C[t] * mV[t][p];\r\nprice[t][p] = logSpotPrice*D[t] +E[t] * mV[t][p];\r\n}\r\n}\r\ndouble mV[nTimeSteps][nPaths];\r\ndouble mY[nTimeSteps][nPaths];\r\n…\r\nfor (unsigned int t = 0; t < nTimeSteps; ++t){\r\n#pragma omp simd\r\nfor (unsigned p = 0; i < nPaths; ++p)\r\n{\r\ndouble currState = mY[t][p] ;\r\n….\r\ndouble logSpotPrice = func(currState, …);\r\nmY[t+1][p] = logSpotPrice * A[t];\r\nmV[t+1][p] = logSpotPrice * B[t] + C[t] * mV[t][p];\r\nprice[t][p] = logSpotPrice*D[t] +E[t] * mV[t][p];\r\n}\r\n}\r\nOriginal Code Modified Code",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d05f8bce-a039-4dd6-aa56-24ab9bc1d489.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=416d743168120855053a587d00eccba9de53701e427df374a46a0a89650cd658",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "520f5378-dc6b-4e3c-a747-97b6e4dfc97f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 93,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n93\r\nIntel® TBB parallel blocks, using ranges\r\ntbb::parallel_for(blocked_range<int>(0, nPaths),\r\n[&](const blocked_range<int>& r) {\r\ncosnt int block_size = r.size();\r\ndouble mV[nTimeSteps][block_size];\r\ndouble mY[nTimeSteps][block_size];\r\n…\r\nfor (unsigned int t = 0; t < nTimeSteps; ++t){\r\n#pragma omp simd\r\nfor (unsigned p = 0; i < block_size; ++p)\r\n{\r\ndouble currState = mY[t][p] ;\r\n….\r\ndouble logSpotPrice = func(currState, …);\r\nmY[t+1][p] = logSpotPrice * A[t];\r\nmV[t+1][p] = logSpotPrice * B[t] + C[t] * mV[t][p];\r\nprice[t][r.begin()+p] = logSpotPrice*D[t] +E[t] * mV[t][p];\r\n}\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/520f5378-dc6b-4e3c-a747-97b6e4dfc97f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=135844ab1d620796b0733646ee6b2d14937d77324500726dfba24adcbb21b320",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 460
      },
      {
        "segments": [
          {
            "segment_id": "f0da6734-b59b-4fbd-b0af-2392d302d908",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 94,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n94\r\nPDE solver\r\nvoid solve_tridigonal (double* x, const int N, double* a, double* b, double\r\n*c, double* cprime)\r\n{\r\ncprime[0] = c[0] / b[0];\r\nx[0] = x[0] / b[0];\r\nfor (int in = 1; in < N; in++) {\r\nREAL m = REAL(1.0) / (b[in] - a[in] * cprime[in - 1]);\r\ncprime[in] = c[in] * m;\r\nx[in] = (x[in] - a[in] * x[in - 1]) * m;\r\n}\r\nfor (int in = N - 2; in-- > 0; )\r\nx[in] = x[in] - cprime[in] * x[in + 1];\r\n}\r\nMost of the time is in the Thomas\r\nalgorithm, solving a tridiagonal matrix\r\nEfficient and serial",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f0da6734-b59b-4fbd-b0af-2392d302d908.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6c6651eac01fa3ae5bc27e1232bb6082aea7f265b4c4fbc3677c943e8658ab4b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "86e10412-9de7-44b3-986d-5833625d0ab3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 95,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n95\r\nBut there is not a single matrix, there are many of \r\nthem. \r\n//Solve 2D PDE\r\nfor(int j=1; j<OUTER-1; j++)\r\n{\r\nfor(int i=1; i<INNER-1; i++)\r\n{\r\n//Create RHS\r\nH[i] = v1[i][j];\r\n}\r\nh[1] = h[1] - a[1]*v2[0][j];\r\nh[INNER-2] = h[INNER-2] - c[INNER-2]*v2[INNER-1][j];;\r\n//Solve Tridiagonal system using Thomas Algorithm\r\nsolve_tridigonal (&h[1], INNER-2, &a[1], &b[1], &c[1], &scratch[1]);\r\n//copy RHS to v2\r\nfor(int i=1; i<INNER-1; i++)\r\n{\r\nv2[i][j] = h[i];\r\n} \r\n}\r\nThere is a loop of calls to the solver",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/86e10412-9de7-44b3-986d-5833625d0ab3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=92f51086740f1ddf1e02a311ccb704e17fb07b1f40f676a9dbeb6fd8a668ecf5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "59306a45-131f-4887-909f-58701eaeb3b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 96,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n96\r\nWiden the outer loop stride – add a dimension -\r\nmake space for a new inner loop\r\n//Solve 2D PDE\r\nfor(int j=1; j<OUTER-1; j+=DIMNSZ)\r\n{\r\nfor(int i=1; i<INNER-1; i++)\r\n{\r\n#pragma simd\r\nfor(int j1=0; j1<DIMNSZ; j1++)\r\n{\r\nint cntJ = j+j1;\r\nh[i][j1] = v1[i][cntJ];\r\n}\r\n}\r\n#pragma simd\r\nfor(int j1=0; j1<DIMNSZ; j1++)\r\n{\r\nint cntJ = j+j1;\r\nh[1][j1] = h[1][j1] - a[1]*v2[0][cntJ];\r\nh[INNER-2][j1] = h[INNER-2][j1] - c[INNER-2]*v2[INNER-1][cntJ];\r\n} \r\n//Solve Tridiagonal system using Thomas Algorithm\r\nsolve_tridigonal_simd(&h[1], INNER - 2, &a[1], &b[1], &c[1], &scratch[1]);\r\nfor(int i=1; i<INNER-1; i++)\r\n{\r\n#pragma simd\r\nfor(int j1=0; j1<DIMNSZ; j1++)\r\n{\r\nint cntJ = j+j1;\r\nv2[i][cntJ] = h[i][j1];\r\n}\r\n}\r\n}\r\nAdd a \r\ndimension\r\nAdd a \r\ndimension",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/59306a45-131f-4887-909f-58701eaeb3b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a4ec7e9d1a3d87a505aee4138da1a4cb6e7860e4efa73e33cfa51de7992faae0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 360
      },
      {
        "segments": [
          {
            "segment_id": "158da376-cd3a-4c9c-8728-0d34867a51ca",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 97,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n97\r\nThe new inner loop can vectorize a the new \r\ndimension, where there are no dependencies\r\nvoid solve_tridigonal_simd (double x[][DIMNSZ], const int N, double* a, double* b, double *c, double * \r\ncprime)\r\n{\r\ncprime[0] = c[0] / b[0];\r\n#pragma simd\r\nfor(int j=0; j<DIMNSZ; j++)\r\n{\r\nx[0][j] = x[0][j] / b[0];\r\n}\r\n/* loop from 1 to N - 1 inclusive */\r\nfor (int in = 1; in < N; in++)\r\n{\r\ndouble tmpA = a[in];\r\ndouble tmpB = b[in];\r\ndouble tmpC = c[in];\r\ndouble m = REAL(1.0) / (tmpB - tmpA * cprime[in - 1]);\r\ncprime[in] = tmpC * m;\r\n#pragma simd\r\nfor (int j =0; j<DIMNSZ; j++)\r\n{ \r\nx[in][j] = (x[in][j] - tmpA * x[in - 1][j]) *m;\r\n}\r\n}\r\nfor (int in = N - 2; in-- > 0; )\r\n{\r\ndouble cPrime = cprime[in];\r\n#pragma simd\r\nfor (int j =0; j<DIMNSZ; j++)\r\n{ \r\nx[in][j] = x[in][j] - cPrime * x[in + 1][j];\r\n}\r\n}\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/158da376-cd3a-4c9c-8728-0d34867a51ca.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6b412160c475654c0507de54854c26d86768cd8330ea9171315f3abbbdc00207",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8cda9c41-9c14-4674-ac04-c103417bcd89",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 98,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nFX LSV Monte Carlo case study\r\nCiti | Market Quantitative Analysis\r\nThomas Trenner\r\nRobert Geva",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/8cda9c41-9c14-4674-ac04-c103417bcd89.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6cd91d25e32d2b4ddc6a9d6df55b5f43d2b547313912f43c793b46c99ec4027c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "cd0f167d-5752-4884-9838-974503c199a0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 99,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLoop interchange leads to canonical loop hierarchy\r\nblocks loop\r\npath loop\r\ntime loop\r\nblocks loops – data independent \r\npath loop – data independent\r\ntime loop – value at t depends\r\non value at t-1 \r\nblocks loop\r\ntime loop\r\npath loop\r\nParallelize the outer loop\r\nkeep the middle loop sequential\r\nvectorize the inner loop:\r\nThis works best!",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/cd0f167d-5752-4884-9838-974503c199a0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=412cfe867dc40e1326fb9c0b98a4b265fea73452ac562b0b8dddc7687ddc17ac",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "15f29734-32a9-4974-96c3-2a3be75ceadb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 100,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nResults\r\n100\r\nStep Thread \r\ncount\r\nTime \r\n(Secs)\r\nMeasurements were taken on an E5-2697 Haswell with\r\n ICC v 15.0.1\r\n RHEL 6.5\r\n1 1 82.6 Baseline Results\r\n2 1 24.6 Loop interchange\r\n3 1 11.3 With vectorization\r\n2.2x Vectorization Speedup.\r\n4 1 9.9 +MKL RNG.\r\n5 1 9.4 +TBB allocator\r\n8.8x Single Threaded Speedup.\r\n6 28 0.47 +TBB Threads\r\n7 28 0.45 +Turbo mode enabled.\r\n183x Multi threaded Speedup.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/15f29734-32a9-4974-96c3-2a3be75ceadb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=619527481b38c8667d91d3851475971d34109e0b9b450997ea9cb4c84d6f1210",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "713ccd87-c7d1-4b61-90b7-4a3bd2c2b3db",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 101,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVectorization",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/713ccd87-c7d1-4b61-90b7-4a3bd2c2b3db.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8227efcf7b685a6988c41faf03b39884e92e5d214c253bc2d8188a74d7cd4583",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 409
      },
      {
        "segments": [
          {
            "segment_id": "184d62c0-bcc1-419d-8637-22740eca736b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 102,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nConcepts used in vectorising the loop\r\n#pragma simd: \r\n• semantically correct to re-associate the order of evaluation, leading to vectorization\r\nFirst private: \r\n• each iteration gets a private copy of the object, initialized by the value it has prior to the loop\r\nAssert: \r\n• abort compilation with an error message if the loop is not vectorized\r\nVectorlengthfor(type): \r\n• The size of type determines how many loop iteration to vectorize across\r\ndeclspec(vector): \r\n• A vector function. Compiled and execute as if a body of a vector loop \r\nUniform(parameter): \r\n• All values of parameter in one vector invocation of the function are the same\r\nProcessor(code_4th_gen_avx): \r\n• use YMM to pass arguments, (the default is XMM)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/184d62c0-bcc1-419d-8637-22740eca736b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=defde052d673f0d606e4400debb92ac90c4e83d592ca0f4e265c0da849de7b8d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c7f4d802-e261-4ae4-b5ec-832c1d2413ee",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 103,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nReality: in most of real life \r\ncases, the loop that ended \r\nup vectorized, did not \r\nexist in the original code. \r\nIt resulted due to one of \r\nthe restructuring best \r\npractices",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/c7f4d802-e261-4ae4-b5ec-832c1d2413ee.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2d043a900245f7e5b1a4574309bbb76442877bd8c7a9f2e2e6e477038d227a83",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0221c034-6279-4304-89a8-045c8134a4d7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 104,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nDesign patterns",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/0221c034-6279-4304-89a8-045c8134a4d7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b9900104149295bd496f608781c4b4e12d4e6c68babc0f8ad939f61b7c3ff79c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a8250c4a-c349-4661-a9ed-a171d4829856",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 105,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nA simple patterns\r\n#prgma omp declare simd\r\nvoid BlackScholesBodyCPU(\r\nfloat* call, //Call option price\r\nfloat* put, //Put option price\r\nfloat Sf, //Current stock price\r\nfloat Xf, //Option strike price\r\nfloat Tf, //Option years\r\nfloat Rf, //Riskless rate of return\r\nfloat Vf //Stock volatility\r\n){\r\nfloat S = Sf, X = Xf, T = Tf, R = Rf, V = Vf;\r\nfloat CNDD1, CNDD2, sqrtT, expRT\r\nsqrtT = sqrtf(T);\r\nd1 = (logf(S / X) + (R + 0.5f * V * V) * T) / (V * sqrtT);\r\nd2 = d1 - V * sqrtT;\r\nCNDD1 = CND(d1);\r\nCNDD2 = CND(d2);\r\nexpRT = expf(- R * T);\r\n*call = (FTYPE)(S * CNDD1 - X * expRT * CNDD2);\r\n*put = (FTYPE)(X * expRT * (1.0f - CNDD2) - S * (1.0f -\r\nCNDD1));\r\n}\r\n#pragma omp parallel simd for \r\nfor (int i = 0; i < m_optionCount; i++)\r\nBlackScholesBodyCPU(&resultCallGen[i], &resultPutGen[i],\r\nstockPrice[i], optionStrike[i], optionYears[i],R,m_V);\r\nA loop with no data dependencies\r\nNo control flow\r\nSimple memory access\r\nCould also be parallelized\r\nScales well",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a8250c4a-c349-4661-a9ed-a171d4829856.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0980c13ff89a0130e78a58ba3c339632608deddba8e006a8851f5e450fbcb7df",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 403
      },
      {
        "segments": [
          {
            "segment_id": "18e8e31e-4ada-4ba1-accd-d45f165a3061",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 106,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nA loop with forward dependence\r\nfloat stepsArray[STEPS_CACHE_SIZE];\r\n#pragma omp simd \r\nfor (int j = 0; j < STEPS_CACHE_SIZE; j++) {\r\nfloat profit = s * expf(vsdt * (2.0f * j - numSteps)) - x;\r\nstepsArray[j] = profit > 0.0f ? profit : 0.0f;\r\n}\r\nfor (int j = 0; j < numSteps; j++) {\r\n#pragma omp simd\r\nfor (int k = 0; k < NUM_STEPS_ROUND; ++k) {\r\nstepsArray[k] = pdByr * stepsArray[k + 1] + puByr * stepsArray[k];\r\n}\r\n}\r\nThe vector loops propagates values from root to leaves\r\nLooks very similar to original, sequential loop\r\nstepArray[k] depends on stepArray[k+1], vector programming supports it\r\nSIMD != SIMT\r\nParallelization is at an outer level.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/18e8e31e-4ada-4ba1-accd-d45f165a3061.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f8e2f860b2f6795b5284f709dd1e8ac1b4a4aab92aff51f382f1a24b80646637",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9244d75c-ed72-4e95-921b-cb6e99b4e587",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 107,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nParameter Qualifiers\r\n#pragma omp declare simd\r\nvoid foo (float &a, int i)\r\n{\r\nx = a[i];\r\n}\r\nCompiling the vector variant will generate\r\nmultiple expressions of x = a[i] – what are the\r\nrelationship between the memory accesses?\r\nIf the compiler doesn't know better,\r\nthen they are unrelated.\r\n#pragma omp declare simd uniform (a)\r\nvoid foo(float *a, int i);\r\na is a pointer\r\ni is a vector of integers\r\na[i] becomes gather/scatter\r\n#pragma omp declare simd linear(i)\r\nvoid foo(float *a, int i);\r\na is a vector of pointers\r\ni is a sequence of integers\r\n[i, i+1, i+2…]\r\na[i] becomes gather/scatter\r\n#pragma omp declare simd \r\nuniform(a),linear(i))\r\nvoid foo(float *a, int i);\r\na is a pointer\r\ni is a sequence of integers [i, i+1, i+2…]\r\na[i] is a unit-stride load/store ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9244d75c-ed72-4e95-921b-cb6e99b4e587.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2cd5ab6203c5add2bc1ab83e1ec83e3bace2b895aa284a65b3730c4ada926937",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6a2be21f-9748-4894-8151-50482f67062a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 108,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMultiple Variants of a Vector Function\r\n#pragma omp declare simd\r\n#pragma omp declare simd uniform(r,op1,op2) linear (i)\r\nVoid\r\nvec_add ( float *r, float *op1, float *op2, int i)\r\n{\r\nr[i] = op1[i] + op2[i];\r\n}\r\nTwo vector variants\r\nand one scalar\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a,b,c,i);\r\n}\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a[x1[[i]],b[x2[i]],c[x3[i]],i);\r\n}\r\nCall matches the \r\nvariant w/o the \r\nuniforms\r\nCall matches the \r\nvariant with the \r\nuniforms",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/6a2be21f-9748-4894-8151-50482f67062a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ac073f7ba449a368236e22aa3ff375fcd4097565601292057c64275e6f48372",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3146f008-fdb8-47e9-a3d9-cfb63cbe93f3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 109,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMultiple Variants of a Vector Function\r\n#pragma omp declare simd\r\n#pragma omp declare simd uniform(r,op1,op2) linear (i)\r\nVoid\r\nvec_add ( float *r, float *op1, float *op2, int i)\r\n{\r\nr[i] = op1[i] + op2[i];\r\n}\r\nTwo vector variants\r\nand one scalar\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a,b,c,i);\r\n}\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a[x1[[i]],b[x2[i]],c[x3[i]],i);\r\n}\r\nCall matches the \r\nvariant w/o the \r\nuniforms\r\nCall matches the \r\nvariant with the \r\nuniforms",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/3146f008-fdb8-47e9-a3d9-cfb63cbe93f3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=469e931da7c99ae11a5cb5c3678a9ff7d4ecec663358191b5ce2f5e3acaae124",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 491
      },
      {
        "segments": [
          {
            "segment_id": "dbb3b45a-2b80-4974-a02b-3844e3caccbd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 110,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMultiple Variants of a Vector Function\r\n#pragma omp declare simd\r\n#pragma omp declare simd uniform(r,op1,op2) linear (i)\r\nVoid\r\nvec_add ( float *r, float *op1, float *op2, int i)\r\n{\r\nr[i] = op1[i] + op2[i];\r\n}\r\nTwo vector variants\r\nand one scalar\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a,b,c,i);\r\n}\r\n#pragma omp simd\r\nfor (int i = 0; i<N; ++i) {\r\nvec_add(a[x1[[i]],b[x2[i]],c[x3[i]],i);\r\n}\r\nCall matches the \r\nvariant w/o the \r\nuniforms\r\nCall matches the \r\nvariant with the \r\nuniforms",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/dbb3b45a-2b80-4974-a02b-3844e3caccbd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=df5b8cfb0282c59adc168f79417d2438cbc113de22c5b7a8eca7f0cc21c0de86",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9a2e3905-3823-475c-afde-5a6fcc2bd0a5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 111,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nAdditional SIMD specific capabilities \r\n111\r\nScatter write: a[b[x]] = d[x];\r\nHistogram: a[b[x]]++;\r\nExpand: if (c[i]) a[i] = b[i] * d[j++];\r\nCompress: if (c[i]) a[j++] = b[i] * d[i];",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9a2e3905-3823-475c-afde-5a6fcc2bd0a5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c0220c78548c5c4620832e7e75ddb458259629c82615274923988d165f0b7035",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4f4dd408-85f6-4b8b-bf01-de0f72fd3b05",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 112,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nA lopsided loop\r\nAssume execution where expensive calc is \r\ncalled once per vector loop.\r\nAll lanes that execute inexpensive calc are \r\nheld back, and execute as slow as the \r\nexpensive calc.\r\nOptimization: rewrite so that all expensive \r\ncalcs are consecutive, and inexpensive \r\ncalcs are consecutive.\r\nThe main loops speed-up for all HW \r\ntargets.\r\nThe overhead is vectorizeable using \r\ncompress / expand.\r\n#pragma omp simd\r\nfor (int x = 0; x < N; ++x) {\r\ndouble val = in[x];\r\nif (val == 0.0){\r\nresults[x] = expensive_calc(val);\r\n}\r\nelse\r\nresults[x] = inexpensive_calc(val);\r\n}\r\n112",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/4f4dd408-85f6-4b8b-bf01-de0f72fd3b05.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4d2a6820beacb1cc00191fb746bc79eece41c48fc36bae45e479f4c79d06d6c9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ca864d87-999d-44fd-856c-dba3305eccb1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 113,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nPartition By Weight\r\nfor (int x = 0; x < N; ++x) {\r\ndouble val = in[x];\r\nint mask_local = val == 0.0;\r\nmask[x] = mask_local;\r\nif(mask_local){\r\nvecX[cnt] = val; //compressed \r\ncnt++;\r\n}\r\n}\r\n#pragma omp simd\r\nfor (int y = 0; y < cnt; ++y) {\r\nvecX[y] = expensive_calc(vecX[y]);\r\n} \r\ncnt = 0;\r\nfor (int x = 0; x < N; ++x) {\r\ndouble val = in[x];\r\nif(__builtin_expect(mask[x],0))\r\nresults[x] = vecX[cnt++]; //expand\r\nelse\r\nresults[x] = inexpensive_calc(val);\r\n}\r\nWith vector length of 8, gains of 8.3X using AVX512 113",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/ca864d87-999d-44fd-856c-dba3305eccb1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cb0bdc4513dca657429fc6ba7b6b65a86a219bf3d65c040281293fdfb833f47f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c96e4e3c-778a-4d49-ae7b-71edd9702905",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 114,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nPerformance portability",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/c96e4e3c-778a-4d49-ae7b-71edd9702905.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ced58559a799c4c69c4af12fa5b24224ca0994bc186591b0837081b62a4bd262",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d68131b8-0da2-41d9-8642-f98e19bded91",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 115,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMyth: I’d like to write the \r\nsame code for a CPU and \r\na GPU and have it \r\nperform within 5% of \r\noptimal.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d68131b8-0da2-41d9-8642-f98e19bded91.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=462cb64565c725c541bbcb15b00e69707b1accfd0bb96bab89b64c3e7d590322",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f4c6edb0-f1c2-47d6-a491-509e10fd5f4a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 116,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nQuestions related to performance portability\r\nA. Interest in maintaining a single source base across CPUs \r\nand GPUs\r\nB. Interest in languages that provide good support for both\r\nC. Interest in OpenCL\r\nD. Interest in conversion of CUDA code to CPUs / Xeon Phi\r\n116",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/f4c6edb0-f1c2-47d6-a491-509e10fd5f4a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=23b4857a4924c402f94b0e49196f39f1e8e30800bc035a24a67b1a212e496abe",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 512
      },
      {
        "segments": [
          {
            "segment_id": "538276be-bbcb-4376-8c4e-3167fd6c1d3e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 117,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMultiple parallelization related consideration are different, with potentially \r\nsignificant impact, limiting the potential for performance portability\r\nWider fan out vs more work / worker \r\nAccount for memory and cache efficiency, tiling, blocking\r\nAccount for cores per socket, hyper threads per core, NUMA effects\r\nToday’s focus: difference in vectorization.\r\n117",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/538276be-bbcb-4376-8c4e-3167fd6c1d3e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e86e373f5492448fc8427e99c7ee2730e3765c7efa7b59fb07fde3b324e98f71",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "86a5d6b5-acea-4d74-b014-b288a7ff26fa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 118,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nRationale\r\nSIMT- style kernels are too restrictive\r\n There are many parallel algorithms and design patterns\r\n In many cases, the kernel is not the optimal design pattern\r\n Then, a kernel- only language or a kernel only algorithmic design locks you out of a solution\r\nA trivial case: Black Scholes\r\nExample of kernels being inadequate: Binomial options\r\nData: writing kernels in OpenMP vs. writing loops in OpenMP, \r\n same language\r\n Same compiler\r\n Same HW\r\n Large performance impact",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/86a5d6b5-acea-4d74-b014-b288a7ff26fa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37dcc2042047b23bd0dcf4be8a48eb963fa77e2c5f30fd52b05c98de3ad91ea0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ea96b667-23a6-4d07-9669-0be216b7420c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 119,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nGPU kernels and CPU loop hierarchies\r\n__device__ \r\nvoid BlackScholesBodyGPU(\r\nfloat& CallResult,\r\nfloat& PutResult,\r\nfloat S, //Stock price\r\nfloat X, //Option strike\r\nfloat T, //Option years\r\nfloat R, //Riskless rate\r\nfloat V //Volatility rate\r\n){\r\nfloat sqrtT, expRT;\r\nfloat d1, d2, CNDD1, CNDD2;\r\nsqrtT = sqrtf(T);\r\nd1 = (__logf(S / X) + (R + 0.5f * V * V) * T) / (V * sqrtT);\r\nd2 = d1 - V * sqrtT;\r\nCNDD1 = cndGPU(d1);\r\nCNDD2 = cndGPU(d2);\r\nexpRT = __expf(- R * T);\r\nCallResult = S * CNDD1 - X * expRT * CNDD2;\r\nPutResult = X * expRT * (1.0f - CNDD2) - S * (1.0f - CNDD1);\r\n}\r\n#prgma omp declare simd\r\nvoid BlackScholesBodyCPU(\r\nfloat* call, //Call option price\r\nfloat* put, //Put option price\r\nfloat Sf, //Current stock price\r\nfloat Xf, //Option strike price\r\nfloat Tf, //Option years\r\nfloat Rf, //Riskless rate of return\r\nfloat Vf //Stock volatility\r\n){\r\nfloat S = Sf, X = Xf, T = Tf, R = Rf, V = Vf;\r\nfloat CNDD1, CNDD2, sqrtT, expRT\r\nsqrtT = sqrtf(T);\r\nd1 = (logf(S / X) + (R + 0.5f * V * V) * T) / (V * sqrtT);\r\nd2 = d1 - V * sqrtT;\r\nCNDD1 = CND(d1);\r\nCNDD2 = CND(d2);\r\nexpRT = expf(- R * T);\r\n*call = (FTYPE)(S * CNDD1 - X * expRT * CNDD2);\r\n*put = (FTYPE)(X * expRT * (1.0f - CNDD2) - S * (1.0f -\r\nCNDD1));\r\n}\r\nBlackScholesGPU<<<256, 128>>>(\r\nd_CallResult, d_PutResult, d_OptionStrike, d_StockPrice,\r\nd_OptionYears, RISKFREE, VOLATILITY, OPT_N);\r\n#pragma omp parallel simd for \r\nfor (int i = 0; i < m_optionCount; i++)\r\nBlackScholesBodyCPU(&resultCallGen[i], &resultPutGen[i],\r\nstockPrice[i], optionStrike[i], optionYears[i],R,m_V);\r\nCUDA OpenMP \r\nThe “kernel” is the same as the body of a parallel and vector loop",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/ea96b667-23a6-4d07-9669-0be216b7420c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=87a7a175396a380ebd89eca5b7c6afaf992bd6a19444f37013dd745aefcb00df",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 481
      },
      {
        "segments": [
          {
            "segment_id": "748a3b42-f51a-4909-be87-50baf7390b86",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 120,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVectorize the inner loop independently of the outer loop.\r\nVectorising with FORWARD dependencies\r\nfloat stepsArray[STEPS_CACHE_SIZE];\r\n#pragma omp simd \r\nfor (int j = 0; j < STEPS_CACHE_SIZE; j++) {\r\nfloat profit = s * expf(vsdt * (2.0f * j - numSteps)) - x;\r\nstepsArray[j] = profit > 0.0f ? profit : 0.0f;\r\n}\r\nfor (int j = 0; j < numSteps; j++) {\r\n#pragma omp simd\r\nfor (int k = 0; k < NUM_STEPS_ROUND; ++k) {\r\nstepsArray[k] = pdByr * stepsArray[k + 1] + puByr * stepsArray[k];\r\n}\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/748a3b42-f51a-4909-be87-50baf7390b86.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b47ef41f39439774ee9ad77dab77b19bb9a79ec6cec45d12b5dcb90078b4f2cd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3547a870-c182-4fba-a0fc-0a9647adfe83",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 121,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nCUDA version\r\n//Calculations within shared memory\r\nfor(int k = c_start - 1; k >= c_end;){\r\n//Compute discounted expected value\r\n__syncthreads();\r\nif(tid <= k)\r\ncallB[tid] = puByDf * callA[tid + 1] + pdByDf * callA[tid];\r\nk--;\r\n//Compute discounted expected value\r\n__syncthreads();\r\nif(tid <= k)\r\ncallA[tid] = puByDf * callB[tid + 1] + pdByDf * callB[tid];\r\nk--;\r\n}\r\nsince the order of thread scheduling is complex and best viewed as simply\r\nundefined, the reduction primitive is double-buffered, ensuring by means of __syncthreads()\r\nthat results from the previous stage are ready before they are used in the next,\r\nSource: http://www.andrew.cmu.edu/user/dayoonc/binomialOptions.pdf",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/3547a870-c182-4fba-a0fc-0a9647adfe83.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6a665a7b338d40b09132720bf9105e3e3213087d1a15bdbf03eb937872d4eeef",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "378f2598-57fd-48b5-8292-7724618d2bd7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 122,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSignificant and complex changes required \r\nwhen no vector programming available \r\nOriginal loop split to 2, array split to 2,\r\nbarriers required.\r\nC++ AMP Sample Code for binomial options",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/378f2598-57fd-48b5-8292-7724618d2bd7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9bf9b985d136ef5479c760fab8d0038d7058830a28863f27800f262c4ef7d296",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dd9266c5-2100-42ee-a4e0-ea39bf422370",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 123,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nGPGPU: only kernels\r\nOne-Size-Fits-All design pattern:\r\nWrite a kernel function, serial code\r\nThen: Invoke many instances in parallel\r\n(not minimizing that a lot of hard work still required, including tiling, etc)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/dd9266c5-2100-42ee-a4e0-ea39bf422370.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4a32b608518b2b887cfa5daef83ff9dc408ad0a0417d55b55b77ca329f05f35d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9e5736bf-461a-45d9-8c42-7f762711d567",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 124,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n#1 Best Practice in Parallelizing a Loop Hierarchy\r\nIf still not enough parallelize try to add more \r\nwork or increase the problem size\r\nOtherwise parallelize an additional inner level\r\nIf that provides sufficient parallelism stop, don’t \r\noversubsribe\r\nParallelize at the outermost level, seek maximal \r\namount of work to execute in parallel\r\nA shallow hierarchy may result in a loop that has to be both parallelized \r\nand vectorized. In that case, it needs to both provide sufficient amount \r\nof work and uniform control flow and memory access\r\nIf vectorization of innermost loop \r\nis not profitable try to vectorize an \r\nouter loop\r\nTry to vectorize the innermost loop(s). \r\nEnsure minimal control flow divergence and \r\nmemory access uniformity\r\nMake sure the algorithm is cache \r\nefficient\r\nVectorize Innermost, Parallelize Outermost (VIPO)",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9e5736bf-461a-45d9-8c42-7f762711d567.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ef24b33b12542a5621153f45ba7b4f3c9dea14d5aa7ee108abbc97305e1a0434",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 481
      },
      {
        "segments": [
          {
            "segment_id": "000f5a47-1d40-4e84-99d0-2c3fa0729a9d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 125,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMethodology\r\nWrite a few algorithms in two ways:\r\n• Parallelize and vectorize the outer loop – the kernel pattern\r\n• Parallelize the outer loop and vectorize the inner loop – VIPO\r\nExpress both patterns in OpenMP® 4.0 and C++\r\nUse the same compiler – ICC\r\nUse the same Hardware, OS, etc\r\nThe only difference – the parallelization and vectorization pattern\r\nCompare performance \r\n125",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/000f5a47-1d40-4e84-99d0-2c3fa0729a9d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8de54b4dc8a0c9f99dab74d71163151b23307afda457e5fa3c1d8611f79dc203",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b6bbc9de-7ad9-49df-804f-b896db25ed58",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 126,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nSkeleton of sequential Binomial Code\r\nBinomial()\r\n{\r\n__declspec(align(1024)) REAL Call[NUM_STEPS + 1];\r\n//Forward Pass\r\nfor (int i = 0; i <= NUM_Nodes; i++)\r\n{\r\ndouble d = Sx * Exp(vDt * (2.0f* i - NUM_STEPS)) - Xx;\r\nCall[i] = (d > 0) ? d : 0;\r\n}\r\n//Backward pass \r\nfor(int i = NUM_STEPS; i > 0; i--)\r\n{\r\nint Num_Nodes = i-1;\r\nfor(int j = 0; j <= Num_Nodes; j++)\r\nCall[j] = puByDf * Call[j + 1] + pdByDf * Call[j];\r\n}\r\n}\r\nmain()\r\n{\r\n#pragma omp parallel for \r\nfor (int i=0; i<Nopt; i++) \r\nBinomial();\r\n}\r\nNopt = 131072 and NUM_STEPS = 1024",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/b6bbc9de-7ad9-49df-804f-b896db25ed58.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=505abc10f1698e6d1f910ae2ff05a004c50a435fc9776dbe541dbcf1ad891974",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e002ffb5-184e-49c5-b137-f82f0a3d5ed7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 127,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nBinomial Code Comparison\r\n__attribute__((vector(vectorlength(DIMNSZ)))\r\nBinomial(…..)\r\n{\r\n__declspec(align(1024)) double call[NUM_STEPS + 1];\r\nfor (int i = 0; i <= NUM_Nodes; i++) {\r\ndouble d = sx * exp(t * (2.0f * i - NUM_STEPS)) - xx;\r\ncall[i] = (d > 0) ? d : 0;\r\n}\r\nfor(int i = NUM_STEPS; i > 0; i--) {\r\nint Num_Nodes = i-1;\r\nfor(int j = 0; j <= Num_Nodes; j++)\r\ncall[j] = puByDf * Call[j + 1] + pdByDf * call[j];\r\n}\r\n}\r\nmain()\r\n{\r\n#pragma omp parallel for \r\nfor (int n=0; n<Nopt; n+= DIMNSZ)\r\n{\r\n…….\r\n#pragma simd\r\nfor (int i = 0; i < DIMNSZ; ++i) {\r\nBinomial(… );\r\n}\r\n}\r\nBinomial(…..)\r\n{\r\n__declspec(align(1024)) REAL Call[NUM_STEPS + 1]; \r\n#pragma simd\r\nfor (int i = 0; i <= NUM_Nodes; i++) {\r\ndouble d = sx * exp(t * (2.0f * i - NUM_STEPS)) - xx;\r\nCall[i] = (d > 0) ? d : 0;\r\n}\r\nfor(int i = NUM_STEPS; i > 0; i--) {\r\nint Num_Nodes = i-1;\r\n#pragma simd\r\nfor(int j = 0; j <= Num_Nodes; j++)\r\ncall[j] = puByDf * call[j + 1] + pdByDf * call[j];\r\n}\r\n}\r\nmain()\r\n{\r\n#pragma omp parallel for \r\nfor (int i=0; i<Nopt; i++)\r\nBinomial(….);\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/e002ffb5-184e-49c5-b137-f82f0a3d5ed7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6577300e839acde551090a441bff12c4110479669c9e88cdf4bf840f1b684ff8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9095a7be-2535-4ae6-a4bf-15f4c7aa6d54",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 128,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nMonte Carlo Pseudo Code Pattern \r\nfor(opt=0; opt< NumOptions ; opt++)\r\n{\r\nfor(path=0; path<NumPaths; path++)\r\n{\r\nfor (ts=1; ts<NumSteps; ts++)\r\n{\r\nS[ts] = S[ts-1] *exp(…)\r\n}\r\n} ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9095a7be-2535-4ae6-a4bf-15f4c7aa6d54.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=03cfd0edc367e748ab1db289818cb006bfc09a316058b4759e6eca5604038d94",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 481
      },
      {
        "segments": [
          {
            "segment_id": "43c789a1-89a2-4fb0-8567-e2be51633535",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 129,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nResults\r\nMC reference Kernel loops KDR\r\ntime speedup time speedup\r\nKNC 4.19 2.59 1.620.86 4.87 3.01\r\nKNL 3.99 2.48 1.610.82 4.87 3.02\r\nIVB 3.35 1.23 2.721.06 3.16 1.16\r\nBO reference Kernel loops\r\ntime speedup time speedup\r\nKNC 0.92 1.37 0.670.85 1.08 1.61\r\nKNL 0.36 0.79 0.460.36 1.01 2.22\r\nIVB 0.91 1.00 0.910.90 1.01 1.11\r\nLMM reference kernel loops\r\ntime speedup time speedup\r\nKNC 2223.35 2340.60 0.95380.10 5.85 6.16\r\nKNL 882.00 898.00 0.98102.90 8.57 8.73\r\nIVB 1302.29 1414.00 0.92478.10 2.72 2.96\r\n0.00\r\n1.00\r\n2.00\r\n3.00\r\n4.00\r\n5.00\r\n6.00\r\n7.00\r\n8.00\r\n9.00\r\n10.00\r\nMC BO LMM\r\nKernel deficiency ratio\r\nKNC KNL IVB",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/43c789a1-89a2-4fb0-8567-e2be51633535.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3720582ff5805f30d4902c255da9a1b5c7992246191794dd53bb0c2374978ea0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "22d6532e-3a30-4996-a8da-1d6f706a4988",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 130,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nReality: writing the code \r\npreferred by CPU is not \r\npossible for GPU. The HW \r\ndoesn’t support it and the \r\nlanguaes do not provide \r\nsyntax for it. Writing the \r\nGPU preferred code for \r\nCPU is possible, with \r\nsignificant performance \r\nloss",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/22d6532e-3a30-4996-a8da-1d6f706a4988.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4be306163c94ebfc2dfce74f7aaa421d96eff27fd6a1bc1ebe5968885c133d88",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7b7eb4d5-f833-41c7-aaab-2224684eaf9c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 131,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nA proposal for c++",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/7b7eb4d5-f833-41c7-aaab-2224684eaf9c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a149fa5dd131b079f1ae940278284f882a2bc6b018be75da34a9e54859b5380a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "bfa5c7d4-9033-4d3a-8257-46b4789d79c6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 132,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n132\r\nThe OpenMP syntax – a good solutions for loops\r\n#pragma omp parallel for\r\nfor(int opt = 0; opt < OPT_N; opt++)\r\n{\r\nfloat VBySqrtT = VOLATILITY * sqrtf(T[opt]);\r\nfloat MuByT = (RISKFREE - 0.5f * VOLATILITY * VOLATILITY) * T[opt];\r\nfloat Sval = S[opt];\r\nfloat Xval = X[opt];\r\nfloat val = 0.0f, val2 = 0.0f;\r\n#pragma omp simd reduction(+:val) reduction(+:val2)\r\nfor(int pos = 0; pos < RAND_N; pos++){\r\nfloat callValue = expectedCall(Sval, Xval, MuByT, VBySqrtT, \r\nl_Random[pos]);\r\nval += callValue;\r\nval2 += callValue * callValue;\r\n}\r\nfloat exprt = expf(-RISKFREE *T[opt]);\r\nh_CallResult[opt] = exprt * val / (float)RAND_N;\r\nfloat stdDev = sqrtf(((float)RAND_N*val2 - val*val) / \r\n((float)RAND_N*(float)(RAND_N – 1.f)));\r\nh_CallConfidence[opt] =(float)(exprt * 1.96f * stdDev/sqrtf((float)RAND_N));\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/bfa5c7d4-9033-4d3a-8257-46b4789d79c6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c70a860d46324989826373b99ea705e72acd1140d77d1d9bdfb2f381aeed8b65",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b2a6a64f-75df-42c7-b2ad-fe1a51d8288d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 133,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n133\r\nNot so much for standard algorithms\r\nvoid my_tranform(std::vector<int>& src, std::vector<int>& dst, std::function< int(int) > _func) {\r\nvec::transform(src.begin(), src.end(), dst.begin(), _func);\r\n}\r\nStd::transform(inp.begin, inp.begin + inp.size(), out.begin(), ptr_fun<double, double>(sqrt));",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/b2a6a64f-75df-42c7-b2ad-fe1a51d8288d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37710343e01d24aeedb78100547c5330bb38b5b4307fe1af652c438a44bb915f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a63467ee-a4e7-4d7b-8ab2-cd59810a9027",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 134,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nThe Parallelism TS in C++\r\n134\r\n// Serial sort\r\nstd::sort(std::seq, x.begin(), x.end());\r\n// Parallel sort\r\nstd::sort(std::par, x.begin(), x.end());\r\n// Dynamically-selected policy\r\nstd::execution_policy e = std::seq();\r\nif( x.size()>1024 ) \r\ne = std::par();\r\nstd::sort(e, x.begin(), x.end());\r\nstd::transform(std::par, b, e, o, ptr_fun(<double, \r\ndouble>(sqrt));\r\nMany STL algorithms are in the \r\nproposal:\r\ncopy, transform, replace, \r\ngenerate, for_each, all_of, copy_if, \r\nfind_if, is_sorted, inner_product, \r\nremove_if, rotate, binary_search …\r\nThese will help with parallelization,\r\nNot with vectorization. ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/a63467ee-a4e7-4d7b-8ab2-cd59810a9027.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ae99323a3690b799e9b5275b060c36740ac98a5369cb484caf342c83666b3d1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 488
      },
      {
        "segments": [
          {
            "segment_id": "9e366b8a-f518-4ae0-bd86-644f314c1a5c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 135,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nIndexed loops\r\nfor_loop( par, 0, n, [&](int i) {\r\nA[i] = A[i] + B[i];\r\nC[i] -= 2*A[i];\r\n});\r\n135\r\n#pragma omp parallel for\r\nfor( int i=0; i<n; ++i ) {\r\nA[i] = A[i] + B[i];\r\nC[i] -= 2*A[i];\r\n}\r\nOpenMP Equivalent \r\nFirst, we proposed Indexed loops, even for the parallel execution policy",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/9e366b8a-f518-4ae0-bd86-644f314c1a5c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=04db5534bb189ed56a01b437539b4633ee1cc39e2e34c431cbf0dc609fa3b5ea",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dac3233e-9e2f-4690-b4f2-24e3bed77f32",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 136,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nReduction extern float s; extern int t;\r\nfor_loop( par, 0, n, \r\nreduction_plus(s),\r\nreduction_bit_and(t),\r\n[&](int i, float& s_, int& t_) {\r\ns_ += A[i]*B[i];\r\nt_ &= C[i];\r\n});\r\n// s and t have final reduction values here.\r\nextern float s; extern int t;\r\n#pragma omp parallel for reduction(+:s) reduction(&:t)\r\nfor( int i=0; i<n; ++i ) {\r\ns += A[i]*B[i];\r\nt &= C[i];\r\n}\r\nOpenMP Equivalent ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/dac3233e-9e2f-4690-b4f2-24e3bed77f32.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=da9bf4f06e4d349686880ff9a281d6c4bce566f2bb371df65326d54dfd9021af",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "fb87f80d-287f-4d3c-a849-87ab675b6eff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 137,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nVector execution policy\r\nfor_loop( vec, 0, n, [&](int i) {\r\nA[i] = A[i+1] + B[i];\r\nC[i] -= 2*A[i];\r\n});\r\n137\r\n#pragma omp simd for\r\nfor( int i=0; i<n; ++i ) {\r\nA[i] = A[i+1] + B[i];\r\nC[i] -= 2*A[i];\r\n}\r\nOpenMP Equivalent \r\nA single threaded vector loops\r\nAllow vectorization of loops that cannot be parallelized (forward dependencies)\r\nAllow vectorization when multi-threading is undesired\r\nUseful for CPUs with SIMD, not so much for GPUs with SIMT",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/fb87f80d-287f-4d3c-a849-87ab675b6eff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ef6710c0f9db0c78004567278403e812f42f9313d980bf19253a9bdcb6f3f7f0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "db846e35-4ffd-437e-bbd3-547f73814484",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 138,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nInduction Variables \r\nextern int j, k;\r\nfor_loop( vec, n, 0, \r\ninduction(j, jstep), \r\ninduction(k, -kstep),\r\n[&](int i, int j_, int k_) {\r\nA[i] = B[j_]*C[k_];\r\n});\r\n// j and k have correct final values \r\nhere.\r\n138\r\nextern int j, k;\r\n#pragma omp simd linear(j:jstep, k:-kstep)\r\nfor( int i=0; i<n; ++i) {\r\nA[i] = B[j]*C[k]; \r\nj += jstep;\r\nk -= kstep;\r\n}\r\nOpenMP 4.5 Equivalent ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/db846e35-4ffd-437e-bbd3-547f73814484.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9e8bc95b75eb1f3f073f07933ce08f49608482121b24314f7f2be3044d0e7761",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dc640277-d423-4418-9761-f5b0ebc45f1b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 139,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nExtensions to the vec Policy\r\nstruct my_policy: vector_execution_policy {\r\nstatic const int safelen = 8;\r\nstatic const bool vectorize_remainder = true;\r\n};\r\nfor_loop( my_policy(), 0, 1912, [&](int i) {\r\nZ[i+8] = Z[i]*A;\r\n});\r\n#pragma omp simd safelen(8)\r\nfor( int i=0; i<1912; ++i ) {\r\nZ[i+8] = Z[i]*A;\r\n});\r\nOpenMP Equivalent \r\n(without vectorize_remainder) ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/dc640277-d423-4418-9761-f5b0ebc45f1b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=74ced1ea284c1d354b65bab4e8be75a9c0df52e78af2c1ceae8d8233d0296b93",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 416
      },
      {
        "segments": [
          {
            "segment_id": "3895e4f2-b24d-49ae-a07e-5d0b32cfe89a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 140,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nBoth parallel and vector\r\nfor_loop( parvec, 0, n, [&](int i) {\r\nA[i] = A[i] + B[i];\r\nC[i] -= 2*A[i];\r\n});\r\n140\r\n#pragma omp parallel simd for\r\nfor( int i=0; i<n; ++i ) {\r\nA[i] = A[i] + B[i];\r\nC[i] -= 2*A[i];\r\n}\r\nOpenMP Equivalent \r\nUndefined behavior if there is a data race\r\nUndefined behavior if there is a critical section (deadlock)\r\nThe loop is both parallelized and vectorized\r\nSame semantics as a “kernel” in GPGPU languages",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/3895e4f2-b24d-49ae-a07e-5d0b32cfe89a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c6d8fab517edc3c5e5bc0e6da1ffb415a5b20c27602199f9cfe4d8c5030f33b8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "615fb1bb-b7fc-49ee-9bdc-8fc4f4cb92c5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 141,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLess trivial vectorizeable algorithms\r\nAlgorithms with certain dependence patterns\r\ndo not prevent vectorization of enclosing algorithms\r\nAnd depending on the target architecture\r\nMay themselves be vectorized (may or may not be \r\nprofitable)\r\nAccount for future direction of SIMD HW: these are \r\nmade possible by AVX512\r\n141\r\n// Histogram\r\na[b[i]]++;\r\n// compress / expand\r\nif (cond(i)) { \r\na[i] = b[i] * c[j++];\r\n}",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/615fb1bb-b7fc-49ee-9bdc-8fc4f4cb92c5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=52f28f5364477cd4583594b9ec00609fec8c991ec50c2560cc2aaead56c90859",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d8448a41-f139-4ad7-83f3-b8758f1b441b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 142,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\n142\r\n0.00\r\n50.00\r\n100.00\r\n150.00\r\n200.00\r\n250.00\r\n300.00\r\nX2007 X2009 X2010 X2012 X2013 X2014 X2016\r\nThousands\r\nBinomial Options\r\n(1) Incremental growth in CPU \r\nresources\r\n(2) Improvements in compilers \r\nand parallel frameworks\r\n(3) Parallelization techniques 0\r\n50\r\n100\r\n150\r\n200\r\n250\r\n300\r\n350\r\n400\r\nX2007 X2009 X2010 X2012 X2013 X2014 X2016\r\nSP vector lanes ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/d8448a41-f139-4ad7-83f3-b8758f1b441b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e295ad99e19e1b2428fbc6daf42c643419515cd76de1ade23d342e651c4aca03",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "53ebafc9-072e-45eb-99de-d458cb1dff51",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 143,
            "page_width": 792,
            "page_height": 612,
            "content": "The end",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/53ebafc9-072e-45eb-99de-d458cb1dff51.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7cc1b33e53e8718a0d712ec6fcc5e44d9713ffa05c05e85b7f237848100128c6",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7d537044-7317-40c7-b901-2a8eda443328",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 144,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nConfiguration\r\nHardware configuration\r\n Processor: \r\n– Intel(R) Xeon(R) CPU E5-2697 @ 2.7 GHz (IVT)\r\n– 2 sockets/24 cores/48 Threads; Turbo Off\r\n Memory:\r\n– 128GB @ 1600 MHz\r\nSoftware Configuration\r\n OS: Linux: RHEL 6.1\r\n Compiler:\r\n– Gcc 4.8\r\n– Intel Composer XE 2013 Sp1\r\nSwap Pricer:\r\n Default : Number of scenarios 100\r\n Number of Swaps 100,000: parallelize at this level\r\n 26 time steps\r\n144",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/7d537044-7317-40c7-b901-2a8eda443328.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c6548c59beb846f4bedb23b61f74b8b02de0090fcfd94ee37eba646707eba305",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 350
      },
      {
        "segments": [
          {
            "segment_id": "da38c7ab-20ca-4854-b79d-45e1e4f20143",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 145,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLegal Disclaimer\r\nINFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL \r\nPRODUCTS. NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO \r\nANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. EXCEPT \r\nAS PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR SUCH PRODUCTS, \r\nINTEL ASSUMES NO LIABILITY WHATSOEVER AND INTEL DISCLAIMS ANY EXPRESS \r\nOR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS \r\nINCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR \r\nPURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR \r\nOTHER INTELLECTUAL PROPERTY RIGHT.\r\n• A \"Mission Critical Application\" is any application in which failure of the Intel \r\nProduct could result, directly or indirectly, in personal injury or death. SHOULD \r\nYOU PURCHASE OR USE INTEL'S PRODUCTS FOR ANY SUCH MISSION CRITICAL \r\nAPPLICATION, YOU SHALL INDEMNIFY AND HOLD INTEL AND ITS SUBSIDIARIES, \r\nSUBCONTRACTORS AND AFFILIATES, AND THE DIRECTORS, OFFICERS, AND \r\nEMPLOYEES OF EACH, HARMLESS AGAINST ALL CLAIMS COSTS, DAMAGES, AND \r\nEXPENSES AND REASONABLE ATTORNEYS' FEES ARISING OUT OF, DIRECTLY OR \r\nINDIRECTLY, ANY CLAIM OF PRODUCT LIABILITY, PERSONAL INJURY, OR DEATH \r\nARISING IN ANY WAY OUT OF SUCH MISSION CRITICAL APPLICATION, WHETHER \r\nOR NOT INTEL OR ITS SUBCONTRACTOR WAS NEGLIGENT IN THE DESIGN, \r\nMANUFACTURE, OR WARNING OF THE INTEL PRODUCT OR ANY OF ITS PARTS.\r\n• Intel may make changes to specifications and product descriptions at any time, \r\nwithout notice. Designers must not rely on the absence or characteristics of any \r\nfeatures or instructions marked \"reserved\" or \"undefined\". Intel reserves these for \r\nfuture definition and shall have no responsibility whatsoever for conflicts or \r\nincompatibilities arising from future changes to them. The information here is \r\nsubject to change without notice. Do not finalize a design with this information.",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/da38c7ab-20ca-4854-b79d-45e1e4f20143.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1107801a2b5ce9419ba75461301cada5719bccf95c88d84ca886fc6733bf2b8c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2bc6c2b0-65e8-44c2-a2b2-ad471b26c188",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 146,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nIntel's compilers may or may not optimize to the same degree for non\u0002Intel microprocessors for optimizations that are not unique to Intel \r\nmicroprocessors. These optimizations include SSE2, SSE3, and SSE3 \r\ninstruction sets and other optimizations. Intel does not guarantee the \r\navailability, functionality, or effectiveness of any optimization on \r\nmicroprocessors not manufactured by Intel. \r\nMicroprocessor-dependent optimizations in this product are intended for \r\nuse with Intel microprocessors. Certain optimizations not specific to Intel \r\nmicroarchitecture are reserved for Intel microprocessors. Please refer to \r\nthe applicable product User and Reference Guides for more information \r\nregarding the specific instruction sets covered by this notice.\r\nNotice revision #20110804 ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/2bc6c2b0-65e8-44c2-a2b2-ad471b26c188.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e58cc6725da7c7b9c13cc418318639b28c4ac7bc88fb15bcc1b2793fa9cec6ee",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 426
      },
      {
        "segments": [
          {
            "segment_id": "4d994ead-28f8-4eb7-b140-b69fafc9ff85",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 147,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nConfiguration for parallel speed-up\r\nPlatform\r\nUnscaled Core \r\nFrequency\r\nCores/S\r\nocket \r\nNum \r\nSockets\r\nProcess\r\nor\r\nL1 Data \r\nCache\r\nL1 I \r\nCache\r\nL2 \r\nCache\r\nL3 \r\nCache Memory\r\nMemory \r\nFrequen\r\ncy\r\nMemory \r\nAccess \r\nH/W \r\nPrefetch\r\ners \r\nEnabled\r\nHT \r\nEnabled\r\nTurbo \r\nEnabled C States\r\nO/S \r\nName Operating SystemCompiler Version\r\nHarperTown -EP 3.0 GHZ 4 2X5472 32K 32K 12 MB None 32 GB\r\n800 \r\nMHZ UMA Y N N Disabled\r\nFedora \r\n20 3.11.10-301.fc20 icc version 14.0.1\r\nNehalem -EP 2.93 GHZ 4 2x 5570 32K 32K 256K 8 MB 48 GB\r\n1333 \r\nMHZ NUMA Y Y Y Disabled\r\nFedora \r\n20 3.11.10-301.fc20 icc version 14.0.1\r\nWestmere-EP 3.33 GHZ 6 2X 5680 32K 32K 256K 12 MB 48 MB\r\n1333 \r\nMHZ NUMA Y Y Y Disabled\r\nFedora \r\n20 3.11.10-301.fc20 icc version 14.0.1\r\nSandyBridge-EP 2.9 GHZ 8 2E5 2690 32K 32K 256K 20 MB 64 GB\r\n1600 \r\nMHZ NUMA Y Y Y Disabled\r\nFedora \r\n20 3.11.10-301.fc20 icc version 14.0.1\r\nIvy Bridge-EP 2.7 GHZ 12 2\r\nE5 2697 \r\nv2 32K 32K 256K 30 MB 64 GB\r\n1867 \r\nMHZ NUMA Y Y Y Disabled\r\nFedora \r\n20 3.11.10-301.fc20 icc version 14.0.1\r\nHaswell-EP Beta 2.2 GHZ 14 2Beta 32K 32K 256K 35 MB 64 GB\r\n2133 \r\nMHZ NUMA Y Y Y Disabled\r\nFedora \r\n20 3.13.5-202.fc20 icc version 14.0.1\r\nPlatform Hardware and Software \r\nConfiguration",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/4d994ead-28f8-4eb7-b140-b69fafc9ff85.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=54d9e2bac063994026ca7bf9e547ebe81a07fcf48f6b5a0e85abb7d9f001b014",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 232
      },
      {
        "segments": [
          {
            "segment_id": "5781f6df-475c-494b-8af1-d21f47ca5a84",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 148,
            "page_width": 792,
            "page_height": 612,
            "content": "Copyright © 2015, Intel Corporation. All rights reserved. \r\n*Other names and brands may be claimed as the property of others.\r\nOptimization Notice\r\nLegal Disclaimer & Optimization Notice\r\nINFORMATION IN THIS DOCUMENT IS PROVIDED “AS IS”. NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO \r\nANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. INTEL ASSUMES NO LIABILITY WHATSOEVER AND \r\nINTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO THIS INFORMATION INCLUDING LIABILITY OR \r\nWARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, \r\nCOPYRIGHT OR OTHER INTELLECTUAL PROPERTY RIGHT.\r\nSoftware and workloads used in performance tests may have been optimized for performance only on Intel microprocessors. \r\nPerformance tests, such as SYSmark and MobileMark, are measured using specific computer systems, components, software, \r\noperations and functions. Any change to any of those factors may cause the results to vary. You should consult other information \r\nand performance tests to assist you in fully evaluating your contemplated purchases, including the performance of that product \r\nwhen combined with other products. \r\nCopyright © 2016, Intel Corporation. All rights reserved. Intel, Pentium, Xeon, Xeon Phi, Core, VTune, Cilk, and the Intel logo are \r\ntrademarks of Intel Corporation in the U.S. and other countries.\r\nOptimization Notice\r\nIntel’s compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that are not unique to Intel \r\nmicroprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and other optimizations. Intel does not guarantee the \r\navailability, functionality, or effectiveness of any optimization on microprocessors not manufactured by Intel. Microprocessor-dependent \r\noptimizations in this product are intended for use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture \r\nare reserved for Intel microprocessors. Please refer to the applicable product User and Reference Guides for more information regarding the \r\nspecific instruction sets covered by this notice.\r\nNotice revision #20110804\r\n41",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/5781f6df-475c-494b-8af1-d21f47ca5a84.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6c7354521932f91037ce9cc8b406d438f229d8a4d03cd5f1ba8243581ec212a9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ea72409a-f8ea-4349-bea4-8767b4835b73",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 792,
              "height": 612
            },
            "page_number": 149,
            "page_width": 792,
            "page_height": 612,
            "content": "",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/93d8d835-722d-4029-8127-68317e55dc81/images/ea72409a-f8ea-4349-bea4-8767b4835b73.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041515Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=694118346bfa989fad0fbbdf91f930cdedeb6e45a65a2585d3280b1dab8f6160",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 306
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "Tackle C++ Challenges and Beyond\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "Intel Corporation\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "2015\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "```json\n{\"location\": \"pos*SIMSTEPS + simStep\"}\n```"
        }
      ]
    }
  }
}