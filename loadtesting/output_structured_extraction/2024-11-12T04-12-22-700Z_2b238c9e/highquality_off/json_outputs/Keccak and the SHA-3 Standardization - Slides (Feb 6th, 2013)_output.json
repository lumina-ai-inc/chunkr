{
  "file_name": "Keccak and the SHA-3 Standardization - Slides (Feb 6th, 2013).pdf",
  "task_id": "106e7f60-7436-4f6c-86b3-c69b3253571b",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "1f200525-0bb8-48a9-bab6-a0df0e66bc2d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 1,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Keccak and the SHA-3 Standardization\r\nGuido Bertoni1 Joan Daemen1\n \r\nMichaël Peeters2 Gilles Van Assche1\n \r\n1STMicroelectronics\r\n2NXP Semiconductors\r\nNIST, Gaithersburg, MD\n \r\nFebruary 6, 2013\n \r\n1 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/1f200525-0bb8-48a9-bab6-a0df0e66bc2d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=902ec16a59844623cd215ac9820b00a83ab51246d36f140ee60b3f70ba36b0e6",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "084eaf4a-5cfd-478e-8456-a40c7287a4a4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 2,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Outline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n2 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/084eaf4a-5cfd-478e-8456-a40c7287a4a4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=64d702fe9fb2e4cfc9335cae0c2c4138bc572b02cf775429b188f78c4de937de",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b02c10aa-fedb-4dad-a6bd-34377059e0d1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 3,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The beginning\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n3 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/b02c10aa-fedb-4dad-a6bd-34377059e0d1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bb4ea8b919109549a37b2502e4f267f4415731502fda0a9e0d4dcf7d0f636e7f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "025d065e-4a29-4c16-9983-4678b7d7cff3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 4,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The beginning\r\nCryptographic hash functions\n \r\nh : {0, 1}* ≤ {0, 1}n\r\nInput message Digest\r\nMD5: n = 128 (Ron Rivest, 1992)\n \r\nSHA-1: n = 160 (NSA, NIST, 1995)\n \r\nSHA-2: n → {224, 256, 384, 512} (NSA, NIST, 2001)\n \r\n4 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/025d065e-4a29-4c16-9983-4678b7d7cff3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8954d7f937292c75e533d1838d1d4a39f02a206982cf8e552f8e563854bc7692",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2d0513b5-91f7-4cf8-9d89-47a63a0cda87",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 5,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The beginning\r\nOur beginning: RadioGatún\n \r\nInitiative to design hash/stream function (late 2005)\r\nrumours about NIST call for hash functions\r\nforming of Keccak Team\r\nstarting point: fixing Panama [Daemen, Clapp, FSE 1998]\r\nRadioGatún [Keccak team, NIST 2nd hash workshop 2006]\r\nmore conservative than Panama\r\nvariable-length output\r\nexpressing security claim: non-trivial exercise\r\nSponge functions [Keccak team, Ecrypt hash, 2007]\r\nclosest thing to a random oracle with a finite state\r\nSponge construction calling random permutation\r\n5 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/2d0513b5-91f7-4cf8-9d89-47a63a0cda87.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=877ab71ee0ca2221251d672bca20edfa53bb1073bd8b491494fadc205059bbcf",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "44668620-b6ab-480d-82b2-838a79ba6d60",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 6,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The beginning\r\nFrom RadioGatún to Keccak\n \r\nRadioGatún confidence crisis (2007-2008)\r\nown experiments did not inspire confidence in RadioGatún\r\nneither did third-party cryptanalysis\r\n[Bouillaguet, Fouque, SAC 2008] [Fuhr, Peyrin, FSE 2009]\r\nfollow-up design Gnoblio went nowhere\r\nNIST SHA-3 deadline approaching …\r\nU-turn: design a sponge with strong permutation f\r\nKeccak [Keccak team, SHA-3, 2008]\r\n6 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/44668620-b6ab-480d-82b2-838a79ba6d60.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ed87ff941ef3bb63f648a72f5d357a0fecf18690bcf8bad62694800e17643b11",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f1b20a01-80d9-454d-94fd-d2e12d5ac233",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 7,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n7 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f1b20a01-80d9-454d-94fd-d2e12d5ac233.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=29d0f31b827a0cdfe05ec19c0755df61d9d6ca6d7bd13f0d0efd8075898ff1c3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "919dc312-4cdb-4982-82f1-05cbd8b51e87",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 8,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nThe sponge construction\n \r\nMore general than a hash function: arbitrary-length output\r\nCalls a b-bit permutation f, with b = r + c\r\nr bits of rate\r\nc bits of capacity (security parameter)\r\n8 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/919dc312-4cdb-4982-82f1-05cbd8b51e87.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6a0c4187b52a417fd2e3dd617aa2e1d2b0ac0507cff890840ab33e9c55480c97",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "37eb7bb4-d6f1-4ae6-8fec-41f2fc9a4e62",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 9,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nGeneric security of the sponge construction\n \r\nRO-differentiating advantage ∗ N2/2c+1\r\nN is number of calls to f\r\nProven in [Keccak team, Eurocrypt 2008]\r\nAs strong as a random oracle against attacks with N < 2c/2\r\nBound assumes f is random permutation\r\nIt covers generic attacks\r\n…but not attacks that exploit specific properties of f\r\n9 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/37eb7bb4-d6f1-4ae6-8fec-41f2fc9a4e62.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=67bfc5c1121bbb996df2cd0b4ed368527e14b7bdecef5092f13e56eeebb54d33",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6e56ac07-8416-4064-9e9d-f0b2c5769805",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 10,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nDesign approach\r\nHermetic sponge strategy\r\nInstantiate a sponge function\r\nClaim a security level of 2c/2\r\nMission\r\nDesign permutation f without exploitable properties\n \r\n10 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/6e56ac07-8416-4064-9e9d-f0b2c5769805.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37997a2ff18b56f4569bfd9d74cbdee0699b9c55259e88a71ea0b0c955e1c557",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "38bdef03-9f6d-4411-bb83-78f5c9de690a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 11,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nHow to build a strong permutation\n \r\nBuild it as is an iterated permutation\r\nLike a block cipher\r\nSequence of identical rounds\r\nRound consists of sequence of simple step mappings\r\n…but not quite\r\nNo key schedule\r\nRound constants instead of round keys\r\nInverse permutation need not be efficient\r\n11 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/38bdef03-9f6d-4411-bb83-78f5c9de690a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1f31d8b1883dec271e01b6e2faee94b509960d5447a684eb6eba89b9cc76894b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 476
      },
      {
        "segments": [
          {
            "segment_id": "2340e246-6a33-4862-81f2-dae411fcbd99",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 12,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "The sponge construction\r\nCriteria for a strong permutation\n \r\nClassical LC/DC criteria\r\nAbsence of large differential propagation probabilities\r\nAbsence of large input-output correlations\r\nInfeasibility of the CICO problem\r\nConstrained Input Constrained Output\r\nGiven partial input and partial output, find missing parts\r\nImmunity to\r\nIntegral cryptanalysis\r\nAlgebraic attacks\r\nSlide and symmetry-exploiting attacks\r\n…\r\n12 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/2340e246-6a33-4862-81f2-dae411fcbd99.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=77496723bad6ae554571322c805cf2c3b7c7d06017c4a0bbb3790ce872919408",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7f99b2ab-d561-436f-9f03-128fc21fbaac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 13,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n13 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/7f99b2ab-d561-436f-9f03-128fc21fbaac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=69580d56d0a8f8d725dfae73a85f86b0bc478727192f96dd7a84c7fd0ddf51f2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4743ba9c-21d1-4260-af1f-e7267a3f74f9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 14,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nKeccak\n \r\nInstantiation of a sponge function\r\nthe permutation Keccak-f\r\n7 permutations: b → {25, 50, 100, 200, 400, 800, 1600}\r\nSecurity-speed trade-offs using the same permutation, e.g.,\r\nSHA-3 instance: r = 1088 and c = 512\r\npermutation width: 1600\r\nsecurity strength 256: post-quantum sufficient\r\nLightweight instance: r = 40 and c = 160\r\npermutation width: 200\r\nsecurity strength 80: same as SHA-1\r\n14 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/4743ba9c-21d1-4260-af1f-e7267a3f74f9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=10298a2c8c65efeb6d152c7ba2a3d68b83ae26f5004c017a5cf00bd215309d21",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "83235da6-03bf-4f04-a61b-570dc6b3bbfb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 15,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe state: an array of 5 × 5 × 2ℓ bits\n \r\nx\r\ny z\r\nstate 5 × 5 lanes, each containing 2ℓ bits (1, 2, 4, 8, 16, 32 or 64)\r\n(5 × 5)-bit slices, 2ℓ of them\r\n15 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/83235da6-03bf-4f04-a61b-570dc6b3bbfb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c32eeb0e1e887c6b57bfd938bc0d335ced6392620c25cde9ef9c48b2831f3790",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dd518a7b-b84b-4799-badd-d4d6240ba8fc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 16,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe state: an array of 5 × 5 × 2ℓ bits\n \r\nx\r\ny z\r\nlane 5 × 5 lanes, each containing 2ℓ bits (1, 2, 4, 8, 16, 32 or 64)\r\n(5 × 5)-bit slices, 2ℓ of them\r\n15 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/dd518a7b-b84b-4799-badd-d4d6240ba8fc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=eac5d44ddf91f5ee0ada53e338de41e6001f5b142db2d039fda6be7d22aa65dd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "067a9c8c-b392-4e19-ad49-050899dc5044",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 17,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe state: an array of 5 × 5 × 2ℓ bits\n \r\nx\r\ny z\r\nslice 5 × 5 lanes, each containing 2ℓ bits (1, 2, 4, 8, 16, 32 or 64)\r\n(5 × 5)-bit slices, 2ℓ of them\r\n15 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/067a9c8c-b392-4e19-ad49-050899dc5044.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=42ff4d5cd868fb179eaf31a5851a008613eac86c7c16240d40b5e4c1f403939a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3a0597b7-85a8-4f9d-9a25-964993f17e2c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 18,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe state: an array of 5 × 5 × 2ℓ bits\n \r\nx\r\ny z\r\nrow 5 × 5 lanes, each containing 2ℓ bits (1, 2, 4, 8, 16, 32 or 64)\r\n(5 × 5)-bit slices, 2ℓ of them\r\n15 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/3a0597b7-85a8-4f9d-9a25-964993f17e2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e5081b4d1e548cc3e512a26c251af5e0f53dfca3a6ddc9320b729aa14af40f13",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6b4fb1a1-8b89-47b7-bcd0-155d6b1d3a78",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 19,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe state: an array of 5 × 5 × 2ℓ bits\n \r\nx\r\ny z\r\ncolumn 5 × 5 lanes, each containing 2ℓ bits (1, 2, 4, 8, 16, 32 or 64)\r\n(5 × 5)-bit slices, 2ℓ of them\r\n15 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/6b4fb1a1-8b89-47b7-bcd0-155d6b1d3a78.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4bfe20de89c9597238523cbd1f54a29082b97e37e6414f29244183e3fcb062cb",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f3f22335-f824-4d97-84bd-19d4068d6d2c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 20,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nx, the nonlinear mapping in Keccak-f\n \r\n“Flip bit if neighbors exhibit 01 pattern”\r\nOperates independently and in parallel on 5-bit rows\r\nAlgebraic degree 2, inverse has degree 3\r\nLC/DC propagation properties easy to describe and analyze\r\n16 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f3f22335-f824-4d97-84bd-19d4068d6d2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2fe839e684383f75db9b68aa985650f56517f0d05fe840d7187473eba01eb2f5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "457f637a-f6eb-423f-bb19-3b61d21339cd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 21,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nχ′, a first attempt at mixing bits\r\nCompute parity cx,z of each column\n \r\nAdd to each cell parity of neighboring columns:\n \r\nbx,y,z = ax,y,z E cx−1,z E cx+1,z\r\n+ =\r\ncolumn parity θʹ effect\r\ncombine\r\n17 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/457f637a-f6eb-423f-bb19-3b61d21339cd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2ea20bf24dcbe023d630db243b49f2bbeb8c73def3c468769119ca3b050b68be",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ee68616b-b3b9-40f5-b918-e1ecc6c30765",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 22,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nDiffusion of χ′\n \r\nθʹ\r\n18 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/ee68616b-b3b9-40f5-b918-e1ecc6c30765.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=62b941ee6697606e5186abfa998eb36259d41f064f478992a9995f8d1163152b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4d948cdd-860b-4592-9b02-cb0a5d7ef36f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 23,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nDiffusion of χ′ (kernel)\n \r\nθʹ\r\n19 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/4d948cdd-860b-4592-9b02-cb0a5d7ef36f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=354df02cec2d9061c0515872a1710df907351b6548db26738c65c4e5339cc4ee",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e29ebd94-0635-4194-a850-ef8302c64fc1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 24,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nDiffusion of the inverse of χ′\n \r\nθʹ\r\n20 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/e29ebd94-0635-4194-a850-ef8302c64fc1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a704c28c76efc99594fafc8ad180d78aa9a081a3c5246e60fcc73529d454a99f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 481
      },
      {
        "segments": [
          {
            "segment_id": "6c3ebe67-b694-481e-aba8-f1a7004d855c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 25,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nι for inter-slice dispersion\n \r\nWe need diffusion between the slices …\r\nι: cyclic shifts of lanes with offsets\r\ni(i + 1)/2 mod 2ℓ\r\nOffsets cycle through all values below 2ℓ\r\n21 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/6c3ebe67-b694-481e-aba8-f1a7004d855c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=362a812322037c6d1ab266c8535270dcbc070fbacbfe179b6ae718b9131b7d15",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "60caf49b-7e62-4de0-b01b-414c24c5057a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 26,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nL to break symmetry\n \r\nXOR of round-dependent constant to lane in origin\r\nWithout L, the round mapping would be symmetric\r\ninvariant to translation in the z-direction\r\nWithout L, all rounds would be the same\r\nsusceptibility to slide attacks\r\ndefective cycle structure\r\nWithout L, we get simple fixed points (000 and 111)\r\n22 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/60caf49b-7e62-4de0-b01b-414c24c5057a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a1917d50f92ad4e5faf183ec9f76d3ef8ebcbb4d0583c1e2de36438098a3dd22",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "37d06fa5-10fc-4721-9a15-1af9f301e12d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 27,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nA first attempt at Keccak-f\n \r\nRound function: R = L o ι o χ′ o x\r\nProblem: low-weight periodic trails by chaining:\r\nθʹ ρ\r\nx: may propagate unchanged\r\nχ′\r\n: propagates unchanged, because all column parities are 0\r\nι: in general moves active bits to different slices …\r\n…but not always\r\n23 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/37d06fa5-10fc-4721-9a15-1af9f301e12d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2d816b7bfd113f9f4fa30754f70daafe9a2d2df0b83becbc5844ebc658f463d9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c9b8e395-5e7e-44e7-a3fe-1a1dcd843d67",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 28,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nThe Matryoshka property\n \r\nθʹ ρ\r\nθʹ ρ\r\nPatterns in Q′ are z-periodic versions of patterns in Q\r\n24 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/c9b8e395-5e7e-44e7-a3fe-1a1dcd843d67.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=49b0b8611e71d86c7714f2b02152bb9bd92db420de6f2f90b10ec47d2b19c8dd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "29440705-0996-48d3-a238-a9fc725b90dd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 29,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nn for disturbing horizontal/vertical alignment\n \r\n( ) ( ) ( )′ x 0 1 x\n ax,y ◦ ax′\r\n,y′ with = ′ y 2 3 y\r\n25 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/29440705-0996-48d3-a238-a9fc725b90dd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=657b92def72a4649a3b9e152366714beb539197791ce8406e96d2bf2872429c4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3c1ec66b-484f-4d65-af08-5613ad6cb51b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 30,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nA second attempt at Keccak-f\n \r\nRound function: R = L o n o ι o χ′ o x\n \r\nSolves problem encountered before:\n \r\nθ ρ π\r\nn moves bits in same column to different columns!\n \r\n26 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/3c1ec66b-484f-4d65-af08-5613ad6cb51b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cfdc904da7d7ea47ed89e5384b4f300ef8579fc32a5028377a27264d7e57f4b4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ea29655e-dba9-435a-b96e-d9485337317e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 31,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nTweaking χ′ to χ\n \r\nθ\r\n27 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/ea29655e-dba9-435a-b96e-d9485337317e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=614592c0e6feee4655c46650943f3f9c7bdd7881a951056f20b79ad1f8e9cb3f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0929c323-57ac-4925-8a23-8ad6992e0b88",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 32,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nInverse of χ\n \r\nθ\r\nDiffusion from single-bit output to input very high\r\nIncreases resistance against LC/DC and algebraic attacks\r\n28 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/0929c323-57ac-4925-8a23-8ad6992e0b88.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1b87dd0ff59c9a672fbe1d4cd8b76b40aa9f6fe8e6f867f03bc310d79c4d8888",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0f872bc1-bbcb-4086-ad98-774a46b4a788",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 33,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nKeccak-f summary\n \r\nRound function:\r\nR = L o x o n o ι o χ\r\nNumber of rounds: 12 + 2ℓ\r\nKeccak-f[25] has 12 rounds\r\nKeccak-f[1600] has 24 rounds\r\nEfficiency\r\nhigh level of parallellism\r\nflexibility: bit-interleaving\r\nsoftware: competitive on wide range of CPU\r\ndedicated hardware: very competitive\r\nsuited for protection against side-channel attack\r\n29 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/0f872bc1-bbcb-4086-ad98-774a46b4a788.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ded6f5a13f1913e5f5c931027e4c0d1030c1157d594743c5e77b136f82f392b9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "cef9c4ba-0829-44f4-969f-7df709ea1900",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 34,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nPerformance in software\n \r\nFaster than SHA-2 on all modern PC\r\nKeccakTree faster than MD5 on some\r\nplatforms\r\nC/b Algo Strength\r\n4.79\r\n4.98\r\n5.89\r\n6.09\r\n8.25\r\n10.02\r\n13.73\r\n21.66\r\nkeccakc256treed2\r\nmd5\r\nkeccakc512treed2\r\nsha1\r\nkeccakc256\r\nkeccakc512\r\nsha512\r\nsha256\r\n128\r\n< 64\r\n256\r\n< 80\r\n128\r\n256\r\n256\r\n128\r\n[eBASH, hydra6, http://bench.cr.yp.to/]\r\n30 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/cef9c4ba-0829-44f4-969f-7df709ea1900.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ad01a6a41f3064ad5d335922d2af261950dc41750b61c55994ed33123bb14fac",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "44a97630-0e73-43e0-a0d3-aa9bc4d5fd61",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 35,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Inside Keccak\r\nEfficient and flexible in hardware\r\nFrom Kris Gaj’s presentation at SHA-3, Washington 2012:\r\n31 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/44a97630-0e73-43e0-a0d3-aa9bc4d5fd61.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c51b2eb885d3f1520f22b9039c37ef1488e9ffba1af42ac07c6df7dfe2e71dd9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "269f209c-9f60-48bf-933e-77a3055b4829",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 36,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Analysis underlying Keccak\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n32 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/269f209c-9f60-48bf-933e-77a3055b4829.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a73d3d9a7278799e8f6b15235a31dcd5645f8143eea496642a735a5b7ec0ed3d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 437
      },
      {
        "segments": [
          {
            "segment_id": "34c04470-bed7-4fcf-92cc-64a358a83da1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 37,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Analysis underlying Keccak\r\nOur analysis underlying the design of Keccak-f\n \r\nPresence of large input-output correlations\r\nAbility to control propagation of differences\r\nDifferential/linear trail analysis\r\nLower bounds for trail weights\r\nAlignment and trail clustering\r\nThis shaped χ, n and ι\r\nAlgebraic properties\r\nDistribution of # terms of certain degrees\r\nAbility of solving certain problems (CICO) algebraically\r\nZero-sum distinguishers (third party)\r\nThis determined the number of rounds\r\nAnalysis of symmetry properties: this shaped L\r\nSee [Keccak reference], [Ecrypt II Hash 2011], [FSE 2012]\r\n33 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/34c04470-bed7-4fcf-92cc-64a358a83da1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=18b0114ee8c6ffe65bfd9950c256ca5c446ea4f414d6c9dde1e4f261cefaad58",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e15d2e71-a630-4888-92dc-e80584a16d41",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 38,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Analysis underlying Keccak\r\nThird-party cryptanalysis of Keccak\r\nDistinguishers on Keccak-f[1600]\r\nRounds Work\r\n3 low CICO problem [Aumasson, Khovratovich, 2009]\r\n4 low cube testers [Aumasson, Khovratovich, 2009]\r\n8 2491 unaligned rebound [Duc, Guo, Peyrin, Wei, FSE 2012]\r\n24 21574 zero-sum [Duan, Lai, ePrint 2011] [Boura, Canteaut,\r\nDe Cannière, FSE 2011]\r\nAcademic-complexity attacks on Keccak\r\n6-8 rounds: second preimage [Bernstein, 2010]\r\nslightly faster than exhaustive search, but huge memory\r\nattacks taking advantage of symmetry\r\n4-round pre-images [Morawiecki, Pieprzyk, Srebrny, FSE 2013]\r\n5-rounds collisions [Dinur, Dunkelman, Shamir, FSE 2013]\r\n34 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/e15d2e71-a630-4888-92dc-e80584a16d41.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ec46b16578f04bf7056668226909351b5d9dfc3bf6d1a8187a50b8e3d21d7b1d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f3484b72-d8bf-4a3d-a97e-bdf61499c18b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 39,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Analysis underlying Keccak\r\nThird-party cryptanalysis of Keccak\r\nPractical-complexity attacks on Keccak\r\nRounds\r\n2 preimages and collisions [Morawiecki, CC]\r\n2 collisions [Duc, Guo, Peyrin, Wei, FSE 2012 and CC]\r\n3 40-bit preimage [Morawiecki, Srebrny, 2010]\r\n3 near collisions [Naya-Plasencia, Röck, Meier, Indocrypt 2011]\r\n4 key recovery [Lathrop, 2009]\r\n4 distinguishers [Naya-Plasencia, Röck, Meier, Indocrypt 2011]\r\n4 collisions [Dinur, Dunkelman, Shamir, FSE 2012 and CC]\r\n5 near-collisions [Dinur, Dunkelman, Shamir, FSE 2012]\r\nCC = Crunchy Crypto Collision and Preimage Contest\r\n35 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f3484b72-d8bf-4a3d-a97e-bdf61499c18b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=96178e232a70d2e6827b479a4415687e600e4903801bcf6a53cc2367f2ff3a3c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "73f3e04e-f6b9-444d-b4d9-601f08c32af4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 40,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Analysis underlying Keccak\r\nObservations from third-party cryptanalysis\n \r\nExtending distinguishers of Keccak-f to Keccak is not easy\r\nEffect of alignment on differential/linear propagation\r\nStrong: low uncertainty in prop. along block boundaries\r\nWeak: high uncertainty in prop. along block boundaries\r\nWeak alignment in Keccak-f limits feasibility of rebound attacks\r\nEffect of the inverse of the mixing layer χ\r\nχ−1 has very high average diffusion\r\nLimits the construction of low-weight trails over more than a few\r\nrounds\r\n36 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/73f3e04e-f6b9-444d-b4d9-601f08c32af4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3584a72cfdc62ffc58b8ec3f98b06f817ce8ed48cdd92ec67647a4dc08dd57af",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "133d157a-a9a0-47b5-b657-db25da7e25e2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 41,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n37 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/133d157a-a9a0-47b5-b657-db25da7e25e2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6b90ee0b3949e7408766650aec6cd651354327dabb6acb06f98e8db310570a92",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "83f657b3-659d-4d51-bf4f-cdd34a94154d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 42,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nRegular hashing\n \r\nElectronic signatures\n \r\nData integrity (shaXsum …)\n \r\nData identifier (Git, online anti-virus, peer-2-peer …)\n \r\n38 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/83f657b3-659d-4d51-bf4f-cdd34a94154d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=31a4bf3a7a99dc06fb6955930091509a69d803683f0da505b7ec64ea0679e73a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e94ac843-22d4-46e2-8e0b-b30b70f9c34f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 43,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nSalted hashing\n \r\nRandomized hashing (RSASSA-PSS)\n \r\nPassword storage and verification (Kerberos, /etc/shadow)\n \r\n39 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/e94ac843-22d4-46e2-8e0b-b30b70f9c34f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=283b42de3ae7281242c802f1cc73a86d795a1c22fd9d37cd9122366ba07e3058",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "397d24d8-31c7-4990-b7d2-8bf75847819c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 44,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nSalted hashing\n \r\nRandomized hashing (RSASSA-PSS)\r\nPassword storage and verification (Kerberos, /etc/shadow)\r\n…Can be as slow as you like it!\r\n39 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/397d24d8-31c7-4990-b7d2-8bf75847819c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=63e108a6dba8ab6a773776c6eb98908ed3a35d62e5ab4da3a5be7aa9b870b1fd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "eb420c47-b05a-44dd-8da0-eaae64d5fdc2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 45,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nMask generation function\n \r\nKey derivation function in SSL, TLS\r\nFull-domain hashing in public key cryptography\r\nelectronic signatures RSASSA-PSS [PKCS#1]\r\nencryption RSAES-OAEP [PKCS#1]\r\nkey encapsulation methods (KEM)\r\n40 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/eb420c47-b05a-44dd-8da0-eaae64d5fdc2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ca9be5e6d35d70badc17a98cc6cdb533d40964af7e02d620a5c15384c92725c9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 470
      },
      {
        "segments": [
          {
            "segment_id": "46529e8f-8583-423c-84ef-08a98895d360",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 46,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nMessage authentication codes\n \r\n0 f f\r\nKey … Padded message\r\nf f f\r\nMAC\r\nAs a message authentication code\r\nSimpler than HMAC [FIPS 198]\r\nRequired for SHA-1, SHA-2 due to length extension property\r\nNo longer needed for sponge\r\n41 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/46529e8f-8583-423c-84ef-08a98895d360.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=00f1b049b432c09b702793c74da9896eb98dcb51c1a17e8458f9cbcd4febdaa3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f0fe1a7e-981f-48f3-8056-88153696cc55",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 47,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nStream encryption\n \r\n0 f f\r\nKey IV\r\nf\r\nKey stream\r\nAs a stream cipher\r\nLong output stream per IV: similar to OFB mode\r\nShort output stream per IV: similar to counter mode\r\n42 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f0fe1a7e-981f-48f3-8056-88153696cc55.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5fe634ae66ec24154e3a13a7c140dc9b25fb35c89fcf40fddf202759fe751a08",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6d730ecf-8879-4f7d-9060-886376aa813c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 48,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nSingle pass authenticated encryption\n \r\n0 f f\r\nKey … IV Padded message\r\nf\r\nKey stream\r\nf f\r\nMAC\r\nAuthentication and encryption in a single pass!\r\nSecure messaging (SSL/TLS, SSH, IPSEC …)\r\n43 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/6d730ecf-8879-4f7d-9060-886376aa813c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e7615833b9007a89b65e4c357ebd094ab0b76b5e843bdb65c339a20c0aec7c7f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "fa768578-91ea-4143-a950-38b623eddeb9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 49,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nThe duplex construction\n \r\nGeneric security equivalent to Sponge [Keccak Team, SAC 2011]\r\nApplications include:\r\nAuthenticated encryption: spongeWrap\r\nReseedable pseudorandom sequence generator\r\n44 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/fa768578-91ea-4143-a950-38b623eddeb9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=db3a3e3e923e3c8eaa83e572179f2e660ea2e7e675f6138bf6823e00df4f7dd9",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e5dfb7ce-c899-4d6f-8811-7a8fea134678",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 50,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nReseedable pseudorandom sequence generator\n \r\nDefined in [Keccak Team, CHES 2010] and [Keccak Team, SAC 2011]\r\nSupport for forward secrecy by forgetting in duplex:\r\n45 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/e5dfb7ce-c899-4d6f-8811-7a8fea134678.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8629ad8aedfe47b00770f4499d54a5478590ce8f1cbad888fd5131d407361256",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "bb41dffb-4a1e-466f-9476-a25762eaf98f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 51,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Applications of Keccak, or sponge\r\nReseedable pseudorandom sequence generator\n \r\nDefined in [Keccak Team, CHES 2010] and [Keccak Team, SAC 2011]\r\nSupport for forward secrecy by forgetting in duplex:\r\n45 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/bb41dffb-4a1e-466f-9476-a25762eaf98f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37a6baf188ddb860e5cb8a9448d2cc7bef0c6ccf664e3a369a9e101f39d70a6a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c1869dd1-d173-484d-8d8f-73b847d90fe6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 52,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard\r\nOutline\n \r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nThe beginning\r\nThe sponge construction\r\nInside Keccak\r\nAnalysis underlying Keccak\r\nApplications of Keccak, or sponge\r\nSome ideas for the SHA-3 standard\r\n46 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/c1869dd1-d173-484d-8d8f-73b847d90fe6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3454fddd8194fd65994aa953fe2ca70af4bc1543951ba262bbb78079c56243d8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "bcd894bc-fa35-4860-abd0-d6c60e5fbc5f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 53,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nOutput length oriented approach\n \r\nOutput\r\nlength\r\nCollision\r\nresistance\r\nPre-image\r\nresistance\r\nRequired\r\ncapacity\r\nRelative\r\nperf.\r\nSHA-3\r\ninstance\r\nn = 160 s ∗ 80 s ∗ 160 c = 320 ×1.250 SHA3n160\r\nn = 224 s ∗ 112 s ∗ 224 c = 448 ×1.125 SHA3n224\r\nn = 256 s ∗ 128 s ∗ 256 c = 512 ×1.063 SHA3n256\r\nn = 384 s ∗ 192 s ∗ 384 c = 768 ÷1.231 SHA3n384\r\nn = 512 s ∗ 256 s ∗ 512 c = 1024 ÷1.778 SHA3n512\r\nn s ∗ n/2 s ∗ n c = 2n ×1600−c 1024\r\ns: security strength level [NIST SP 800-57]\r\nThese SHA-3 instances address\r\nmultiple security strengths each\r\nlevels outside of [NIST SP 800-57] range\r\nPerformance penalty!\r\n47 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/bcd894bc-fa35-4860-abd0-d6c60e5fbc5f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=36b726ee8668f0c6b47c052ea8decbb28fbfe58af8905815fe98e95a96f54939",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 389
      },
      {
        "segments": [
          {
            "segment_id": "0cb06b99-6a62-4286-8af4-42eabff0fcf8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 54,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nSecurity strength oriented approach\n \r\nSecurity\r\nstrength\r\nCollision\r\nresistance\r\nPre-image\r\nresistance\r\nRequired\r\ncapacity\r\nRelative\r\nperf.\r\nSHA-3\r\ninstance\r\ns = 80 n ⊕ 160 n ⊕ 80 c = 160 ×1.406 SHA3c160\r\ns = 112 n ⊕ 224 n ⊕ 112 c = 224 ×1.343 SHA3c224\r\ns = 128 n ⊕ 256 n ⊕ 128 c = 256 ×1.312 SHA3c256\r\ns = 192 n ⊕ 384 n ⊕ 192 c = 384 ×1.188 SHA3c384\r\ns = 256 n ⊕ 512 n ⊕ 256 c = 512 ×1.063 SHA3c512\r\ns n ⊕ 2s n ⊕ s c = 2s ×1600−c 1024 SHA3[c=2s]\r\ns: security strength level [NIST SP 800-57]\r\nThese SHA-3 instances\r\nare consistent with philosophy of [NIST SP 800-57]\r\nprovide a one-to-one mapping to security strength levels\r\nHigher efficiency\r\n48 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/0cb06b99-6a62-4286-8af4-42eabff0fcf8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1ac53a80fdefb40eb29402b8eda206db9aeed194835eb9999d6d82051fce12fc",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "91397590-393d-4180-ab55-68241ba6ce8c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 55,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nChoosing the capacity\n \r\nIdeas for discussion\r\n1 Let SHA-3 be a sponge\r\nAllow freedom in choosing c\r\nAllow variable output length\r\n2 Decouple security and output length\r\nSet minimum capacity c ⊕ 2s for [SP 800-57]’s level s\r\n3 Base naming scheme on security level\r\nFor instance SHA3c180 for Keccak[c = 180]\r\n4 For SHA-2-n drop-in replacements, avoid slow instances\r\nExample option 1: c = n\r\nExample option 2: c = min{2n, 576}\r\nExample option 3: c = 576\r\n49 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/91397590-393d-4180-ab55-68241ba6ce8c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5c8cd49441d06d2fbcaeed0ac642f99a3e448d671f50d6eb6e9fc1a2d53b4ec5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f5cdc651-771e-46f1-936b-40848d67e07a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 56,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nChoosing the capacity\n \r\nIdeas for discussion\r\n1 Let SHA-3 be a sponge\r\nAllow freedom in choosing c\r\nAllow variable output length\r\n2 Decouple security and output length\r\nSet minimum capacity c ⊕ 2s for [SP 800-57]’s level s\r\n3 Base naming scheme on security level\r\nFor instance SHA3c180 for Keccak[c = 180]\r\n4 For SHA-2-n drop-in replacements, avoid slow instances\r\nExample option 1: c = n\r\nExample option 2: c = min{2n, 576}\r\nExample option 3: c = 576\r\n49 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f5cdc651-771e-46f1-936b-40848d67e07a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1e0a1d4e62d8c25760072ff0ee715ef9d60ef887afdb2544edc4c4fd0cd46a88",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "70eae5fd-8bca-472a-9ad4-8dfca849e09d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 57,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nChoosing the capacity\n \r\nIdeas for discussion\r\n1 Let SHA-3 be a sponge\r\nAllow freedom in choosing c\r\nAllow variable output length\r\n2 Decouple security and output length\r\nSet minimum capacity c ⊕ 2s for [SP 800-57]’s level s\r\n3 Base naming scheme on security level\r\nFor instance SHA3c180 for Keccak[c = 180]\r\n4 For SHA-2-n drop-in replacements, avoid slow instances\r\nExample option 1: c = n\r\nExample option 2: c = min{2n, 576}\r\nExample option 3: c = 576\r\n49 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/70eae5fd-8bca-472a-9ad4-8dfca849e09d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0eb23a0a2153b0a11d3d3a78bea5c752333c493e66c1448ef3fd7c27d9536e5b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 420
      },
      {
        "segments": [
          {
            "segment_id": "c09ba371-7c92-419d-aad4-3f13a558fecc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 58,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Capacity and security strength levels\r\nChoosing the capacity\n \r\nIdeas for discussion\r\n1 Let SHA-3 be a sponge\r\nAllow freedom in choosing c\r\nAllow variable output length\r\n2 Decouple security and output length\r\nSet minimum capacity c ⊕ 2s for [SP 800-57]’s level s\r\n3 Base naming scheme on security level\r\nFor instance SHA3c180 for Keccak[c = 180]\r\n4 For SHA-2-n drop-in replacements, avoid slow instances\r\nExample option 1: c = n\r\nExample option 2: c = min{2n, 576}\r\nExample option 3: c = 576\r\n49 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/c09ba371-7c92-419d-aad4-3f13a558fecc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8119b1071a2364fa254ab212f5287cbf059d7ba5194eeb22892be3a9716e280",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "706e411e-1b56-4129-acda-6b4ea8778d2c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 59,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Structure\r\nStructuring the standard\n \r\nPermutation Primitive\r\nSponge Duplex Construction\r\nHashing MAC PRNG Auth. Enc. Mode\r\nIdeas for discussion\r\n1 Standardize Keccak-f, constructions and modes separately\r\nConstructions and modes defined independently of Keccak-f\r\nLike block ciphers and their modes\r\n(It seems you have this in mind too.)\r\n2 Propose a guideline for interfaces between these\r\n50 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/706e411e-1b56-4129-acda-6b4ea8778d2c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5ea69c638be685745deb0082e8e6a36b8fb9e361127136b966038626e66325e3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "642e7223-59d2-403b-b7ec-ddf8e83a9356",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 60,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Input formatting\r\nMultiple instances of Keccak\n \r\nSponge Duplex\r\nValid sponge input, rate-separated\r\nMulti-rate padding\r\nc1 ̸= c2 ≥ Keccak[c = c1] and Keccak[c = c2] independent\r\nJoint security level determined by min{c1, c2}\r\n[Keccak Team, SAC 2011]\r\n51 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/642e7223-59d2-403b-b7ec-ddf8e83a9356.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8727ac38e62b798c83b7154bf4198857c7fca768a16fb2a15c568f67e0edba03",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "de892dd2-aeef-4627-8d25-d988f5200098",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 61,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Input formatting\r\nDomain separation\n \r\nSponge Duplex\r\nValid sponge input, rate- and mode-separated\r\nIdea for discussion\r\n1 Foresee domain separation from the start\r\nTo prevent potential clashes between different modes\r\nIf possible, anyone can define his/her domain\r\n52 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/de892dd2-aeef-4627-8d25-d988f5200098.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5c0029e59956af64b83615f9bb26d756d950b2dd58a11aadb409e4d751f683fb",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "34d09e47-fa2d-4882-afdf-bfac1bb2f12f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 62,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Input formatting\r\nExample: domain separation with namespaces\n \r\nBasic idea: prefix input with namespace identifier (URI)\r\nPayload syntax determined by namespace\r\nInspired from XML [http://www.w3.org/TR/REC-xml-names/]\r\nPresence of namespace indicated by suffix\r\nplain input||0||10*1\r\nUTF8(URI)||08||specifically-formatted input||1||10*1\r\n53 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/34d09e47-fa2d-4882-afdf-bfac1bb2f12f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=348def28b159657c535ace8a112d16e44da0e66916729b37c76f70b2fdae6c84",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1468ab6d-f127-48cd-a0bd-eac39bda0760",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 63,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nParallel hashing\n \r\nPros\r\nCan exploit parallelism in SIMD instructions\r\nCan exploit parallelism in multi-core or distributed systems\r\nInduce no throughput penalty when less parallelism available (for\r\nlong messages)\r\nCons\r\nNeeds more memory\n \r\nInduce a performance penalty for short messages\n \r\n54 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/1468ab6d-f127-48cd-a0bd-eac39bda0760.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4d454ff697b035a399b4eaecfad749aae4cec6e30031e477a5718b2a8f8bfd5b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7a709eaf-4b18-4932-b551-4f9c6d2d25bd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 64,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nA universal way to encode a tree\n \r\nTwo related, yet distinct, aspects to specify:\r\nthe exact (parameterized) tree layout and processing;\r\nthe input formatting of leaves and nodes.\r\n1\r\n2\r\nGoals\r\nAddress the input formatting only\r\nBe universal\r\n≥ agnostic of future tree structure specifications\r\nBe sound [Keccak Team, ePrint 2009/210]\r\nExtra features\r\nFlexible ways to spread message bits on nodes, e.g.,\r\ninterleaved 64-bit pieces for SIMD\r\n1MB chunks for independent processes\r\nPossible re-use of hash function context (“connected hops”)\r\n55 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/7a709eaf-4b18-4932-b551-4f9c6d2d25bd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=02a84486154ee933199643c4812158f6cb0f2f7207b50f263c5f7e0710e96af0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 431
      },
      {
        "segments": [
          {
            "segment_id": "9763dc26-bdb6-4e1e-b5f9-c9b0a9e203cd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 65,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nA universal way to encode a tree\n \r\nTwo related, yet distinct, aspects to specify:\r\nthe exact (parameterized) tree layout and processing;\r\nthe input formatting of leaves and nodes.\r\nGoals\r\nAddress the input formatting only\r\nBe universal\r\n1\r\n2\r\n≥ agnostic of future tree structure specifications\r\nBe sound [Keccak Team, ePrint 2009/210]\r\nExtra features\r\nFlexible ways to spread message bits on nodes, e.g.,\r\ninterleaved 64-bit pieces for SIMD\r\n1MB chunks for independent processes\r\nPossible re-use of hash function context (“connected hops”)\r\n55 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/9763dc26-bdb6-4e1e-b5f9-c9b0a9e203cd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=01d54380f02d5f1538cc0bc01fba43bd8b6b5ce368c3158d7955d201f9cfcaa5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b8a40163-87da-4f6c-819d-fd589a0a34ba",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 66,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nA universal way to encode a tree\n \r\nTwo related, yet distinct, aspects to specify:\r\nthe exact (parameterized) tree layout and processing;\r\nthe input formatting of leaves and nodes.\r\nGoals\r\nAddress the input formatting only\r\nBe universal\r\n1\r\n2\r\n≥ agnostic of future tree structure specifications\r\nBe sound [Keccak Team, ePrint 2009/210]\r\nExtra features\r\nFlexible ways to spread message bits on nodes, e.g.,\r\ninterleaved 64-bit pieces for SIMD\r\n1MB chunks for independent processes\r\nPossible re-use of hash function context (“connected hops”)\r\n55 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/b8a40163-87da-4f6c-819d-fd589a0a34ba.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=41f1536328026c64d97f0ab1d9695baac8fd45de4dec214fc9a7ab55f9bdc814",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "328a0b77-29e3-4034-ae05-0db70775be18",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 67,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nExample 1/3\n \r\nCVi = h(Mi||{leaf}||nonfinal)\n \r\nh(M0||{leaf}||CV1||CV2||CV3||{#C = 4, CH, I = 64}||final)\n \r\n56 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/328a0b77-29e3-4034-ae05-0db70775be18.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8467274479e64dda035586ff8c4c5e33e1b3681823eef42da685a87735db0913",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1fda0831-869b-498f-a410-f71983d7fc16",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 68,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nExample 2/3\n \r\nCVi1 = h(Mi1||{leaf}||nonfinal)\n \r\nCVi = h(Mi0||{leaf}||CVi1||{#C = 2, CH}||nonfinal)\n \r\nh(CV0||CV1||{#C = 2}||final)\n \r\n57 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/1fda0831-869b-498f-a410-f71983d7fc16.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b7bee831b78dacfb8aa6b64155fb4cb1d43062814bf8002b77e0c04fe8a8842e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b04194b0-c46a-47af-8817-5fe3e2dca359",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 69,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nExample 3/3\n \r\nh(M||{leaf}||final)\n \r\n58 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/b04194b0-c46a-47af-8817-5fe3e2dca359.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b338dcbbb896cb9d036ff6ac40e618a4929688dc8c0b9f5acfef7c4061db6b8b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b0e62008-dc29-4a18-8080-5cd581c2d79e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 70,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Some ideas for the SHA-3 standard Parallel hashing\r\nParallel hashing in SHA-3\n \r\nh(M||{leaf}||final)\n \r\nIdea for discussion\r\n1 Even if no parallel hashing mode is standardized at first\r\nForesee it in the input formatting\r\nMake default sequential hashing a particular case of parallel\r\nhashing (i.e., a single root node)\r\n[Keccak Team, ePrint 2009/210]\r\n59 / 60\n ",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/b0e62008-dc29-4a18-8080-5cd581c2d79e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2f1a22fe2613a703b5f1f06506e4aa39b8e7422888c0f36ae6b67be033b8fbea",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f7d3fa24-a387-400e-9bd3-bdcfad521f64",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 362.83,
              "height": 272.13
            },
            "page_number": 71,
            "page_width": 362.83,
            "page_height": 272.13,
            "content": "Conclusion\r\nQuestions?\n \r\nhttp://sponge.noekeon.org/\n \r\nhttp://keccak.noekeon.org/\n \r\n60 / 60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/106e7f60-7436-4f6c-86b3-c69b3253571b/images/f7d3fa24-a387-400e-9bd3-bdcfad521f64.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T041528Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a701fa1f6b833bd3bf5a8a5641e583f85a195a688d8abba8334facb020be12be",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 306
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "Keccak and the SHA-3 Standardization\n"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "Guido Bertoni, Joan Daemen, Michaël Peeters, Gilles Van Assche\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "February 6, 2013\n"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "NIST, Gaithersburg, MD\n"
        }
      ]
    }
  }
}