{
  "file_name": "Linear Algebra.pdf",
  "task_id": "d3029f04-aeee-4dff-a72d-f3ce0c16981d",
  "output": {
    "chunks": [
      {
        "segments": [
          {
            "segment_id": "cf6dd29b-b9ee-4a9b-8825-63e73d102b3d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 1,
            "page_width": 612,
            "page_height": 792,
            "content": "Linear Algebra\r\nDavid Cherney, Tom Denton and Andrew Waldron",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/cf6dd29b-b9ee-4a9b-8825-63e73d102b3d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=54e1a530fa54cd48026074e64b357873562d5157dc7647629e22e0a8268a5598",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "69bbb11a-a719-44f5-9716-ade76c16550b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 2,
            "page_width": 612,
            "page_height": 792,
            "content": "2\r\nEdited by Katrina Glaeser, Rohit Thomas and Travis Scrimshaw\r\nFirst Edition. Davis California, 2013.\r\nThis work is licensed under a\r\nCreative Commons Attribution-NonCommercial\u0002ShareAlike 3.0 Unported License.\r\n2",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/69bbb11a-a719-44f5-9716-ade76c16550b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3097e7ca1fc563ed814cf7cdb0a4df4793f1bb9d738a7c41d8b838599367484f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c28b0faf-8ab7-4148-89d5-fd81186a6380",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 3,
            "page_width": 612,
            "page_height": 792,
            "content": "3\r\nPreface\r\nThis “book” grew out of a series of twenty five lecture notes for a sophomore\r\nlinear algebra class taught at the University of California, Davis. The audi\u0002ence was primarily engineering students and students of pure sciences, some\r\nof whom may go on to major in mathematics. It was motivated by the lack of\r\na book that taught students basic structures of linear algebra without overdo\u0002ing mathematical rigor or becoming a mindless exercise in crunching recipes\r\nat the cost of fundamental understanding. In particular we wanted a book\r\nthat was suitable for all students, not just math majors, that focussed on\r\nconcepts and developing the ability to think in terms of abstract structures\r\nin order to address the dizzying array of seemingly disparate applications\r\nthat can all actually be addressed with linear algebra methods.\r\nIn addition we had practical concerns. We wanted to offer students a\r\nonline version of the book for free, both because we felt it our academic\r\nduty to do so, but also because we could seamlessly link an online book to\r\na myriad of other resources–in particular WeBWorK exercises and videos.\r\nWe also wanted to make the LaTeX source available to other instructors\r\nso they could easily customize the material to fit their own needs. Finally,\r\nwe wanted to restructure the way the course was taught, by getting the\r\nstudents to direct most of their effort at more difficult problems where they\r\nhad to think through concepts, present well-thought out logical arguments\r\nand learn to turn word problems into ones where the usual array of linear\r\nalgebra recipes could take over.\r\nHow to Use the Book\r\nAt the end of each chapter there is a set of review questions. Our students\r\nfound these very difficult, mostly because they did not know where to begin,\r\nrather than needing a clever trick. We designed them this way to ensure that\r\nstudents grappled with basic concepts. Our main aim was for students to\r\nmaster these problems, so that we could ask similar high caliber problems\r\non midterm and final examinations. This meant that we did have to direct\r\nresources to grading some of these problems. For this we used two tricks.\r\nFirst we asked students to hand in more problems than we could grade, and\r\nthen secretly selected a subset for grading. Second, because there are more\r\nreview questions than what an individual student could handle, we split the\r\nclass into groups of three or four and assigned the remaining problems to them\r\n3",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c28b0faf-8ab7-4148-89d5-fd81186a6380.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8eecbff8124f46bdf1d69e37339fbc646c2cc95946f66c984341b8ad456c53cc",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 453
      },
      {
        "segments": [
          {
            "segment_id": "f00efdf7-a883-49dc-9c50-341483f1007c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 4,
            "page_width": 612,
            "page_height": 792,
            "content": "4\r\nfor grading. Teamwork is a skill our students will need in the workplace; also\r\nit really enhanced their enjoyment of mathematics.\r\nLearning math is like learning to play a violin–many “technical exercises”\r\nare necessary before you can really make music! Therefore, each chapter has\r\na set of dedicated WeBWorK “skills problems” where students can test that\r\nthey have mastered basic linear algebra skills. The beauty of WeBWorK is\r\nthat students get instant feedback and problems can be randomized, which\r\nmeans that although students are working on the same types of problem,\r\nthey cannot simply tell each other the answer. Instead, we encourage them\r\nto explain to one another how to do the WeBWorK exercises. Our experience\r\nis that this way, students can mostly figure out how to do the WeBWorK\r\nproblems among themselves, freeing up discussion groups and office hours for\r\nweightier issues. Finally, we really wanted our students to carefully read the\r\nbook. Therefore, each chapter has several very simple WeBWorK “reading\r\nproblems”. These appear as links at strategic places. They are very simple\r\nproblems that can answered rapidly if a student has read the preceding text.\r\nThe Material\r\nWe believe the entire book can be taught in twenty five fifty minute lectures\r\nto a sophomore audience that has been exposed to a one year calculus course.\r\nVector calculus is useful, but not necessary preparation for this book, which\r\nattempts to be self-contained. Key concepts are presented multiple times,\r\nthroughout the book, often first in a more intuitive setting, and then again\r\nin a definition, theorem, proof style later on. We do not aim for students\r\nto become agile mathematical proof writers, but we do expect them to be\r\nable to show and explain why key results hold. We also often use the review\r\nexercises to let students discover key results for themselves; before they are\r\npresented again in detail later in the book.\r\nLinear algebra courses run the risk of becoming a conglomeration of learn\u0002by-rote recipes involving arrays filled with numbers. In the modern computer\r\nera, understanding these recipes, why they work, and what they are for is\r\nmore important than ever. Therefore, we believe it is crucial to change the\r\nstudents’ approach to mathematics right from the beginning of the course.\r\nInstead of them asking us “what do I do here?”, we want them to ask “why\r\nwould I do that?” This means that students need to start to think in terms\r\nof abstract structures. In particular, they need to rapidly become conversant\r\nin sets and functions–the first WeBWorK set will help them brush up these\r\n4",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f00efdf7-a883-49dc-9c50-341483f1007c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e6ef18d88989a98983523895fefb2ccc7785c690040cf3589a58d6e1d506c374",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 431
      },
      {
        "segments": [
          {
            "segment_id": "8fe805aa-c318-48f9-abe0-a0a7147059f7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 5,
            "page_width": 612,
            "page_height": 792,
            "content": "5\r\nskills.\r\nThere is no best order to teach a linear algebra course. The book has\r\nbeen written such that instructors can reorder the chapters (using the La\u0002TeX source) in any (reasonable) order and still have a consistent text. We\r\nhammer the notions of abstract vectors and linear transformations hard and\r\nearly, while at the same time giving students the basic matrix skills neces\u0002sary to perform computations. Gaussian elimination is followed directly by\r\nan “exploration chapter” on the simplex algorithm to open students minds\r\nto problems beyond standard linear systems ones. Vectors in R\r\nn and general\r\nvector spaces are presented back to back so that students are not stranded\r\nwith the idea that vectors are just ordered lists of numbers. To this end, we\r\nalso labor the notion of all functions from a set to the real numbers. In the\r\nsame vein linear transformations and matrices are presented hand in hand.\r\nOnce students see that a linear map is specified by its action on a limited set\r\nof inputs, they can already understand what a basis is. All the while students\r\nare studying linear systems and their solution sets, so after matrices deter\u0002minants are introduced. This material can proceed rapidly since elementary\r\nmatrices were already introduced with Gaussian elimination. Only then is a\r\ncareful discussion of spans, linear independence and dimension given to ready\r\nstudents for a thorough treatment of eigenvectors and diagonalization. The\r\ndimension formula therefore appears quite late, since we prefer not to elevate\r\nrote computations of column and row spaces to a pedestal. The book ends\r\nwith applications–least squares and singular values. These are a fun way to\r\nend any lecture course. It would also be quite easy to spend any extra time\r\non systems of differential equations and simple Fourier transform problems.\r\n5",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8fe805aa-c318-48f9-abe0-a0a7147059f7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6f7598cc7a68b1367063b0031466ac2c24d0a8961d2caa56b589ae4237212292",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 298
      },
      {
        "segments": [
          {
            "segment_id": "74a27159-ed82-43ea-a693-c93507de2fbc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 6,
            "page_width": 612,
            "page_height": 792,
            "content": "6\r\nOne possible distribution of twenty five fifty minute lectures might be:\r\nChapter Lectures\r\nWhat is Linear Algebra? 1\r\nSystemsofLinearEquations 3\r\nThe Simplex Method 1\r\nVectors in Space, n-Vectors 1\r\nVector Spaces 1\r\nLinear Transformations 1\r\nMatrices 3\r\nDeterminants 2\r\nSubspaces and Spanning Sets 1\r\nLinear Independence 1\r\nBasis and Dimension 1\r\nEigenvalues and Eigenvectors 2\r\nDiagonalization 1\r\nOrthonormal Bases and Complements 2\r\nDiagonalizing Symmetric Matrices 1\r\nKernel, Range, Nullity, Rank 1\r\nLeast Squares and Singular Values 1\r\nCreating this book has taken the labor of many people. Special thanks are\r\ndue to Katrina Glaeser and Travis Scrimshaw for shooting many of the videos\r\nand LaTeXing their scripts. Rohit Thomas wrote many of the WeBWorK\r\nproblems. Bruno Nachtergaele and Anne Schilling provided inspiration for\r\ncreating a free resource for all students of linear algebra. Dan Comins helped\r\nwith technical aspects. A University of California online pilot grant helped\r\nfund the graduate students who worked on the project. Most of all we thank\r\nour students who found many errors in the book and taught us how to teach\r\nthis material!\r\nFinally, we admit the book’s many shortcomings: clumsy writing, low\r\nquality artwork and low-tech video material. We welcome anybody who\r\nwishes to contribute new material—WeBWorK problems, videos, pictures—\r\nto make this resource a better one and are glad to hear of any typographical\r\nerrors, mathematical fallacies, or simply ideas how to improve the book.\r\nDavid, Tom, and Andrew\r\n6",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/74a27159-ed82-43ea-a693-c93507de2fbc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c8f0b7d3ea467057dbc882824575d83d6d60e25405c4c7562fd0d3c20cfca382",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 238
      },
      {
        "segments": [
          {
            "segment_id": "47a27198-c5d1-408a-b2c9-0c9e1296c31a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 7,
            "page_width": 612,
            "page_height": 792,
            "content": "Contents\r\n1 What is Linear Algebra? 13\r\n1.1 What Are Vectors? . . . . . . . . . . . . . . . . . . . . . . . . 13\r\n1.2 What Are Linear Functions? . . . . . . . . . . . . . . . . . . . 15\r\n1.3 What is a Matrix? . . . . . . . . . . . . . . . . . . . . . . . . 20\r\n1.4 The Matrix Detour . . . . . . . . . . . . . . . . . . . . . . . . 25\r\n1.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 29\r\n2 Systems of Linear Equations 35\r\n2.1 Gaussian Elimination . . . . . . . . . . . . . . . . . . . . . . . 35\r\n2.1.1 Augmented Matrix Notation . . . . . . . . . . . . . . . 35\r\n2.1.2 Equivalence and the Act of Solving . . . . . . . . . . . 38\r\n2.1.3 Reduced Row Echelon Form . . . . . . . . . . . . . . . 38\r\n2.1.4 Solution Sets and RREF . . . . . . . . . . . . . . . . . 43\r\n2.2 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 46\r\n2.3 Elementary Row Operations . . . . . . . . . . . . . . . . . . . 50\r\n2.3.1 EROs and Matrices . . . . . . . . . . . . . . . . . . . . 50\r\n2.3.2 Recording EROs in (M|I ) . . . . . . . . . . . . . . . . 52\r\n2.3.3 The Three Elementary Matrices . . . . . . . . . . . . . 54\r\n2.3.4 LU, LDU, and LDP U Factorizations . . . . . . . . . . 56\r\n2.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 59\r\n2.5 Solution Sets for Systems of Linear Equations . . . . . . . . . 61\r\n2.5.1 The Geometry of Solution Sets: Hyperplanes . . . . . . 62\r\n7",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/47a27198-c5d1-408a-b2c9-0c9e1296c31a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0ed2523041fedd6013ac4ac5ab9c8817bee7369978d4d201e24e8662d9e5c601",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 465
      },
      {
        "segments": [
          {
            "segment_id": "6a622f19-f518-4319-9b41-5758b99c20b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 8,
            "page_width": 612,
            "page_height": 792,
            "content": "8\r\n2.5.2 Particular Solution + Homogeneous Solutions . . . . . 63\r\n2.5.3 Solutions and Linearity . . . . . . . . . . . . . . . . . . 64\r\n2.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 66\r\n3 The Simplex Method 69\r\n3.1 Pablo’s Problem . . . . . . . . . . . . . . . . . . . . . . . . . . 69\r\n3.2 Graphical Solutions . . . . . . . . . . . . . . . . . . . . . . . . 71\r\n3.3 Dantzig’s Algorithm . . . . . . . . . . . . . . . . . . . . . . . 73\r\n3.4 Pablo Meets Dantzig . . . . . . . . . . . . . . . . . . . . . . . 76\r\n3.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 78\r\n4 Vectors in Space, n-Vectors 79\r\n4.1 Addition and Scalar Multiplication in R\r\nn\r\n. . . . . . . . . . . . 80\r\n4.2 Hyperplanes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\r\n4.3 Directions and Magnitudes . . . . . . . . . . . . . . . . . . . . 84\r\n4.4 Vectors, Lists and Functions: R\r\nS\r\n. . . . . . . . . . . . . . . . 90\r\n4.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 92\r\n5 Vector Spaces 97\r\n5.1 Examples of Vector Spaces . . . . . . . . . . . . . . . . . . . . 98\r\n5.1.1 Non-Examples . . . . . . . . . . . . . . . . . . . . . . . 102\r\n5.2 Other Fields . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103\r\n5.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 105\r\n6 Linear Transformations 107\r\n6.1 The Consequence of Linearity . . . . . . . . . . . . . . . . . . 107\r\n6.2 Linear Functions on Hyperplanes . . . . . . . . . . . . . . . . 109\r\n6.3 Linear Differential Operators . . . . . . . . . . . . . . . . . . . 110\r\n6.4 Bases (Take 1) . . . . . . . . . . . . . . . . . . . . . . . . . . 111\r\n6.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 114\r\n7 Matrices 117\r\n7.1 Linear Transformations and Matrices . . . . . . . . . . . . . . 117\r\n7.1.1 Basis Notation . . . . . . . . . . . . . . . . . . . . . . 117\r\n7.1.2 From Linear Operators to Matrices . . . . . . . . . . . 123\r\n7.2 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 125\r\n7.3 Properties of Matrices . . . . . . . . . . . . . . . . . . . . . . 129\r\n7.3.1 Associativity and Non-Commutativity . . . . . . . . . 136\r\n8",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6a622f19-f518-4319-9b41-5758b99c20b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6d22f77fe81588b088184e4863f85852a40909e1b8a5d3be5a4a492765c3f7a7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 737
      },
      {
        "segments": [
          {
            "segment_id": "6a622f19-f518-4319-9b41-5758b99c20b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 8,
            "page_width": 612,
            "page_height": 792,
            "content": "8\r\n2.5.2 Particular Solution + Homogeneous Solutions . . . . . 63\r\n2.5.3 Solutions and Linearity . . . . . . . . . . . . . . . . . . 64\r\n2.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 66\r\n3 The Simplex Method 69\r\n3.1 Pablo’s Problem . . . . . . . . . . . . . . . . . . . . . . . . . . 69\r\n3.2 Graphical Solutions . . . . . . . . . . . . . . . . . . . . . . . . 71\r\n3.3 Dantzig’s Algorithm . . . . . . . . . . . . . . . . . . . . . . . 73\r\n3.4 Pablo Meets Dantzig . . . . . . . . . . . . . . . . . . . . . . . 76\r\n3.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 78\r\n4 Vectors in Space, n-Vectors 79\r\n4.1 Addition and Scalar Multiplication in R\r\nn\r\n. . . . . . . . . . . . 80\r\n4.2 Hyperplanes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\r\n4.3 Directions and Magnitudes . . . . . . . . . . . . . . . . . . . . 84\r\n4.4 Vectors, Lists and Functions: R\r\nS\r\n. . . . . . . . . . . . . . . . 90\r\n4.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 92\r\n5 Vector Spaces 97\r\n5.1 Examples of Vector Spaces . . . . . . . . . . . . . . . . . . . . 98\r\n5.1.1 Non-Examples . . . . . . . . . . . . . . . . . . . . . . . 102\r\n5.2 Other Fields . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103\r\n5.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 105\r\n6 Linear Transformations 107\r\n6.1 The Consequence of Linearity . . . . . . . . . . . . . . . . . . 107\r\n6.2 Linear Functions on Hyperplanes . . . . . . . . . . . . . . . . 109\r\n6.3 Linear Differential Operators . . . . . . . . . . . . . . . . . . . 110\r\n6.4 Bases (Take 1) . . . . . . . . . . . . . . . . . . . . . . . . . . 111\r\n6.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 114\r\n7 Matrices 117\r\n7.1 Linear Transformations and Matrices . . . . . . . . . . . . . . 117\r\n7.1.1 Basis Notation . . . . . . . . . . . . . . . . . . . . . . 117\r\n7.1.2 From Linear Operators to Matrices . . . . . . . . . . . 123\r\n7.2 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 125\r\n7.3 Properties of Matrices . . . . . . . . . . . . . . . . . . . . . . 129\r\n7.3.1 Associativity and Non-Commutativity . . . . . . . . . 136\r\n8",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6a622f19-f518-4319-9b41-5758b99c20b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6d22f77fe81588b088184e4863f85852a40909e1b8a5d3be5a4a492765c3f7a7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 737
      },
      {
        "segments": [
          {
            "segment_id": "97af1475-97ee-46c0-a306-82daa7fcd864",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 9,
            "page_width": 612,
            "page_height": 792,
            "content": "9\r\n7.3.2 Block Matrices . . . . . . . . . . . . . . . . . . . . . . 138\r\n7.3.3 The Algebra of Square Matrices . . . . . . . . . . . . 139\r\n7.3.4 Trace . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140\r\n7.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 142\r\n7.5 Inverse Matrix . . . . . . . . . . . . . . . . . . . . . . . . . . . 145\r\n7.5.1 Three Properties of the Inverse . . . . . . . . . . . . . 146\r\n7.5.2 Finding Inverses (Redux) . . . . . . . . . . . . . . . . . 147\r\n7.5.3 Linear Systems and Inverses . . . . . . . . . . . . . . . 149\r\n7.5.4 Homogeneous Systems . . . . . . . . . . . . . . . . . . 149\r\n7.5.5 Bit Matrices . . . . . . . . . . . . . . . . . . . . . . . . 150\r\n7.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 151\r\n7.7 LU Redux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154\r\n7.7.1 Using LU Decomposition to Solve Linear Systems . . . 155\r\n7.7.2 Finding an LU Decomposition. . . . . . . . . . . . . . 157\r\n7.7.3 Block LDU Decomposition . . . . . . . . . . . . . . . . 160\r\n7.8 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 161\r\n8 Determinants 163\r\n8.1 The Determinant Formula . . . . . . . . . . . . . . . . . . . . 163\r\n8.1.1 Simple Examples . . . . . . . . . . . . . . . . . . . . . 163\r\n8.1.2 Permutations . . . . . . . . . . . . . . . . . . . . . . . 164\r\n8.2 Elementary Matrices and Determinants . . . . . . . . . . . . . 168\r\n8.2.1 Row Swap . . . . . . . . . . . . . . . . . . . . . . . . . 169\r\n8.2.2 Row Multiplication . . . . . . . . . . . . . . . . . . . . 170\r\n8.2.3 Row Addition . . . . . . . . . . . . . . . . . . . . . . . 171\r\n8.2.4 Determinant of Products . . . . . . . . . . . . . . . . . 173\r\n8.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 176\r\n8.4 Properties of the Determinant . . . . . . . . . . . . . . . . . . 180\r\n8.4.1 Determinant of the Inverse . . . . . . . . . . . . . . . . 183\r\n8.4.2 Adjoint of a Matrix . . . . . . . . . . . . . . . . . . . . 183\r\n8.4.3 Application: Volume of a Parallelepiped . . . . . . . . 185\r\n8.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 186\r\n9 Subspaces and Spanning Sets 189\r\n9.1 Subspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189\r\n9.2 Building Subspaces . . . . . . . . . . . . . . . . . . . . . . . . 191\r\n9.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 196\r\n9",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/97af1475-97ee-46c0-a306-82daa7fcd864.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=422f8cb8d9e7b0e8a4b634ffbec054c355d07a4fb3e7f6fbaa0f2d3373b1ee65",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 834
      },
      {
        "segments": [
          {
            "segment_id": "97af1475-97ee-46c0-a306-82daa7fcd864",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 9,
            "page_width": 612,
            "page_height": 792,
            "content": "9\r\n7.3.2 Block Matrices . . . . . . . . . . . . . . . . . . . . . . 138\r\n7.3.3 The Algebra of Square Matrices . . . . . . . . . . . . 139\r\n7.3.4 Trace . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140\r\n7.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 142\r\n7.5 Inverse Matrix . . . . . . . . . . . . . . . . . . . . . . . . . . . 145\r\n7.5.1 Three Properties of the Inverse . . . . . . . . . . . . . 146\r\n7.5.2 Finding Inverses (Redux) . . . . . . . . . . . . . . . . . 147\r\n7.5.3 Linear Systems and Inverses . . . . . . . . . . . . . . . 149\r\n7.5.4 Homogeneous Systems . . . . . . . . . . . . . . . . . . 149\r\n7.5.5 Bit Matrices . . . . . . . . . . . . . . . . . . . . . . . . 150\r\n7.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 151\r\n7.7 LU Redux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154\r\n7.7.1 Using LU Decomposition to Solve Linear Systems . . . 155\r\n7.7.2 Finding an LU Decomposition. . . . . . . . . . . . . . 157\r\n7.7.3 Block LDU Decomposition . . . . . . . . . . . . . . . . 160\r\n7.8 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 161\r\n8 Determinants 163\r\n8.1 The Determinant Formula . . . . . . . . . . . . . . . . . . . . 163\r\n8.1.1 Simple Examples . . . . . . . . . . . . . . . . . . . . . 163\r\n8.1.2 Permutations . . . . . . . . . . . . . . . . . . . . . . . 164\r\n8.2 Elementary Matrices and Determinants . . . . . . . . . . . . . 168\r\n8.2.1 Row Swap . . . . . . . . . . . . . . . . . . . . . . . . . 169\r\n8.2.2 Row Multiplication . . . . . . . . . . . . . . . . . . . . 170\r\n8.2.3 Row Addition . . . . . . . . . . . . . . . . . . . . . . . 171\r\n8.2.4 Determinant of Products . . . . . . . . . . . . . . . . . 173\r\n8.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 176\r\n8.4 Properties of the Determinant . . . . . . . . . . . . . . . . . . 180\r\n8.4.1 Determinant of the Inverse . . . . . . . . . . . . . . . . 183\r\n8.4.2 Adjoint of a Matrix . . . . . . . . . . . . . . . . . . . . 183\r\n8.4.3 Application: Volume of a Parallelepiped . . . . . . . . 185\r\n8.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 186\r\n9 Subspaces and Spanning Sets 189\r\n9.1 Subspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189\r\n9.2 Building Subspaces . . . . . . . . . . . . . . . . . . . . . . . . 191\r\n9.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 196\r\n9",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/97af1475-97ee-46c0-a306-82daa7fcd864.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=422f8cb8d9e7b0e8a4b634ffbec054c355d07a4fb3e7f6fbaa0f2d3373b1ee65",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 834
      },
      {
        "segments": [
          {
            "segment_id": "5d441956-5a96-488f-a8a1-f3d654fb929d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 10,
            "page_width": 612,
            "page_height": 792,
            "content": "10\r\n10 Linear Independence 197\r\n10.1 Showing Linear Dependence . . . . . . . . . . . . . . . . . . . 198\r\n10.2 Showing Linear Independence . . . . . . . . . . . . . . . . . . 201\r\n10.3 From Dependent Independent . . . . . . . . . . . . . . . . . . 202\r\n10.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 203\r\n11 Basis and Dimension 207\r\n11.1 Bases in R\r\nn\r\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210\r\n11.2 Matrix of a Linear Transformation (Redux) . . . . . . . . . . 212\r\n11.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 215\r\n12 Eigenvalues and Eigenvectors 219\r\n12.1 Invariant Directions . . . . . . . . . . . . . . . . . . . . . . . . 221\r\n12.2 The Eigenvalue–Eigenvector Equation . . . . . . . . . . . . . . 226\r\n12.3 Eigenspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230\r\n12.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 231\r\n13 Diagonalization 235\r\n13.1 Diagonalizability . . . . . . . . . . . . . . . . . . . . . . . . . 235\r\n13.2 Change of Basis . . . . . . . . . . . . . . . . . . . . . . . . . . 236\r\n13.3 Changing to a Basis of Eigenvectors . . . . . . . . . . . . . . . 240\r\n13.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 242\r\n14 Orthonormal Bases and Complements 247\r\n14.1 Properties of the Standard Basis . . . . . . . . . . . . . . . . . 247\r\n14.2 Orthogonal and Orthonormal Bases . . . . . . . . . . . . . . . 249\r\n14.3 Relating Orthonormal Bases . . . . . . . . . . . . . . . . . . . 250\r\n14.4 Gram-Schmidt & Orthogonal Complements . . . . . . . . . . 253\r\n14.4.1 The Gram-Schmidt Procedure . . . . . . . . . . . . . . 256\r\n14.5 QR Decomposition . . . . . . . . . . . . . . . . . . . . . . . . 257\r\n14.6 Orthogonal Complements . . . . . . . . . . . . . . . . . . . . 259\r\n14.7 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 264\r\n15 Diagonalizing Symmetric Matrices 269\r\n15.1 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 273\r\n16 Kernel, Range, Nullity, Rank 277\r\n16.1 Range . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 278\r\n16.2 Image . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 279\r\n10",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5d441956-5a96-488f-a8a1-f3d654fb929d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8cd9b53aee348ad48f6e248f6bb77b5cae9b07d075b95e2b925c407143245584",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 717
      },
      {
        "segments": [
          {
            "segment_id": "5d441956-5a96-488f-a8a1-f3d654fb929d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 10,
            "page_width": 612,
            "page_height": 792,
            "content": "10\r\n10 Linear Independence 197\r\n10.1 Showing Linear Dependence . . . . . . . . . . . . . . . . . . . 198\r\n10.2 Showing Linear Independence . . . . . . . . . . . . . . . . . . 201\r\n10.3 From Dependent Independent . . . . . . . . . . . . . . . . . . 202\r\n10.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 203\r\n11 Basis and Dimension 207\r\n11.1 Bases in R\r\nn\r\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210\r\n11.2 Matrix of a Linear Transformation (Redux) . . . . . . . . . . 212\r\n11.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 215\r\n12 Eigenvalues and Eigenvectors 219\r\n12.1 Invariant Directions . . . . . . . . . . . . . . . . . . . . . . . . 221\r\n12.2 The Eigenvalue–Eigenvector Equation . . . . . . . . . . . . . . 226\r\n12.3 Eigenspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230\r\n12.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 231\r\n13 Diagonalization 235\r\n13.1 Diagonalizability . . . . . . . . . . . . . . . . . . . . . . . . . 235\r\n13.2 Change of Basis . . . . . . . . . . . . . . . . . . . . . . . . . . 236\r\n13.3 Changing to a Basis of Eigenvectors . . . . . . . . . . . . . . . 240\r\n13.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 242\r\n14 Orthonormal Bases and Complements 247\r\n14.1 Properties of the Standard Basis . . . . . . . . . . . . . . . . . 247\r\n14.2 Orthogonal and Orthonormal Bases . . . . . . . . . . . . . . . 249\r\n14.3 Relating Orthonormal Bases . . . . . . . . . . . . . . . . . . . 250\r\n14.4 Gram-Schmidt & Orthogonal Complements . . . . . . . . . . 253\r\n14.4.1 The Gram-Schmidt Procedure . . . . . . . . . . . . . . 256\r\n14.5 QR Decomposition . . . . . . . . . . . . . . . . . . . . . . . . 257\r\n14.6 Orthogonal Complements . . . . . . . . . . . . . . . . . . . . 259\r\n14.7 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 264\r\n15 Diagonalizing Symmetric Matrices 269\r\n15.1 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 273\r\n16 Kernel, Range, Nullity, Rank 277\r\n16.1 Range . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 278\r\n16.2 Image . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 279\r\n10",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5d441956-5a96-488f-a8a1-f3d654fb929d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8cd9b53aee348ad48f6e248f6bb77b5cae9b07d075b95e2b925c407143245584",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 717
      },
      {
        "segments": [
          {
            "segment_id": "e7efffb7-a257-430d-88b3-8d5191f70cfa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 11,
            "page_width": 612,
            "page_height": 792,
            "content": "11\r\n16.2.1 One-to-one and Onto . . . . . . . . . . . . . . . . . . 281\r\n16.2.2 Kernel . . . . . . . . . . . . . . . . . . . . . . . . . . . 284\r\n16.3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 289\r\n16.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 290\r\n17 Least squares and Singular Values 295\r\n17.1 Projection Matrices . . . . . . . . . . . . . . . . . . . . . . . . 298\r\n17.2 Singular Value Decomposition . . . . . . . . . . . . . . . . . . 300\r\n17.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 304\r\nA List of Symbols 307\r\nB Fields 309\r\nC Online Resources 311\r\nD Sample First Midterm 313\r\nE Sample Second Midterm 323\r\nF Sample Final Exam 333\r\nG Movie Scripts 361\r\nG.1 What is Linear Algebra? . . . . . . . . . . . . . . . . . . . . . 361\r\nG.2 Systems of Linear Equations . . . . . . . . . . . . . . . . . . . 361\r\nG.3 Vectors in Space n-Vectors . . . . . . . . . . . . . . . . . . . . 371\r\nG.4 Vector Spaces . . . . . . . . . . . . . . . . . . . . . . . . . . . 373\r\nG.5 Linear Transformations . . . . . . . . . . . . . . . . . . . . . . 377\r\nG.6 Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 379\r\nG.7 Determinants . . . . . . . . . . . . . . . . . . . . . . . . . . . 389\r\nG.8 Subspaces and Spanning Sets . . . . . . . . . . . . . . . . . . 397\r\nG.9 Linear Independence . . . . . . . . . . . . . . . . . . . . . . . 398\r\nG.10 Basis and Dimension . . . . . . . . . . . . . . . . . . . . . . . 401\r\nG.11 Eigenvalues and Eigenvectors . . . . . . . . . . . . . . . . . . 403\r\nG.12 Diagonalization . . . . . . . . . . . . . . . . . . . . . . . . . . 409\r\nG.13 Orthonormal Bases and Complements . . . . . . . . . . . . . . 415\r\nG.14 Diagonalizing Symmetric Matrices . . . . . . . . . . . . . . . . 422\r\nG.15 Kernel, Range, Nullity, Rank . . . . . . . . . . . . . . . . . . . 424\r\nG.16 Least Squares and Singular Values . . . . . . . . . . . . . . . . 426\r\n11",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e7efffb7-a257-430d-88b3-8d5191f70cfa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5d51ac28216d799e45624a99957240c38a63f37f26d75b6bda89936737be0919",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 652
      },
      {
        "segments": [
          {
            "segment_id": "e7efffb7-a257-430d-88b3-8d5191f70cfa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 11,
            "page_width": 612,
            "page_height": 792,
            "content": "11\r\n16.2.1 One-to-one and Onto . . . . . . . . . . . . . . . . . . 281\r\n16.2.2 Kernel . . . . . . . . . . . . . . . . . . . . . . . . . . . 284\r\n16.3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 289\r\n16.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 290\r\n17 Least squares and Singular Values 295\r\n17.1 Projection Matrices . . . . . . . . . . . . . . . . . . . . . . . . 298\r\n17.2 Singular Value Decomposition . . . . . . . . . . . . . . . . . . 300\r\n17.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 304\r\nA List of Symbols 307\r\nB Fields 309\r\nC Online Resources 311\r\nD Sample First Midterm 313\r\nE Sample Second Midterm 323\r\nF Sample Final Exam 333\r\nG Movie Scripts 361\r\nG.1 What is Linear Algebra? . . . . . . . . . . . . . . . . . . . . . 361\r\nG.2 Systems of Linear Equations . . . . . . . . . . . . . . . . . . . 361\r\nG.3 Vectors in Space n-Vectors . . . . . . . . . . . . . . . . . . . . 371\r\nG.4 Vector Spaces . . . . . . . . . . . . . . . . . . . . . . . . . . . 373\r\nG.5 Linear Transformations . . . . . . . . . . . . . . . . . . . . . . 377\r\nG.6 Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 379\r\nG.7 Determinants . . . . . . . . . . . . . . . . . . . . . . . . . . . 389\r\nG.8 Subspaces and Spanning Sets . . . . . . . . . . . . . . . . . . 397\r\nG.9 Linear Independence . . . . . . . . . . . . . . . . . . . . . . . 398\r\nG.10 Basis and Dimension . . . . . . . . . . . . . . . . . . . . . . . 401\r\nG.11 Eigenvalues and Eigenvectors . . . . . . . . . . . . . . . . . . 403\r\nG.12 Diagonalization . . . . . . . . . . . . . . . . . . . . . . . . . . 409\r\nG.13 Orthonormal Bases and Complements . . . . . . . . . . . . . . 415\r\nG.14 Diagonalizing Symmetric Matrices . . . . . . . . . . . . . . . . 422\r\nG.15 Kernel, Range, Nullity, Rank . . . . . . . . . . . . . . . . . . . 424\r\nG.16 Least Squares and Singular Values . . . . . . . . . . . . . . . . 426\r\n11",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e7efffb7-a257-430d-88b3-8d5191f70cfa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5d51ac28216d799e45624a99957240c38a63f37f26d75b6bda89936737be0919",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 652
      },
      {
        "segments": [
          {
            "segment_id": "942e31a3-13e5-4719-8329-590b6ab33e6f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 12,
            "page_width": 612,
            "page_height": 792,
            "content": "12\r\nIndex 426\r\n12",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/942e31a3-13e5-4719-8329-590b6ab33e6f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7d131f27b6d27eeeb79270323fcdf21b6fb0824757109504de1368667f5fdd9e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "623c3213-211f-4696-9b96-8156f557ffaa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 13,
            "page_width": 612,
            "page_height": 792,
            "content": "1\r\nWhat is Linear Algebra?\r\nMany difficult science problems can be handled using the powerful yet easy\r\nto use mathematics of linear algebra. Unfortunately, because the subject (at\r\nleast for those learning it) requires seemingly arcane and tedious computa\u0002tions involving large arrays of number known as matrices, the key concepts\r\nand the wide applicability of linear algebra are easily missed. Therefore, be\u0002fore we equip you with matrix skills, let us give some hints about what linear\r\nalgebra is. The takeaway message is\r\nLinear algebra is the study of vectors and linear transformations.\r\nIn broad terms, vectors are things you can add and linear functions are very\r\nspecial functions of vectors that respect vector addition. To understand this\r\na little better, lets try some examples. Please be prepared to change the way\r\nyou think about some familiar mathematical objects and keep a pencil and\r\npiece of paper handy!\r\n1.1 What Are Vectors?\r\nHere are some examples of things that can be added:\r\nExample 1 (Vector Addition)\r\n(A) Numbers: If x and y are numbers then so is x + y.\r\n13",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/623c3213-211f-4696-9b96-8156f557ffaa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=53098a020c7996144c2a68a9881455f76c72592e13ca9b4420f82e18b292fbb7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 184
      },
      {
        "segments": [
          {
            "segment_id": "a171e832-bf53-4a90-aabe-618104b61791",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 14,
            "page_width": 612,
            "page_height": 792,
            "content": "14 What is Linear Algebra?\r\n(B) 3-vectors:\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n =\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n.\r\n(C) Polynomials: If p(x) = 1 + x − 2x\r\n2 + 3x3\r\nand q(x) = x + 3x\r\n2 − 3x3 + x4\r\nthen\r\ntheir sum p(x) + q(x) is the new polynomial 1 + 2x + x\r\n2 + x4\r\n.\r\n(D) Power series: If f(x) = 1+x+\r\n1\r\n2!x\r\n2+\r\n1\r\n3!x\r\n3+· · · and g(x) = 1−x+\r\n1\r\n2!x\r\n2−\r\n1\r\n3!x\r\n3+· · ·\r\nthen f(x) + g(x) = 1 + 1\r\n2!x\r\n2 +\r\n1\r\n4!x\r\n4\r\n· · · is also a power series.\r\n(E) Functions: If f(x) = e\r\nx\r\nand g(x) = e\r\n−x\r\nthen their sum f(x) + g(x) is the new\r\nfunction 2 cosh x.\r\nStacks of numbers are not the only things that are vectors, as examples C,D,\r\nand E show. Because they “can be added”, you should now start thinking of\r\nall the above objects as vectors! In Chapter 5 we will give the precise rules\r\nthat vector addition must obey. In the above examples, however, notice that\r\nthe vector addition rule stems from the rules for adding numbers.\r\nWhen adding the same vector over and over, for example\r\nx + x , x + x + x , x + x + x + x , . . . ,\r\nwe will write\r\n2x , 3x , 4x , . . . ,\r\nrespectively. For example\r\n4\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n4\r\n4\r\n0\r\n\r\n .\r\nDefining 4x = x + x + x + x is fine for integer multiples, but does not help us\r\nmake sense of 1\r\n3\r\nx. For the different types of vectors above, you can probably\r\nguess how to multiply a vector by a scalar. For example\r\n1\r\n3\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n1\r\n3\r\n1\r\n3\r\n0\r\n\r\n .\r\nIn any given situation that you plan to describe using vectors, you need to\r\ndecide on a way to add and scalar multiply vectors. In summary:\r\n14",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a171e832-bf53-4a90-aabe-618104b61791.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fa129da090f3408ffbdbc8bd30463deaf74e3359d291d1162c9eefc1e4f0980d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 404
      },
      {
        "segments": [
          {
            "segment_id": "7ff9b787-9472-4220-b0d4-24d5b812f5d2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 15,
            "page_width": 612,
            "page_height": 792,
            "content": "1.2 What Are Linear Functions? 15\r\nVectors are things you can add and scalar multiply.\r\nExamples of kinds of vectors:\r\n• numbers\r\n• n-vectors\r\n• 2nd order polynomials\r\n• n-th order polynomials\r\n• power series\r\n• functions with a certain domain\r\n1.2 What Are Linear Functions?\r\nIn calculus classes, the main subject of investigation was the rates of change\r\nof functions. In linear algebra, functions will again be focus of your attention,\r\nbut functions of a very special type. In calculus you were perhaps encouraged\r\nto think of a function as a machine “f” into which one may feed a real\r\nnumber. For each input x this machine outputs a single real number f(x).\r\n15",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7ff9b787-9472-4220-b0d4-24d5b812f5d2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9db67c0150e6f27981f62bebdecf6c740dc1a3f1227dcede0eee4bf192e37630",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "416118a0-0814-48df-b947-3c39e182ac53",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 16,
            "page_width": 612,
            "page_height": 792,
            "content": "16 What is Linear Algebra?\r\nIn linear algebra, the functions we study will take vectors (of some type)\r\nas both inputs and outputs. We just saw vectors are objects that can be\r\nadded or scalar multiplied—a very general notion—so the functions we are\r\ngoing to study will look novel at first. So things don’t get too abstract, here\r\nare five questions that can be rephrased in terms of functions of vectors.\r\nExample 2 (Functions of Vectors in Disguise)\r\n(A) What number x solves 10x = 3?\r\n(B) What vector u from 3-space satisfies the cross product equation\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n×u =\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n?\r\n(C) What polynomial p satisfies R 1\r\n−1\r\np(y)dy = 0 and R 1\r\n−1\r\nyp(y)dy = 1?\r\n(D) What power series f(x) satisfies x\r\nd\r\ndx f(x) − 2f(x) = 0?\r\n(E) What number x solves 4x\r\n2 = 1?\r\nFor part (A), the machine needed would look like the picture below.\r\nx 10x ,\r\nThis is just like a function f from calculus that takes in a number x and\r\nspits out the number f(x) = 10x. For part (B), we need something more\r\nsophisticated.\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n\r\n\r\n\r\nz\r\n−z\r\ny − x\r\n\r\n ,\r\nThe inputs and outputs are both 3-vectors. The output is the cross product\r\nof the input with... how about you complete this sentence to make sure you\r\nunderstand.\r\n16",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/416118a0-0814-48df-b947-3c39e182ac53.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7379593c365284b4d6fdea39753c88ed42ddcbdc90a6566bbe32b784260478dd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 360
      },
      {
        "segments": [
          {
            "segment_id": "6c7e2362-5df0-4707-b734-57fb26225d7b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 17,
            "page_width": 612,
            "page_height": 792,
            "content": "1.2 What Are Linear Functions? 17\r\nThe machine needed for example (C) looks like it has just one input and\r\ntwo outputs: we input a polynomial and get a 2-vector as output.\r\np\r\n\r\n\r\nR 1\r\n−1\r\np(y)dy\r\nR 1\r\n−1\r\nyp(y)dy\r\n\r\n .\r\nThis example is important because it displays an important feature; the\r\ninputs for this function are functions.\r\nBy now you may be feeling overwhelmed and thinking that absolutely\r\nany function with any kind of vector as input and any other kind of vector\r\nas output can pop up next to strain your brain! Rest assured that linear\r\nalgebra involves the study of only a very simple (yet very important) class of\r\nfunctions of vectors; its time to describe the essential characteristics of linear\r\nfunctions.\r\nLet’s use the letter L to denote an arbitrary linear function and think\r\nagain about vector addition and scalar multiplication. Lets suppose v and u\r\nare vectors and c is a number. Since L is a function from vectors to vectors,\r\nif we input u into L, the output L(u) will also be some sort of vector. The\r\nsame goes for L(v). (And remember, our input and output vectors might be\r\nsomething other than stacks of numbers!) Because vectors are things that\r\ncan be aded and scalar multiplied, u + v and cu are also vectors, and so they\r\ncan be used as inputs. The essential characteristic of linear functions is what\r\ncan be said about the outputs L(u + v) and L(cu).\r\nBefore we tell you this essential characteristic, ruminate on this picture.\r\n17",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6c7e2362-5df0-4707-b734-57fb26225d7b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5438a8a0798960a38ae30a9882e47dd40848d90868a240928fa43d769e8ca8d3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6d6de19a-0a8e-4757-8079-034819dea9c4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 18,
            "page_width": 612,
            "page_height": 792,
            "content": "18 What is Linear Algebra?\r\nThe “blob” on the left represents all the vectors that you are allowed to\r\ninput into the function L, the blob on the right denotes the possible outputs,\r\nand the lines tell you which inputs are turned into which outputs.1 A full\r\npictorial description of the functions would require all inputs and outputs\r\nand lines to be explicitly drawn, but we are being diagrammatic; we only\r\ndrew four of each.\r\nFunctions have three parts\r\nThink about adding L(u) and L(v) to get yet another vector L(u) + L(v) or\r\nof multiplying L(u) by c to obtain the vector cL(u), and placing both on the\r\nright blob of this picture. But wait! Are you certain that these are possible\r\noutputs!?\r\nHere’s the answer\r\nThe key to the whole class, from which everything else follows:\r\n1The domain, codomain, and rule of correspondence of the function are represented by\r\nthe left blog, right blob, and arrows, respectively.\r\n18",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6d6de19a-0a8e-4757-8079-034819dea9c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d6c6992cf9dd0a8c4e3b06050c0eaddde74a49587adcf58f3196f3994efc3ae0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 425
      },
      {
        "segments": [
          {
            "segment_id": "1a15bc83-2e98-488b-84d3-a7a00effd989",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 19,
            "page_width": 612,
            "page_height": 792,
            "content": "1.2 What Are Linear Functions? 19\r\n1. Additivity:\r\nL(u + v) = L(u) + L(v).\r\n2. Homogeneity:\r\nL(cu) = cL(u).\r\nMost functions of vectors do not obey this requirement.2 At its heart, linear\r\nalgebra is the study of functions that do.\r\nNotice that the additivity requirement says that the function L respects\r\nvector addition: it does not matter if you first add u and v and then input\r\ntheir sum into L, or first input u and v into L separately and then add the\r\noutputs. The same holds for scalar multiplication–try writing out the scalar\r\nmultiplication version of the italicized sentence. When a function of vectors\r\nobeys the additivity and homogeneity properties we say that it is linear (this\r\nis the “linear” of linear algebra). Together, additivity and homogeneity are\r\ncalled linearity. Are there other, equivalent, names for linear functions? yes.\r\nFunction = Transformation = Operator\r\nAnd now for a hint at the power of linear algebra. The questions in\r\nexamples (A-D) can all be restated as\r\nLv = w\r\n2\r\ne.g. If f(x) = x\r\n2\r\nthen f(1 + 1) = 4 6= f(1) + f(1) = 2. Try any other function you\r\ncan think of!\r\n19",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1a15bc83-2e98-488b-84d3-a7a00effd989.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0184ad38f56bcc8bbe3cc1415f163f20b903ccfd2ec7d6f3aeb76262d769124e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5653b948-1d43-43f1-aa4a-5ea90c668311",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 20,
            "page_width": 612,
            "page_height": 792,
            "content": "20 What is Linear Algebra?\r\nwhere v is an unknown, w a known vector, and L is a known linear transfor\u0002mation. To check that this is true, one needs to know the rules for adding\r\nvectors (both inputs and outputs) and then check linearity of L. Solving the\r\nequation Lv = w often amounts to solving systems of linear equations, the\r\nskill you will learn in Chapter 2.\r\nA great example is the derivative operator.\r\nExample 3 (The derivative operator is linear)\r\nFor any two functions f(x), g(x) and any number c, in calculus you probably learnt\r\nthat the derivative operator satisfies\r\n1. d\r\ndx (cf) = c\r\nd\r\ndx f,\r\n2. d\r\ndx (f + g) = ddx f +\r\nd\r\ndx g.\r\nIf we view functions as vectors with addition given by addition of functions and with\r\nscalar multiplication given by multiplication of functions by constants, then these\r\nfamiliar properties of derivatives are just the linearity property of linear maps.\r\nBefore introducing matrices, notice that for linear maps L we will often\r\nwrite simply Lu instead of L(u). This is because the linearity property of a\r\nlinear transformation L means that L(u) can be thought of as multiplying\r\nthe vector u by the linear operator L. For example, the linearity of L implies\r\nthat if u, v are vectors and c, d are numbers, then\r\nL(cu + dv) = cLu + dLv ,\r\nwhich feels a lot like the regular rules of algebra for numbers. Notice though,\r\nthat “uL” makes no sense here.\r\nRemark A sum of multiples of vectors cu + dv is called a linear combination of\r\nu and v.\r\n1.3 What is a Matrix?\r\nMatrices are linear functions of a certain kind. One way to learn about them\r\nis by studying systems of linear equations.\r\nExample 4 A room contains x bags and y boxes of fruit:\r\n20",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5653b948-1d43-43f1-aa4a-5ea90c668311.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=17dca95e81cea14f661527442524f42705f87aefb37bbb5ccdb1d682dbca0a18",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 512
      },
      {
        "segments": [
          {
            "segment_id": "9bd7aafd-8c35-430c-8fbf-ae0046b76946",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 21,
            "page_width": 612,
            "page_height": 792,
            "content": "1.3 What is a Matrix? 21\r\nEach bag contains 2 apples and 4 bananas and each box contains 6 apples and 8\r\nbananas. There are 20 apples and 28 bananas in the room. Find x and y.\r\nThe values are the numbers x and y that simultaneously make both of the following\r\nequations true:\r\n2 x + 6 y = 20\r\n4 x + 8 y = 28 .\r\nHere we have an example of a System of Linear Equations.\r\n3\r\nIt’s a collection\r\nof equations in which variables are multiplied by constants and summed, and\r\nno variables are multiplied together: There are no powers of variables (like x\r\n2\r\nor y\r\n5\r\n), non-integer or negative powers of variables (like y\r\n1/7 or x−3\r\n), and no\r\nplaces where variables are multiplied together (like xy).\r\nReading homework: problem 1\r\nInformation about the fruity contents of the room can be stored two ways:\r\n(i) In terms of the number of apples and bananas.\r\n(ii) In terms of the number of bags and boxes.\r\nIntuitively, knowing the information in one form allows you to figure out the\r\ninformation in the other form. Going from (ii) to (i) is easy: If you knew\r\nthere were 3 bags and 2 boxes it would be easy to calculate the number\r\nof apples and bananas, and doing so would have the feel of multiplication\r\n3Perhaps you can see that both lines are of the form Lu = v with u\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nan unknown,\r\nv = 20 in the first line, v = 28 in the second line, and L different functions in each line?\r\nWe give the typical less sophisticated description in the text above.\r\n21",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9bd7aafd-8c35-430c-8fbf-ae0046b76946.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4e12b4a5f1dd18e25a9c3ea14ba979148d5577646447523b5f0cd683da2ae320",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 284
      },
      {
        "segments": [
          {
            "segment_id": "243fb9db-04f7-4fbd-b71c-d83460f3b563",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 22,
            "page_width": 612,
            "page_height": 792,
            "content": "22 What is Linear Algebra?\r\n(containers times fruit per container). In the example above we are required\r\nto go the other direction, from (i) to (ii). This feels like the opposite of\r\nmultiplication, i.e., division. Matrix notation will make clear what we are\r\n“multiplying” and “dividing” by.\r\nThe goal of Chapter 2 is to efficiently solve systems of linear equations.\r\nPartly, this is just a matter of finding a better notation, but one that hints\r\nat a deeper underlying mathematical structure. For that, we need rules for\r\nadding and scalar multiplying 2-vectors:\r\nc\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n:= \u0012\r\ncx\r\ncy\u0013\r\nand \u0012\r\nx\r\ny\r\n\u0013\r\n+\r\n\u0012\r\nx\r\n0\r\ny\r\n0\r\n\u0013\r\n:= \u0012\r\nx + x\r\n0\r\ny + y\r\n0\r\n\u0013\r\n.\r\nWriting our fruity equations as an equality between 2-vectors and then using\r\nthese rules we have:\r\n2 x + 6 y = 20\r\n4 x + 8 y = 28 \u001b\r\n⇐⇒ \u0012\r\n2x + 6y\r\n4x + 8y\r\n\u0013\r\n=\r\n\u0012\r\n20\r\n28\u0013\r\n⇐⇒ x\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+y\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n=\r\n\u0012\r\n20\r\n28\u0013\r\n.\r\nNow we introduce an function which takes in 2-vectors4 and gives out 2-\r\nvectors. We denote it by an array of numbers called a matrix .\r\nThe function \u0012\r\n2 6\r\n4 8\u0013\r\nis defined by \u0012\r\n2 6\r\n4 8\u0013 \u0012xy\r\n\u0013\r\n:= x\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+ y\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n.\r\nA similar definition applies to matrices with different numbers and sizes.\r\nExample 5 (A bigger matrix)\r\n\r\n\r\n1 0 3 4\r\n5 0 3 4\r\n−1 6 2 5\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n:= x\r\n\r\n\r\n1\r\n5\r\n−1\r\n\r\n + y\r\n\r\n\r\n0\r\n0\r\n6\r\n\r\n + z\r\n\r\n\r\n3\r\n3\r\n2\r\n\r\n + w\r\n\r\n\r\n4\r\n4\r\n5\r\n\r\n .\r\n4To be clear, we will use the term 2-vector to refer to stacks of two numbers such\r\nas \u0012\r\n7\r\n11\u0013\r\n. If we wanted to refer to the vectors x\r\n2 + 1 and x3 − 1 (recall that polynomials\r\nare vectors) we would say “consider the two vectors x\r\n3 − 1 and x2 + 1. We apologize\r\nthrough giggles for the possibility of the phrase “two 2-vectors.”\r\n22",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/243fb9db-04f7-4fbd-b71c-d83460f3b563.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f737bf678d7428bc23057b4d53b31648168313b7b160a71af23f6bf70d7a29f1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 389
      },
      {
        "segments": [
          {
            "segment_id": "892c80f5-8e0b-4518-857a-55dae3499262",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 23,
            "page_width": 612,
            "page_height": 792,
            "content": "1.3 What is a Matrix? 23\r\nViewed as a machine that inputs and outputs 2-vectors, our 2 × 2 matrix\r\ndoes the following:\r\n\u0012\r\nx\r\ny\r\n\u0013 \u0012\r\n2x + 6y\r\n4x + 8y\r\n\u0013\r\n.\r\nOur fruity problem is now rather concise.\r\nExample 6 (This time in purely mathematical language):\r\nWhat vector \u0012\r\nx\r\ny\r\n\u0013\r\nsatisfies \u0012\r\n2 6\r\n4 8\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n20\r\n28\u0013\r\n?\r\nThis is of the same Lv = w form as our opening examples. The matrix\r\nencodes fruit per container. The equation is roughly fruit per container\r\ntimes number of containers equals fruit. To solve for number of containers\r\nwe want to somehow “divide” by the matrix.\r\nAnother way to think about the above example is to remember the rule\r\nfor multiplying a matrix times a vector. If you have forgotten this, you can\r\nactually guess a good rule by making sure the matrix equation is the same\r\nas the system of linear equations. This would require that\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012xy\r\n\u0013\r\n:= \u0012\r\n2x + 6y\r\n4x + 8y\r\n\u0013\r\nIndeed this is an example of the general rule that you have probably seen\r\nbefore\r\n\u0012\r\np q\r\nr s\u0013 \u0012xy\r\n\u0013\r\n:= \u0012\r\npx + qy\r\nrx + sy\u0013\r\n= x\r\n\u0012\r\np\r\nr\r\n\u0013\r\n+ y\r\n\u0012\r\nq\r\ns\r\n\u0013\r\n.\r\nNotice, that the second way of writing the output on the right hand side of\r\nthis equation is very useful because it tells us what all possible outputs a\r\nmatrix times a vector look like – they are just sums of the columns of the\r\nmatrix multiplied by scalars. The set of all possible outputs of a matrix\r\ntimes a vector is called the column space (it is also the image of the linear\r\nfunction defined by the matrix).\r\nReading homework: problem 2\r\n23",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/892c80f5-8e0b-4518-857a-55dae3499262.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=da9a6813d1689b3876951fcd6a17f1ebf1c7495811fd5cb9eca109d4d248f329",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 310
      },
      {
        "segments": [
          {
            "segment_id": "d50aeb1f-1a82-4716-ac5f-f165a11d183b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 24,
            "page_width": 612,
            "page_height": 792,
            "content": "24 What is Linear Algebra?\r\nA matrix is an example of a Linear Function, because it takes one vector\r\nand turns it into another in a “linear” way. Of course, we can have much\r\nlarger matrices if our system has more variables.\r\nMatrices in Space!\r\nMatrices are linear functions. The statement of this for the matrix in our\r\nfruity example is as follows.\r\n1. \u0012\r\n2 6\r\n4 8\u0013\r\nc\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= c\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012ab\r\n\u0013\r\nand\r\n2. \u0012\r\n2 6\r\n4 8\u0013 \u0014\u0012xy\r\n\u0013\r\n+\r\n\u0012\r\nx\r\n0\r\ny\r\n0\r\n\u0013\u0015 =\u0012\r\n2 6\r\n4 8\u0013 \u0012xy\r\n\u0013\r\n+\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012x\r\n0\r\ny\r\n0\r\n\u0013\r\n.\r\nThese equalities can be verified using the rules we introduced so far.\r\nExample 7 Verify that \u0012\r\n2 6\r\n4 8\u0013\r\nis a linear operator.\r\nThe matrix is homogeneous if the expressions on the left hand side and right hand side\r\nof the first equation are indeed equal.\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0014c\r\n\u0012\r\na\r\nb\r\n\u0013\u0015 =\u0012\r\n2 6\r\n4 8\u0013 \u0012ca\r\ncb\u0013\r\n= ca \u0012\r\n2\r\n4\r\n\u0013\r\n+ cb \u0012\r\n6\r\n8\r\n\u0013\r\n=\r\n\u0012\r\n2ac\r\n4ac\u0013\r\n+\r\n\u0012\r\n6bc\r\n8bc\u0013\r\n=\r\n\u0012\r\n2ac + 6bc\r\n4ac + 8bc\u0013\r\nwhile\r\nc\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012a\r\nb\r\n\u0013\r\n= c\r\n\u0014\r\na\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+ b\r\n\u0012\r\n6\r\n8\r\n\u0013\u0015 = c\u0014\u00122a\r\n4a\r\n\u0013\r\n+\r\n\u0012\r\n6b\r\n8b\r\n\u0013\u0015\r\n= c\r\n\u0012\r\n2a + 6b\r\n4a + 8b\r\n\u0013\r\n=\r\n\u0012\r\n2ac + 6bc\r\n4ac + 8bc\u0013\r\n.\r\nThe underlined expressions are visually identical, so the matrix is homogeneous.\r\nThe matrix is additive if the left and right side of the second equation are indeed\r\nequal.\r\n24",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d50aeb1f-1a82-4716-ac5f-f165a11d183b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=661f27ba2aa2809a458d1bcc8c0fd55f9e88331d70c3f27030ce605f113e9e7b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 292
      },
      {
        "segments": [
          {
            "segment_id": "fde3cf60-6d8c-4677-9d35-0edb60704e81",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 25,
            "page_width": 612,
            "page_height": 792,
            "content": "1.4 The Matrix Detour 25\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0014\u0012a\r\nb\r\n\u0013\r\n+\r\n\u0012\r\nc\r\nd\r\n\u0013\u0015 =\u0012\r\n2 6\r\n4 8\u0013 \u0012a + c\r\nb + d\r\n\u0013\r\n= (a + c)\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+ (b + d)\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n=\r\n\u0012\r\n2(a + c)\r\n4(a + c)\r\n\u0013\r\n+\r\n\u0012\r\n6(b + d)\r\n8(b + d)\r\n\u0013\r\n=\r\n\u0012\r\n2a + 2c + 6b + 6d\r\n4a + 4c + 8b + 8d\r\n\u0013\r\nwhich we need to compare to\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012a\r\nb\r\n\u0013\r\n+\r\n\u0012\r\n2 6\r\n4 8\u0013 \u0012c\r\nd\r\n\u0013\r\n= a\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+ b\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n+ c\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+ d\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n=\r\n\u0012\r\n2a\r\n4a\r\n\u0013\r\n+\r\n\u0012\r\n6b\r\n8b\r\n\u0013\r\n+\r\n\u0012\r\n2c\r\n4c\r\n\u0013\r\n+\r\n\u0012\r\n6d\r\n8d\r\n\u0013\r\n=\r\n\u0012\r\n2a + 2c + 6b + 6d\r\n4a + 4c + 8b + 8d\r\n\u0013\r\n.\r\nThe matrix is additive and homogeneous, and so it is, by definition, linear.\r\nWe have come full circle; matrices are just examples of the kinds of linear\r\noperators that appear in algebra problems like those in section 1.2. Any\r\nequation of the form Mv = w with M a matrix, and v, w n-vectors is called\r\na matrix equation. Chapter 2 is about efficiently solving systems of linear\r\nequations, or equivalently matrix equations.\r\n1.4 The Matrix Detour\r\nLinear algebra is about linear functions, not matrices. This lesson is hard\r\nto learn after a full term of working with matrices so we want to get you\r\nthinking about this on day one of the course. We hope you will be thinking\r\nabout this idea constantly throughout the course.\r\nMatrices only get involved in linear algebra when certain\r\nnotational choices are made.\r\nTo exemplify, lets look at the derivative operator again.\r\nExample 8 of how matrices come into linear algebra.\r\nConsider the equation\r\n\u0012\r\nd\r\ndx + 2\u0013\r\nf = x + 1\r\n25",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fde3cf60-6d8c-4677-9d35-0edb60704e81.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2fbed48814851079b7e140bc8f2d3e021c32e98f5d0ddf2bbc613d78bcd9a87b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 338
      },
      {
        "segments": [
          {
            "segment_id": "a85293c0-2ba9-4e43-a440-964fb094ba64",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 26,
            "page_width": 612,
            "page_height": 792,
            "content": "26 What is Linear Algebra?\r\nwhere f is unknown (the place where solutions should go) and the linear differential\r\noperator d\r\ndx + 2 is understood to take in quadratic functions (of the form ax2 +bx+c)\r\nand give out other quadratic functions.\r\nLet’s simplify the way we denote the quadratic functions; we will\r\ndenote ax2 + bx + c as\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB\r\n.\r\nThe subscript B serves to remind us of our particular notional convention; we will\r\ncompare to another notational convention later. With the convention B we can say\r\n\u0012\r\nd\r\ndx + 2\u0013\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB\r\n=\r\n\u0012\r\nd\r\ndx + 2\u0013\r\n(ax2 + bx + c)\r\n= (2ax + b) + (2ax2 + 2bx + 2c) = 2ax2 + (2a + 2b)x + (b + 2c)\r\n=\r\n\r\n\r\n2a\r\n2a + 2b\r\nb + 2c\r\n\r\n\r\nB\r\n=\r\n\r\n\r\n\r\n\r\n2 0 0\r\n2 2 0\r\n0 1 2\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\n\r\n\r\nB\r\n.\r\nThat is, our notational convention for quadratic functions has induced a notation for\r\nthe differential operator d\r\ndx + 2 as a matrix. We can use this notation to change the\r\nway that the following two equations say exactly the same thing.\r\n\u0012\r\nd\r\ndx + 2\u0013\r\nf = x + 1 ⇔\r\n\r\n\r\n\r\n\r\n2 0 0\r\n2 2 0\r\n0 1 2\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\n\r\n\r\nB\r\n=\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\nB\r\n.\r\nOur notational convention has served as an organizing principle to yield the system of\r\nequations\r\n2a = 0\r\n2a + 2b = 1\r\nb + 2c = 1\r\nwith solution\r\n\r\n\r\n0\r\n1\r\n2\r\n1\r\n4\r\n\r\n which the notational convention B uses to encode 1\r\n2\r\nx+\r\n1\r\n4\r\n, which is\r\nindeed the solution to our equation since, substituting for f yields the true statement\r\n\r\nd\r\ndx + 2\u0001\r\n(\r\n1\r\n2\r\nx +\r\n1\r\n4\r\n) = x + 1.\r\nIt would be nice to have a systematic way to rewrite any linear equation\r\nas an equivalent matrix equation. It will be a while before we can make\r\n26",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a85293c0-2ba9-4e43-a440-964fb094ba64.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9e1af21466cf4e303d6119189097684c05388d441671b5a8a037885a6579303a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f5780749-56b7-4e43-aa85-9d8845b30160",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 27,
            "page_width": 612,
            "page_height": 792,
            "content": "1.4 The Matrix Detour 27\r\nrigorous this way of organizing information in a way generalizable to all\r\nlinear equations, but keep this example in mind throughout the course.\r\nThe general idea is presented in the picture below; sometimes a linear\r\nequation is too hard to solve as is, but by reformulating it into a matrix\r\nequation the process of finding solutions becomes doable.\r\nA simple example with the knowns (L and V are d\r\ndx and 3, respectively) is\r\nshown below, although the detour is unnecessary in this case since you know\r\nhow to anti-differentiate.\r\n27",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f5780749-56b7-4e43-aa85-9d8845b30160.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f2384a2a06ebfea00e592ccddb2e3886761ac96d8631a3069cc705106ba2ea88",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 478
      },
      {
        "segments": [
          {
            "segment_id": "874b3070-da63-4228-8ee4-84a534d16e15",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 28,
            "page_width": 612,
            "page_height": 792,
            "content": "28 What is Linear Algebra?\r\nTo drive home the point that we are not studying matrices but rather lin\u0002ear functions, and that those linear functions can be represented as matrices\r\nunder certain notational conventions, consider how changeable the notational\r\nconventions are.\r\nExample 9 of how a different matrix comes into the same linear algebra problem.\r\nAnother possible notational convention is to\r\ndenote a + bx + cx2as\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB0\r\n.\r\nWith this alternative notation\r\n\u0012\r\nd\r\ndx + 2\u0013\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB0\r\n=\r\n\u0012\r\nd\r\ndx + 2\u0013\r\n(a + bx + cx2)\r\n= (b + 2cx) + (2a + 2bx + 2cx2) = (2a + b) + (2b + 2c)x + 2cx2\r\n=\r\n\r\n\r\n2a + b\r\n2b + 2c\r\n2c\r\n\r\n\r\nB0\r\n=\r\n\r\n\r\n\r\n\r\n2 1 0\r\n0 2 2\r\n0 0 2\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\n\r\n\r\nB0\r\n.\r\nNotice that we have obtained a different matrix for the same linear function. The\r\nequation we started with\r\n\u0012\r\nd\r\ndx + 2\u0013\r\nf = x + 1 ⇔\r\n\r\n\r\n\r\n\r\n2 1 0\r\n0 2 2\r\n0 0 2\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\n\r\n\r\nB0\r\n=\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n\r\nB0\r\n⇔\r\n2a + b = 1\r\n2b + 2c = 1\r\n2c = 0\r\nhas the solution\r\n\r\n\r\n1\r\n4\r\n1\r\n2\r\n0\r\n\r\n. Notice that we have obtained a different 3-vector for the\r\nsame vector, since in the notational convention B0this 3-vector represents 1\r\n4 +\r\n1\r\n2\r\nx.\r\nOne linear function can be represented (denoted) by a huge variety of\r\nmatrices. The representation only depends on how vectors are denoted as\r\nn-vectors.\r\n28",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/874b3070-da63-4228-8ee4-84a534d16e15.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=61de95b0385266bda53ce9d0bcf1d0bd972eafcad6105d34bc712ff3c67dcf29",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f71cdfa4-44a5-49b9-a484-19d104d4224f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 29,
            "page_width": 612,
            "page_height": 792,
            "content": "1.5 Review Problems 29\r\n1.5 Review Problems\r\nYou probably have already noticed that understanding sets, functions and\r\nbasic logical operations is a must to do well in linear algebra. Brush up on\r\nthese skills by trying these background webwork problems:\r\nLogic 1\r\nSets 2\r\nFunctions 3\r\nEquivalence Relations 4\r\nProofs 5\r\nEach chapter also has reading and skills WeBWorK problems:\r\nWebwork: Reading problems 1 , 2\r\nProbably you will spend most of your time on the following review ques\u0002tions.\r\n1. Problems A, B, and C of example 2 can all be written as Lv = w where\r\nL : V −→ W ,\r\n(read this as L maps the set of vectors V to the set of vectors W). For\r\neach case write down the sets V and W where the vectors v and w\r\ncome from.\r\n2. Torque is a measure of “rotational force”. It is a vector whose direction\r\nis the (preferred) axis of rotation. Upon applying a force F on an object\r\nat point r the torque τ is the cross product r × F = τ .\r\n29",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f71cdfa4-44a5-49b9-a484-19d104d4224f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ec7643724080f3cfea331585898f8a93ed96ff01a0240d4dd397873f037339e7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 486
      },
      {
        "segments": [
          {
            "segment_id": "702a7e58-099a-421a-bd21-9c3849d645be",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 30,
            "page_width": 612,
            "page_height": 792,
            "content": "30 What is Linear Algebra?\r\nLets find the force F (a vector) one must apply to a wrench lying along\r\nthe vector r =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ft, to produce a torque\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\nft lb:\r\n(a) Find a solution by writing out this equation with F =\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n.\r\n(Hint: Guess and check that a solution with a = 0 exists).\r\n(b) Add\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n to your solution and check that the result is a solution.\r\n(c) Give a physics explanation of why there can be two solutions, and\r\nargue that there are, in fact, infinitely many solutions.\r\n(d) Set up a system of three linear equations with the three compo\u0002nents of F as the variables which describes this situation. What\r\nhappens if you try to solve these equations by substitution?\r\n3. The function P(t) gives gas prices (in units of dollars per gallon) as a\r\nfunction of t the year (in A.D. or C.E.), and g(t) is the gas consumption\r\nrate measured in gallons per year by a driver as a function of their age.\r\nThe function g is certainly different for different people. Assuming a\r\nlifetime is 100 years, what function gives the total amount spent on gas\r\nduring the lifetime of an individual born in an arbitrary year t? Is the\r\noperator that maps g to this function linear?\r\n4. The differential equation (DE)\r\nd\r\ndtf = 2f\r\nsays that the rate of change of f is proportional to f. It describes\r\nexponential growth because the exponential function\r\nf(t) = f(0)e\r\n2t\r\nsatisfies the DE for any number f(0). The number 2 in the DE is called\r\nthe constant of proportionality. A similar DE\r\nd\r\ndtf =\r\n2\r\nt\r\nf\r\n30",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/702a7e58-099a-421a-bd21-9c3849d645be.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2ea32503ebde25546d9b144fa290fddf5f3795acec41368e27a826566e17b29",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "74495835-2f6f-4c05-a9bf-cdc870b04bea",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 31,
            "page_width": 612,
            "page_height": 792,
            "content": "1.5 Review Problems 31\r\nhas a time-dependent “constant of proportionality”.\r\n(a) Do you think that the second DE describes exponential growth?\r\n(b) Write both DEs in the form Df = 0 with D a linear operator.\r\n5. Pablo is a nutritionist who knows that oranges always have twice as\r\nmuch sugar as apples. When considering the sugar intake of schoolchil\u0002dren eating a barrel of fruit, he represents the barrel like so:\r\nsugar\r\nfruit\r\n(s, f)\r\nFind a linear operator relating Pablo’s representation to the “everyday”\r\nrepresentation in terms of the number of apples and number of oranges.\r\nWrite your answer as a matrix.\r\nHint: Let λ represent the amount of sugar in each apple.\r\nHint\r\n6. Matrix Multiplication: Let M and N be matrices\r\nM =\r\n\u0012\r\na b\r\nc d\u0013\r\nand N =\r\n\u0012\r\ne f\r\ng h\u0013\r\n,\r\nand v the vector\r\nv =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n.\r\nIf we first apply N and then M to v we obtain the vector MNv.\r\n31",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/74495835-2f6f-4c05-a9bf-cdc870b04bea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9700b59ad6d7167cf4c175398449dd05510f0d2fcf696ea37388946e83b1cf38",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 470
      },
      {
        "segments": [
          {
            "segment_id": "66cc330c-84cb-43cb-9055-1e65523614d2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 32,
            "page_width": 612,
            "page_height": 792,
            "content": "32 What is Linear Algebra?\r\n(a) Show that the composition of matrices MN is also a linear oper\u0002ator.\r\n(b) Write out the components of the matrix product MN in terms of\r\nthe components of M and the components of N. Hint: use the\r\ngeneral rule for multiplying a 2-vector by a 2×2 matrix.\r\n(c) Try to answer the following common question, “Is there any sense\r\nin which these rules for matrix multiplication are unavoidable, or\r\nare they just a notation that could be replaced by some other\r\nnotation?”\r\n(d) Generalize your multiplication rule to 3 × 3 matrices.\r\n7. Diagonal matrices: A matrix M can be thought of as an array of num\u0002bers mi\r\nj\r\n, known as matrix entries, or matrix components, where i and j\r\nindex row and column numbers, respectively. Let\r\nM =\r\n\u0012\r\n1 2\r\n3 4\u0013\r\n=\r\n\r\nmi\r\nj\r\n\u0001\r\n.\r\nCompute m1\r\n1\r\n, m1\r\n2\r\n, m2\r\n1\r\nand m2\r\n2\r\n.\r\nThe matrix entries mi\r\ni whose row and column numbers are the same\r\nare called the diagonal of M. Matrix entries mi\r\nj with i 6= j are called\r\noff-diagonal. How many diagonal entries does an n × n matrix have?\r\nHow many off-diagonal entries does an n × n matrix have?\r\nIf all the off-diagonal entries of a matrix vanish, we say that the matrix\r\nis diagonal. Let\r\nD =\r\n\u0012\r\nλ 0\r\n0 µ\r\n\u0013\r\nand D\r\n0 =\r\n\u0012\r\nλ\r\n0 0\r\n0 µ\r\n0\r\n\u0013\r\n.\r\nAre these matrices diagonal and why? Use the rule you found in prob\u0002lem 6 to compute the matrix products DD0 and D0D. What do you\r\nobserve? Do you think the same property holds for arbitrary matrices?\r\nWhat about products where only one of the matrices is diagonal?\r\n(p.s. Diagonal matrices play a special role in in the study of matrices\r\nin linear algebra. Keep an eye out for this special role.)\r\n32",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/66cc330c-84cb-43cb-9055-1e65523614d2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d5db2efa0acb93ab7d780c69919998656c71624bb43e62b236bd85adbd40f7a8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 321
      },
      {
        "segments": [
          {
            "segment_id": "5d4553c9-47a9-43f3-89bb-2d82540fedae",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 33,
            "page_width": 612,
            "page_height": 792,
            "content": "1.5 Review Problems 33\r\n8. Find the linear operator that takes in vectors from n-space and gives\r\nout vectors from n-space in such a way that\r\n(a) whatever you put in, you get exactly the same thing out as what\r\nyou put in. Show that it is unique. Can you write this operator\r\nas a matrix?\r\n(b) whatever you put in, you get exactly the same thing out as when\r\nyou put something else in. Show that it is unique. Can you write\r\nthis operator as a matrix?\r\nHint: To show something is unique, it is usually best to begin by pre\u0002tending that it isn’t, and then showing that this leads to a nonsensical\r\nconclusion. In mathspeak–proof by contradiction.\r\n9. Consider the set S = {∗, ?, #}. It contains just 3 elements, and has\r\nno ordering; {∗, ?, #} = {#, ?, ∗} etc. (In fact the same is true for\r\n{1, 2, 3} = {2, 3, 1} etc, although we could make this an ordered set\r\nusing 3 > 2 > 1.)\r\n(i) Invent a function with domain {∗, ?, #} and codomain R. (Re\u0002member that the domain of a function is the set of all its allowed\r\ninputs and the codomain (or target space) is the set where the\r\noutputs can live. A function is specified by assigning exactly one\r\ncodomain element to each element of the domain.)\r\n(ii) Choose an ordering on {∗, ?, #}, and then use it to write your\r\nfunction from part (i) as a triple of numbers.\r\n(iii) Choose a new ordering on {∗, ?, #} and then write your function\r\nfrom part (i) as a triple of numbers.\r\n(iv) Your answers for parts (ii) and (iii) are different yet represent the\r\nsame function – explain!\r\n33",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5d4553c9-47a9-43f3-89bb-2d82540fedae.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a2d7709de2582e5a3f2ba7e6bcbe647c4baced1acbfcd4bdaf95ecb3bf6d0427",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0ccce79d-fe3f-47e7-90dc-1806b09ae0b6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 34,
            "page_width": 612,
            "page_height": 792,
            "content": "34 What is Linear Algebra?\r\n34",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0ccce79d-fe3f-47e7-90dc-1806b09ae0b6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ca266bf8f633f3c04ba4605f94d154767b1c56e4d8eee11aafeeaf1d27fba0ab",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8dcdc9f4-a89a-45ba-9d89-e4180b3ae63e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 35,
            "page_width": 612,
            "page_height": 792,
            "content": "2\r\nSystems of Linear Equations\r\n2.1 Gaussian Elimination\r\nSystems of linear equations can be written as matrix equations. Now you\r\nwill learn an efficient algorithm for (maximally) simplifying a system of linear\r\nequations (or a matrix equation) – Gaussian elimination.\r\n2.1.1 Augmented Matrix Notation\r\nEfficiency demands a new notation, called an augmented matrix , which we\r\nintroduce via examples:\r\nThe linear system\r\n\u001a\r\nx + y = 27\r\n2x − y = 0 ,\r\nis denoted by the augmented matrix\r\n\u0012\r\n1 1 27\r\n2 −1 0\r\n\u0013\r\n.\r\nThis notation is simpler than the matrix one,\r\n\u0012\r\n1 1\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n,\r\nalthough all three of the above denote the same thing.\r\n35",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8dcdc9f4-a89a-45ba-9d89-e4180b3ae63e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7cfbff710ee64d49415d8f12580f69579864c3ee85237435b37bd8aeec7375ae",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 424
      },
      {
        "segments": [
          {
            "segment_id": "c36f4fdc-29e3-427d-9346-cdee0b3c1b9a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 36,
            "page_width": 612,
            "page_height": 792,
            "content": "36 Systems of Linear Equations\r\nAugmented Matrix Notation\r\nAnother interesting rewriting is\r\nx\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n+ y\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n.\r\nThis tells us that we are trying to find the combination of the vectors \u0012\r\n1\r\n2\r\n\u0013\r\nand\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\nadds up to \u0012\r\n27\r\n0\r\n\u0013\r\n; the answer is “clearly” 9 \u0012\r\n1\r\n2\r\n\u0013\r\n+ 18 \u0012\r\n1\r\n−1\r\n\u0013\r\n.\r\nHere is a larger example. The system\r\n1x + 3y + 2z + 0w = 9\r\n6x + 2y + 0z − 2w = 0\r\n−1x + 0y + 1z + 1w = 3 ,\r\nis denoted by the augmented matrix\r\n\r\n\r\n1 3 2 0 9\r\n6 2 0 −2 0\r\n−1 0 1 1 3\r\n\r\n ,\r\nwhich is equivalent to the matrix equation\r\n\r\n\r\n1 3 2 0\r\n6 2 0 −2\r\n−1 0 1 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n =\r\n\r\n\r\n9\r\n0\r\n3\r\n\r\n .\r\nAgain, we are trying to find which combination of the columns of the matrix\r\nadds up to the vector on the right hand side.\r\nFor the the general case of r linear equations in k unknowns, the number\r\nof equations is the number of rows r in the augmented matrix, and the\r\nnumber of columns k in the matrix left of the vertical line is the number of\r\nunknowns, giving an augmented matrix of the form\r\n\r\n\r\na\r\n1\r\n1 a\r\n1\r\n2\r\n· · · a\r\n1\r\nk\r\nb\r\n1\r\na\r\n2\r\n1 a\r\n2\r\n2\r\n· · · a\r\n2\r\nk\r\nb\r\n2\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\na\r\nr\r\n1 a\r\nr\r\n2\r\n· · · a\r\nr\r\nk\r\nb\r\nr\r\n\r\n\r\n.\r\n36",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c36f4fdc-29e3-427d-9346-cdee0b3c1b9a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4753ea9fc2182f4f6cc8d51ee33476ba8ce34262e5f24cda9af30e01aa51d254",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 313
      },
      {
        "segments": [
          {
            "segment_id": "8bd9e77a-5bf0-4bb9-9d91-c9d75f6ad31c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 37,
            "page_width": 612,
            "page_height": 792,
            "content": "2.1 Gaussian Elimination 37\r\nEntries left of the divide carry two indices; subscripts denote column number\r\nand superscripts row number. We emphasize, the superscripts here do not\r\ndenote exponents. Make sure you can write out the system of equations and\r\nthe associated matrix equation for any augmented matrix.\r\nReading homework: problem 1\r\nWe now have three ways of writing the same question. Let’s put them\r\nside by side as we solve the system by strategically adding and subtracting\r\nequations. We will not tell you the motivation for this particular series of\r\nsteps yet, but let you develop some intuition first.\r\nExample 10 (How matrix equations and augmented matrices change in elimination)\r\nx + y = 27\r\n2x − y = 0 \u001b\r\n⇔\r\n\u0012\r\n1 1\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n⇔\r\n\u0012\r\n1 1 27\r\n2 −1 0\r\n\u0013\r\n.\r\nWith the first equation replaced by the sum of the two equations this becomes\r\n3x + 0 = 27\r\n2x − y = 0 \u001b\r\n⇔\r\n\u0012\r\n3 0\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n⇔\r\n\u0012\r\n3 0 27\r\n2 −1 0\r\n\u0013\r\n.\r\nLet the new first equation be the old first equation divided by 3:\r\nx + 0 = 9\r\n2x − y = 0 \u001b\r\n⇔\r\n\u0012\r\n1 0\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n9\r\n0\r\n\u0013\r\n⇔\r\n\u0012\r\n1 0 9\r\n2 −1 0\r\n\u0013\r\n.\r\nReplace the second equation by the second equation minus two times the first equation:\r\nx + 0 = 9\r\n0 − y = −18 \u001b\r\n⇔\r\n\u0012\r\n1 0\r\n0 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n9\r\n−18\u0013\r\n⇔\r\n\u0012\r\n1 0 9\r\n0 −1 −18\u0013\r\n.\r\nLet the new second equation be the old second equation divided by -1:\r\nx + 0 = 9\r\n0 + y = 18 \u001b\r\n⇔\r\n\u0012\r\n1 0\r\n0 1\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n9\r\n18\u0013\r\n⇔\r\n\u0012\r\n1 0 9\r\n0 1 18\u0013\r\n.\r\nDid you see what the strategy was? To eliminate y from the first equation\r\nand then eliminate x from the second. The result was the solution to the\r\nsystem.\r\nHere is the big idea: Everywhere in the instructions above we can replace\r\nthe word “equation” with the word “row” and interpret them as telling us\r\nwhat to do with the augmented matrix instead of the system of equations.\r\nPerformed systemically, the result is the Gaussian elimination algorithm.\r\n37",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8bd9e77a-5bf0-4bb9-9d91-c9d75f6ad31c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=569471ba53e0e4ddcaef52a6e6679da4cd86c79d8ba664ceda0c3c42aaeea2e0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 418
      },
      {
        "segments": [
          {
            "segment_id": "33f60a18-6777-4f28-9e93-789498eadae8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 38,
            "page_width": 612,
            "page_height": 792,
            "content": "38 Systems of Linear Equations\r\n2.1.2 Equivalence and the Act of Solving\r\nWe introduce the symbol ∼ which is called “tilde” but should be read as “is\r\n(row) equivalent to” because at each step the augmented matrix changes by\r\nan operation on its rows but its solutions do not. For example, we found\r\nabove that\r\n\u0012\r\n1 1 27\r\n2 −1 0\r\n\u0013\r\n∼\r\n\u0012\r\n1 0 9\r\n2 −1 0\r\n\u0013\r\n∼\r\n\u0012\r\n1 0 9\r\n0 1 18\u0013\r\n.\r\nThe last of these augmented matrices is our favorite!\r\nEquivalence Example\r\nSetting up a string of equivalences like this is a means of solving a system\r\nof linear equations. This is the main idea of section 2.1.3. This next example\r\nhints at the main trick:\r\nExample 11 (Using Gaussian elimination to solve a system of linear equations)\r\nx + y = 5\r\nx + 2y = 8 \u001b\r\n⇔\r\n\u0012\r\n1 1 5\r\n1 2 8\r\n\u0013\r\n∼\r\n\u0012\r\n1 1 5\r\n0 1 3\r\n\u0013\r\n∼\r\n\u0012\r\n1 0 2\r\n0 1 3\r\n\u0013\r\n⇔\r\n\u001a\r\nx + 0 = 2\r\n0 + y = 3\r\nNote that in going from the first to second augmented matrix, we used the top left 1\r\nto make the bottom left entry zero. For this reason we call the top left entry a pivot.\r\nSimilarly, to get from the second to third augmented matrix, the bottom right entry\r\n(before the divide) was used to make the top right one vanish; so the bottom right\r\nentry is also called a pivot.\r\nThis name pivot is used to indicate the matrix entry used to “zero out”\r\nthe other entries in its column; the pivot is the number used to eliminate\r\nanother number in its column.\r\n2.1.3 Reduced Row Echelon Form\r\nFor a system of two linear equations, the goal of Gaussian elimination is to\r\nconvert the part of the augmented matrix left of the dividing line into the\r\nmatrix\r\nI =\r\n\u0012\r\n1 0\r\n0 1\u0013\r\n,\r\n38",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/33f60a18-6777-4f28-9e93-789498eadae8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=43e9a65bfc2cc799533febfba52b50ab6ea64fc872b029a4abc2d48ae13e3f1b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 335
      },
      {
        "segments": [
          {
            "segment_id": "92e8f07a-a764-44c5-988d-2bdff7056b05",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 39,
            "page_width": 612,
            "page_height": 792,
            "content": "2.1 Gaussian Elimination 39\r\ncalled the Identity Matrix , since this would give the simple statement of a\r\nsolution x = a, y = b. The same goes for larger systems of equations for\r\nwhich the identity matrix I has 1’s along its diagonal and all off-diagonal\r\nentries vanish:\r\nI =\r\n\r\n\r\n1 0 · · · 0\r\n0 1 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · 1\r\n\r\n\r\nReading homework: problem 2\r\nFor many systems, it is not possible to reach the identity in the augmented\r\nmatrix via Gaussian elimination. In any case, a certain version of the matrix\r\nthat has the maximum number of components eliminated is said to be the\r\nRow Reduced Echelon Form (RREF).\r\nExample 12 (Redundant equations)\r\nx + y = 2\r\n2x + 2y = 4 )\r\n⇔\r\n \r\n1 1 2\r\n2 2 4\r\n!\r\n∼\r\n \r\n1 1 2\r\n0 0 0\r\n!\r\n⇔\r\n(\r\nx + y = 2\r\n0 + 0 = 0\r\nThis example demonstrates if one equation is a multiple of the other the identity\r\nmatrix can not be a reached. This is because the first step in elimination will make\r\nthe second row a row of zeros. Notice that solutions still exists (1, 1) is a solution.\r\nThe last augmented matrix here is in RREF; no more than two components can be\r\neliminated.\r\nExample 13 (Inconsistent equations)\r\nx + y = 2\r\n2x + 2y = 5 )\r\n⇔\r\n \r\n1 1 2\r\n2 2 5\r\n!\r\n∼\r\n \r\n1 1 2\r\n0 0 1\r\n!\r\n⇔\r\n(\r\nx + y = 2\r\n0 + 0 = 1\r\nThis system of equation has a solution if there exists two numbers x, and y such that\r\n0 + 0 = 1. That is a tricky way of saying there are no solutions. The last form of the\r\naugmented matrix here is the RREF.\r\n39",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/92e8f07a-a764-44c5-988d-2bdff7056b05.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=80f6dc572511e729f7b307e7d3646307356cce59f4c68965d337bb59131dd69f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 322
      },
      {
        "segments": [
          {
            "segment_id": "2ebb7e0e-7486-4845-baef-ba59c471f877",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 40,
            "page_width": 612,
            "page_height": 792,
            "content": "40 Systems of Linear Equations\r\nExample 14 (Silly order of equations)\r\nA robot might make this mistake:\r\n0x + y = −2\r\nx + y = 7 )\r\n⇔\r\n \r\n0 1 −2\r\n1 1 7\r\n!\r\n∼ · · · ,\r\nand then give up because the the upper left slot can not function as a pivot since the 0\r\nthat lives there can not be used to eliminate the zero below it. Of course, the right\r\nthing to do is to change the order of the equations before starting\r\nx + y = 7\r\n0x + y = −2\r\n)\r\n⇔\r\n \r\n1 1 7\r\n0 1 −2\r\n!\r\n∼\r\n \r\n1 0 9\r\n0 1 −2\r\n!\r\n⇔\r\n(\r\nx + 0 = 9\r\n0 + y = −2 .\r\nThe third augmented matrix above is the RREF of the first and second. That is to\r\nsay, you can swap rows on your way to RREF.\r\nFor larger systems of equations redundancy and inconsistency are the ob\u0002structions to obtaining the identity matrix, and hence to a simple statement\r\nof a solution in the form x = a, y = b, . . . . What can we do to maximally\r\nsimplify a system of equations in general? We need to perform operations\r\nthat simplify our system without changing its solutions. Because, exchanging\r\nthe order of equations, multiplying one equation by a non-zero constant or\r\nadding equations does not change the system’s solutions, we are lead to three\r\noperations:\r\n• (Row Swap) Exchange any two rows.\r\n• (Scalar Multiplication) Multiply any row by a non-zero constant.\r\n• (Row Sum) Add a multiple of one row to another row.\r\nThese are called Elementary Row Operations, or EROs for short, and are\r\nstudied in detail in section 2.3. Suppose now we have a general augmented\r\nmatrix for which the first entry in the first row does not vanish. Then, using\r\njust the three EROs, we could1then perform the following.\r\n1This is a “brute force” algorithm; there will often be more efficient ways to get to\r\nRREF.\r\n40",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2ebb7e0e-7486-4845-baef-ba59c471f877.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=32c547b85c2a42118729b4d3961f354f15ac6f0a7dfabced05a5e2329afdab97",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 344
      },
      {
        "segments": [
          {
            "segment_id": "ccf40fd0-18ae-45d0-9c72-c593467fee66",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 41,
            "page_width": 612,
            "page_height": 792,
            "content": "2.1 Gaussian Elimination 41\r\nAlgorithm For Obtaining RREF:\r\n• Make the leftmost nonzero entry in the top row 1 by multiplication.\r\n• Then use that 1 as a pivot to eliminate everything below it.\r\n• Then go to the next row and make the leftmost nonzero entry 1.\r\n• Use that 1 as a pivot to eliminate everything below and above it!\r\n• Go to the next row and make the leftmost nonzero entry 1... etc\r\nIn the case that the first entry of the first row is zero, we may first interchange\r\nthe first row with another row whose first entry is non-vanishing and then\r\nperform the above algorithm. If the entire first column vanishes, we may still\r\napply the algorithm on the remaining columns.\r\nHere is a video (with special effects!) of a hand performing the algorithm\r\nby hand. When it is done, you should try doing what it does.\r\nBeginner Elimination\r\nThis algorithm and its variations is known as Gaussian elimination. The\r\nendpoint of the algorithm is an augmented matrix of the form\r\n\r\n\r\n1 ∗ 0 ∗ 0 · · · 0 ∗ b\r\n1\r\n0 0 1 ∗ 0 · · · 0 ∗ b\r\n2\r\n0 0 0 0 1 · · · 0 ∗ b\r\n3\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 0 0 0 · · · 1 ∗ b\r\nk\r\n0 0 0 0 0 · · · 0 0 b\r\nk+1\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 0 0 0 · · · 0 0 b\r\nr\r\n\r\n\r\n.\r\nThis is called Reduced Row Echelon Form (RREF). The asterisks denote\r\nthe possibility of arbitrary numbers (e.g., the second 1 in the top line of\r\nexample 12).\r\nLearning to perform this algorithm by hand is the first step to learning\r\nlinear algebra; it will be the primary means of computation for this course.\r\nYou need to learn it well. So start practicing as soon as you can, and practice\r\noften.\r\n41",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ccf40fd0-18ae-45d0-9c72-c593467fee66.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=54b15dcce81bcb8422e96b515a7744cb88098e5dc868df6bd5d53782bfcbb941",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 366
      },
      {
        "segments": [
          {
            "segment_id": "d3af779b-e6a7-4d01-97f1-25238f0fd3f2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 42,
            "page_width": 612,
            "page_height": 792,
            "content": "42 Systems of Linear Equations\r\nThe following properties define RREF:\r\n1. In every row the left most non-zero entry is 1 (and is called a pivot).\r\n2. The pivot of any given row is always to the right of the pivot of the\r\nrow above it.\r\n3. The pivot is the only non-zero entry in its column.\r\nExample 15 (Augmented matrix in RREF)\r\n\r\n\r\n1 0 7 0\r\n0 1 3 0\r\n0 0 0 1\r\n0 0 0 0\r\n\r\n\r\nExample 16 (Augmented matrix NOT in RREF)\r\n\r\n\r\n1 0 3 0\r\n0 0 2 0\r\n0 1 0 1\r\n0 0 0 1\r\n\r\n\r\nActually, this NON-example breaks all three of the rules!\r\nThe reason we need the asterisks in the general form of RREF is that\r\nnot every column need have a pivot, as demonstrated in examples 12 and 15.\r\nHere is an example where multiple columns have no pivot:\r\nExample 17 (Consecutive columns with no pivot in RREF)\r\nx + y + z + 0w = 2\r\n2x + 2y + 2z + 2w = 4 \u001b\r\n⇔\r\n\u0012\r\n1 1 1 0 2\r\n2 2 2 1 4\r\n\u0013\r\n∼\r\n\u0012\r\n1 1 1 0 2\r\n0 0 0 1 0\r\n\u0013\r\n⇔\r\n\u001a\r\nx + y + z = 2\r\nw = 0 .\r\nNote that there was no hope of reaching the identity matrix, because of the shape of\r\nthe augmented matrix we started with.\r\nWith some practice, elimination can go quickly. Here is an expert showing\r\nyou some tricks. If you can’t follow him now then come back when you have\r\nsome more experience and watch again. You are going to need to get really\r\ngood at this!\r\n42",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d3af779b-e6a7-4d01-97f1-25238f0fd3f2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b91f267048abeeb421b7f7591a7223944c57167c6d4852daa24a24201f8c89bc",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 291
      },
      {
        "segments": [
          {
            "segment_id": "23655bfc-055a-4819-af68-dc1c731e0bb8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 43,
            "page_width": 612,
            "page_height": 792,
            "content": "2.1 Gaussian Elimination 43\r\nAdvanced Elimination\r\nIt is important that you are able to convert RREF back into a system\r\nof equations. The first thing you might notice is that if any of the numbers\r\nb\r\nk+1, . . . , br\r\nin 2.1.3 are non-zero then the system of equations is inconsistent\r\nand has no solutions. Our next task is to extract all possible solutions from\r\nan RREF augmented matrix.\r\n2.1.4 Solution Sets and RREF\r\nRREF is a maximally simplified version of the original system of equations\r\nin the following sense:\r\n• As many coefficients of the variables as possible are 0.\r\n• As many coefficients of the variables as possible are 1.\r\nIt is easier to read off solutions from the maximally simplified equations than\r\nfrom the original equations, even when there are infinitely many solutions.\r\nExample 18 (Standard approach from a system of equations to the solution set)\r\nx + y + 5w = 1\r\ny + 2w = 6\r\nz + 4w = 8\r\n\r\n\r\n\r\n⇔\r\n\r\n\r\n1 1 0 5 1\r\n0 1 0 2 6\r\n0 0 1 4 8\r\n\r\n ∼\r\n\r\n\r\n1 0 0 3 −5\r\n0 1 0 2 6\r\n0 0 1 4 8\r\n\r\n\r\n⇔\r\n\r\n\r\n\r\nx + 3w = −5\r\ny + 2w = 6\r\nz + 4w = 8\r\n\r\n\r\n\r\n⇔\r\n\r\n\r\n\r\nx = −5 − 3w\r\ny = 6 − 2w\r\nz = 8 − 4w\r\nw = w\r\n\r\n\r\n\r\n⇔\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n=\r\n\r\n\r\n−5\r\n6\r\n8\r\n0\r\n\r\n\r\n+ w\r\n\r\n\r\n−3\r\n−2\r\n−4\r\n1\r\n\r\n\r\n.\r\nThere is one solution for each value of w, so the solution set is\r\n\r\n\r\n\r\n\r\n\r\n−5\r\n6\r\n8\r\n0\r\n\r\n\r\n+ α\r\n\r\n\r\n−3\r\n−2\r\n−4\r\n1\r\n\r\n\r\n: α ∈ R\r\n\r\n\r\n\r\n.\r\n43",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/23655bfc-055a-4819-af68-dc1c731e0bb8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ad52cb9f6a37a80d303d4b96b045dbac9cc59a017192e36f8ec29112a3f7ee38",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 331
      },
      {
        "segments": [
          {
            "segment_id": "4e608e10-9e28-4c96-be1c-5e4bb4d74705",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 44,
            "page_width": 612,
            "page_height": 792,
            "content": "44 Systems of Linear Equations\r\nHere is a verbal description of the preceeding example of the standard ap\u0002proach. We say that x, y, and z are pivot variables because they appeared\r\nwith a pivot coefficient in RREF. Since w never appears with a pivot co\u0002efficient, it is not a pivot variable. In the second line we put all the pivot\r\nvariables on one side and all the non-pivot variables on the other side and\r\nadded the trivial equation w = w to obtain a system that allowed us to easily\r\nread off solutions.\r\nThe Standard Approach To Solutions Sets\r\n1. Write the augmented matrix.\r\n2. Perform EROs to reach RREF.\r\n3. Express the non-pivot variables in terms of the pivot variables.\r\nThere are always exactly enough non-pivot variables to index your solutions.\r\nIn any approach, the variables which are not expressed in terms of the other\r\nvariables are called free variables. The standard approach is to use the non\u0002pivot variables as free variables.\r\nNon-standard approach: solve for w in terms of z and substitute into the\r\nother equations. You now have an expression for each component in terms\r\nof z. But why pick z instead of y or x? (or x + y?) The standard approach\r\nnot only feels natural, but is canonical, meaning that everyone will get the\r\nsame RREF and hence choose the same variables to be free. However, it is\r\nimportant to remember that so long as their set of solutions is the same, any\r\ntwo choices of free variables is fine. (You might think of this as the difference\r\nbetween using Google MapsTM or MapquestTM; although their maps may\r\nlook different, the place hhome sici they are describing is the same!)\r\nWhen you see an RREF augmented matrix with two columns that have\r\nno pivot, you know there will be two free variables.\r\nExample 19 (Standard approach, multiple free variables)\r\n44",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4e608e10-9e28-4c96-be1c-5e4bb4d74705.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ffa39e9333b30350627219d780bc65052cdd71d30d271253eb31eb03713f1d48",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 315
      },
      {
        "segments": [
          {
            "segment_id": "f6e91caa-f8ee-4d52-95d7-7a8fdf20f712",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 45,
            "page_width": 612,
            "page_height": 792,
            "content": "2.1 Gaussian Elimination 45\r\n\r\n\r\n1 0 7 0 4\r\n0 1 3 4 1\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n\r\n\r\n⇔\r\n\u001a\r\nx + 7z = 4\r\ny + 3z+4w = 1 \u001b\r\n⇔\r\n\r\n\r\n\r\nx = 4 − 7z\r\ny = 1 − 3z − 4w\r\nz = z\r\nw = w\r\n\r\n\r\n\r\n⇔\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n =\r\n\r\n\r\n4\r\n1\r\n0\r\n0\r\n\r\n\r\n+ z\r\n\r\n\r\n−7\r\n−3\r\n1\r\n0\r\n\r\n\r\n+ w\r\n\r\n\r\n0\r\n−4\r\n0\r\n1\r\n\r\n\r\nso the solution set is\r\n\r\n\r\n\r\n\r\n\r\n4\r\n1\r\n0\r\n0\r\n\r\n\r\n+ z\r\n\r\n\r\n−7\r\n−3\r\n1\r\n0\r\n\r\n\r\n+ w\r\n\r\n\r\n0\r\n−4\r\n0\r\n1\r\n\r\n\r\n: z, w ∈ R\r\n\r\n\r\n\r\n.\r\nFrom RREF to a Solution Set\r\nYou can imagine having three, four, or fifty-six non-pivot columns and\r\nthe same number of free variables indexing your solutions set. In general a\r\nsolution set to a system of equations with n free variables will be of the form\r\n{P + µ1H1 + µ2H2 + · · · + µnHn : µ1, . . . , µn ∈ R}.\r\nThe parts of these solutions play special roles in the associated matrix\r\nequation. This will come up again and again long after we complete this\r\ndiscussion of basic calculation methods, so we will use the general language\r\nof linear algebra to give names to these parts now.\r\nDefinition: A homogeneous solution to a linear equation Lx = v, with\r\nL and v known is a vector H such that LH = 0 where 0 is the zero vector.\r\nIf you have a particular solution P to a linear equation and add a\r\nsum of multiples of homogeneous solutions to it you obtain another\r\nparticular solution.\r\n45",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f6e91caa-f8ee-4d52-95d7-7a8fdf20f712.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f9af2aba510182201ab1ea599ab0a6a6668071ce8dfce466a20921daca63674a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 321
      },
      {
        "segments": [
          {
            "segment_id": "29e274b1-6661-4d55-8415-2bda6ef2f857",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 46,
            "page_width": 612,
            "page_height": 792,
            "content": "46 Systems of Linear Equations\r\nParticular and Homogeneous Solutions\r\nCheck now that the parts of the solutions with free variables as coefficients\r\nfrom the previous examples are homogeneous solutions, and that by adding\r\na homogeneous solution to a particular solution one obtains a solution to the\r\nmatrix equation. This will come up over and over again. As an example\r\nwithout matrices, consider the differential equation d\r\n2\r\ndx2 f = 3. A particular\r\nsolution is 3\r\n2\r\nx\r\n2 while x and 1 are homogeneous solutions. The solution set is\r\n{\r\n3\r\n2\r\nx\r\n2 + ax + c1 : a, b ∈ R}. You can imagine similar differential equations\r\nwith more homogeneous solutions.\r\nYou need to become very adept at reading off solutions sets of linear\r\nsystems from the RREF of their augmented matrix; it is a basic skill for\r\nlinear algebra, and we will continue using it up to the last page of the book!\r\nWorked examples of Gaussian elimination\r\n2.2 Review Problems\r\nWebwork:\r\nReading problems 1 , 2\r\nAugmented matrix 6\r\n2 × 2 systems 7, 8, 9, 10, 11, 12\r\n3 × 2 systems 13, 14\r\n3 × 3 systems 15, 16, 17\r\n1. State whether the following augmented matrices are in RREF and com\u0002pute their solution sets.\r\n\r\n\r\n1 0 0 0 3 1\r\n0 1 0 0 1 2\r\n0 0 1 0 1 3\r\n0 0 0 1 2 0\r\n\r\n ,\r\n\r\n\r\n1 1 0 1 0 1 0\r\n0 0 1 2 0 2 0\r\n0 0 0 0 1 3 0\r\n0 0 0 0 0 0 0\r\n\r\n ,\r\n46",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/29e274b1-6661-4d55-8415-2bda6ef2f857.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1c92d602f81639c15f514aaaafce99fba6a1da29978acbe9b762064cb3b193fd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 275
      },
      {
        "segments": [
          {
            "segment_id": "6666ca6b-6a89-4ba5-bbe9-d337cc87e8e2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 47,
            "page_width": 612,
            "page_height": 792,
            "content": "2.2 Review Problems 47\r\n\r\n\r\n1 1 0 1 0 1 0 1\r\n0 0 1 2 0 2 0 −1\r\n0 0 0 0 1 3 0 1\r\n0 0 0 0 0 2 0 −2\r\n0 0 0 0 0 0 1 1\r\n\r\n\r\n.\r\n2. Solve the following linear system:\r\n2x1 + 5x2 − 8x3 + 2x4 + 2x5 = 0\r\n6x1 + 2x2 −10x3 + 6x4 + 8x5 = 6\r\n3x1 + 6x2 + 2x3 + 3x4 + 5x5 = 6\r\n3x1 + 1x2 − 5x3 + 3x4 + 4x5 = 3\r\n6x1 + 7x2 − 3x3 + 6x4 + 9x5 = 9\r\nBe sure to set your work out carefully with equivalence signs ∼ between\r\neach step, labeled by the row operations you performed.\r\n3. Check that the following two matrices are row-equivalent:\r\n\u0012\r\n1 4 7 10\r\n2 9 6 0\r\n\u0013\r\nand \u0012\r\n0 −1 8 20\r\n4 18 12 0\r\n\u0013\r\n.\r\nNow remove the third column from each matrix, and show that the\r\nresulting two matrices (shown below) are row-equivalent:\r\n\u0012\r\n1 4 10\r\n2 9 0\r\n\u0013\r\nand \u0012\r\n0 −1 20\r\n4 18 0\r\n\u0013\r\n.\r\nNow remove the fourth column from each of the original two matri\u0002ces, and show that the resulting two matrices, viewed as augmented\r\nmatrices (shown below) are row-equivalent:\r\n\u0012\r\n1 4 7\r\n2 9 6\r\n\u0013\r\nand \u0012\r\n0 −1 8\r\n4 18 12\u0013\r\n.\r\nExplain why row-equivalence is never affected by removing columns.\r\n4. Check that the system of equations corresponding to the augmented\r\nmatrix\r\n\r\n\r\n1 4 10\r\n3 13 9\r\n4 17 20\r\n\r\n\r\n47",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6666ca6b-6a89-4ba5-bbe9-d337cc87e8e2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b27ad52067f2d206440e077f328a4ae310972d7afc2dd24ff2ea2ec32cee469a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 278
      },
      {
        "segments": [
          {
            "segment_id": "9d7c516c-696f-4af5-bd8a-381bd937b08e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 48,
            "page_width": 612,
            "page_height": 792,
            "content": "48 Systems of Linear Equations\r\nhas no solutions. If you remove one of the rows of this matrix, does\r\nthe new matrix have any solutions? In general, can row equivalence be\r\naffected by removing rows? Explain why or why not.\r\n5. Explain why the linear system has no solutions:\r\n\r\n\r\n1 0 3 1\r\n0 1 2 4\r\n0 0 0 6\r\n\r\n\r\nFor which values of k does the system below have a solution?\r\nx − 3y = 6\r\nx + 3z = − 3\r\n2x + ky + (3 − k)z = 1\r\nHint\r\n6. Show that the RREF of a matrix is unique. (Hint: Consider what\r\nhappens if the same augmented matrix had two different RREFs. Try\r\nto see what happens if you removed columns from these two RREF\r\naugmented matrices.)\r\n7. Another method for solving linear systems is to use row operations to\r\nbring the augmented matrix to Row Echelon Form (REF as opposed to\r\nRREF). In REF, the pivots are not necessarily set to one, and we only\r\nrequire that all entries left of the pivots are zero, not necessarily entries\r\nabove a pivot. Provide a counterexample to show that row echelon form\r\nis not unique.\r\nOnce a system is in row echelon form, it can be solved by “back substi\u0002tution.” Write the following row echelon matrix as a system of equa\u0002tions, then solve the system using back-substitution.\r\n\r\n\r\n2 3 1 6\r\n0 1 1 2\r\n0 0 3 3\r\n\r\n\r\n48",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9d7c516c-696f-4af5-bd8a-381bd937b08e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f53320f1f8b395858ba85b53ed1e33d12a2d86aa56d52cec2d5dc8cb94311ef0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 252
      },
      {
        "segments": [
          {
            "segment_id": "3038501c-eeef-4d84-be9f-2c3a2fd369ac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 49,
            "page_width": 612,
            "page_height": 792,
            "content": "2.2 Review Problems 49\r\n8. Show that this pair of augmented matrices are row equivalent, assuming\r\nad − bc 6= 0:\r\n \r\na b e\r\nc d f\r\n!\r\n∼\r\n \r\n1 0 de−bf\r\nad−bc\r\n0 1 af−ce\r\nad−bc!\r\n9. Consider the augmented matrix:\r\n\u0012\r\n2 −1 3\r\n−6 3 1\r\n\u0013\r\n.\r\nGive a geometric reason why the associated system of equations has\r\nno solution. (Hint, plot the three vectors given by the columns of this\r\naugmented matrix in the plane.) Given a general augmented matrix\r\n\u0012\r\na b e\r\nc d f\r\n\u0013\r\n,\r\ncan you find a condition on the numbers a, b, c and d that corresponds\r\nto the geometric condition you found?\r\n10. A relation ∼ on a set of objects U is an equivalence relation if the\r\nfollowing three properties are satisfied:\r\n• Reflexive: For any x ∈ U, we have x ∼ x.\r\n• Symmetric: For any x, y ∈ U, if x ∼ y then y ∼ x.\r\n• Transitive: For any x, y and z ∈ U, if x ∼ y and y ∼ z then x ∼ z.\r\nShow that row equivalence of matrices is an example of an equivalence\r\nrelation.\r\n(For a discussion of equivalence relations, see Homework 0, Problem 4)\r\nHint\r\n11. Equivalence of augmented matrices does not come from equality of their\r\nsolution sets. Rather, we define two matrices to be equivalent if one\r\ncan be obtained from the other by elementary row operations.\r\nFind a pair of augmented matrices that are not row equivalent but do\r\nhave the same solution set.\r\n49",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3038501c-eeef-4d84-be9f-2c3a2fd369ac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=26abe26e56a010843550ff3ec077ef422f90891ea8da99bc71854c86eca4a286",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 264
      },
      {
        "segments": [
          {
            "segment_id": "ba58cf9e-e6ab-4a09-9043-fb3ef05b09cc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 50,
            "page_width": 612,
            "page_height": 792,
            "content": "50 Systems of Linear Equations\r\n2.3 Elementary Row Operations\r\nElementary row operations are systems of linear equations relating the old\r\nand new rows in Gaussian elimination:\r\nExample 20 (Keeping track of EROs with equations between rows)\r\nWe refer to the new kth row as R0\r\nk\r\nand the old kth row as Rk.\r\n\r\n\r\n0 1 1 7\r\n2 0 0 4\r\n0 0 1 4\r\n\r\n\r\nR0\r\n1=0R1+ R2+0R3\r\nR0\r\n2= R1+0R2+0R3\r\nR0\r\n3=0R1+0R2+ R3\r\n∼\r\n\r\n\r\n2 0 0 4\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n\r\n\r\n\r\nR0\r\n1\r\nR0\r\n2\r\nR0\r\n3\r\n\r\n =\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nR1\r\nR2\r\nR3\r\n\r\n\r\nR0\r\n1= 1\r\n2 R1+0R2+0R3\r\nR0\r\n2=0R1+ R2+0R3\r\nR0\r\n3=0R1+0R2+ R3\r\n∼\r\n\r\n\r\n1 0 0 2\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n\r\n\r\n\r\nR0\r\n1\r\nR0\r\n2\r\nR0\r\n3\r\n\r\n =\r\n\r\n\r\n1\r\n2\r\n0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nR1\r\nR2\r\nR3\r\n\r\n\r\nR0\r\n1= R1+0R2+0R3\r\nR0\r\n2=0R1+ R2− R3\r\nR0\r\n3=0R1+0R2+ R3\r\n∼\r\n\r\n\r\n1 0 0 2\r\n0 1 0 3\r\n0 0 1 4\r\n\r\n\r\n\r\n\r\nR0\r\n1\r\nR0\r\n2\r\nR0\r\n3\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 −1\r\n0 0 1\r\n\r\n\r\n\r\n\r\nR1\r\nR2\r\nR3\r\n\r\n\r\nOn the right, we have listed the relations between old and new rows in matrix notation.\r\nReading homework: problem 3\r\n2.3.1 EROs and Matrices\r\nInterestingly, the matrix that describes the relationship between old and new\r\nrows performs the corresponding ERO on the augmented matrix.\r\n50",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ba58cf9e-e6ab-4a09-9043-fb3ef05b09cc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f503d3afec3a9c4890f619d55d38a52dcd7b1c152cdc291ca2fada9f84c57310",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 289
      },
      {
        "segments": [
          {
            "segment_id": "e266391c-26ed-45f2-b7a9-e3f092bd969a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 51,
            "page_width": 612,
            "page_height": 792,
            "content": "2.3 Elementary Row Operations 51\r\nExample 21 (Performing EROs with Matrices)\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n0 1 1 7\r\n2 0 0 4\r\n0 0 1 4\r\n\r\n =\r\n\r\n\r\n2 0 0 4\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n\r\n∼\r\n\r\n\r\n1\r\n2\r\n0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n2 0 0 4\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n =\r\n\r\n\r\n1 0 0 2\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0\r\n0 1 −1\r\n0 0 1\r\n\r\n\r\n\r\n\r\n1 0 0 2\r\n0 1 1 7\r\n0 0 1 4\r\n\r\n =\r\n\r\n\r\n1 0 0 2\r\n0 1 0 3\r\n0 0 1 4\r\n\r\n\r\nHere we have multiplied the augmented matrix with the matrices that acted on rows\r\nlisted on the right of example 20.\r\nRealizing EROs as matrices allows us to give a concrete notion of “di\u0002viding by a matrix”; we can now perform manipulations on both sides of an\r\nequation in a familiar way:\r\nExample 22 (Undoing A in Ax = b slowly, for A = 6 = 3 · 2)\r\n6x = 12\r\n⇔ 3\r\n−16x = 3−112\r\n⇔ 2x = 4\r\n⇔ 2\r\n−12x = 2−1 4\r\n⇔ 1x = 2\r\nThe matrices corresponding to EROs undo a matrix step by step.\r\n51",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e266391c-26ed-45f2-b7a9-e3f092bd969a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e4090cd4d837d4545127e6d798cb1ac26fe3cd0a333b8d3d4e11c7dbc9bce9e1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 255
      },
      {
        "segments": [
          {
            "segment_id": "ab1723f3-d956-4773-b14d-75ab68c2aad1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 52,
            "page_width": 612,
            "page_height": 792,
            "content": "52 Systems of Linear Equations\r\nExample 23 (Undoing A in Ax = b slowly, for A = M = ...)\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n7\r\n4\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n7\r\n4\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n2 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n4\r\n7\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n1\r\n2\r\n0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n2 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n1\r\n2\r\n0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n4\r\n7\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n1 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n2\r\n7\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n1 0 0\r\n0 1 −1\r\n0 0 1\r\n\r\n\r\n\r\n\r\n1 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 −1\r\n0 0 1\r\n\r\n\r\n\r\n\r\n2\r\n7\r\n4\r\n\r\n\r\n⇔\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n2\r\n3\r\n4\r\n\r\n .\r\nThis is another way of thinking about Gaussian elimination which feels more\r\nlike elementary algebra in the sense that you “do something to both sides of\r\nan equation” until you have a solution.\r\n2.3.2 Recording EROs in (M|I )\r\nJust as we put together 3−12\r\n−1 = 6−1\r\nto get a single thing to apply to both\r\nsides of 6x = 12 to undo 6, we should put together multiple EROs to get\r\na single thing that undoes our matrix. To do this, augment by the identity\r\nmatrix (not just a single column) and then perform Gaussian elimination.\r\nThere is no need to write the EROs as systems of equations or as matrices\r\nwhile doing this.\r\n52",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ab1723f3-d956-4773-b14d-75ab68c2aad1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=00065e84bfdd1e4ef87a070ee3f217691f24ee2dea549490b0106c79f0107865",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 420
      },
      {
        "segments": [
          {
            "segment_id": "8261ee83-ab7c-4057-bafa-3d8295392ddf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 53,
            "page_width": 612,
            "page_height": 792,
            "content": "2.3 Elementary Row Operations 53\r\nExample 24 (Collecting EROs that undo a matrix)\r\n\r\n\r\n0 1 1 1 0 0\r\n2 0 0 0 1 0\r\n0 0 1 0 0 1\r\n\r\n ∼\r\n\r\n\r\n2 0 0 0 1 0\r\n0 1 1 1 0 0\r\n0 0 1 0 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 0\r\n1\r\n2\r\n0\r\n0 1 1 1 0 0\r\n0 0 1 0 0 1\r\n\r\n ∼\r\n\r\n\r\n1 0 0 0\r\n1\r\n2\r\n0\r\n0 1 0 1 0 −1\r\n0 0 1 0 0 1\r\n\r\n .\r\nAs we changed the left side from the matrix M to the identity matrix, the\r\nright side changed from the identity matrix to the matrix which undoes M.\r\nExample 25 (Checking that one matrix undoes another)\r\n\r\n\r\n0\r\n1\r\n2\r\n0\r\n1 0 −1\r\n0 0 1\r\n\r\n\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nIf the matrices are composed in the opposite order, the result is the same.\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n0\r\n1\r\n2\r\n0\r\n1 0 −1\r\n0 0 1\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nWhenever the product of two matrices MN = I, we say that N is the\r\ninverse of M or N = M−1. Conversely M is the inverse of N; M = N −1.\r\nIn abstract generality, let M be some matrix and, as always, let I stand\r\nfor the identity matrix. Imagine the process of performing elementary row\r\noperations to bring M to the identity matrix:\r\n(M|I) ∼ (E1M|E1) ∼ (E2E1M|E2E1) ∼ · · · ∼ (I| · · · E2E1).\r\nThe ellipses “· · · ” stand for additional EROs. The result is a product of\r\nmatrices that form a matrix which undoes M\r\n· · · E2E1M = I .\r\nThis is only true if the RREF of M is the identity matrix.\r\nDefinition: A matrix M is invertible if its RREF is an identity matrix.\r\n53",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8261ee83-ab7c-4057-bafa-3d8295392ddf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=84bb90a256a53ec5ef66cbd2c31fa00ed6802fc9f1fbce04e5fac5bd581a4a44",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 380
      },
      {
        "segments": [
          {
            "segment_id": "aa7ebd82-e4bb-4bdd-8d37-33f6207476bd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 54,
            "page_width": 612,
            "page_height": 792,
            "content": "54 Systems of Linear Equations\r\nHow to find M−1\r\n• (M|I) ∼ (I|M−1)\r\nMuch use is made of the fact that invertible matrices can be undone with\r\nEROs. To begin with, since each elementary row operation has an inverse,\r\nM = E\r\n−1\r\n1 E\r\n−1\r\n2\r\n· · · ,\r\nwhile the inverse of M is\r\nM−1 = · · · E2E1 .\r\nThis is symbolically verified by\r\nM−1M = · · · E2E1 E\r\n−1\r\n1 E\r\n−1\r\n2\r\n· · · = · · · E2 E\r\n−1\r\n2\r\n· · · = · · · = I .\r\nThus, if M is invertible, then M can be expressed as the product of EROs.\r\n(The same is true for its inverse.) This has the feel of the fundamental\r\ntheorem of arithmetic (integers can be expressed as the product of primes)\r\nor the fundamental theorem of algebra (polynomials can be expressed as the\r\nproduct of [complex] first order polynomials); EROs are building blocks of\r\ninvertible matrices.\r\n2.3.3 The Three Elementary Matrices\r\nWe now work toward concrete examples and applications. It is surprisingly\r\neasy to translate between EROs and matrices that perform EROs. The\r\nmatrices corresponding to these kinds are close in form to the identity matrix:\r\n• Row Swap: Identity matrix with two rows swapped.\r\n• Scalar Multiplication: Identity matrix with one diagonal entry not 1.\r\n• Row Sum: The identity matrix with one off-diagonal entry not 0.\r\nExample 26 (Correspondences between EROs and their matrices)\r\n• The row swap matrix that swaps the 2nd and 4th row is the identity matrix with\r\nthe 2nd and 4th row swapped:\r\n\r\n\r\n1 0 0 0 0\r\n0 0 0 1 0\r\n0 0 1 0 0\r\n0 1 0 0 0\r\n0 0 0 0 1\r\n\r\n\r\n.\r\n54",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/aa7ebd82-e4bb-4bdd-8d37-33f6207476bd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2bdd3ade99c1c455d806bf4bae54cf2f9c521a498b67863c66a8100b0a265e20",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 302
      },
      {
        "segments": [
          {
            "segment_id": "4062ca93-9f4f-4d5a-8696-058a4e33890e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 55,
            "page_width": 612,
            "page_height": 792,
            "content": "2.3 Elementary Row Operations 55\r\n• The scalar multiplication matrix that replaces the 3rd row with 7 times the 3rd\r\nrow is the identity matrix with 7 in the 3rd row instead of 1:\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 7 0\r\n0 0 0 1\r\n\r\n .\r\n• The row sum matrix that replaces the 4th row with the 4th row plus 9 times\r\nthe 2nd row is the identity matrix with a 9 in the 4th row, 2nd column:\r\n\r\n\r\n1 0 0 0 0 0 0\r\n0 1 0 0 0 0 0\r\n0 0 1 0 0 0 0\r\n0 9 0 1 0 0 0\r\n0 0 0 0 1 0 0\r\n0 0 0 0 0 1 0\r\n0 0 0 0 0 0 1\r\n\r\n\r\n.\r\nWe can write an explicit factorization of a matrix into EROs by keeping\r\ntrack of the EROs used in getting to RREF.\r\nExample 27 (Express M from Example 24 as a product of EROs)\r\nNote that in the previous example one of each of the kinds of EROs is used, in the\r\norder just given. Elimination looked like\r\nM =\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n\r\nE1∼\r\n\r\n\r\n2 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\nE2∼\r\n\r\n\r\n1 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\nE3∼\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n = I ,\r\nwhere the EROs matrices are\r\nE1 =\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n , E2 =\r\n\r\n\r\n1\r\n2\r\n0 0\r\n0 1 0\r\n0 0 1\r\n\r\n , E3 =\r\n\r\n\r\n1 0 0\r\n0 1 −1\r\n0 0 1\r\n\r\n .\r\nThe inverse of the ERO matrices (corresponding to the description of the reverse row\r\nmaniplulations)\r\nE\r\n−1\r\n1 =\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n , E−1\r\n2 =\r\n\r\n\r\n2 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n , E−1\r\n3 =\r\n\r\n\r\n1 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n .\r\n55",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4062ca93-9f4f-4d5a-8696-058a4e33890e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c865c17b60dea23ddd6618ca4ff8bc9d2e14afa5ecc5b09a95ce2b063edb1837",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 382
      },
      {
        "segments": [
          {
            "segment_id": "ff699511-7978-43a1-b6a1-75f498148b9c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 56,
            "page_width": 612,
            "page_height": 792,
            "content": "56 Systems of Linear Equations\r\nMultiplying these gives\r\nE\r\n−1\r\n1 E\r\n−1\r\n2 E\r\n−1\r\n3 =\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n2 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n1 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n\r\n=\r\n\r\n\r\n0 1 0\r\n1 0 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n2 0 0\r\n0 1 1\r\n0 0 1\r\n\r\n =\r\n\r\n\r\n0 1 1\r\n2 0 0\r\n0 0 1\r\n\r\n = M .\r\n2.3.4 LU, LDU, and LDP U Factorizations\r\nThe process of elimination can be stopped halfway to obtain decompositions\r\nfrequently used in large computations in sciences and engineering. The first\r\nhalf of the elimination process is to eliminate entries below the diagonal\r\nleaving a matrix which is called upper triangular. The elementary matrices\r\nwhich perform this part of the elimination are lower triangular, as are their\r\ninverses. But putting together the upper triangular and lower triangular\r\nparts one obtains the so-called LU factorization.\r\nExample 28 (LU factorization)\r\nM =\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n\r\nE1∼\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 −1 1 −1\r\n\r\n\r\nE2∼\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 3 1\r\n\r\n\r\nE3∼\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n\r\n:= U ,\r\nwhere the EROs and their inverses are\r\nE1 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n2 0 1 0\r\n0 0 0 1\r\n\r\n\r\n, E2 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 1 0 1\r\n\r\n\r\n, E3 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 −1 1\r\n\r\n\r\nE\r\n−1\r\n1 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 0 0 1\r\n\r\n\r\n, E−1\r\n2 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 −1 0 1\r\n\r\n\r\n, E−1\r\n3 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 1 1\r\n\r\n .\r\n56",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ff699511-7978-43a1-b6a1-75f498148b9c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0cc0a54b1e6ed2dbbf93c80dc0a8abdbea3d386b01f2db589c3a7af4af73ab46",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 424
      },
      {
        "segments": [
          {
            "segment_id": "d068263c-e59a-42e5-9755-e862e53ebbc3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 57,
            "page_width": 612,
            "page_height": 792,
            "content": "2.3 Elementary Row Operations 57\r\nApplying inverse elementary matrices to both sides of the equality U = E3E2E1M\r\ngives M = E\r\n−1\r\n1 E\r\n−1\r\n2 E\r\n−1\r\n3 U or\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n=\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 0 0 1\r\n\r\n\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 −1 0 1\r\n\r\n\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 1 1\r\n\r\n\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n\r\n=\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 0 0 1\r\n\r\n\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 −1 1 1\r\n\r\n\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n\r\n=\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 −1 1 1\r\n\r\n\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n .\r\nThis is a lower triangular matrix times an upper triangular matrix.\r\n57",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d068263c-e59a-42e5-9755-e862e53ebbc3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b7939e517c3148e3e628f432de7a1789b32861db2055889eeb348a13b0309b95",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 247
      },
      {
        "segments": [
          {
            "segment_id": "bb6d015c-d365-4d04-929b-7ea6ad287910",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 58,
            "page_width": 612,
            "page_height": 792,
            "content": "58 Systems of Linear Equations\r\nWhat if we stop at a different point in elimination? We could multiply\r\nrows so that the entries in the diagonal are 1 next. Note that the EROs that\r\ndo this are diagonal. This gives a slightly different factorization.\r\nExample 29 (LDU factorization building from previous example)\r\nM =\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n\r\nE3E2E1 ∼\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n\r\nE4∼\r\n\r\n\r\n1 0 −3\r\n2\r\n1\r\n2\r\n0 1 2 2\r\n0 0 3 4\r\n0 0 0 −3\r\n\r\n\r\nE5∼\r\n\r\n\r\n1 0 −3\r\n2\r\n1\r\n2\r\n0 1 2 2\r\n0 0 1 4\r\n3\r\n0 0 0 −3\r\n\r\n\r\nE6∼\r\n\r\n\r\n1 0 −3\r\n2\r\n1\r\n2\r\n0 1 2 2\r\n0 0 1 4\r\n3\r\n0 0 0 1\r\n\r\n\r\n=: U\r\nThe corresponding elementary matrices are\r\nE4 =\r\n\r\n\r\n1\r\n2\r\n0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 0 1\r\n\r\n\r\n, E5 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1\r\n3\r\n0\r\n0 0 0 1\r\n\r\n\r\n, E6 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 0 −\r\n1\r\n3\r\n\r\n ,\r\nE\r\n−1\r\n4 =\r\n\r\n\r\n2 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 0 1\r\n\r\n\r\n, E−1\r\n5 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 3 0\r\n0 0 0 1\r\n\r\n\r\n, E−1\r\n6 =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 0 −3\r\n\r\n .\r\nThe equation U = E6E5E4E3E2E1M can be rearranged as\r\nM = (E\r\n−1\r\n1 E\r\n−1\r\n2 E\r\n−1\r\n3\r\n)(E\r\n−1\r\n4 E\r\n−1\r\n5 E\r\n−1\r\n6\r\n)U.\r\nWe calculated the product of the first three factors in the previous example; it was\r\nnamed L there, and we will reuse that name here. The product of the next three\r\nfactors is diagonal and we wil name it D. The last factor we named U (the name means\r\nsomething different in this example than the last example.) The LDU factorization\r\nof our matrix is\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 −1 1 1\r\n\r\n\r\n\r\n\r\n2 0 0 0\r\n0 1 0 0\r\n0 0 3 0\r\n0 0 1 −3\r\n\r\n\r\n\r\n\r\n1 0 −\r\n3\r\n2\r\n1\r\n2\r\n0 1 2 2\r\n0 0 1 4\r\n3\r\n0 0 0 1\r\n\r\n .\r\n58",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bb6d015c-d365-4d04-929b-7ea6ad287910.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3fdc934096664c70338981d70136cb3d3e350817c65e58136b9474aebd3be3a0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 502
      },
      {
        "segments": [
          {
            "segment_id": "9c7f8ea3-b20a-41a2-a9f9-24a0c16c86d5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 59,
            "page_width": 612,
            "page_height": 792,
            "content": "2.4 Review Problems 59\r\nThe LDU factorization of a matrix is a factorization into blocks of EROs\r\nof a various types: L is the product of the inverses of EROs which eliminate\r\nbelow the diagonal by row addition, D the product of inverses of EROs which\r\nset the diagonal elements to 1 by row multiplication, and U is the product\r\nof inverses of EROs which eliminate above the diagonal by row addition.\r\nYou may notice that one of the three kinds of row operation is missing\r\nfrom this story. Row exchange may be necessary to obtain RREF. Indeed, so\r\nfar in this chapter we have been working under the tacit assumption that M\r\ncan be brought to the identity by just row multiplication and row addition.\r\nIf row exchange is necessary, the resulting factorization is LDP U where P is\r\nthe product of inverses of EROs that perform row exchange.\r\nExample 30 (LDP U factorization, building from previous examples)\r\nM =\r\n\r\n\r\n0 1 2 2\r\n2 0 −3 1\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n\r\nE7∼\r\n\r\n\r\n2 0 −3 1\r\n0 1 2 2\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n\r\nE6E5E4E3E2E1 ∼ L\r\nE7 =\r\n\r\n\r\n0 1 0 0\r\n1 0 0 0\r\n0 0 1 0\r\n0 0 0 1\r\n\r\n = E\r\n−1\r\n7\r\nM = (E\r\n−1\r\n1 E\r\n−1\r\n2 E\r\n−1\r\n3\r\n)(E\r\n−1\r\n4 E\r\n−1\r\n5 E\r\n−1\r\n6\r\n)(E\r\n−1\r\n7\r\n)U = LDP U\r\n\r\n\r\n0 1 2 2\r\n2 0 −3 1\r\n−4 0 9 2\r\n0 −1 1 −1\r\n\r\n =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n−2 0 1 0\r\n0 −1 1 1\r\n\r\n\r\n\r\n\r\n2 0 0 0\r\n0 1 0 0\r\n0 0 3 0\r\n0 0 1 −3\r\n\r\n\r\n\r\n\r\n0 1 0 0\r\n1 0 0 0\r\n0 0 1 0\r\n0 0 0 1\r\n\r\n\r\n\r\n\r\n1 0 −\r\n3\r\n2\r\n1\r\n2\r\n0 1 2 2\r\n0 0 1 4\r\n3\r\n0 0 0 1\r\n\r\n\r\n2.4 Review Problems\r\nWebwork:\r\nReading problems 3\r\nMatrix notation 18\r\nLU 19\r\n59",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9c7f8ea3-b20a-41a2-a9f9-24a0c16c86d5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=44cdd8130514909d66b81449c9bbb964eb4ab441662279be4eb9685176c13ea4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 376
      },
      {
        "segments": [
          {
            "segment_id": "bf1fb867-e144-4f96-920b-d99a4bc625e8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 60,
            "page_width": 612,
            "page_height": 792,
            "content": "60 Systems of Linear Equations\r\n1. While performing Gaussian elimination on these augmented matrices\r\nwrite the full system of equations describing the new rows in terms of\r\nthe old rows above each equivalence symbol as in example 20.\r\n\u0012\r\n2 2 10\r\n1 2 8\r\n\u0013\r\n,\r\n\r\n\r\n1 1 0 5\r\n1 1 −1 11\r\n−1 1 1 −5\r\n\r\n\r\n2. Solve the vector equation by applying ERO matrices to each side of\r\nthe equation to perform elimination. Show each matrix explicitly as in\r\nexample 23.\r\n\r\n\r\n3 6 2\r\n5 9 4\r\n2 4 2\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n−3\r\n1\r\n0\r\n\r\n\r\n3. Solve this vector equation by finding the inverse of the matrix through\r\n(M|I) ∼ (I|M−1) and then applying M−1to both sides of the equation.\r\n\r\n\r\n2 1 1\r\n1 1 1\r\n1 1 2\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n9\r\n6\r\n7\r\n\r\n\r\n4. Follow the method of examples 28 and 29 to find the LU and LDU\r\nfactorization of\r\n\r\n\r\n3 3 6\r\n3 5 2\r\n6 2 5\r\n\r\n .\r\n5. Multiple matrix equations with the same matrix can be solved simul\u0002taneously.\r\n(a) Solve both systems by performing elimination on just one aug\u0002mented matrix.\r\n\r\n\r\n2 −1 −1\r\n−1 1 1\r\n1 −1 0\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n2 −1 −1\r\n−1 1 1\r\n1 −1 0\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n =\r\n\r\n\r\n2\r\n1\r\n1\r\n\r\n\r\n60",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bf1fb867-e144-4f96-920b-d99a4bc625e8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c7736c43b4581eb1a4f2205aa003e4354f7818b5817535b0a8a4a60207cc90fa",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 283
      },
      {
        "segments": [
          {
            "segment_id": "02d1d993-1ab7-484c-a53d-8e57cd867804",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 61,
            "page_width": 612,
            "page_height": 792,
            "content": "2.5 Solution Sets for Systems of Linear Equations 61\r\n(b) What are the columns of M−1in (M|I) ∼ (I|M−1)?\r\n6. How can you convince your fellow students to never make this mistake?\r\n\r\n\r\n1 0 2 3\r\n0 1 2 3\r\n2 0 1 4\r\n\r\n\r\nR0\r\n1=R1+R2\r\nR0\r\n2=R1−R2\r\nR0\r\n3=R1+2R2\r\n∼\r\n\r\n\r\n1 1 4 6\r\n1 −1 0 0\r\n1 2 6 9\r\n\r\n\r\n7. Is LU factorization of a matrix unique? Justify your answer.\r\n∞. If you randomly create a matrix by picking numbers out of the blue,\r\nit will probably be difficult to perform elimination or factorization;\r\nfractions and large numbers will probably be involved. To invent simple\r\nproblems it is better to start with a simple answer:\r\n(a) Start with any augmented matrix in RREF. Perform EROs to\r\nmake most of the components non-zero. Write the result on a\r\nseparate piece of paper and give it to your friend. Ask that friend\r\nto find RREF of the augmented matrix you gave them. Make sure\r\nthey get the same augmented matrix you started with.\r\n(b) Create an upper triangular matrix U and a lower triangular ma\u0002trix L with only 1s on the diagonal. Give the result to a friend to\r\nfactor into LU form.\r\n(c) Do the same with an LDU factorization.\r\n2.5 Solution Sets for Systems of Linear Equa\u0002tions\r\nAlgebraic equations problems can have multiple solutions. For example x(x−\r\n1) = 0 has two solutions: 0 and 1. By contrast, equations of the form Ax = b\r\nwith A a linear operator (with scalars the real numbers) have the following\r\nproperty:\r\nIf A is a linear operator and b is known, then Ax = b has either\r\n1. One solution\r\n2. No solutions\r\n3. Infinitely many solutions\r\n61",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/02d1d993-1ab7-484c-a53d-8e57cd867804.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e223221dbe4010a745565fe00244a71d005d53349518fa38bc7b2269c7e2128f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 298
      },
      {
        "segments": [
          {
            "segment_id": "73c2cb65-34f1-458a-9e42-a542007517b4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 62,
            "page_width": 612,
            "page_height": 792,
            "content": "62 Systems of Linear Equations\r\n2.5.1 The Geometry of Solution Sets: Hyperplanes\r\nConsider the following algebra problems and their solutions.\r\n1. 6x = 12 has one solution: 2.\r\n2a. 0x = 12 has no solution.\r\n2b. 0x = 0 has infinitely many solutions; its solution set is R.\r\nIn each case the linear operator is a 1 × 1 matrix. In the first case, the linear\r\noperator is invertible. In the other two cases it is not. In the first case, the\r\nsolution set is a point on the number line, in case 2b the solution set is the\r\nwhole number line.\r\nLets examine similar situations with larger matrices: 2 × 2 matrices.\r\n1. \u0012\r\n6 0\r\n0 2\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n12\r\n6\r\n\u0013\r\nhas one solution: \u0012\r\n2\r\n3\r\n\u0013\r\n.\r\n2a. \u0012\r\n1 3\r\n0 0\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n4\r\n1\r\n\u0013\r\nhas no solutions.\r\n2bi. \u0012\r\n1 3\r\n0 0\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n4\r\n0\r\n\u0013\r\nhas solution set \u001a\u0012 4\r\n0\r\n\u0013\r\n+ y\r\n\u0012\r\n−3\r\n1\r\n\u0013\r\n: y ∈ R\r\n\u001b\r\n.\r\n2bii. \u0012\r\n0 0\r\n0 0\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\nhas solution set \u001a\u0012 x\r\ny\r\n\u0013\r\n: x, y ∈ R\r\n\u001b\r\n.\r\nAgain, in the first case the linear operator is invertible while in the other\r\ncases it is not. When a 2 × 2 matrix from a matrix equation is not invertible\r\nthe solution set can be empty, a line in the plane, or the plane itself.\r\nFor a system of equations with r equations and k veriables, one can have a\r\nnumber of different outcomes. For example, consider the case of r equations\r\nin three variables. Each of these equations is the equation of a plane in three\u0002dimensional space. To find solutions to the system of equations, we look for\r\nthe common intersection of the planes (if an intersection exists). Here we\r\nhave five different possibilities:\r\n1. Unique Solution. The planes have a unique point of intersection.\r\n2a. No solutions. Some of the equations are contradictory, so no solutions\r\nexist.\r\n62",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/73c2cb65-34f1-458a-9e42-a542007517b4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c3fd7b807251e183d80a78bc4de3a3ada947f9997597a2a2819dd0201c98d544",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 350
      },
      {
        "segments": [
          {
            "segment_id": "3d6bea85-019d-47bd-9afd-aef014d2ed76",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 63,
            "page_width": 612,
            "page_height": 792,
            "content": "2.5 Solution Sets for Systems of Linear Equations 63\r\n2bi. Line. The planes intersect in a common line; any point on that line\r\nthen gives a solution to the system of equations.\r\n2bii. Plane. Perhaps you only had one equation to begin with, or else all\r\nof the equations coincide geometrically. In this case, you have a plane\r\nof solutions, with two free parameters.\r\nPlanes\r\n2biii. All of R\r\n3\r\n. If you start with no information, then any point in R\r\n3\r\nis a\r\nsolution. There are three free parameters.\r\nIn general, for systems of equations with k unknowns, there are k + 2\r\npossible outcomes, corresponding to the possible numbers (i.e., 0, 1, 2, . . . , k)\r\nof free parameters in the solutions set, plus the possibility of no solutions.\r\nThese types of solution sets are hyperplanes, generalizations of planes that\r\nbehave like planes in R\r\n3\r\nin many ways.\r\nReading homework: problem 4\r\nPictures and Explanation\r\n2.5.2 Particular Solution + Homogeneous Solutions\r\nLets look at solution sets again, this time trying to get to their geometric\r\nshape. In the standard approach, variables corresponding to columns that\r\ndo not contain a pivot (after going to reduced row echelon form) are free. It\r\nis the number of free variables that determines the geometry of the solution\r\nset.\r\nExample 31 (Non-pivot variables determine the gemometry of the solution set)\r\n\r\n\r\n1 0 1 −1\r\n0 1 −1 1\r\n0 0 0 0\r\n\r\n\r\n\r\n\r\nx1\r\nx2\r\nx3\r\nx4\r\n\r\n =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ⇔\r\n\r\n\r\n\r\n1x1 + 0x2 + 1x3 − 1x4 = 1\r\n0x1 + 1x2 − 1x3 + 1x4 = 1\r\n0x1 + 0x2 + 0x3 + 0x4 = 0\r\n63",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3d6bea85-019d-47bd-9afd-aef014d2ed76.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=30833c1917206277b323a3bd914075fa6832e5910c66f1c54153b9c32a386c46",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 295
      },
      {
        "segments": [
          {
            "segment_id": "b1a19da4-79b5-4209-8d8a-cc8010db8d0e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 64,
            "page_width": 612,
            "page_height": 792,
            "content": "64 Systems of Linear Equations\r\nFollowing the standard approach, express the pivot variables in terms of the non-pivot\r\nvariables and add “empty equations”. Here x3 and x4 are non-pivot variables.\r\nx1 = 1 − x3 + x4\r\nx2 = 1 + x3 − x4\r\nx3 = x3\r\nx4 = x4\r\n\r\n\r\n\r\n⇔\r\n\r\n\r\nx1\r\nx2\r\nx3\r\nx4\r\n\r\n =\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n\r\n+ x3\r\n\r\n\r\n−1\r\n1\r\n1\r\n0\r\n\r\n\r\n+ x4\r\n\r\n\r\n1\r\n−1\r\n0\r\n1\r\n\r\n\r\nThe preferred way to write a solution set S is with set notation;\r\nS =\r\n\r\n\r\n\r\n\r\n\r\nx1\r\nx2\r\nx3\r\nx4\r\n\r\n =\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n\r\n+ µ1\r\n\r\n\r\n−1\r\n1\r\n1\r\n0\r\n\r\n\r\n+ µ2\r\n\r\n\r\n1\r\n−1\r\n0\r\n1\r\n\r\n\r\n: µ1, µ2 ∈ R\r\n\r\n\r\n\r\n.\r\nNotice that the first two components of the second two terms come from the non-pivot\r\ncolumns. Another way to write the solution set is\r\nS = {P + µ1H1 + µ2H2 : µ1, µ2 ∈ R} ,\r\nwhere\r\nP =\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n\r\n, H1 =\r\n\r\n\r\n−1\r\n1\r\n1\r\n0\r\n\r\n\r\n, H2 =\r\n\r\n\r\n1\r\n−1\r\n0\r\n1\r\n\r\n .\r\nHere P is a particular solution while H1 and H2 are called homogeneous solutions.\r\nThe solution set forms a plane.\r\n2.5.3 Solutions and Linearity\r\nMotivated by example 31, we say that the matrix equation MX = V has\r\nsolution set {P + µ1H1 + µ2H2 | µ1, µ2 ∈ R}. Recall that matrices are linear\r\noperators. Thus\r\nM(P + µ1H1 + µ2H2) = MP + µ1MH1 + µ2MH2 = V ,\r\nfor any µ1, µ2 ∈ R. Choosing µ1 = µ2 = 0, we obtain\r\nMP = V .\r\nThis is why P is an example of a particular solution.\r\n64",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b1a19da4-79b5-4209-8d8a-cc8010db8d0e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bb6958208e40f58311ae12f8f892b331e79afd9171b64d3d183aeae9c938d27d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 327
      },
      {
        "segments": [
          {
            "segment_id": "2985d8b7-5774-49ab-ab25-68df6b766d5e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 65,
            "page_width": 612,
            "page_height": 792,
            "content": "2.5 Solution Sets for Systems of Linear Equations 65\r\nSetting µ1 = 1, µ2 = 0, and subtracting MP = V we obtain\r\nMH1 = 0 .\r\nLikewise, setting µ1 = 0, µ2 = 1, we obtain\r\nMH2 = 0 .\r\nHere H1 and H2 are examples of what are called homogeneous solutions to\r\nthe system. They do not solve the original equation MX = V , but instead\r\nits associated homogeneous equation MY = 0.\r\nWe have just learnt a fundamental lesson of linear algebra: the solution\r\nset to Ax = b, where A is a linear operator, consists of a particular solution\r\nplus homogeneous solutions.\r\n{Solutions} = {Particular solution + Homogeneous solutions}\r\nExample 32 Consider the matrix equation of example 31. It has solution set\r\nS =\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n\r\n+ µ1\r\n\r\n\r\n−1\r\n1\r\n1\r\n0\r\n\r\n\r\n+ µ2\r\n\r\n\r\n1\r\n−1\r\n0\r\n1\r\n\r\n\r\n| µ1, µ2 ∈ R\r\n\r\n\r\n\r\n.\r\nThen MP = V says that\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n\r\nis a solution to the original matrix equation, which is\r\ncertainly true, but this is not the only solution.\r\nMH1 = 0 says that\r\n\r\n\r\n−1\r\n1\r\n1\r\n0\r\n\r\n\r\nis a solution to the homogeneous equation.\r\nMH2 = 0 says that\r\n\r\n\r\n1\r\n−1\r\n0\r\n1\r\n\r\n\r\nis a solution to the homogeneous equation.\r\nNotice how adding any multiple of a homogeneous solution to the particular solution\r\nyields another particular solution.\r\n65",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2985d8b7-5774-49ab-ab25-68df6b766d5e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d4b3b7144f6fcc3652697e18d9531db6000a9aabda6f6e86fdaa4e7abc159645",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 260
      },
      {
        "segments": [
          {
            "segment_id": "68c55cb6-7704-49c9-a28e-54e069f1c060",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 66,
            "page_width": 612,
            "page_height": 792,
            "content": "66 Systems of Linear Equations\r\n2.6 Review Problems\r\nWebwork:\r\nReading problems 4 , 5\r\nSolution sets 20, 21, 22\r\nGeometry of solutions 23, 24, 25, 26\r\n1. Write down examples of augmented matrices corresponding to each\r\nof the five types of solution sets for systems of equations with three\r\nunknowns.\r\n2. Invent simple linear system that has multiple solutions. Use the stan\u0002dard approach for solving linear systems and a non-standard approach\r\nto obtain different descriptions of the solution set. Is the solution set\r\ndifferent with different approaches?\r\n3. Let\r\nM =\r\n\r\n\r\na\r\n1\r\n1 a\r\n1\r\n2\r\n· · · a\r\n1\r\nk\r\na\r\n2\r\n1 a\r\n2\r\n2\r\n· · · a\r\n2\r\nk\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\na\r\nr\r\n1 a\r\nr\r\n2\r\n· · · a\r\nr\r\nk\r\n\r\n\r\nand X =\r\n\r\n\r\nx\r\n1\r\nx\r\n2\r\n.\r\n.\r\n.\r\nx\r\nk\r\n\r\n\r\n.\r\nNote: x\r\n2 does not denote the square of x. Instead x1\r\n, x\r\n2\r\n, x\r\n3\r\n, etc...,\r\ndenote different variables; the superscript is an index. Although confus\u0002ing at first, this notation was invented by Albert Einstein who noticed\r\nthat quantities like a\r\n2\r\n1x\r\n1 +a2\r\n2x\r\n2\r\n· · ·+a\r\n2\r\nkx\r\nk =: Pk\r\nj=1 a\r\n2\r\njx\r\nj\r\n, can be written\r\nunambiguously as a\r\n2\r\njx\r\nj\r\n. This is called Einstein summation notation.\r\nThe most important thing to remember is that the index j is a dummy\r\nvariable, so that a\r\n2\r\njx\r\nj ≡ a2\r\ni x\r\ni\r\n; this is called “relabeling dummy indices”.\r\nWhen dealing with products of sums, you must remember to introduce\r\na new dummy for each term; i.e., aix\r\ni\r\nbiy\r\ni =\r\nP\r\ni\r\naix\r\ni\r\nbiy\r\ni does not equal\r\naix\r\ni\r\nbjy\r\nj =\r\nP\r\ni\r\naix\r\ni\r\n\u0001P\r\nj\r\nbjy\r\nj\r\n\u0001\r\n.\r\nUse Einstein summation notation to propose a rule for MX so that\r\nMX = 0 is equivalent to the linear system\r\na\r\n1\r\n1x\r\n1 +a1\r\n2x\r\n2\r\n· · · +a\r\n1\r\nkx\r\nk = 0\r\na\r\n2\r\n1x\r\n1 +a2\r\n2x\r\n2\r\n· · · +a\r\n2\r\nkx\r\nk = 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\na\r\nr\r\n1x\r\n1 +ar\r\n2x\r\n2\r\n· · · +a\r\nr\r\nkx\r\nk = 0\r\n66",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/68c55cb6-7704-49c9-a28e-54e069f1c060.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=83a275d0c70989deb00f78f4939ddd4447953f2aa7075de2b9e9d9f46f09415d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 400
      },
      {
        "segments": [
          {
            "segment_id": "137b4080-3a19-44de-b35e-adff57cedf2e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 67,
            "page_width": 612,
            "page_height": 792,
            "content": "2.6 Review Problems 67\r\nShow that your rule for multiplying a matrix by a vector obeys the\r\nlinearity property.\r\n4. The standard basis vector eiis a column vector with a one in the ith\r\nrow, and zeroes everywhere else. Using the rule for multiplying a matrix\r\ntimes a vector in problem 3, find a simple rule for multiplying Mei,\r\nwhere M is the general matrix defined there.\r\n5. If A is a non-linear operator, can the solutions to Ax = b still be written\r\nas “general solution=particular solution + homogeneous solutions”?\r\nProvide examples.\r\n6. Find a system of equations whose solution set is the walls of a 1×1×1\r\ncube. (Hint: You may need to restrict the ranges of the variables; could\r\nyour equations be linear?)\r\n67",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/137b4080-3a19-44de-b35e-adff57cedf2e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=196c35b435303cd08c3bd184025a3ab697af6e8e3587a55f339526d5549493d5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a4c377a0-f1f0-43af-95aa-cf83d769c155",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 68,
            "page_width": 612,
            "page_height": 792,
            "content": "68 Systems of Linear Equations\r\n68",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a4c377a0-f1f0-43af-95aa-cf83d769c155.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a39baf5279b82d5d6c59874c8379ad452572254590b2058d43e7a5788c152fde",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "75acd764-03d9-497b-84e3-e5f2f5bea5d7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 69,
            "page_width": 612,
            "page_height": 792,
            "content": "3\r\nThe Simplex Method\r\nIn Chapter 2, you learned how to handle systems of linear equations. However\r\nthere are many situations in which inequalities appear instead of equalities.\r\nIn such cases we are often interested in an optimal solution extremizing a\r\nparticular quantity of interest. Questions like this are a focus of fields such as\r\nmathematical optimization and operations research. For the case where the\r\nfunctions involved are linear, these problems go under the title linear pro\u0002gramming. Originally these ideas were driven by military applications, but\r\nby now are ubiquitous in science and industry. Gigantic computers are dedi\u0002cated to implementing linear programming methods such as George Dantzig’s\r\nsimplex algorithm–the topic of this chapter.\r\n3.1 Pablo’s Problem\r\nLet us begin with an example. Consider again Pablo the nutritionist of\r\nproblem 5, chapter 1. The Conundrum City school board has employed\r\nPablo to design their school lunch program. Unfortunately for Pablo, their\r\nrequirements are rather tricky:\r\nExample 33 (Pablo’s problem)\r\nThe Conundrum City school board is heavily influenced by the local fruit grower’s\r\nassociation. They have stipulated that children eat at least 7 oranges and 5 apples\r\nper week. Parents and teachers have agreed that eating at least 15 pieces of fruit per\r\nweek is a good thing, but school janitors argue that too much fruit makes a terrible\r\nmess, so that children should eat no more than 25 pieces of fruit per week.\r\n69",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/75acd764-03d9-497b-84e3-e5f2f5bea5d7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5effeee5b91cbef6d4a6967b64526652674096d91924424987fcc6bb25773468",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 365
      },
      {
        "segments": [
          {
            "segment_id": "b411033c-ab3c-4f3c-a3d6-ef05a6625d55",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 70,
            "page_width": 612,
            "page_height": 792,
            "content": "70 The Simplex Method\r\nFinally Pablo knows that oranges have twice as much sugar as apples and that apples\r\nhave 5 grams of sugar each. Too much sugar is unhealthy, so Pablo wants to keep the\r\nchildren’s sugar intake as low as possible. How many oranges and apples should Pablo\r\nsuggest that the school board put on the menu?\r\nThis is a rather gnarly word problem. Our first step is to restate it as\r\nmathematics, stripping away all the extraneous information:\r\nExample 34 (Pablo’s problem restated)\r\nLet x be the number of apples and y be the number of oranges. These must obey\r\nx ≥ 5 and y ≥ 7 ,\r\nto fulfill the school board’s politically motivated wishes. The teacher’s and parent’s\r\nfruit requirement means that\r\nx + y ≥ 15 ,\r\nbut to keep the canteen tidy\r\nx + y ≤ 25 .\r\nNow let\r\ns = 5x + 10y .\r\nThis linear function of (x, y) represents the grams of sugar in x apples and y oranges.\r\nThe problem is asking us to minimize s subject to the four linear inequalities listed\r\nabove.\r\n70",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b411033c-ab3c-4f3c-a3d6-ef05a6625d55.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8d1283f990298bc21dbdbad179873ce27ee6536c8502280b437051eb8e166db2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "153691ed-1f86-4728-a41e-09212e062cdf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 71,
            "page_width": 612,
            "page_height": 792,
            "content": "3.2 Graphical Solutions 71\r\n3.2 Graphical Solutions\r\nBefore giving a more general algorithm for handling this problem and prob\u0002lems like it, we note that when the number of variables is small (preferably 2),\r\na graphical technique can be used.\r\nInequalities, such as the four given in Pablo’s problem, are often called\r\nconstraints, and values of the variables that satisfy these constraints comprise\r\nthe so-called feasible region. Since there are only two variables, this is easy\r\nto plot:\r\nExample 35 (Constraints and feasible region) Pablo’s constraints are\r\nx ≥ 5\r\ny ≥ 7\r\n15 ≤ x + y ≤ 25 .\r\nPlotted in the (x, y) plane, this gives:\r\nYou might be able to see the solution to Pablo’s problem already. Oranges\r\nare very sugary, so they should be kept low, thus y = 7. Also, the less fruit\r\nthe better, so the answer had better lie on the line x + y = 15. Hence,\r\nthe answer must be at the vertex (8, 7). Actually this is a general feature\r\n71",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/153691ed-1f86-4728-a41e-09212e062cdf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37355c1575b3fb40012ec4d951feeb8cd490e7c60aed3abaa2a2720cd789a8d1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 358
      },
      {
        "segments": [
          {
            "segment_id": "8cdc11c2-9433-40ec-ab0c-11557e4ea463",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 72,
            "page_width": 612,
            "page_height": 792,
            "content": "72 The Simplex Method\r\nof linear programming problems, the optimal answer must lie at a vertex of\r\nthe feasible region. Rather than prove this, lets look at a plot of the linear\r\nfunction s(x, y) = 5x + 10y.\r\nExample 36 (The sugar function)\r\nPlotting the sugar function requires three dimensions:\r\nThe plot of a linear function of two variables is a plane through the origin.\r\nRestricting the variables to the feasible region gives some lamina in 3-space.\r\nSince the function we want to optimize is linear (and assumedly non-zero), if\r\nwe pick a point in the middle of this lamina, we can always increase/decrease\r\nthe function by moving out to an edge and, in turn, along that edge to a\r\ncorner. Applying this to the above picture, we see that Pablo’s best option\r\nis 110 grams of sugar a week, in the form of 8 apples and 7 oranges.\r\nIt is worthwhile to contrast the optimization problem for a linear function\r\nwith the non-linear case you may have seen in calculus courses:\r\n72",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8cdc11c2-9433-40ec-ab0c-11557e4ea463.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c7a51fe4b003112138bfcb259e705d17229041766d7583ca71cf60839d85fe50",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e717545e-764b-4707-a194-2d308b1f998a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 73,
            "page_width": 612,
            "page_height": 792,
            "content": "3.3 Dantzig’s Algorithm 73\r\nHere we have plotted the curve f(x) = d in the case where the function f is\r\nlinear and non-linear. To optimize f in the interval [a, b], for the linear case\r\nwe just need to compute and compare the values f(a) and f(b). In contrast,\r\nfor non-linear functions it is necessary to also compute the derivative df/dx\r\nto study whether there are extrema inside the interval.\r\n3.3 Dantzig’s Algorithm\r\nIn simple situations a graphical method might suffice, but in many applica\u0002tions there may be thousands or even millions of variables and constraints.\r\nClearly an algorithm that can be implemented on a computer is needed. The\r\nsimplex algorithm (usually attributed to George Dantzig) provides exactly\r\nthat. It begins with a standard problem:\r\nProblem 37 Maximize f(x1, . . . , xn) where f is linear, xi ≥ 0 (i = 1, . . . , n) sub\u0002ject to\r\nMx = v , x :=\r\n\r\n\r\nx1\r\n.\r\n.\r\n.\r\nxn\r\n\r\n ,\r\nwhere the m × n matrix M and m × 1 column vector v are given.\r\nThis is solved by arranging the information in an augmented matrix and\r\nthen applying EROs. To see how this works lets try an example.\r\n73",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e717545e-764b-4707-a194-2d308b1f998a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b3609dc92394c2ffbbed2abd0cc5cec380146be77204ed203bf6daa4cefb7c31",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 383
      },
      {
        "segments": [
          {
            "segment_id": "3044f0f5-6c21-4c99-a6b0-655914595e1d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 74,
            "page_width": 612,
            "page_height": 792,
            "content": "74 The Simplex Method\r\nExample 38 Maximize f(x, y, z, w) = 3x − 3y − z + 4w subject to constraints\r\nc1 := x + y + z + w = 5\r\nc2 := x + 2y + 3z + 2w = 6 ,\r\nwhere x ≥ 0, y ≥ 0, z ≥ 0 and w ≥ 0.\r\nThe key observation is this: Suppose we are trying to maximize f(x1, . . . , xn)\r\nsubject to a constraint c(x1, . . . , xn) = k for some constant k (c and k would\r\nbe the entries of Mx and v, respectively, in the above). Then we can also\r\ntry to maximize\r\nf(x1, . . . , xn) + αc(x1, . . . , xn)\r\nbecause this is only a constant shift f → f + αk. Choosing α carefully can\r\nlead to a simple form for the function we are extremizing.\r\nExample 39 (Setting up an augmented matrix):\r\nSince we are interested in the optimum value of f, we treat it as an additional\r\nvariable and add one further equation\r\n−3x + 3y + z − 4w + f = 0 .\r\nWe arrange this equation and the two constraints in an augmented matrix\r\n\r\n\r\n1 1 1 1 0 5\r\n1 2 3 2 0 6\r\n−3 3 1 −4 1 0\r\n\r\n\r\n⇔\r\n\r\n\r\n\r\nc1 = 5\r\nc2 = 6\r\nf = 3x − 3y − z + 4w\r\n.\r\nKeep in mind that the first four columns correspond to the positive variables (x, y, z, w)\r\nand that the last row has the information of the function f. The general case is depicted\r\nin figure 3.1.\r\nNow the system is written as an augmented matrix where the last row\r\nencodes the objective function and the other rows the constraints. Clearly we\r\ncan perform row operations on the constraint rows since this will not change\r\nthe solutions to the constraints. Moreover, we can add any amount of the\r\nconstraint rows to the last row, since this just amounts to adding a constant\r\nto the function we want to extremize.\r\n74",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3044f0f5-6c21-4c99-a6b0-655914595e1d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=900ea095141211d9c36708356b7e42c95888b617dae6ace17a5c2cbacd5714bf",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 359
      },
      {
        "segments": [
          {
            "segment_id": "c4337b8c-981b-49a4-bc2b-c31932841e9a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 75,
            "page_width": 612,
            "page_height": 792,
            "content": "3.3 Dantzig’s Algorithm 75\r\nvariables (incl. slack and artificial)\r\nz }| {\r\nobjective\r\nz}|{\r\n\r\n\r\n\r\n\r\n← constraint equations\r\n← objective equation\r\n↑\r\nobjective value\r\nFigure 3.1: Arranging the information of an optimization problem in an\r\naugmented matrix.\r\nExample 40 (Performing EROs)\r\nWe scan the last row, and notice the (most negative) coefficient −4. Na¨ıvely you\r\nmight think that this is good because this multiplies the positive variable w and only\r\nhelps the objective function f = 4w + · · · . However, what this actually means is that\r\nthe variable w will large but determined by the constraints. Therefore we want to\r\nremove it from the objective function. We can zero out this entry by performing a\r\nrow operation. For that, either of first two rows could be used. To decide which, we\r\nremember that the we still have to solve solve the constraints for variables that are\r\npositive. Hence we should try to keep the first two entries in the last column positive.\r\nHence we choose the row which will add the smallest constant to f when we zero out\r\nthe −4: Look at the last column (where the values of the constraints are stored). We\r\nsee that adding four times the first row to the last row would zero out the −4 entry\r\nbut add 20 to f, while adding two times the second row to the last row would also\r\nzero out the −4 but only add 12 to f. (You can follow this by watching what happens\r\nto the last entry in the last row.) So we perform the latter row operation and obtain\r\nthe following:\r\n\r\n\r\n1 1 1 1 0 5\r\n1 2 3 2 0 6\r\n−1 7 7 0 1 12\r\n\r\n\r\nc1 = 5\r\nc2 = 6\r\nf + 2c2 = 12 + x − 7y − 7z .\r\nWe do not want to undo any of our good work when we perform further row operations,\r\nso now we use the second row to zero out all other entries in the fourth column. This\r\nis achieved by subtracting half the second row from the first:\r\n\r\n\r\n1\r\n2\r\n0 −\r\n1\r\n2\r\n0 0 2\r\n1 2 3 2 0 6\r\n−1 7 7 0 1 12\r\n\r\n\r\nc1 −\r\n1\r\n2\r\nc2 = 2\r\nc2 = 6\r\nf + 2c2 = 12 + x − 7y − 7z .\r\n75",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c4337b8c-981b-49a4-bc2b-c31932841e9a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0d0ca22d74081ff4532e8557f647a06f213f9ed77819a54b6dc001bafe5563e6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 408
      },
      {
        "segments": [
          {
            "segment_id": "53c6b2c0-e022-421a-a976-03e13079219c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 76,
            "page_width": 612,
            "page_height": 792,
            "content": "76 The Simplex Method\r\nPrecisely because we chose the second row to perform our row operations, all entries\r\nin the last column remain positive. This allows us to continue the algorithm.\r\nWe now repeat the above procedure: There is a −1 in the first column of the last\r\nrow. We want to zero it out while adding as little to f as possible. This is achieved\r\nby adding twice the first row to the last row:\r\n\r\n\r\n1\r\n2\r\n0 −\r\n1\r\n2\r\n0 0 2\r\n1 2 3 2 0 6\r\n0 7 6 0 1 16\r\n\r\n\r\nc1 −\r\n1\r\n2\r\nc2 = 2\r\nc2 = 6\r\nf + 2c2 + 2(c1 −\r\n1\r\n2\r\nc2) = 16 − 7y − 6z .\r\nThe Dantzig algorithm terminates if all the coefficients in the last row (save perhaps\r\nfor the last entry which encodes the value of the objective) are positive. To see why\r\nwe are done, lets write out what our row operations have done in terms of the function\r\nf and the constraints (c1, c2). First we have\r\nf + 2c2 + 2(c1 −\r\n1\r\n2\r\nc2) = 16 − 7y − 6z\r\nwith both y and z positive. Hence to maximize f we should choose y = 0 = z. In\r\nwhich case we obtain our optimum value\r\nf = 16 .\r\nFinally, we check that the constraints can be solved with y = 0 = z and positive\r\n(x, w). Indeed, they can by taking x = 2 = w.\r\n3.4 Pablo Meets Dantzig\r\nOftentimes, it takes a few tricks to bring a given problem into the standard\r\nform of example 38. In Pablo’s case, this goes as follows.\r\nExample 41 Pablo’s variables x and y do not obey xi ≥ 0. Therefore define new\r\nvariables\r\nx1 = x − 5 , x2 = y − 7 .\r\nThe conditions on the fruit 15 ≤ x + y ≤ 25 are inequalities,\r\nx1 + x2 ≥ 3 , x1 + x2 ≤ 13 ,\r\nso are not of the form Mx = v. To achieve this we introduce two new positive\r\nvariables x3 ≥ 0, x4 ≥ 4 and write\r\nc1 := x1 + x2 − x3 = 3 , c2 := x1 + x2 + x4 = 13 .\r\n76",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/53c6b2c0-e022-421a-a976-03e13079219c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=53a68135de021665d9a92bb54b8844cd6d2369dbc72dc98366b3b67a9a651272",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 388
      },
      {
        "segments": [
          {
            "segment_id": "ec213222-01bf-4142-93b7-0b3a4ef26d25",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 77,
            "page_width": 612,
            "page_height": 792,
            "content": "3.4 Pablo Meets Dantzig 77\r\nThese are called slack variables because they take up the “slack” required to convert\r\ninequality to equality. This pair of equations can now be written as Mx = v,\r\n\u0012\r\n1 1 −1 0\r\n1 1 0 1\u0013\r\n\r\n\r\nx1\r\nx2\r\nx3\r\nx4\r\n\r\n =\r\n\u0012\r\n3\r\n13\u0013\r\n.\r\nFinally, Pablo wants to minimize sugar s = 5x + 10y, but the standard problem\r\nmaximizes f. Thus the so-called objective function f = −s + 95 = −5x1 − 10x2.\r\n(Notice that it makes no difference whether we maximize −s or −s + 95, we choose\r\nthe latter since it is a linear function of (x1, x2).) Now we can build an augmented\r\nmatrix whose last row reflects the objective function equation 5x1 + 10x2 + f = 0:\r\n\r\n\r\n1 1 −1 0 0 3\r\n1 1 0 1 0 13\r\n5 10 0 0 1 0\r\n\r\n .\r\nHere it seems that the simplex algorithm already terminates because the last row only\r\nhas positive coefficients, so that setting x1 = 0 = x2 would be optimal. However, this\r\ndoes not solve the constraints (for positive values of the slack variables x3 and x4).\r\nThus one more (very dirty) trick is needed. We add two more, positive, (so-called)\r\nartificial variables x5 and x6 to the problem which we use to shift each constraint\r\nc1 → c1 − x5 , c2 → c2 − x6 .\r\nThe idea being that for large positive α, the modified objective function\r\nf − αx5 − αx6\r\nis only maximal when the artificial variables vanish so the underlying problem is un\u0002changed. Lets take α = 10 (our solution will not depend on this choice) so that our\r\naugmented matrix reads\r\n\r\n\r\n1 1 −1 0 1 0 0 3\r\n1 1 0 1 0 1 0 13\r\n5 10 0 0 10 10 1 0\r\n\r\n\r\nR0\r\n3=R3−10R1−10R2\r\n∼\r\n\r\n\r\n1 1 −1 0 1 0 0 3\r\n1 1 0 1 0 1 0 13\r\n−15 −10 10 −10 0 0 1 −160\r\n\r\n .\r\nHere we performed one row operation to zero out the coefficients of the artificial\r\nvariables. Now we are ready to run the simplex algorithm exactly as in section 3.3.\r\n77",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ec213222-01bf-4142-93b7-0b3a4ef26d25.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0753ef173bc1e8d0417e57285d6892cb29bf1f9c549ce931a73af025c3d02edf",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 385
      },
      {
        "segments": [
          {
            "segment_id": "9bde6508-f256-4fa4-bb2e-01553a4f71a4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 78,
            "page_width": 612,
            "page_height": 792,
            "content": "78 The Simplex Method\r\nThe first row operation uses the 1 in the top of the first column to zero out the most\r\nnegative entry in the last row:\r\n\r\n\r\n1 1 −1 0 1 0 0 3\r\n1 1 0 1 0 1 0 13\r\n0 5 −5 −10 15 0 1 −115\r\n\r\n\r\nR0\r\n2=R2−R1\r\n∼\r\n\r\n\r\n1 1 1 0 1 0 0 3\r\n0 0 1 1 −1 1 0 10\r\n0 5 −5 −10 15 0 1 −115\r\n\r\n\r\nR0\r\n3=R3+10R2\r\n∼\r\n\r\n\r\n1 1 1 0 1 0 0 3\r\n0 0 1 1 −1 1 0 10\r\n0 5 5 0 5 10 1 −15\r\n\r\n .\r\nNow the variables (x2, x3, x5, x6) have zero coefficients so must be set to zero to\r\nmaximize f. The optimum value is f = −15 so s = −f − 95 = 110 exactly as before.\r\nFinally, to solve the constraints x1 = 3 and x4 = 10 so that x = 8 and y = 7 which\r\nalso agrees with our previous result.\r\nClearly, performed by hand, the simplex algorithm was slow and complex\r\nfor Pablo’s problem. However, the key point is that it is an algorithm that\r\ncan be fed to a computer. For problems with many variables, this method is\r\nmuch faster than simply checking all vertices as we did in section 3.2.\r\n3.5 Review Problems\r\n78",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9bde6508-f256-4fa4-bb2e-01553a4f71a4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ddc1c05c688b155fe4d5da4a3c3ae6d3d4dab8556620c3bfb80739f8dec197ed",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d3e02301-cb65-4a4d-a191-c36893c4a4d9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 79,
            "page_width": 612,
            "page_height": 792,
            "content": "4\r\nVectors in Space, n-Vectors\r\nTo continue our linear algebra journey, we must discuss n-vectors with an\r\narbitrarily large number of components. The simplest way to think about\r\nthese is as ordered lists of numbers,\r\na =\r\n\r\n\r\na\r\n1\r\n.\r\n.\r\n.\r\na\r\nn\r\n\r\n .\r\nDo not be confused by our use of a superscript to label components of a vector.\r\nHere a\r\n2 denotes the second component of the vector a, rather than the number\r\na squared!\r\nWe emphasize that order matters:\r\nExample 42 (Order of Components Matters)\r\n\r\n\r\n7\r\n4\r\n2\r\n5\r\n\r\n\r\n6=\r\n\r\n\r\n7\r\n2\r\n4\r\n5\r\n\r\n .\r\nThe set of all n-vectors is denoted R\r\nn\r\n. As an equation\r\nR\r\nn\r\n:=\r\n\r\n\r\n\r\n\r\n\r\na\r\n1\r\n.\r\n.\r\n.\r\na\r\nn\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\na\r\n1\r\n, . . . , an ∈ R\r\n\r\n\r\n\r\n.\r\n79",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d3e02301-cb65-4a4d-a191-c36893c4a4d9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0b9b6670e60fde143cf0c3d8495b54356dfb847c39a31ce1cd9bcfd08d6b9bac",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 397
      },
      {
        "segments": [
          {
            "segment_id": "77f080a5-df62-48cc-9ad3-b08cf3d6c4d6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 80,
            "page_width": 612,
            "page_height": 792,
            "content": "80 Vectors in Space, n-Vectors\r\n4.1 Addition and Scalar Multiplication in R\r\nn\r\nA simple but important property of n-vectors is that we can add two n-vectors\r\nteogether and multiply one n-vectors by a scalar:\r\nDefinition Given two n-vectors a and b whose components are given by\r\na =\r\n\r\n\r\na\r\n1\r\n.\r\n.\r\n.\r\na\r\nn\r\n\r\n\r\nand b =\r\n\r\n\r\nb\r\n1\r\n.\r\n.\r\n.\r\nb\r\nn\r\n\r\n\r\ntheir sum is\r\na + b :=\r\n\r\n\r\na\r\n1 + b1\r\n.\r\n.\r\n.\r\na\r\nn + bn\r\n\r\n .\r\nGiven a scalar λ, the scalar multiple\r\nλa :=\r\n\r\n\r\nλa1\r\n.\r\n.\r\n.\r\nλan\r\n\r\n .\r\nExample 43 Let\r\na =\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\nand b =\r\n\r\n\r\n4\r\n3\r\n2\r\n1\r\n\r\n .\r\nThen, for example,\r\na + b =\r\n\r\n\r\n5\r\n5\r\n5\r\n5\r\n\r\n\r\nand 3a − 2b =\r\n\r\n\r\n−5\r\n0\r\n5\r\n10\r\n\r\n .\r\nA special vector is the zero vector . All of its components are zero:\r\n0 =\r\n\r\n\r\n0\r\n.\r\n.\r\n.\r\n0\r\n\r\n .\r\nIn Euclidean geometry—the study of R\r\nn with lengths and angles defined\r\nas in section 4.3 —n-vectors are used to label points P and the zero vector\r\nlabels the origin O. In this sense, the zero vector is the only one with zero\r\nmagnitude, and the only one which points in no particular direction.\r\n80",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/77f080a5-df62-48cc-9ad3-b08cf3d6c4d6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=96f97fd75c2331e752f850a5705de569789b62719c73f20f3b437744ace83ae8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "45f8c804-bc05-46d3-b923-2c04adc33165",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 81,
            "page_width": 612,
            "page_height": 792,
            "content": "4.2 Hyperplanes 81\r\n4.2 Hyperplanes\r\nVectors in R\r\nn are impossible to visualize unless n is 1,2, or 3. However,\r\nfamiliar objects like lines and planes still make sense for any value of n: The\r\nline L along the direction defined by a vector v and through a point P labeled\r\nby a vector u can be written as\r\nL = {u + tv | t ∈ R} .\r\nSometimes, since we know that a point P corresponds to a vector, we will\r\nbe lazy and just write L = {P + tv | t ∈ R}.\r\nExample 44\r\n\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\n+ t\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nt ∈ R\r\n\r\n\r\n\r\ndescribes a line in R\r\n4 parallel to the x1-axis.\r\nGiven two non-zero vectors u, v, they will usually determine a plane,\r\nunless both vectors are in the same line, in which case, one of the vectors\r\nis a scalar multiple of the other. The sum of u and v corresponds to laying\r\nthe two vectors head-to-tail and drawing the connecting vector. If u and v\r\ndetermine a plane, then their sum lies in the plane determined by u and v.\r\n81",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/45f8c804-bc05-46d3-b923-2c04adc33165.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=15d743e06fe3f9d6056910d1255f3da1a6a0699598be078cee193f86c3c82e63",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 467
      },
      {
        "segments": [
          {
            "segment_id": "b376e598-93e3-4ab8-aa60-dc1ee4403551",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 82,
            "page_width": 612,
            "page_height": 792,
            "content": "82 Vectors in Space, n-Vectors\r\nThe plane determined by two vectors u and v can be written as\r\n{P + su + tv | s, t ∈ R} .\r\nExample 45 (A plane in a higher dimensional space)\r\n\r\n\r\n\r\n\r\n\r\n3\r\n1\r\n4\r\n1\r\n5\r\n9\r\n\r\n\r\n+ s\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ t\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ns, t ∈ R\r\n\r\n\r\n\r\ndescribes a plane in 6-dimensional space parallel to the xy-plane.\r\nParametric Notation\r\nWe can generalize the notion of a plane with the following recursive def\u0002inition. (That is, infinitely many things are defined in the following line.)\r\nDefinition A set of k + 1 vectors P, v1, . . . , vk in R\r\nn with k ≤ n determines\r\na k-dimensional hyperplane,\r\n(\r\nP +\r\nX\r\nk\r\ni=1\r\nλivi| λi ∈ R\r\n)\r\n82",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b376e598-93e3-4ab8-aa60-dc1ee4403551.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=32c643365d3d445438064517edca74a9d74d795efcb7be102c1e8c21dcb1576f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 168
      },
      {
        "segments": [
          {
            "segment_id": "db3277c5-d2f6-4f24-9a75-5ad7cc9e0e9d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 83,
            "page_width": 612,
            "page_height": 792,
            "content": "4.2 Hyperplanes 83\r\nunless any of the vectors vjlives in the (k − 1)-dimensional hyperplane de\u0002termined by the other k − 1 vectors\r\n(\r\n0 +X\r\nk\r\ni6=j\r\nλivi| λi ∈ R\r\n)\r\n.\r\nExample 46 (3+1 vectors that do not specify a 3-dimensional hyperplane)\r\nS :=\r\n\r\n\r\n\r\n\r\n\r\n3\r\n1\r\n4\r\n1\r\n5\r\n9\r\n\r\n\r\n+ s\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ t\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ u\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ns, t, u ∈ R\r\n\r\n\r\n\r\nis not a 3-dimensional hyperplane because\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n= 1\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ 1\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n∈\r\n\r\n\r\n\r\ns\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ t\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ns, t ∈ R\r\n\r\n\r\n\r\n.\r\nIn fact, the set could be rewritten as\r\nS =\r\n\r\n\r\n\r\n\r\n\r\n3\r\n1\r\n4\r\n1\r\n5\r\n9\r\n\r\n\r\n+ (s + u)\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ (t + u)\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ns, t, u ∈ R\r\n\r\n\r\n\r\n=\r\n\r\n\r\n\r\n\r\n\r\n3\r\n1\r\n4\r\n1\r\n5\r\n9\r\n\r\n\r\n+ a\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ b\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\na, b ∈ R\r\n\r\n\r\n\r\nand so is actually the same 2-dimensional hyperplane in R\r\n6\r\nas in example 45.\r\n83",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/db3277c5-d2f6-4f24-9a75-5ad7cc9e0e9d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ddfc43c48dc62045ce247bac3c849c60fd00a46c76a9759de3154612802a2f34",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 347
      },
      {
        "segments": [
          {
            "segment_id": "a393261b-428a-4bfa-95d0-3a0cf6958a0f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 84,
            "page_width": 612,
            "page_height": 792,
            "content": "84 Vectors in Space, n-Vectors\r\nYou might sometimes encounter the word “hyperplane” without the qual\u0002ifier “k-dimensional. When the dimension k is not specified, one usually as\u0002sumes that k = n − 1 for a hyperplane inside R\r\nn\r\n. This is the kind of object\r\nthat is specified by one algebraic equation in n variables.\r\nExample 47 (Specifying a plane with one linear algebraic equation.)\r\nThe solution set to\r\nx1 + x2 + x3 + x4 + x5 = 1 ⇔\r\n\r\n\r\nx1\r\nx2\r\nx3\r\nx4\r\nx5\r\n\r\n\r\n=\r\n\r\n\r\n1 − x2 − x3 − x4 − x5\r\nx2\r\nx3\r\nx4\r\nx5\r\n\r\n\r\nis\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n0\r\n\r\n\r\n+ s2\r\n\r\n\r\n−1\r\n1\r\n0\r\n0\r\n0\r\n\r\n\r\n+ s3\r\n\r\n\r\n−1\r\n0\r\n1\r\n0\r\n0\r\n\r\n\r\n+ s4\r\n\r\n\r\n−1\r\n0\r\n0\r\n1\r\n0\r\n\r\n\r\n+ s5\r\n\r\n\r\n−1\r\n1\r\n0\r\n0\r\n1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ns2, s3, s4, s5 ∈ R\r\n\r\n\r\n\r\n,\r\na 4-dimensional hyperplane in R\r\n5\r\n.\r\n4.3 Directions and Magnitudes\r\nConsider the Euclidean length of a vector:\r\nkvk := p\r\n(v\r\n1\r\n)\r\n2 + (v2\r\n)\r\n2 + · · ·(vn)2 =\r\nvuutXn\r\ni=1\r\n(v\r\ni\r\n)\r\n2\r\n.\r\nUsing the Law of Cosines, we can then figure out the angle between two\r\nvectors. Given two vectors v and u that span a plane in R\r\nn\r\n, we can then\r\nconnect the ends of v and u with the vector v − u.\r\n84",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a393261b-428a-4bfa-95d0-3a0cf6958a0f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6840e8218fe960304cb76a61e3db78b139034c31cb22d3f1d679e5d77c1a3a25",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b78ae081-abd4-41ec-b7a3-cf0a9410f841",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 85,
            "page_width": 612,
            "page_height": 792,
            "content": "4.3 Directions and Magnitudes 85\r\nThen the Law of Cosines states that:\r\nkv − uk\r\n2 = kuk2 + kvk2 − 2kuk kvk cos θ\r\nThen isolate cos θ:\r\nkv − uk\r\n2 − kuk2 − kvk2 = (v1 − u1\r\n)\r\n2 + · · · + (vn − un\r\n)\r\n2\r\n−\r\n\r\n(u\r\n1\r\n)\r\n2 + · · · + (un\r\n)\r\n2\r\n\u0001\r\n−\r\n\r\n(v\r\n1\r\n)\r\n2 + · · · + (vn\r\n)\r\n2\r\n\u0001\r\n= −2u\r\n1\r\nv\r\n1 − · · · − 2un\r\nv\r\nn\r\nThus,\r\nkuk kvk cos θ = u\r\n1\r\nv\r\n1 + · · · + un\r\nv\r\nn\r\n.\r\nNote that in the above discussion, we have assumed (correctly) that Eu\u0002clidean lengths in R\r\nn give the usual notion of lengths of vectors for any plane\r\nin R\r\nn\r\n. This now motivates the definition of the dot product.\r\nDefinition The dot product of u =\r\n\r\n\r\nu\r\n1\r\n.\r\n.\r\n.\r\nu\r\nn\r\n\r\n\r\nand v =\r\n\r\n\r\nv\r\n1\r\n.\r\n.\r\n.\r\nv\r\nn\r\n\r\n\r\nis\r\nu v := u\r\n1\r\nv\r\n1 + · · · + un\r\nv\r\nn\r\n.\r\n85",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b78ae081-abd4-41ec-b7a3-cf0a9410f841.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0f0813e50a0e220d28c978aaf132182bd8980963822151bbacfba20741d07270",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 475
      },
      {
        "segments": [
          {
            "segment_id": "962fc407-866a-420a-b276-48aa1ad6e724",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 86,
            "page_width": 612,
            "page_height": 792,
            "content": "86 Vectors in Space, n-Vectors\r\nExample 48 of the dot product of two vectors form R\r\n101\r\n.\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n.\r\n.\r\n.\r\n101\r\n\r\n\r\n·\r\n\r\n\r\n1\r\n0\r\n1\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n= 10, 201.\r\nDefinition The length (or norm or magnitude) of an n-vector v is\r\nkvk := √\r\nv v .\r\nExample 49 of the norm of a vector from R\r\n101\r\n.\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n.\r\n.\r\n.\r\n101\r\n\r\n\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n=\r\nvuutX\r\n101\r\ni=1\r\ni\r\n2 =\r\np\r\n37, 961.\r\nDefinition The angle θ between two vectors is determined by the formula\r\nu v = kukkvk cos θ .\r\nExample 50 of an angle between two vectors form R\r\n101\r\n.\r\nThe angle between\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n.\r\n.\r\n.\r\n101\r\n\r\n\r\nand\r\n\r\n\r\n1\r\n0\r\n1\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\nis arccos \u0010\r\n10,201\r\n√\r\n37,916√51\u0011\r\n.\r\nDefinition Two vectors are orthogonal ( or perpendicular) if their dot\r\nproduct is zero.\r\nExample 51 of vectors from R\r\n101 that are orthogonal to eachother.\r\n\r\n\r\n1\r\n1\r\n1\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n·\r\n\r\n\r\n1\r\n−1\r\n1\r\n.\r\n.\r\n.\r\n−1\r\n\r\n\r\n= 0.\r\n86",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/962fc407-866a-420a-b276-48aa1ad6e724.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47ddd034d981260553efff4bc1284e3519e961dd5743e09e700e5d41537d1f26",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 216
      },
      {
        "segments": [
          {
            "segment_id": "8ca57a7c-ba22-4e13-8220-18e9670398c5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 87,
            "page_width": 612,
            "page_height": 792,
            "content": "4.3 Directions and Magnitudes 87\r\nNotice that the zero vector 0n from R\r\nn\r\nis orthogonal to every vector in\r\nR\r\nn\r\n; 0n · v = 0 for all v ∈ R\r\nn\r\n.\r\nThe dot product has some important properties; it is\r\n1. symmetric:\r\nu v = v u ,\r\n2. Distributive:\r\nu (v + w) = u v + u w ,\r\n3. Bilinear (which is to say, linear in both u and v):\r\nu (cv + dw) = c u v + d u w ,\r\nand\r\n(cu + dw) v = c u v + d w v .\r\n4. Positive Definite:\r\nu u ≥ 0 ,\r\nand u u = 0 only when u itself is the 0-vector.\r\nThere are, in fact, many different useful ways to define lengths of vectors.\r\nNotice in the definition above that we first defined the dot product, and then\r\ndefined everything else in terms of the dot product. So if we change our idea\r\nof the dot product, we change our notion of length and angle as well. The\r\ndot product determines the Euclidean length and angle between two vectors.\r\nOther definitions of length and angle arise from inner products, which\r\nhave all of the properties listed above (except that in some contexts the\r\npositive definite requirement is relaxed). Instead of writing for other inner\r\nproducts, we usually write hu, vi to avoid confusion.\r\nReading homework: problem 1\r\nExample 52 Consider a four-dimensional space, with a special direction which we will\r\ncall “time”. The Lorentzian inner product on R\r\n4\r\nis given by hu, vi = u\r\n1v1 + u2v2 +\r\nu\r\n3v3 − u4v4\r\n. This is of central importance in Einstein’s theory of special relativity.\r\nNote, in particular, that it is not positive definite. As a result, the “squared-length”\r\nof a vector with coordinates x, y, z and t is kvk\r\n2 = x2 + y2 + z2 − t2\r\n. Notice that\r\nit is possible for kvk\r\n2 ≤ 0 even with non-vanishing v! The physical interpretation of\r\nthis inner product depends on the sign of the inner product; two space time points\r\nX1 := (x1, y1, z1, t1), X2 := (x2, y2, z2, t2) are\r\n87",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8ca57a7c-ba22-4e13-8220-18e9670398c5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c9fad6210b63be597591f1ec1a0759710e239c770527fa1abc7918626b9bb379",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 372
      },
      {
        "segments": [
          {
            "segment_id": "7dd24f04-b5e7-4040-a60a-4c9be22e1d99",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 88,
            "page_width": 612,
            "page_height": 792,
            "content": "88 Vectors in Space, n-Vectors\r\n• separated by a distance phX1, X2i if hX1, X2i ≥ 0.\r\n• separated by a time p−hX1, X2i if hX1, X2i ≤ 0.\r\nIn particular, the difference in time coordinates t2 − t1 is not the time between the\r\ntwo points! (Compare this to using polar coordinates wherein the distance between\r\ntwo points (r, θ1) and (r, θ2) is not θ2 − θ1; coordinate differences are not necessarily\r\ndistances.)\r\nTheorem 4.3.1 (Cauchy-Schwarz Inequality). For any non-zero vectors u\r\nand v with an inner-product h , i\r\n|hu, vi|\r\nkuk kvk\r\n≤ 1.\r\nThe easiest proof would use the definition of the angle between two vectors\r\nand the fact that cos θ ≤ 1. However, strictly speaking speaking we did\r\nnot check our assumption that we could apply the Law of Cosines to the\r\nEuclidean length in R\r\nn\r\n. There is, however a simple algebraic proof.\r\nProof. Let α be any real number and consider the following positive, quadratic\r\npolynomial in α\r\n0 ≤ hu + αv, u + αvi = hu, ui + 2αhu, vi + α\r\n2\r\nhv, vi.\r\nSince any quadratic aα2+2bα+c takes its minimal value c−\r\nb\r\n2\r\na when α = −\r\nb\r\n2a\r\n,\r\nand the inequality should hold for even this minimum value of the polynomial\r\n0 ≤ hu, ui − hu, vi\r\n2\r\nhv, vi\r\n⇔\r\n|hu, vi|\r\nkuk kvk\r\n≤ 1.\r\nTheorem 4.3.2 (Triangle Inequality). For any u, v ∈ R\r\nn\r\nku + vk ≤ kuk + kvk.\r\nProof.\r\nku + vk\r\n2 = (u + v) (u + v)\r\n= u u + 2u v + v v\r\n= kuk\r\n2 + kvk2 + 2 kuk kvk cos θ\r\n= (kuk + kvk)\r\n2 + 2 kuk kvk(cos θ − 1)\r\n≤ (kuk + kvk)\r\n2\r\n.\r\n88",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7dd24f04-b5e7-4040-a60a-4c9be22e1d99.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f9aae49bae7a1ea01d1716563ab172ff0f991d1d242c1b1400d21743ce63ae6c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "551f7ccc-b0c3-48ec-82c4-77e845c3a0f5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 89,
            "page_width": 612,
            "page_height": 792,
            "content": "4.3 Directions and Magnitudes 89\r\nThat is, the square of the left-hand side of the triangle inequality is ≤ the\r\nsquare of the right-hand side. Since both the things being squared are posi\u0002tive, the inequality holds without the square;\r\nku + vk ≤ kuk + kvk\r\nThe triangle inequality is also “self-evident” when examining a sketch of\r\nu, v and u + v.\r\nExample 53 Let\r\na =\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\nand b =\r\n\r\n\r\n4\r\n3\r\n2\r\n1\r\n\r\n ,\r\nso that\r\na a = b b = 1 + 22 + 32 + 42 = 30\r\n⇒ kak =\r\n√\r\n30 = kbk and kak + kbk\r\n\u00012 = (2√\r\n30)2 = 120 .\r\nSince\r\na + b =\r\n\r\n\r\n5\r\n5\r\n5\r\n5\r\n\r\n ,\r\nwe have\r\nka + bk\r\n2 = 52 + 52 + 52 + 52 = 100 < 120 = \r\nkak + kbk\r\n\u00012\r\nas predicted by the triangle inequality.\r\nNotice also that a b = 1.4 + 2.3 + 3.2 + 4.1 = 20 <\r\n√\r\n30.\r\n√\r\n30 = 30 = kak kbk in\r\naccordance with the Cauchy–Schwarz inequality.\r\nReading homework: problem 2\r\n89",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/551f7ccc-b0c3-48ec-82c4-77e845c3a0f5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=56fda88b906b51e53e9798c277488fe5f76139ff7fe97d29a6ff12a64571290e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 507
      },
      {
        "segments": [
          {
            "segment_id": "b3d0fe0c-beb7-4269-90e2-12371bb44712",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 90,
            "page_width": 612,
            "page_height": 792,
            "content": "90 Vectors in Space, n-Vectors\r\n4.4 Vectors, Lists and Functions: R\r\nS\r\nIf you were going shopping you might make something like the following list.\r\nWe could represent this information mathematically as a set,\r\nS = {apple, orange, onion, milk, carrot} .\r\nThere is no information of ordering here and no information about how many\r\ncarrots you will buy. This set by itself is not a vector; how would we add\r\nsuch sets to one another?\r\nIf you were a more careful shopper your list might look like the following.\r\n90",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b3d0fe0c-beb7-4269-90e2-12371bb44712.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a995f6f1a13b0f21d2dfc1344abe84e4847ba9b02c8a5fa37d5209033a4cb95a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3083602a-84c3-4211-a2e6-f5a1ba18e851",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 91,
            "page_width": 612,
            "page_height": 792,
            "content": "4.4 Vectors, Lists and Functions: R\r\nS 91\r\nWhat you have really done here is assign a number to each element of the\r\nset S. In other words, the second list is a function\r\nf : S −→ R .\r\nGiven two lists like the second one above, we could easily add them – if you\r\nplan to buy 5 apples and I am buying 3 apples, together we will buy 8 apples!\r\nIn fact, the second list is really a 5-vector in disguise.\r\nIn general it is helpful to think of an n-vector as a function whose domain\r\nis the set {1, . . . , n}. This is equivalent to thinking of an n-vector as an\r\nordered list of n numbers. These two ideas give us two equivalent notions for\r\nthe set of all n-vectors:\r\nR\r\nn\r\n:=\r\n\r\n\r\n\r\n\r\n\r\na\r\n1\r\n.\r\n.\r\n.\r\na\r\nn\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\na\r\n1\r\n, . . . , an ∈ R\r\n\r\n\r\n\r\n= {a : {1, . . . , n} → R} =: R\r\n{1,··· ,n}\r\nThe notation R\r\n{1,··· ,n}\r\nis used to denote the set of all functions from {1, . . . , n}\r\nto R.\r\nSimilarly, for any set S the notation R\r\nS denotes the set of functions from\r\nS to R:\r\nR\r\nS\r\n:= {f : S → R} .\r\nWhen S is an ordered set like {1, . . . , n}, it is natural to write the components\r\nin order. When the elements of S do not have a natural ordering, doing so\r\nmight cause confusion.\r\nExample 54 Consider the set S = {∗, ?, #} from chapter 1 review problem 9. A\r\nparticular element of R\r\nS\r\nis the function a explicitly defined by\r\na\r\n? = 3, a# = 5, a∗ = −2.\r\nIt is not natural to write\r\na =\r\n\r\n\r\n3\r\n5\r\n−2\r\n\r\n or a =\r\n\r\n\r\n−2\r\n3\r\n5\r\n\r\n\r\nbecause the elements of S do not have an ordering, since as sets {∗, ?, #} = {?, #, ∗}.\r\nIn this important way, R\r\nS\r\nseems different from R\r\n3\r\n. What is more evident\r\nare the similarities; since we can add two functions, we can add two elements\r\nof R\r\nS\r\n:\r\n91",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3083602a-84c3-4211-a2e6-f5a1ba18e851.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=372dd4ccf2f86820206670cd6d56ce2634bf75c7573e10dbdf381fcf6042f09a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 480
      },
      {
        "segments": [
          {
            "segment_id": "1d88c35a-eedd-4a7f-a011-eaa81a3f004f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 92,
            "page_width": 612,
            "page_height": 792,
            "content": "92 Vectors in Space, n-Vectors\r\nExample 55 Addition in R\r\n{∗,?,#}\r\nIf a, b ∈ R\r\n{∗,?,#}\r\nsuch that\r\na\r\n? = 3, a# = 5, a∗ = −2\r\nand\r\nb\r\n? = −2, b# = 4, b∗ = 13\r\nthen a + b ∈ R\r\nS\r\nis the function such that\r\n(a + b)\r\n? = 3 − 2 = 1,(a + b)# = 5 + 4 = 9,(a + b)∗ = −2 + 13 = 11 .\r\nAlso, since we can multiply functions by numbers, there is a notion of\r\nscalar multiplication on R\r\nS\r\n.\r\nExample 56 Scalar Multiplication in R\r\nS\r\nIf a ∈ R\r\n{∗,?,#}\r\nsuch that\r\na\r\n? = 3, a# = 5, a∗ = −2\r\nthen 3a ∈ R\r\n{∗,?,#}\r\nis the function such that\r\n(3a)\r\n? = 3 · 3 = 9,(3a)# = 3 · 5 = 15,(3a)∗ = 3(−2) = −6 .\r\nWe visualize R\r\n2 and R3\r\nin terms of axes. We have a more abstract picture\r\nof R\r\n4\r\n, R\r\n5 and Rn\r\nfor larger n while R\r\nS\r\nseems even more abstract. However,\r\nwhen thought of as a simple “shopping list”, you can see that vectors in R\r\nS\r\nin fact, can describe everyday objects. In chapter 5 we introduce the general\r\ndefinition of a vector space that unifies all these different notions of a vector.\r\n4.5 Review Problems\r\nWebwork:\r\nReading problems 1 , 2\r\nVector operations 3\r\nVectors and lines 4\r\nVectors and planes 5\r\nLines, planes and vectors 6,7\r\nEquation of a plane 8,9\r\nAngle between a line and plane 10\r\n92",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1d88c35a-eedd-4a7f-a011-eaa81a3f004f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=291a5686a44e0610c4fba42e07cf2c385e3bb7391205e8ff71f12e1a70daaf13",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 267
      },
      {
        "segments": [
          {
            "segment_id": "24d9b503-4935-4b13-a1fa-e6e930d6a98e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 93,
            "page_width": 612,
            "page_height": 792,
            "content": "4.5 Review Problems 93\r\n1. When he was young, Captain Conundrum mowed lawns on weekends to\r\nhelp pay his college tuition bills. He charged his customers according to\r\nthe size of their lawns at a rate of 5¢ per square foot and meticulously\r\nkept a record of the areas of their lawns in an ordered list:\r\nA = (200, 300, 50, 50, 100, 100, 200, 500, 1000, 100).\r\nHe also listed the number of times he mowed each lawn in a given year,\r\nfor the year 1988 that ordered list was\r\nf = (20, 1, 2, 4, 1, 5, 2, 1, 10, 6).\r\n(a) Pretend that A and f are vectors and compute A f.\r\n(b) What quantity does the dot product A f measure?\r\n(c) How much did Captain Conundrum earn from mowing lawns in\r\n1988? Write an expression for this amount in terms of the vectors\r\nA and f.\r\n(d) Suppose Captain Conundrum charged different customers differ\u0002ent rates. How could you modify the expression in part 1c to\r\ncompute the Captain’s earnings?\r\n2. (2) Find the angle between the diagonal of the unit square in R\r\n2 and\r\none of the coordinate axes.\r\n(3) Find the angle between the diagonal of the unit cube in R\r\n3 and\r\none of the coordinate axes.\r\n(n) Find the angle between the diagonal of the unit (hyper)-cube in\r\nR\r\nn and one of the coordinate axes.\r\n(∞) What is the limit as n → ∞ of the angle between the diagonal of\r\nthe unit (hyper)-cube in R\r\nn and one of the coordinate axes?\r\n3. Consider the matrix M =\r\n\u0012\r\ncos θ sin θ\r\n− sin θ cos θ\r\n\u0013\r\nand the vector X =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n.\r\n(a) Sketch X and MX in R\r\n2\r\nfor several values of X and θ.\r\n(b) Compute ||MX||\r\n||X|| for arbitrary values of X and θ.\r\n(c) Explain your result for (b) and describe the action of M geomet\u0002rically.\r\n93",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/24d9b503-4935-4b13-a1fa-e6e930d6a98e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=db164dafcb8fa2559608db2c9f3f3e25b0f8322146dc602565c78abe0d989efe",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 330
      },
      {
        "segments": [
          {
            "segment_id": "371ecd94-b284-43aa-874e-f96d292afb2d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 94,
            "page_width": 612,
            "page_height": 792,
            "content": "94 Vectors in Space, n-Vectors\r\n4. (Lorentzian Strangeness). For this problem, consider R\r\nn with the\r\nLorentzian inner product defined in example 52 above.\r\n(a) Find a non-zero vector in two-dimensional Lorentzian space-time\r\nwith zero length.\r\n(b) Find and sketch the collection of all vectors in two-dimensional\r\nLorentzian space-time with zero length.\r\n(c) Find and sketch the collection of all vectors in three-dimensional\r\nLorentzian space-time with zero length.\r\n(d) Replace the word “zero” with the word “one” in the previous two\r\nparts.\r\nThe Story of Your Life\r\n5. Create a system of equations whose solution set is a 99 dimensional\r\nhyperplane in R\r\n101\r\n.\r\n6. Recall that a plane in R\r\n3\r\ncan be described by the equation\r\nn ·\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n = n · p\r\nwhere the vector p labels a given point on the plane and n is a vector\r\nnormal to the plane. Let N and P be vectors in R\r\n101 and\r\nX =\r\n\r\n\r\nx\r\n1\r\nx\r\n2\r\n.\r\n.\r\n.\r\nx\r\n101\r\n\r\n\r\n.\r\nWhat kind of geometric object does N · X = N · P describe?\r\n7. Let\r\nu =\r\n\r\n\r\n1\r\n1\r\n1\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\nand v =\r\n\r\n\r\n1\r\n2\r\n3\r\n.\r\n.\r\n.\r\n101\r\n\r\n\r\n94",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/371ecd94-b284-43aa-874e-f96d292afb2d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a5be80aa2f66aa81eb9c75650702e5a44268ba55b6b28e0b95ac5e61f2dad98e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "0d8b864b-8226-45fc-b8e4-d1f51740b587",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 95,
            "page_width": 612,
            "page_height": 792,
            "content": "4.5 Review Problems 95\r\nFind the projection of v onto u and the projection of u onto v. (Hint:\r\nRemember that two vectors u and v define a plane, so first work out\r\nhow to project one vector onto another in a plane. The picture from\r\nSection 14.4 could help.)\r\n8. If the solution set to the equation A(x) = b is the set of vectors whose\r\ntips lie on the paraboloid z = x\r\n2 + y2\r\n, then what can you say about\r\nthe function A?\r\n9. Find a system of equations whose solution set is\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n2\r\n0\r\n\r\n\r\n+ c1\r\n\r\n\r\n−1\r\n−1\r\n0\r\n1\r\n\r\n\r\n+ c2\r\n\r\n\r\n0\r\n0\r\n−1\r\n−3\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\n.\r\nGive a general procedure for going from a parametric description of a\r\nhyperplane to a system of equations with that hyperplane as a solution\r\nset.\r\n10. If A is a linear operator and both v and cv (for any real number c) are\r\nsolutions to Ax = b, then what can you say about b?\r\n95",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0d8b864b-8226-45fc-b8e4-d1f51740b587.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bfccd936efb41559e9faeba1ff0688c63a94e621fd60864b2304c6cbef9a8e34",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "dcb909ff-f830-4fb1-8415-e6fd78644d79",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 96,
            "page_width": 612,
            "page_height": 792,
            "content": "96 Vectors in Space, n-Vectors\r\n96",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/dcb909ff-f830-4fb1-8415-e6fd78644d79.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=028fb69f2792940914f7745900d09298219f7590c9491bc9c5a9fc6e8a9294c7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 421
      },
      {
        "segments": [
          {
            "segment_id": "c2b00d58-f830-43bf-9fce-41f7804b1e2d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 97,
            "page_width": 612,
            "page_height": 792,
            "content": "5\r\nVector Spaces\r\nAs suggested at the end of chapter 4, the vector spaces R\r\nn are not the only\r\nvector spaces. We now give a general definition that includes R\r\nn\r\nfor all\r\nvalues of n, and R\r\nS\r\nfor all sets S, and more. This mathematical structure is\r\napplicable to a wide range of real-world problems and allows for tremendous\r\neconomy of thought; the idea of a basis for a vector space will drive home\r\nthe main idea of vector spaces; they are sets with very simple structure.\r\nThe two key properties of vectors are that they can be added together\r\nand multiplied by scalars. Thus, before giving a rigorous definition of vector\r\nspaces we will state the main idea.\r\nA vector space is a set that is closed under addition and scalar\r\nmultiplication.\r\nDefinition A vector space (V, +, . , R) is a set V with two operations +\r\nand · satisfying the following properties for all u, v ∈ V and c, d ∈ R:\r\n(+i) (Additive Closure) u + v ∈ V . Adding two vectors gives a vector.\r\n(+ii) (Additive Commutativity) u + v = v + u. Order of addition doesn’t\r\nmatter.\r\n(+iii) (Additive Associativity) (u + v) + w = u + (v + w). Order of adding\r\nmany vectors doesn’t matter.\r\n(+iv) (Zero) There is a special vector 0V ∈ V such that u + 0V = u for all u\r\nin V .\r\n97",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c2b00d58-f830-43bf-9fce-41f7804b1e2d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e3f26432f409e725b0595c7c85a0eef202eb6b854064cf46211aa533e42f72bb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 245
      },
      {
        "segments": [
          {
            "segment_id": "b4a36f29-4aed-433d-9dc5-4b251b3c0256",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 98,
            "page_width": 612,
            "page_height": 792,
            "content": "98 Vector Spaces\r\n(+v) (Additive Inverse) For every u ∈ V there exists w ∈ V such that\r\nu + w = 0V .\r\n(· i) (Multiplicative Closure) c · v ∈ V . Scalar times a vector is a vector.\r\n(· ii) (Distributivity) (c+d)· v = c · v +d· v. Scalar multiplication distributes\r\nover addition of scalars.\r\n(· iii) (Distributivity) c ·(u+v) = c ·u+c · v. Scalar multiplication distributes\r\nover addition of vectors.\r\n(· iv) (Associativity) (cd) · v = c · (d · v).\r\n(· v) (Unity) 1 · v = v for all v ∈ V .\r\nExamples of each rule\r\nRemark Rather than writing (V, +, . , R), we will often say “let V be a vector space\r\nover R”. If it is obvious that the numbers used are real numbers, then “let V be a\r\nvector space” suffices. Also, don’t confuse the scalar product · with the dot product .\r\nThe scalar product is a function that takes as its two inputs one number and one\r\nvector and returns a vector as its output. This can be written\r\n·: R × V → V .\r\nSimilarly\r\n+ : V × V → V .\r\nOn the other hand, the dot product takes two vectors and returns a number. Suc\u0002cinctly: : V × V → R. Once the properties of a vector space have been verified,\r\nwe’ll just write scalar multiplication with juxtaposition cv = c · v, though, to avoid\r\nconfusing the notation.\r\n5.1 Examples of Vector Spaces\r\nOne can find many interesting vector spaces, such as the following:\r\nExample of a vector space\r\n98",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b4a36f29-4aed-433d-9dc5-4b251b3c0256.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cef5d764813dd4ef4c294078853201752e25817652412602f4a68350e559e75c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 273
      },
      {
        "segments": [
          {
            "segment_id": "c730b0fb-9a45-4fa4-8fe9-b248bf96ff20",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 99,
            "page_width": 612,
            "page_height": 792,
            "content": "5.1 Examples of Vector Spaces 99\r\nExample 57\r\nR\r\nN = {f | f : N → R}\r\nHere the vector space is the set of functions that take in a natural number n and return\r\na real number. The addition is just addition of functions: (f1+f2)(n) = f1(n)+f2(n).\r\nScalar multiplication is just as simple: c · f(n) = cf(n).\r\nWe can think of these functions as infinitely large ordered lists of numbers: f(1) =\r\n1\r\n3 = 1 is the first component, f(2) = 23 = 8 is the second, and so on. Then for\r\nexample the function f(n) = n\r\n3 would look like this:\r\nf =\r\n\r\n\r\n1\r\n8\r\n27\r\n.\r\n.\r\n.\r\nn\r\n3\r\n.\r\n.\r\n.\r\n\r\n\r\n.\r\nThinking this way, R\r\nN is the space of all infinite sequences. Because we can not write\r\na list infinitely long (without infinite time and ink), one can not define an element of\r\nthis space explicitly; definitions that are implicit, as above, or algebraic as in f(n) = n\r\n3\r\n(for all n ∈ N) suffice.\r\nLet’s check some axioms.\r\n(+i) (Additive Closure) (f1 + f2)(n) = f1(n) + f2(n) is indeed a function N → R,\r\nsince the sum of two real numbers is a real number.\r\n(+iv) (Zero) We need to propose a zero vector. The constant zero function g(n) = 0\r\nworks because then f(n) + g(n) = f(n) + 0 = f(n).\r\nThe other axioms should also be checked. This can be done using properties of the\r\nreal numbers.\r\nReading homework: problem 1\r\nExample 58 The space of functions of one real variable.\r\nR\r\nR = {f | f : R → R}\r\nThe addition is point-wise\r\n(f + g)(x) = f(x) + g(x),\r\n99",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c730b0fb-9a45-4fa4-8fe9-b248bf96ff20.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=af001083f29783ea8096f7cd5b219f53b30c50c1233cfaa459d8be2f779d5028",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 294
      },
      {
        "segments": [
          {
            "segment_id": "7c8c7d32-530d-45ef-bba4-6ebfebc9a805",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 100,
            "page_width": 612,
            "page_height": 792,
            "content": "100 Vector Spaces\r\nas is scalar multiplication\r\nc · f(x) = cf(x).\r\nTo check that R\r\nR is a vector space use the properties of addition of functions and\r\nscalar multiplication of functions as in the previous example.\r\nWe can not write out an explicit definition for one of these functions either, there\r\nare not only infinitely many components, but even infinitely many components between\r\nany two components! You are familiar with algebraic definitions like f(x) = e\r\nx\r\n2−x+5\r\n.\r\nHowever, most vectors in this vector space can not be defined algebraically. For\r\nexample, the nowhere continuous function\r\nf(x) = (\r\n1 , x ∈ Q\r\n0 , x /∈ Q\r\n.\r\nExample 59 R\r\n{∗,?,#} = {f : {∗, ?, #} → R}. Again, the properties of addition and\r\nscalar multiplication of functions show that this is a vector space.\r\nYou can probably figure out how to show that R\r\nS\r\nis vector space for any\r\nset S. This might lead you to guess that all vector spaces are of the form R\r\nS\r\nfor some set S. The following is a counterexample.\r\nExample 60 Another very important example of a vector space is the space of all\r\ndifferentiable functions:\r\n\u001a\r\nf : R → R\r\n\f\r\n\f\r\n\f\r\nd\r\ndxf exists\u001b\r\n.\r\nFrom calculus, we know that the sum of any two differentiable functions is dif\u0002ferentiable, since the derivative distributes over addition. A scalar multiple of a func\u0002tion is also differentiable, since the derivative commutes with scalar multiplication\r\n(\r\nd\r\ndx (cf) = c\r\nd\r\ndx f). The zero function is just the function such that 0(x) = 0 for ev\u0002ery x. The rest of the vector space properties are inherited from addition and scalar\r\nmultiplication in R.\r\nSimilarly, the set of functions with at least k derivatives is always a vector\r\nspace, as is the space of functions with infinitely many derivatives. None of\r\nthese examples can be written as R\r\nS\r\nfor some set S. Despite our emphasis on\r\nsuch examples, it is also not true that all vector spaces consist of functions.\r\nExamples are somewhat esoteric, so we omit them.\r\nAnother important class of examples is vector spaces that live inside R\r\nn\r\nbut are not themselves R\r\nn\r\n.\r\n100",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7c8c7d32-530d-45ef-bba4-6ebfebc9a805.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6ad390000fab317e1c823be64169963f32922ddacc38ee749e639b1a72522c1e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 374
      },
      {
        "segments": [
          {
            "segment_id": "95c5022c-4114-45a0-93ec-47a38133748f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 101,
            "page_width": 612,
            "page_height": 792,
            "content": "5.1 Examples of Vector Spaces 101\r\nExample 61 (Solution set to a homogeneous linear equation.)\r\nLet\r\nM =\r\n\r\n\r\n1 1 1\r\n2 2 2\r\n3 3 3\r\n\r\n .\r\nThe solution set to the homogeneous equation Mx = 0 is\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\n.\r\nThis set is not equal to R\r\n3\r\nsince it does not contain, for example,\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n. The sum of\r\nany two solutions is a solution, for example\r\n\r\n2\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + 3\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n\r\n\r\n +\r\n\r\n7\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + 5\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n\r\n\r\n = 9\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + 8\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n\r\nand any scalar multiple of a solution is a solution\r\n4\r\n\r\n5\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n − 3\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n\r\n\r\n = 20\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n − 12\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n .\r\nThis example is called a subspace because it gives a vector space inside another vector\r\nspace. See chapter 9 for details. Indeed, because it is determined by the linear map\r\ngiven by the matrix M, it is called ker M, or in words, the kernel of M, for this see\r\nchapter 16.\r\nSimilarly, the solution set to any homogeneous linear equation is a vector\r\nspace: Additive and multiplicative closure follow from the following state\u0002ment, made using linearity of matrix multiplication:\r\nIf Mx1 = 0 and Mx2 = 0 then M(c1x1+c2x2) = c1Mx1+c2Mx2 = 0+0 = 0.\r\nA powerful result, called the subspace theorem (see chapter 9) guarantees,\r\nbased on the closure properties alone, that homogeneous solution sets are\r\nvector spaces.\r\nMore generally, if V is any vector space, then any hyperplane through\r\nthe origin of V is a vector space.\r\n101",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/95c5022c-4114-45a0-93ec-47a38133748f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=23fe7b6a88392d0d72dfcb6fc4aae44006749628378e6c9d6320d465d0b1c877",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 354
      },
      {
        "segments": [
          {
            "segment_id": "aa3607d2-4abf-4748-88bb-de718206b814",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 102,
            "page_width": 612,
            "page_height": 792,
            "content": "102 Vector Spaces\r\nExample 62 Consider the functions f(x) = e\r\nx\r\nand g(x) = e\r\n2x\r\nin R\r\nR. By taking\r\ncombinations of these two vectors we can form the plane {c1f +c2g|c1, c2 ∈ R} inside\r\nof R\r\nR. This is a vector space; some examples of vectors in it are 4ex−31e2x\r\n, πe2x−4e\r\nx\r\nand 1\r\n2\r\ne\r\n2x\r\n.\r\nA hyperplane which does not contain the origin cannot be a vector space\r\nbecause it fails condition (+iv).\r\nIt is also possible to build new vector spaces from old ones using the\r\nproduct of sets. Remember that if V and W are sets, then their product is\r\nthe new set\r\nV × W = {(v, w)|v ∈ V, w ∈ W} ,\r\nor in words, all ordered pairs of elements from V and W. In fact V × W is a\r\nvector space if V and W are. We have actually been using this fact already:\r\nExample 63 The real numbers R form a vector space (over R). The new vector space\r\nR × R = {(x, y)|x ∈ R, y ∈ R}\r\nhas addition and scalar multiplication defined by\r\n(x, y) + (x\r\n0\r\n, y0) = (x + x\r\n0\r\n, y + y\r\n0\r\n) and c.(x, y) = (cx, cy).\r\nOf course, this is just the vector space R\r\n2 = R{1,2}\r\n.\r\n5.1.1 Non-Examples\r\nThe solution set to a linear non-homogeneous equation is not a vector space\r\nbecause it does not contain the zero vector and therefore fails (iv).\r\nExample 64 The solution set to\r\n\u0012\r\n1 1\r\n0 0\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n1\r\n0\r\n\u0013\r\nis \u001a\u00121\r\n0\r\n\u0013\r\n+ c\r\n\u0012\r\n−1\r\n1\r\n\u0013 \f\r\n\f\r\n\f\r\nc ∈ R\r\n\u001b\r\n. The vector \u0012\r\n0\r\n0\r\n\u0013\r\nis not in this set.\r\nDo notice that if just one of the vector space rules is broken, the example is\r\nnot a vector space.\r\nMost sets of n-vectors are not vector spaces.\r\n102",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/aa3607d2-4abf-4748-88bb-de718206b814.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=22e5ce3a878ecb9a3477e0793e10f3f5a35d448536000b84a19c886644e05565",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 331
      },
      {
        "segments": [
          {
            "segment_id": "8f3e3f14-5fbc-4010-98a9-5c6b3a67eb74",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 103,
            "page_width": 612,
            "page_height": 792,
            "content": "5.2 Other Fields 103\r\nExample 65 P := \u001a\u0012a\r\nb\r\n\u0013 \f\r\n\f\r\n\f a, b ≥ 0\r\n\u001b\r\nis not a vector space because the set fails (·i)\r\nsince \u0012\r\n1\r\n1\r\n\u0013\r\n∈ P but −2\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n−2\r\n−2\r\n\u0013\r\n∈/ P.\r\nSets of functions other than those of the form R\r\nS\r\nshould be carefully\r\nchecked for compliance with the definition of a vector space.\r\nExample 66 The set of all functions which are nowhere zero\r\n{f : R → R | f(x) 6= 0 for any x ∈ R} ,\r\ndoes not form a vector space because it does not satisfy (+i). The functions f(x) =\r\nx\r\n2+1 and g(x) = −5 are in the set, but their sum (f +g)(x) = x2−4 = (x+2)(x−2)\r\nis not since (f + g)(2) = 0.\r\n5.2 Other Fields\r\nAbove, we defined vector spaces over the real numbers. One can actually\r\ndefine vector spaces over any field. This is referred to as choosing a different\r\nbase field. A field is a collection of “numbers” satisfying properties which are\r\nlisted in appendix B. An example of a field is the complex numbers,\r\nC =\r\n\b\r\nx + iy | i\r\n2 = −1, x, y ∈ R\r\n\t\r\n.\r\nExample 67 In quantum physics, vector spaces over C describe all possible states a\r\nphysical system can have. For example,\r\nV =\r\n\u001a\u0012λ\r\nµ\r\n\u0013\r\n| λ, µ ∈ C\r\n\u001b\r\nis the set of possible states for an electron’s spin. The vectors \u0012\r\n1\r\n0\r\n\u0013\r\nand \u0012\r\n0\r\n1\r\n\u0013\r\ndescribe,\r\nrespectively, an electron with spin “up” and “down” along a given direction. Other\r\nvectors, like \u0012\r\ni\r\n−i\r\n\u0013\r\nare permissible, since the base field is the complex numbers. Such\r\nstates represent a mixture of spin up and spin down for the given direction (a rather\r\ncounterintuitive yet experimentally verifiable concept), but a given spin in some other\r\ndirection.\r\n103",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8f3e3f14-5fbc-4010-98a9-5c6b3a67eb74.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7c1e9bc6fccdfeacd3090d8c6365f661c1b93a9334affbc004f95d800959b9f1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 323
      },
      {
        "segments": [
          {
            "segment_id": "91ce170c-237e-42f7-b5b3-d3c454f40e74",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 104,
            "page_width": 612,
            "page_height": 792,
            "content": "104 Vector Spaces\r\nComplex numbers are very useful because of a special property that they\r\nenjoy: every polynomial over the complex numbers factors into a product of\r\nlinear polynomials. For example, the polynomial\r\nx\r\n2 + 1\r\ndoesn’t factor over real numbers, but over complex numbers it factors into\r\n(x + i)(x − i).\r\nIn other words, there are two solutions to\r\nx\r\n2 = −1,\r\nx = i and x = −i. This property has far-reaching consequences: often in\r\nmathematics problems that are very difficult using only real numbers become\r\nrelatively simple when working over the complex numbers. This phenomenon\r\noccurs when diagonalizing matrices, see chapter 13.\r\nThe rational numbers Q are also a field. This field is important in com\u0002puter algebra: a real number given by an infinite string of numbers after the\r\ndecimal point can’t be stored by a computer. So instead rational approxi\u0002mations are used. Since the rationals are a field, the mathematics of vector\r\nspaces still apply to this special case.\r\nAnother very useful field is bits\r\nB2 = Z2 = {0, 1} ,\r\nwith the addition and multiplication rules\r\n+ 0 1\r\n0 0 1\r\n1 1 0\r\n× 0 1\r\n0 0 0\r\n1 0 1\r\nThese rules can be summarized by the relation 2 = 0. For bits, it follows\r\nthat −1 = 1!\r\nThe theory of fields is typically covered in a class on abstract algebra or\r\nGalois theory.\r\n104",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/91ce170c-237e-42f7-b5b3-d3c454f40e74.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8f276f00c5bfbea1f0e7ef61a2674e171509e41a9f98655dfbeae0c4edcec1de",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7b41d350-829e-4bc9-8684-ff09313bfd14",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 105,
            "page_width": 612,
            "page_height": 792,
            "content": "5.3 Review Problems 105\r\n5.3 Review Problems\r\nWebwork: Reading problems 1\r\nAddition and inverse 2\r\n1. Check that \u001a\u0012x\r\ny\r\n\u0013\f\r\n\f\r\n\f\r\n\f\r\nx, y ∈ R\r\n\u001b\r\n= R\r\n2\r\n(with the usual addition and scalar\r\nmultiplication) satisfies all of the parts in the definition of a vector\r\nspace.\r\n2. (a) Check that the complex numbers C = {x + iy | i\r\n2 = −1, x, y ∈ R},\r\nsatisfy all of the parts in the definition of a vector space over C.\r\nMake sure you state carefully what your rules for vector addition\r\nand scalar multiplication are.\r\n(b) What would happen if you used R as the base field (try comparing\r\nto problem 1).\r\n3. (a) Consider the set of convergent sequences, with the same addi\u0002tion and scalar multiplication that we defined for the space of\r\nsequences:\r\nV =\r\nn\r\nf | f : N → R, limn→∞f(n) ∈ R\r\no\r\n⊂ R\r\nN\r\n.\r\nIs this still a vector space? Explain why or why not.\r\n(b) Now consider the set of divergent sequences, with the same addi\u0002tion and scalar multiplication as before:\r\nV =\r\nn\r\nf | f : N → R, limn→∞f(n) does not exist or is ± ∞o⊂ R\r\nN\r\n.\r\nIs this a vector space? Explain why or why not.\r\n4. Consider the set of 2 × 4 matrices:\r\nV =\r\n\u001a\u0012a b c d\r\ne f g h\u0013\r\n| a, b, c, d, e, f, g, h ∈ C\r\n\u001b\r\n105",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7b41d350-829e-4bc9-8684-ff09313bfd14.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d29dc431dcc83f568933c39efa718d856de83e764e42663ae8a19589ec88c7dd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 486
      },
      {
        "segments": [
          {
            "segment_id": "debb0f13-6ad9-4bb8-a2a5-4c149b372c3a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 106,
            "page_width": 612,
            "page_height": 792,
            "content": "106 Vector Spaces\r\nPropose definitions for addition and scalar multiplication in V . Identify\r\nthe zero vector in V , and check that every matrix in V has an additive\r\ninverse.\r\n5. Let P\r\nR\r\n3 be the set of polynomials with real coefficients of degree three\r\nor less.\r\n(a) Propose a definition of addition and scalar multiplication to make\r\nP\r\nR\r\n3\r\na vector space.\r\n(b) Identify the zero vector, and find the additive inverse for the vector\r\n−3 − 2x + x\r\n2\r\n.\r\n(c) Show that P\r\nR\r\n3\r\nis not a vector space over C. Propose a small\r\nchange to the definition of P\r\nR\r\n3\r\nto make it a vector space over C.\r\n(Hint: Every little symbol in the the instructions for par (c) is\r\nimportnant!)\r\nHint\r\n6. Let V = {x ∈ R|x > 0} =: R+. For x, y ∈ V and λ ∈ R, define\r\nx ⊕ y = xy , λ ⊗ x = x\r\nλ\r\n.\r\nShow that (V, ⊕, ⊗, R) is a vector space.\r\n7. The component in the ith row and jth column of a matrix can be\r\nlabeled mi\r\nj\r\n. In this sense a matrix is a function of a pair of integers.\r\nFor what set S is the set of 2 × 2 matrices the same as the set R\r\nS\r\n?\r\nGeneralize to other size matrices.\r\n8. Show that any function in R\r\n{∗,?,#}\r\ncan be written as a sum of multiples\r\nof the functions e∗, e?, e# defined by\r\ne∗(k) =\r\n\r\n\r\n\r\n1 , k = ∗\r\n0 , k = ?\r\n0 , k = #\r\n, e?(k) =\r\n\r\n\r\n\r\n0 , k = ∗\r\n1 , k = ?\r\n0 , k = #\r\n, e#(k) =\r\n\r\n\r\n\r\n0 , k = ∗\r\n0 , k = ?\r\n1 , k = #\r\n.\r\n9. Let V be a vector space and S any set. Show that the set V\r\nS of all\r\nfunctions S → V is a vector space. Hint: first decide upon a rule for\r\nadding functions whose outputs are vectors.\r\n106",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/debb0f13-6ad9-4bb8-a2a5-4c149b372c3a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8f576702c313a906dadbcdd78a1edc2e667d0f47d4ee4693c41c891938f9d7b6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 361
      },
      {
        "segments": [
          {
            "segment_id": "35048dfa-bdb3-4e76-8f9a-0643bac6b3ff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 107,
            "page_width": 612,
            "page_height": 792,
            "content": "6\r\nLinear Transformations\r\nDefinition A function L: V → W is linear if V and W are vector spaces\r\nand\r\nL(ru + sv) = rL(u) + sL(v)\r\nfor all u, v ∈ V and r, s ∈ R.\r\nReading homework: problem 1\r\nRemark We will often refer to linear functions by names like “linear map”, “linear\r\noperator” or “linear transformation”. In some contexts you will also see the name\r\n“homomorphism” which generally is applied to functions from one kind of set to the\r\nsame kind of set while respecting any structures on the sets; linear maps are from\r\nvector spaces to vectors spaces that respect scalar multiplication and addition, the\r\ntwo structures on vectors spaces.\r\nThe definition above coincides with the two part description in chapter 1;\r\nthe case r = 1, s = 1 describes additivity, while s = 0 describes homogeneity.\r\nWe are now ready to learn the powerful consequences of linearity.\r\n6.1 The Consequence of Linearity\r\nNow that we have a sufficiently general notion of vector space it is time to\r\ntalk about why linear operators are so special. Think about what is required\r\nto fully specify a real function of one variable. One output must be specified\r\nfor each input. That is an infinite amount of information.\r\n107",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/35048dfa-bdb3-4e76-8f9a-0643bac6b3ff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bbaa9f2afd950a3f3f3e9712ddea5141a6ca7c0a265c4d9fa487956bac9242b4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 212
      },
      {
        "segments": [
          {
            "segment_id": "fe86a5cf-a327-44fd-b13a-25d3cc3f12df",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 108,
            "page_width": 612,
            "page_height": 792,
            "content": "108 Linear Transformations\r\nBy contrast, even though a linear function can have infinitely many ele\u0002ments in its domain, it is specified by a very small amount of information.\r\nExample 68 (One output specifies infinitely many)\r\nIf you know that the function L is linear and that\r\nL\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n=\r\n\u0012\r\n5\r\n3\r\n\u0013\r\nthen you do not need any more information to figure out\r\nL\r\n\u0012\r\n2\r\n0\r\n\u0013\r\n, L \u0012\r\n3\r\n0\r\n\u0013\r\n, L \u0012\r\n4\r\n0\r\n\u0013\r\n, L \u0012\r\n5\r\n0\r\n\u0013\r\n, etc . . . ,\r\nbecause by homogeneity\r\nL\r\n\u0012\r\n5\r\n0\r\n\u0013\r\n= L\r\n\u0014\r\n5\r\n\u0012\r\n1\r\n0\r\n\u0013\u0015 = 5L\u0012\r\n1\r\n0\r\n\u0013\r\n= 5 \u0012\r\n5\r\n3\r\n\u0013\r\n=\r\n\u0012\r\n25\r\n15\u0013\r\n.\r\nIn this way an an infinite number of outputs is specified by just one.\r\nExample 69 (Two outputs in R\r\n2\r\nspecifies all outputs)\r\nLikewise, if you know that L is linear and that\r\nL\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n=\r\n\u0012\r\n5\r\n3\r\n\u0013\r\nand L\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n2\r\n2\r\n\u0013\r\nthen you don’t need any more information to compute\r\nL\r\n\u0012\r\n1\r\n1\r\n\u0013\r\nbecause by additivity\r\nL\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n= L\r\n\u0014\u00121\r\n0\r\n\u0013\r\n+\r\n\u0012\r\n0\r\n1\r\n\u0013\u0015 = L\u0012\r\n1\r\n0\r\n\u0013\r\n+ L\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n5\r\n3\r\n\u0013\r\n+\r\n\u0012\r\n2\r\n2\r\n\u0013\r\n=\r\n\u0012\r\n7\r\n5\r\n\u0013\r\n.\r\nIn fact, since every vector in R\r\n2\r\ncan be expressed as\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= x\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n+ y\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n,\r\nwe know how L acts on every vector from R\r\n2 by linearity based on just two pieces of\r\ninformation;\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= L\r\n\u0014\r\nx\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n+ y\r\n\u0012\r\n0\r\n1\r\n\u0013\u0015 = xL \u0012\r\n1\r\n0\r\n\u0013\r\n+yL \u0012\r\n0\r\n1\r\n\u0013\r\n= x\r\n\u0012\r\n5\r\n3\r\n\u0013\r\n+y\r\n\u0012\r\n2\r\n2\r\n\u0013\r\n=\r\n\u0012\r\n5x + 2y\r\n3x + 2y\r\n\u0013\r\n.\r\n108",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fe86a5cf-a327-44fd-b13a-25d3cc3f12df.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3beb6795b617a6eb72afbd11052f088a95ebed0413bf2d1be25393b74e0d1268",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 343
      },
      {
        "segments": [
          {
            "segment_id": "b455df73-586d-4da6-bd78-f0330964ddae",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 109,
            "page_width": 612,
            "page_height": 792,
            "content": "6.2 Linear Functions on Hyperplanes 109\r\nThus, the value of L at infinitely many inputs is completely specified by its value at\r\njust two inputs. (We can see now that L acts in exactly the way the matrix\r\n\u0012\r\n5 2\r\n3 2\u0013\r\nacts on vectors from R\r\n2\r\n.)\r\nReading homework: problem 2\r\nThis is the reason that linear functions are so nice; they are secretly very\r\nsimple functions by virtue of two characteristics:\r\n1. They act on vector spaces.\r\n2. They act additively and homogeneously.\r\nA linear transformation with domain R\r\n3\r\nis completely specified by the\r\nway it acts on the three vectors\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n .\r\nSimilarly, a linear transformation with domain R\r\nn\r\nis completely specified\r\nby its action on the n different n-vectors that have exactly one non-zero\r\ncomponent, and its matrix form can be read off this information. However,\r\nnot all linear functions have such nice domains.\r\n6.2 Linear Functions on Hyperplanes\r\nIt is not always so easy to write a linear operator as a matrix. Generally,\r\nthis will amount to solving a linear systems problem. Examining a linear\r\nfunction whose domain is a hyperplane is instructive.\r\nExample 70 Let\r\nV =\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\n109",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b455df73-586d-4da6-bd78-f0330964ddae.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0534af56c0b68e1ac8f4e9092db26767cbbe899f192eb1d1e4155bd33061771c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 247
      },
      {
        "segments": [
          {
            "segment_id": "2b3e37ed-4437-4b5e-8439-9a6430060183",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 110,
            "page_width": 612,
            "page_height": 792,
            "content": "110 Linear Transformations\r\nand consider L : V → R\r\n3 defined by\r\nL\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n , L\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n .\r\nBy linearity this specifies the action of L on any vector from V as\r\nL\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n = (c1 + c2)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n .\r\nThe domain of L is a plane and its range is the line through the origin in the x2\r\ndirection. It is clear how to check that L is linear.\r\nIt is not clear how to formulate L as a matrix; since\r\nL\r\n\r\n\r\nc1\r\nc1 + c2\r\nc2\r\n\r\n =\r\n\r\n\r\n0 0 0\r\n1 0 1\r\n0 0 0\r\n\r\n\r\n\r\n\r\nc1\r\nc1 + c2\r\nc2\r\n\r\n = (c1 + c2)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\nor since\r\nL\r\n\r\n\r\nc1\r\nc1 + c2\r\nc2\r\n\r\n =\r\n\r\n\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n\r\n\r\n\r\n\r\nc1\r\nc1 + c2\r\nc2\r\n\r\n = (c1 + c2)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n\r\nyou might suspect that L is equivalent to one of these 3 × 3 matrices. It is not. By\r\nthe natural domain convention, all 3 × 3 matrices have R\r\n3\r\nas their domain, and the\r\ndomain of L is smaller than that. When we do realize this L as a matrix it will be as a\r\n3×2 matrix. We can tell because the domain of L is 2 dimensional and the codomain\r\nis 3 dimensional.\r\n6.3 Linear Differential Operators\r\nYour calculus class became much easier when you stopped using the limit\r\ndefinition of the derivative, learned the power rule, and started using linearity\r\nof the derivative operator.\r\nExample 71 Let V be the vector space of polynomials of degree 2 or less with standard\r\naddition and scalar multiplication;\r\nV := {a0 · 1 + a1x + a2x\r\n2\r\n| a0, a1, a2 ∈ R}\r\n110",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2b3e37ed-4437-4b5e-8439-9a6430060183.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=39ff85b13848deee814f7927a8b21c92a0f7619eba0d5e065a180928ca21ab3f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 373
      },
      {
        "segments": [
          {
            "segment_id": "4c018d28-37a2-4b7c-b5e0-a2db7f01e1a7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 111,
            "page_width": 612,
            "page_height": 792,
            "content": "6.4 Bases (Take 1) 111\r\nLet d\r\ndx : V → V be the derivative operator. The following three equations, along with\r\nlinearity of the derivative operator, allow one to take the derivative of any 2nd degree\r\npolynomial:\r\nd\r\ndx1 = 0,\r\nd\r\ndxx = 1,\r\nd\r\ndxx\r\n2 = 2x .\r\nIn particular\r\nd\r\ndx(a0 · 1 + a1x + a2x\r\n2\r\n) = a0\r\nd\r\ndx · 1 + a1\r\nd\r\ndxx + a2\r\nd\r\ndxx\r\n2 = 0 + a1 + 2a2.\r\nThus, the derivative acting any of the infinitely many second order polynomials is\r\ndetermined by its action for just three inputs.\r\n6.4 Bases (Take 1)\r\nThe central idea of linear algebra is to exploit the hidden simplicity of linear\r\nfunctions. It ends up there is a lot of freedom in how to do this. That\r\nfreedom is what makes linear algebra powerful.\r\nYou saw that a linear operator acting on R\r\n2\r\nis completely specified by\r\nhow it acts on the pair of vectors \u0012\r\n1\r\n0\r\n\u0013\r\nand \u0012\r\n0\r\n1\r\n\u0013\r\n. In fact, any linear operator\r\nacting on R\r\n2\r\n\u0012\r\nis also completely specified by how it acts on the pair of vectors\r\n1\r\n1\r\n\u0013\r\nand \u0012\r\n1\r\n−1\r\n\u0013\r\n.\r\nExample 72 The linear operator L is a linear operator then it is completely specified\r\nby the two equalities\r\nL\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n, and L\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n=\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n.\r\nThis is because any vector \u0012\r\nx\r\ny\r\n\u0013\r\nin R\r\n2\r\nis a sum of multiples of \u0012\r\n1\r\n1\r\n\u0013\r\nand \u0012\r\n1\r\n−1\r\n\u0013\r\nwhich\r\n111",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4c018d28-37a2-4b7c-b5e0-a2db7f01e1a7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a149f34d67b94b584c1f72b7c75131e39fa0103229a4f6df50890908f9603184",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 282
      },
      {
        "segments": [
          {
            "segment_id": "1bbf17b4-7657-4cd3-aa24-1527fa8668bb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 112,
            "page_width": 612,
            "page_height": 792,
            "content": "112 Linear Transformations\r\ncan be calculated via a linear systems problem as follows:\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= a\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n+ b\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n⇔\r\n\u0012\r\n1 1\r\n1 −1\r\n\u0013 \u0012a\r\nb\r\n\u0013\r\n=\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n⇔\r\n\u0012\r\n1 1 x\r\n1 −1 y\r\n\u0013\r\n∼\r\n\u0012\r\n1 0 x+y\r\n2\r\n0 1 x−y\r\n2\r\n\u0013\r\n⇔\r\n\u001a\r\na =\r\nx+y\r\n2\r\nb =\r\nx−y\r\n2\r\n.\r\nThus\r\n \r\nx\r\ny\r\n!\r\n=\r\nx + y\r\n2\r\n \r\n1\r\n1\r\n!\r\n+\r\nx − y\r\n2\r\n \r\n1\r\n−1\r\n!\r\n.\r\nWe can then calculate how L acts on any vector by first expressing the vector as a\r\nsum of multiples and then applying linearity;\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= L\r\n\u0014\r\nx + y\r\n2\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n+\r\nx − y\r\n2\r\n\u0012\r\n1\r\n−1\r\n\u0013\u0015\r\n=\r\nx + y\r\n2\r\nL\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n+\r\nx − y\r\n2\r\nL\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n=\r\nx + y\r\n2\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n+\r\nx − y\r\n2\r\n\u0012\r\n6\r\n8\r\n\u0013\r\n=\r\n\u0012\r\nx + y\r\n2(x + y)\r\n\u0013\r\n+\r\n\u0012\r\n3(x − y)\r\n4(x − y)\r\n\u0013\r\n=\r\n\u0012\r\n4x − 2y\r\n6x − y\r\n\u0013\r\nThus L is completely specified by its value at just two inputs.\r\nIt should not surprise you to learn there are infinitely many pairs of\r\nvectors from R\r\n2 with the property that any vector can be expressed as a\r\nlinear combination of them; any pair that when used as columns of a matrix\r\ngives an invertible matrix works. Such a pair is called a basis for R\r\n2\r\n.\r\nSimilarly, there are infinitely many triples of vectors with the property\r\nthat any vector from R\r\n3\r\ncan be expressed as a linear combination of them:\r\n112",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1bbf17b4-7657-4cd3-aa24-1527fa8668bb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ab72b4cffc48477536e8913a3bf2a812562070c607ff5ec0e5cff8896dde7318",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "3142d827-f2ea-4e8e-ada8-f78978f17397",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 113,
            "page_width": 612,
            "page_height": 792,
            "content": "6.4 Bases (Take 1) 113\r\nthese are the triples that used as columns of a matrix give an invertible\r\nmatrix. Such a triple is called a basis for R\r\n3\r\n.\r\nIn a similar spirit, there are infinitely many pairs of vectors with the\r\nproperty that every vector in\r\nV =\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\ncan be expressed as a linear combination of them. Some examples are\r\nV =\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n2\r\n2\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\n=\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n1\r\n3\r\n2\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\nSuch a pair is a called a basis for V .\r\nYou probably have some intuitive notion of what dimension means (the\r\ncareful mathematical definition is given in chapter 11). Roughly speaking,\r\ndimension is the number of independent directions available. To figure out\r\nthe dimension of a vector space, I stand at the origin, and pick a direction.\r\nIf there are any vectors in my vector space that aren’t in that direction, then\r\nI choose another direction that isn’t in the line determined by the direction I\r\nchose. If there are any vectors in my vector space not in the plane determined\r\nby the first two directions, then I choose one of them as my next direction.\r\nIn other words, I choose a collection of independent vectors in the vector\r\nspace (independent vectors are defined in chapter 10). A minimal set of\r\nindependent vectors is called a basis (see chapter 11 for the precise definition).\r\nThe number of vectors in my basis is the dimension of the vector space. Every\r\nvector space has many bases, but all bases for a particular vector space have\r\nthe same number of vectors. Thus dimension is a well-defined concept.\r\nThe fact that every vector space (over R) has infinitely many bases is\r\nactually very useful. Often a good choice of basis can reduce the time required\r\nto run a calculation in dramatic ways!\r\nIn summary:\r\nA basis is a set of vectors in terms of which it is possible to\r\nuniquely express any other vector.\r\n113",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3142d827-f2ea-4e8e-ada8-f78978f17397.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c0df35db203b90dab79930eda411645cdcf69e42b8423206994d01adf70221b1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 399
      },
      {
        "segments": [
          {
            "segment_id": "3381063f-7bf4-48b2-adcf-b61c9bbb4c7b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 114,
            "page_width": 612,
            "page_height": 792,
            "content": "114 Linear Transformations\r\n6.5 Review Problems\r\nWebwork:\r\nReading problems 1 , 2\r\nLinear? 3\r\nMatrix × vector 4, 5\r\nLinearity 6, 7\r\n1. Show that the pair of conditions:\r\n\u001a\r\nL(u + v) = L(u) + L(v)\r\nL(cv) = cL(v)\r\n(1)\r\n(valid for all vectors u, v and any scalar c) is equivalent to the single\r\ncondition:\r\nL(ru + sv) = rL(u) + sL(v), (2)\r\n(for all vectors u, v and any scalars r and s). Your answer should have\r\ntwo parts. Show that (1) ⇒ (2), and then show that (2) ⇒ (1).\r\n2. If f is a linear function of one variable, then how many points on the\r\ngraph of the function are needed to specify the function? Give an\r\nexplicit expression for f in terms of these points. (You might want\r\nto look up the definition of a graph before you make any assumptions\r\nabout the function.)\r\n3. (a) If p\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n= 1 and p\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n= 3 is it possible that p is a linear\r\nfunction?\r\n(b) If Q(x\r\n2\r\n) = x\r\n3 and Q(2x2\r\n) = x\r\n4\r\nis it possible that Q is a linear\r\nfunction from polynomials to polynomials?\r\n4. If f is a linear function such that\r\nf\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n= 0, and f\r\n\u0012\r\n2\r\n3\r\n\u0013\r\n= 1 ,\r\nthen what is f\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n?\r\n5. Let Pn be the space of polynomials of degree n or less in the variable t.\r\nSuppose L is a linear transformation from P2 → P3 such that L(1) = 4,\r\nL(t) = t\r\n3\r\n, and L(t\r\n2\r\n) = t − 1.\r\n114",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3381063f-7bf4-48b2-adcf-b61c9bbb4c7b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=daca2bf6be6296831250e1a89b31fbd2a41aeba1fe94fdafe826989bb9c469d2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9a9ed147-6ac2-4bb1-aa90-6f42aeb32c60",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 115,
            "page_width": 612,
            "page_height": 792,
            "content": "6.5 Review Problems 115\r\n(a) Find L(1 + t + 2t\r\n2\r\n).\r\n(b) Find L(a + bt + ct2).\r\n(c) Find all values a, b, c such that L(a + bt + ct2) = 1 + 3t + 2t\r\n3\r\n.\r\nHint\r\n6. Show that the operator I that maps f to the function If defined\r\nby If(x) := R x\r\n0\r\nf(t)dt is a linear operator on the space of continuous\r\nfunctions.\r\n7. Let z ∈ C. Recall that z = x+iy for some x, y ∈ R, and we can form the\r\ncomplex conjugate of z by taking z = x − iy. The function c : R\r\n2 → R2\r\nwhich sends (x, y) 7→ (x, −y) agrees with complex conjugation.\r\n(a) Show that c is a linear map over R (i.e. scalars in R).\r\n(b) Show that z is not linear over C.\r\n115",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9a9ed147-6ac2-4bb1-aa90-6f42aeb32c60.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=14ec55c5c0e930d012f33592577165e07e388328205873d61d8387a9042ac4a4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ec4f5d53-345f-4944-80bc-c49f8e9d5ce1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 116,
            "page_width": 612,
            "page_height": 792,
            "content": "116 Linear Transformations\r\n116",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ec4f5d53-345f-4944-80bc-c49f8e9d5ce1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c1575a861e201652cfecd6bcb3bb178d633ebfa247dfcd11d0ef3447da27ef8e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 437
      },
      {
        "segments": [
          {
            "segment_id": "8f463df9-eaf7-4c3d-97ae-1713074b7451",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 117,
            "page_width": 612,
            "page_height": 792,
            "content": "7\r\nMatrices\r\nMatrices are a powerful tool for calculations involving linear transformations.\r\nIt is important to understand how to find the matrix of a linear transforma\u0002tion and properties of matrices.\r\n7.1 Linear Transformations and Matrices\r\nOrdered, finite-dimensional, bases for vector spaces allows us to express linear\r\noperators as matrices.\r\n7.1.1 Basis Notation\r\nA basis allows us to efficiently label arbitrary vectors in terms of column\r\nvectors. Here is an example.\r\nExample 73 Let\r\nV =\r\n\u001a\u0012a b\r\nc d\u0013\f\r\n\f\r\n\f\r\n\f\r\na, b, c, d ∈ R\r\n\u001b\r\nbe the vector space of 2 × 2 real matrices, with addition and scalar multiplication\r\ndefined componentwise. One choice of basis is the ordered set (or list) of matrices\r\nB =\r\n\u0012\u00121 0\r\n0 0\u0013\r\n,\r\n\u0012\r\n0 1\r\n0 0\u0013\r\n,\r\n\u0012\r\n0 0\r\n1 0\u0013\r\n,\r\n\u0012\r\n0 0\r\n0 1\u0013\u0013 =: (e\r\n1\r\n1\r\n, e1\r\n2\r\n, e2\r\n1\r\n, e2\r\n2\r\n).\r\n117",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8f463df9-eaf7-4c3d-97ae-1713074b7451.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b4822460254044e98d05562e106b7cdd7e3121d72bef290fddb2774e0140eeaa",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 154
      },
      {
        "segments": [
          {
            "segment_id": "5b12e407-2864-47e3-904c-c047cb7be5a2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 118,
            "page_width": 612,
            "page_height": 792,
            "content": "118 Matrices\r\nGiven a particular vector and a basis, your job is to write that vector as a sum of\r\nmultiples of basis elements. Here and arbitrary vector v ∈ V is just a matrix, so we\r\nwrite\r\nv =\r\n\u0012\r\na b\r\nc d\u0013\r\n=\r\n\u0012\r\na 0\r\n0 0\u0013\r\n+\r\n\u0012\r\n0 b\r\n0 0\u0013\r\n+\r\n\u0012\r\n0 0\r\nc 0\r\n\u0013\r\n+\r\n\u0012\r\n0 0\r\n0 d\r\n\u0013\r\n= a\r\n\u0012\r\n1 0\r\n0 0\u0013\r\n+ b\r\n\u0012\r\n0 1\r\n0 0\u0013\r\n+ c\r\n\u0012\r\n0 0\r\n1 0\u0013\r\n+ d\r\n\u0012\r\n0 0\r\n0 1\u0013\r\n= a e1\r\n1 + b e1\r\n2 + c e2\r\n1 + d e2\r\n2\r\n.\r\nThe coefficients (a, b, c, d) of the basis vectors (e\r\n1\r\n1\r\n, e1\r\n2\r\n, e2\r\n1\r\n, e2\r\n2\r\n) encode the information\r\nof which matrix the vector v is. We store them in column vector by writing\r\nv = a e1\r\n1 + b e12 + c e21 + d e22 =: (e\r\n1\r\n1\r\n, e1\r\n2\r\n, e2\r\n1\r\n, e2\r\n2\r\n)\r\n\r\n\r\na\r\nb\r\nc\r\nd\r\n\r\n\r\n=:\r\n\r\n\r\na\r\nb\r\nc\r\nd\r\n\r\n\r\nB\r\n.\r\nThe 4-vector\r\n\r\n\r\na\r\nb\r\nc\r\nd\r\n\r\n\r\n∈ R\r\n4\r\nencodes the vector \u0012\r\na b\r\nc d\u0013\r\n∈ V but is NOT equal to it!\r\n(After all, v is a matrix so could not equal a column vector.) Both notations on the\r\nright hand side of the above equation really stand for the vector obtained by multiplying\r\nthe coefficients stored in the column vector by the corresponding basis element and\r\nthen summing over them.\r\nNext, lets consider a tautological example showing how to label column\r\nvectors in terms of column vectors:\r\nExample 74 (Standard Basis of R\r\n2\r\n)\r\nThe vectors\r\ne1 =\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n, e2 =\r\n\u0012\r\n0\r\n1\r\n\u0013\r\nare called the standard basis vectors of R\r\n2 = R{1,2}\r\n. Their description as functions\r\nof {1, 2} are\r\ne1(k) = \u001a\r\n1 if k = 1\r\n0 if k = 2 , e2(k) = \u001a\r\n0 if k = 1\r\n1 if k = 2 .\r\n118",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5b12e407-2864-47e3-904c-c047cb7be5a2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c76aec53a07eed2ceda63f33cd022e6f792a6e6ae45af2365ea5e4fc67d97a8e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 371
      },
      {
        "segments": [
          {
            "segment_id": "009165d6-89cc-47f6-9795-1167683ad543",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 119,
            "page_width": 612,
            "page_height": 792,
            "content": "7.1 Linear Transformations and Matrices 119\r\nIt is natural to assign these the order: e1 is first and e2 is second. An arbitrary vector v\r\nof R\r\n2\r\ncan be written as\r\nv =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= xe1 + ye2.\r\nTo emphasize that we are using the standard basis we define the list (or ordered set)\r\nE = (e1, e2),\r\nand write\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nE\r\n:= (e1, e2)\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n:= xe1 + ye2 = v.\r\nYou should read this equation by saying:\r\n“The column vector of the vector v in the basis E is \u0012\r\nx\r\ny\r\n\u0013\r\n.”\r\nAgain, the first notation of a column vector with a subscript E refers to the vector\r\nobtained by multiplying each basis vector by the corresponding scalar listed in the\r\ncolumn and then summing these, i.e. xe1 +ye2. The second notation denotes exactly\r\nthe same thing but we first list the basis elements and then the column vector; a\r\nuseful trick because this can be read in the same way as matrix multiplication of a row\r\nvector times a column vector–except that the entries of the row vector are themselves\r\nvectors!\r\nYou should already try to write down the standard basis vectors for R\r\nn\r\nfor other values of n and express an arbitrary vector in R\r\nn\r\nin terms of them.\r\nThe last example probably seems pedantic because column vectors are al\u0002ready just ordered lists of numbers and the basis notation has simply allowed\r\nus to “re-express” these as lists of numbers. Of course, this objection does\r\nnot apply to more complicated vector spaces like our first matrix example.\r\nMoreover, as we saw earlier, there are infinitely many other pairs of vectors\r\nin R\r\n2\r\nthat form a basis.\r\nExample 75 (A Non-Standard Basis of R\r\n2 = R{1,2}\r\n)\r\nb =\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n, β =\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n.\r\nAs functions of {1, 2} they read\r\nb(k) = \u001a\r\n1 if k = 1\r\n1 if k = 2 , β(k) = \u001a\r\n1 if k = 1\r\n−1 if k = 2 .\r\n119",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/009165d6-89cc-47f6-9795-1167683ad543.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=26cf71bdd2f3b6157f9b6eb92c02a690a5232d9065fa801fed1151fb62ec1b8a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 356
      },
      {
        "segments": [
          {
            "segment_id": "51c98d76-5c57-4b42-a8de-cf24084f0ba3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 120,
            "page_width": 612,
            "page_height": 792,
            "content": "120 Matrices\r\nNotice something important: there is no reason to say that β comes before b or\r\nvice versa. That is, there is no a priori reason to give these basis elements one order\r\nor the other. However, it will be necessary to give the basis elements an order if we\r\nwant to use them to encode other vectors. We choose one arbitrarily; let\r\nB = (b, β)\r\nbe the ordered basis. Note that for an unordered set we use the {} parentheses while\r\nfor lists or ordered sets we use ().\r\nAs before we define\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB\r\n:= (b, β)\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n:= xb + yβ .\r\nYou might think that the numbers x and y denote exactly the same vector as in the\r\nprevious example. However, they do not. Inserting the actual vectors that b and β\r\nrepresent we have\r\nxb + yβ = x\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n+ y\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n=\r\n\u0012\r\nx + y\r\nx − y\r\n\u0013\r\n.\r\nThus, to contrast, we have\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB\r\n=\r\n\u0012\r\nx + y\r\nx − y\r\n\u0013\r\nand \u0012\r\nx\r\ny\r\n\u0013\r\nE\r\n=\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nOnly in the standard basis E does the column vector of v agree with the column vector\r\nthat v actually is!\r\nBased on the above example, you might think that our aim would be to\r\nfind the “standard basis” for any problem. In fact, this is far from the truth.\r\nNotice, for example that the vector\r\nv =\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n= e1 + e2 = b\r\nwritten in the standard basis E is just\r\nv =\r\n\u0012\r\n1\r\n1\r\n\u0013\r\nE\r\n,\r\nwhich was easy to calculate. But in the basis B we find\r\nv =\r\n\u0012\r\n1\r\n0\r\n\u0013\r\nB\r\n,\r\n120",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/51c98d76-5c57-4b42-a8de-cf24084f0ba3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=641b429bc8a3c91f405b8f5cb922196c36e86341e11992817112cfacb689f2e5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "0288d93e-6997-46a5-9b84-c1d21c28b34e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 121,
            "page_width": 612,
            "page_height": 792,
            "content": "7.1 Linear Transformations and Matrices 121\r\nwhich is actually a simpler column vector! The fact that there are many\r\nbases for any given vector space allows us to choose a basis in which our\r\ncomputation is easiest. In any case, the standard basis only makes sense\r\nfor R\r\nn\r\n. Suppose your vector space was the set of solutions to a differential\r\nequation–what would a standard basis then be?\r\nExample 76 (A Basis For a Hyperplane)\r\nLets again consider the hyperplane\r\nV =\r\n\r\n\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nc1, c2 ∈ R\r\n\r\n\r\n\r\nOne possible choice of ordered basis is\r\nb1 =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n , b2 =\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n , B = (b1, b2).\r\nWith this choice\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB\r\n:= xb1 + yb2 = x\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + y\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n =\r\n\r\n\r\nx\r\nx + y\r\ny\r\n\r\n\r\nE\r\n.\r\nWith the other choice of order B0 = (b2, b1)\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB0\r\n:= xb2 + yb2 = x\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n + y\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\ny\r\nx + y\r\nx\r\n\r\n\r\nE\r\n.\r\nWe see that the order of basis elements matters.\r\nFinding the column vector of a given vector in a given basis usually\r\namounts to a linear systems problem:\r\nExample 77 (Pauli Matrices)\r\nLet\r\nV =\r\n\u001a\u0012z u\r\nv −z\r\n\u0013\f\r\n\f\r\n\f\r\n\f\r\nz, u, v ∈ C\r\n\u001b\r\nbe the vector space of trace-free complex-valued matrices (over C) with basis B =\r\n(σx, σy, σz), where\r\nσx =\r\n\u0012\r\n0 1\r\n1 0\u0013\r\n, σy =\r\n\u0012\r\n0 −i\r\ni 0\r\n\u0013\r\n, σz =\r\n\u0012\r\n1 0\r\n0 −1\r\n\u0013\r\n.\r\n121",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0288d93e-6997-46a5-9b84-c1d21c28b34e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=da0c51457459cd3ef54afee7fec97c4e5aae90616c03aeda670601510bb23f35",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 323
      },
      {
        "segments": [
          {
            "segment_id": "dc659942-e2db-4d0a-9ff1-93e88210956d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 122,
            "page_width": 612,
            "page_height": 792,
            "content": "122 Matrices\r\nThese three matrices are the famous Pauli matrices, they are used to describe electrons\r\nin quantum theory, or qubits in quantum computation. Let\r\nv =\r\n\u0012\r\n−2 + i 1 + i\r\n3 − i 2 − i\r\n\u0013\r\n.\r\nFind the column vector of v in the basis B.\r\nFor this we must solve the equation\r\n\u0012\r\n−2 + i 1 + i\r\n3 − i 2 − i\r\n\u0013\r\n= α\r\nx\r\n\u0012\r\n0 1\r\n1 0\u0013\r\n+ α\r\ny\r\n\u0012\r\n0 −i\r\ni 0\r\n\u0013\r\n+ α\r\nz\r\n\u0012\r\n1 0\r\n0 −1\r\n\u0013\r\n.\r\nThis gives four equations, i.e. a linear systems problem, for the α’s\r\n\r\n\r\n\r\nα\r\nx − iαy = 1 + i\r\nα\r\nx + iαy = 3 − i\r\nα\r\nz = −2 + i\r\n−α\r\nz = 2 − i\r\nwith solution\r\nα\r\nx = 2 , αy = 2 − 2i , αz = −2 + i .\r\nThus\r\nv =\r\n\u0012\r\n−2 + i 1 + i\r\n3 − i 2 − i\r\n\u0013\r\n=\r\n\r\n\r\n2\r\n1 − i\r\n−2 + i\r\n\r\n\r\nB\r\n.\r\nTo summarize, the column vector of a vector v in an ordered basis B =\r\n(b1, b2, . . . , bn),\r\n\r\n\r\nα\r\n1\r\nα\r\n2\r\n.\r\n.\r\n.\r\nα\r\nn\r\n\r\n\r\n,\r\nis defined by solving the linear systems problem\r\nv = α\r\n1\r\nb1 + α\r\n2\r\nb2 + · · · + α\r\nn\r\nbn =\r\nXn\r\ni=1\r\nα\r\ni\r\nbi.\r\nThe numbers (α\r\n1\r\n, α2, . . . , αn) are called the components of the vector v. Two\r\nuseful shorthand notations for this are\r\nv =\r\n\r\n\r\nα\r\n1\r\nα\r\n2\r\n.\r\n.\r\n.\r\nα\r\nn\r\n\r\n\r\nB\r\n= (b1, b2, . . . , bn)\r\n\r\n\r\nα\r\n1\r\nα\r\n2\r\n.\r\n.\r\n.\r\nα\r\nn\r\n\r\n\r\n.\r\n122",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/dc659942-e2db-4d0a-9ff1-93e88210956d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f1d05320b75c8a07cd14071dacf4341cdb72d389faa6d8e8f97c978573d8d8b1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 325
      },
      {
        "segments": [
          {
            "segment_id": "847bc929-618c-4e48-8623-59e7b92ec093",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 123,
            "page_width": 612,
            "page_height": 792,
            "content": "7.1 Linear Transformations and Matrices 123\r\n7.1.2 From Linear Operators to Matrices\r\nChapter 6 showed that linear functions are very special kinds of functions;\r\nthey are fully specified by their values on any basis for their domain. A\r\nmatrix records how a linear operator maps an element of the basis to a sum\r\nof multiples in the target space basis.\r\nMore carefully, if L is a linear operator from V to W then the matrix for\r\nL in the ordered bases B = (b1, b2, . . .) for V and B0 = (β1, β2, . . .) for W is\r\nthe array of numbers m\r\nj\r\ni\r\nspecified by\r\nL(bi) = m1\r\ni β1 + · · · + m\r\nj\r\niβj + · · ·\r\nRemark To calculate the matrix of a linear transformation you must compute what\r\nthe linear transformation does to every input basis vector and then write the answers\r\nin terms of the output basis vectors:\r\n\r\n(L(b1), L(b2), . . . , L(bj ), . . . \u0001\r\n=\r\n\u0010\r\n(β1, β2, . . . , βj , . . .)\r\n\r\n\r\nm1\r\n1\r\nm2\r\n2\r\n.\r\n.\r\n.\r\nm\r\nj\r\n1\r\n.\r\n.\r\n.\r\n\r\n\r\n,(β1, β2, . . . , βj , . . .)\r\n\r\n\r\nm1\r\n2\r\nm2\r\n2\r\n.\r\n.\r\n.\r\nm\r\nj\r\n2\r\n.\r\n.\r\n.\r\n\r\n\r\n, · · · ,(β1, β2, . . . , βj , . . .)\r\n\r\n\r\nm1\r\ni\r\nm2\r\ni\r\n.\r\n.\r\n.\r\nm\r\nj\r\ni\r\n.\r\n.\r\n.\r\n\r\n\r\n, · · · \u0011\r\n= (β1, β2, . . . , βj , . . .)\r\n\r\n\r\nm1\r\n1 m12\r\n· · · m1\r\ni\r\n· · ·\r\nm2\r\n1 m2\r\n2\r\n· · · m2\r\ni\r\n· · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nm\r\nj\r\n1 m\r\nj\r\n2\r\n· · · m\r\nj\r\ni\r\n· · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\n\r\nExample 78 Consider L : V → R\r\n3\r\n(as in example 70) defined by\r\nL\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n , L\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n .\r\nBy linearity this specifies the action of L on any vector from V as\r\nL\r\n\r\nc1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c2\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n = (c1 + c2)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n .\r\n123",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/847bc929-618c-4e48-8623-59e7b92ec093.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a07b23cf9756dc4836bd8d576856e38a242381c69ddee08711a2db9790550553",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 437
      },
      {
        "segments": [
          {
            "segment_id": "20ee85e5-923c-4c66-8cca-3a547d305562",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 124,
            "page_width": 612,
            "page_height": 792,
            "content": "124 Matrices\r\nWe had trouble expressing this linear operator as a matrix. Lets take input basis\r\nB =\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n =: (b1, b2),\r\nand output basis\r\nE =\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\n\r\n .\r\nThen\r\nLb1 = 0e1 + 1e2 + 0e3 ,\r\nLb2 = 0e1 + 1e2 + 0e3 ,\r\nor\r\n\r\nLb1, Lb2) = (e1, e2, e3)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,(e1, e2, e3)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n\r\n\u0001\r\n= (e1, e2, e3)\r\n\r\n\r\n0 0\r\n1 1\r\n0 0\r\n\r\n .\r\nThe matrix on the right is the matrix of L in these bases. More succinctly we could\r\nwrite\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB\r\n= (x + y)\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n\r\nE\r\nand thus see that L acts like the matrix\r\n\r\n\r\n0 0\r\n1 1\r\n0 0\r\n\r\n.\r\nHence\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nB\r\n=\r\n\r\n\r\n\r\n\r\n0 0\r\n1 1\r\n0 0\r\n\r\n\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n\r\n\r\nE\r\n;\r\ngiven input and output bases, the linear operator is now encoded by a matrix.\r\nThis is the general rule for this chapter:\r\nReading homework: problem 1\r\nLinear operators become matrices when given\r\nordered input and output bases.\r\n124",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/20ee85e5-923c-4c66-8cca-3a547d305562.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=673f3f4cdecf13562953893ce982fd70640418abfda2e8a6e705db6c23f51787",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 251
      },
      {
        "segments": [
          {
            "segment_id": "21146fae-f582-4190-a8d9-b02c6290eff1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 125,
            "page_width": 612,
            "page_height": 792,
            "content": "7.2 Review Problems 125\r\nExample 79 Lets compute a matrix for the derivative operator acting on the vector\r\nspace of polynomials of degree 2 or less:\r\nV = {a01 + a1x + a2x\r\n2\r\n| a0, a1, a2 ∈ R} .\r\nIn the ordered basis B = (1, x, x2) we write\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB\r\n= a · 1 + bx + cx2\r\nand\r\nd\r\ndx\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\nB\r\n= b · 1 + 2cx + 0x\r\n2 =\r\n\r\n\r\nb\r\n2c\r\n0\r\n\r\n\r\nB\r\nIn the ordered basis B for both domain and range\r\nd\r\ndx\r\nB\r\n7→\r\n\r\n\r\n0 1 0\r\n0 0 2\r\n0 0 0\r\n\r\n\r\nNotice this last line makes no sense without explaining which bases we are using!\r\n7.2 Review Problems\r\nWebwork: Reading problem 1\r\nMatrix of a Linear Transformation 9, 10, 11, 12, 13\r\n1. A door factory can buy supplies in two kinds of packages, f and g. The\r\npackage f contains 3 slabs of wood, 4 fasteners, and 6 brackets. The\r\npackage g contains 5 fasteners, 3 brackets, and 7 slabs of wood.\r\n(a) Give a list of inputs and outputs for the functions f and g.\r\n(b) Give an order to the 3 kinds of supplies and then write f and g\r\nas elements of R\r\n3\r\n.\r\n(c) Let L be the manufacturing process; it takes in supply packages\r\nand gives out two products (doors, and door frames) and it is\r\nlinear in supplies. If Lf is 1 door and 2 frames and Lg is 3 doors\r\nand 1 frame, find a matrix for L.\r\n125",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/21146fae-f582-4190-a8d9-b02c6290eff1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fc1fb2d24085cba91427245197d3e5a6f672fbd664d26043856ef972f047b348",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 281
      },
      {
        "segments": [
          {
            "segment_id": "214111eb-c375-4e62-ba30-9d0762fdd56a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 126,
            "page_width": 612,
            "page_height": 792,
            "content": "126 Matrices\r\n2. You are designing a simple keyboard synthesizer with two keys. If you\r\npush the first key with intensity a then the speaker moves in time as\r\na sin(t). If you push the second key with intensity b then the speaker\r\nmoves in time as b sin(2t). If the keys are pressed simultaneously,\r\n(a) describe the set of all sounds that come out of your synthesizer.\r\n(Hint: Sounds can be “added”.)\r\n(b) Graph the function \u0012\r\n3\r\n5\r\n\u0013\r\n∈ R\r\n{1,2}\r\n.\r\n(c) Let B = (sin(t),sin(2t)). Explain why \u0012\r\n3\r\n5\r\n\u0013\r\nB\r\nis not in R\r\n{1,2} but\r\nis still a function.\r\n(d) Graph the function \u0012\r\n3\r\n5\r\n\u0013\r\nB\r\n.\r\n3. (a) Find the matrix for d\r\ndx acting on the vector space V of polynomi\u0002als of degree 2 or less in the ordered basis B0 = (x\r\n2\r\n, x, 1)\r\n(b) Use the matrix from part (a) to rewrite the differential equation\r\nd\r\ndx p(x) = x as a matrix equation. Find all solutions of the matrix\r\nequation. Translate them into elements of V .\r\n(c) Find the matrix for d\r\ndx acting on the vector space V in the ordered\r\nbasis (x\r\n2 + x, x2 − x, 1).\r\n(d) Use the matrix from part (c) to rewrite the differential equation\r\nd\r\ndx p(x) = x as a matrix equation. Find all solutions of the matrix\r\nequation. Translate them into elements of V .\r\n(e) Compare and contrast your results from parts (b) and (d).\r\n4. Find the “matrix” for d\r\ndx acting on the vector space of all power series\r\nin the ordered basis (1, x, x2, x3, ...). Use this matrix to find all power\r\nseries solutions to the differential equation d\r\ndx f(x) = x. Hint: your\r\n126",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/214111eb-c375-4e62-ba30-9d0762fdd56a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e3d9ce7280837fb5707b1a1eb35c71cadd4aa79a03b84e2138de37c99d67e7cd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 301
      },
      {
        "segments": [
          {
            "segment_id": "6206548a-fbf6-41ad-abed-0d3ef28db715",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 127,
            "page_width": 612,
            "page_height": 792,
            "content": "7.2 Review Problems 127\r\n“matrix” may not have finite size.\r\n5. Find the matrix for d\r\n2\r\ndx2 acting on {c1 cos(x) + c2 sin(x) | c1, c2 ∈ R} in\r\nthe ordered basis (cos(x),sin(x)).\r\n6. Find the matrix for d\r\ndx acting on {c1 cosh(x) + c2 sinh(x)|c1, c2 ∈ R} in\r\nthe ordered basis\r\n(cosh(x) sinh(x))\r\nand in the ordered basis\r\n(cosh(x) + sinh(x), cosh(x) − sinh(x)).\r\n7. Let B = (1, x, x2) be an ordered basis for\r\nV = {a0 + a1x + a2x\r\n2\r\n| a0, a1, a2 ∈ R} ,\r\nand let B0 = (x\r\n3\r\n, x2, x, 1) be an ordered basis for\r\nW = {a0 + a1x + a2x\r\n2 + a3x3\r\n| a0, a1, a2, a3 ∈ R} ,\r\nFind the matrix for the operator I : V → W defined by\r\nIp(x) = Z x\r\n1\r\np(t)dt\r\nrelative to these bases.\r\n8. This exercise is meant to show you a generalization of the procedure\r\nyou learned long ago for finding the function mx+b given two points on\r\nits graph. It will also show you a way to think of matrices as members\r\nof a much bigger class of arrays of numbers.\r\nFind the\r\n(a) constant function f : R → R whose graph contains (2, 3).\r\n127",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6206548a-fbf6-41ad-abed-0d3ef28db715.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=38eae57e89afb63254e5ffea2b67733adf353821bee323872da61bde7bc445d9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 218
      },
      {
        "segments": [
          {
            "segment_id": "238c9bf3-c5e0-41e7-a17e-9b2edc207dad",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 128,
            "page_width": 612,
            "page_height": 792,
            "content": "128 Matrices\r\n(b) linear function h : R → R whose graph contains (5, 4).\r\n(c) first order polynomial function g : R → R whose graph contains\r\n(1, 2) and (3, 3).\r\n(d) second order polynomial function p : R → R whose graph contains\r\n(1, 0), (3, 0) and (5, 0).\r\n(e) second order polynomial function q : R → R whose graph contains\r\n(1, 1), (3, 2) and (5, 7).\r\n(f) second order homogeneous polynomial function r : R → R whose\r\ngraph contains (3, 2).\r\n(g) number of points required to specify a third order polynomial\r\nR → R.\r\n(h) number of points required to specify a third order homogeneous\r\npolynomial R → R.\r\n(i) number of points required to specify a n-th order polynomial R →\r\nR.\r\n(j) number of points required to specify a n-th order homogeneous\r\npolynomial R → R.\r\n(k) first order polynomial function F : R\r\n2 → R whose graph contains\r\n\u0012\u0012 0\r\n0\r\n\u0013\r\n, 1\r\n\u0013\r\n,\r\n\u0012\u0012 0\r\n1\r\n\u0013\r\n, 2\r\n\u0013\r\n,\r\n\u0012\u0012 1\r\n0\r\n\u0013\r\n, 3\r\n\u0013\r\n, and \u0012\u0012 1\r\n1\r\n\u0013\r\n, 4\r\n\u0013\r\n.\r\n(l) homogeneous first order polynomial function H : R\r\n2 → R whose\r\ngraph contains \u0012\u0012 0\r\n1\r\n\u0013\r\n, 2\r\n\u0013\r\n,\r\n\u0012\u0012 1\r\n0\r\n\u0013\r\n, 3\r\n\u0013\r\n, and \u0012\u0012 1\r\n1\r\n\u0013\r\n, 4\r\n\u0013\r\n.\r\n(m) second order polynomial function J : R\r\n2 → R whose graph con\u0002tains \u0012\u0012 0\r\n0\r\n\u0013\r\n, 0\r\n\u0013\r\n,\r\n\u0012\u0012 0\r\n1\r\n\u0013\r\n, 2\r\n\u0013\r\n,\r\n\u0012\u0012 0\r\n2\r\n\u0013\r\n, 5\r\n\u0013\r\n,\r\n\u0012\u0012 1\r\n0\r\n\u0013\r\n, 3\r\n\u0013\r\n,\r\n\u0012\u0012 2\r\n0\r\n\u0013\r\n, 6\r\n\u0013\r\n, and \u0012\u0012 1\r\n1\r\n\u0013\r\n, 4\r\n\u0013\r\n.\r\n(n) first order polynomial function K : R\r\n2 → R2 whose graph con\u0002tains \u0012\u0012 0\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n1\r\n\u0013\u0013,\u0012\u0012 0\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n2\r\n2\r\n\u0013\u0013,\r\n128",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/238c9bf3-c5e0-41e7-a17e-9b2edc207dad.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f79b283526b08861d89c872aba739052169ac1407533d61c5631c23209e6d124",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 329
      },
      {
        "segments": [
          {
            "segment_id": "d2b63b87-eb71-4ebd-adfb-951fd017ef8e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 129,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 129\r\n\u0012\u0012 1\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n3\r\n3\r\n\u0013\u0013, and \u0012\u0012 1\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n4\r\n4\r\n\u0013\u0013.\r\n(o) How many points in the graph of a q-th order polynomial function\r\nR\r\nn → Rn would completely determine the function?\r\n(p) In particular, how many points of the graph of linear function\r\nR\r\nn → Rn would completely determine the function? How does a\r\nmatrix (in the standard basis) encode this information?\r\n(q) Propose a way to store the information required in 8g above in an\r\narray of numbers.\r\n(r) Propose a way to store the information required in 8o above in an\r\narray of numbers.\r\n7.3 Properties of Matrices\r\nThe objects of study in linear algebra are linear operators. We have seen that\r\nlinear operators can be represented as matrices through choices of ordered\r\nbases, and that matrices provide a means of efficient computation.\r\nWe now begin an in depth study of matrices.\r\nDefinition An r × k matrix M = (mi\r\nj\r\n) for i = 1, . . . , r; j = 1, . . . , k is a\r\nrectangular array of real (or complex) numbers:\r\nM =\r\n\r\n\r\nm1\r\n1 m12\r\n· · · m1\r\nk\r\nm2\r\n1 m2\r\n2\r\n· · · m2\r\nk\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nmr\r\n1 mr2\r\n· · · mr\r\nk\r\n\r\n\r\n.\r\nThe numbers mi\r\nj\r\nare called entries. The superscript indexes the row of\r\nthe matrix and the subscript indexes the column of the matrix in which mi\r\nj\r\nappears.\r\nAn r × 1 matrix v = (v\r\nr\r\n1\r\n) = (v\r\nr\r\n) is called a column vector , written\r\nv =\r\n\r\n\r\nv\r\n1\r\nv\r\n2\r\n.\r\n.\r\n.\r\nv\r\nr\r\n\r\n\r\n.\r\n129",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d2b63b87-eb71-4ebd-adfb-951fd017ef8e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=97c9c48cf5dac77d9d67cb1094d206c6d9364fe54d04205b8a15c708f381feec",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 306
      },
      {
        "segments": [
          {
            "segment_id": "83e320bf-c165-4284-b64b-8fd7463a04cf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 130,
            "page_width": 612,
            "page_height": 792,
            "content": "130 Matrices\r\nA 1 × k matrix v = (v\r\n1\r\nk\r\n) = (vk) is called a row vector , written\r\nv =\r\n\r\nv1 v2 · · · vk\r\n\u0001\r\n.\r\nThe transpose of a column vector is the corresponding row vector and vice\r\nversa:\r\nExample 80 Let\r\nv =\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n .\r\nThen\r\nv\r\nT =\r\n\r\n1 2 3\u0001\r\n,\r\nand (v\r\nT\r\n)\r\nT = v.\r\nA matrix is an efficient way to store information.\r\nExample 81 In computer graphics, you may have encountered image files with a .gif\r\nextension. These files are actually just matrices: at the start of the file the size of the\r\nmatrix is given, after which each number is a matrix entry indicating the color of a\r\nparticular pixel in the image.\r\nThis matrix then has its rows shuffled a bit: by listing, say, every eighth row, a web\r\nbrowser downloading the file can start displaying an incomplete version of the picture\r\nbefore the download is complete.\r\nFinally, a compression algorithm is applied to the matrix to reduce the file size.\r\nExample 82 Graphs occur in many applications, ranging from telephone networks to\r\nairline routes. In the subject of graph theory, a graph is just a collection of vertices\r\nand some edges connecting vertices. A matrix can be used to indicate how many edges\r\nattach one vertex to another.\r\n130",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/83e320bf-c165-4284-b64b-8fd7463a04cf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a838c2cb34a5423fbf9a4b531bf32c3a2b11c120387a046ee9978991ca881df7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 233
      },
      {
        "segments": [
          {
            "segment_id": "e17e7004-f1ca-43ac-ae03-118159ed92ee",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 131,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 131\r\nFor example, the graph pictured above would have the following matrix, where mi\r\nj\r\nindicates the number of edges between the vertices labeled i and j:\r\nM =\r\n\r\n\r\n1 2 1 1\r\n2 0 1 0\r\n1 1 0 1\r\n1 0 1 3\r\n\r\n\r\nThis is an example of a symmetric matrix, since mi\r\nj = m\r\nj\r\ni\r\n.\r\nAdjacency Matrix Example\r\nThe set of all r × k matrices\r\nMr\r\nk\r\n:= {(mi\r\nj\r\n)|mi\r\nj ∈ R; i ∈ {1, . . . , r}; j ∈ {1 . . . k}} ,\r\nis itself a vector space with addition and scalar multiplication defined as\r\nfollows:\r\nM + N = (mi\r\nj\r\n) + (n\r\ni\r\nj\r\n) = (mi\r\nj + n\r\ni\r\nj\r\n)\r\nrM = r(mi\r\nj\r\n) = (rmi\r\nj\r\n)\r\nIn other words, addition just adds corresponding entries in two matrices,\r\nand scalar multiplication multiplies every entry. Notice that Mn\r\n1 = R\r\nn\r\nis just\r\nthe vector space of column vectors.\r\nRecall that we can multiply an r × k matrix by a k × 1 column vector to\r\nproduce a r × 1 column vector using the rule\r\nMV =\r\nX\r\nk\r\nj=1\r\nmi\r\nj\r\nv\r\nj\r\n\u0001\r\n.\r\nThis suggests the rule for multiplying an r × k matrix M by a k × s\r\nmatrix N: our k ×s matrix N consists of s column vectors side-by-side, each\r\nof dimension k × 1. We can multiply our r × k matrix M by each of these s\r\ncolumn vectors using the rule we already know, obtaining s column vectors\r\neach of dimension r × 1. If we place these s column vectors side-by-side, we\r\nobtain an r × s matrix MN.\r\n131",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e17e7004-f1ca-43ac-ae03-118159ed92ee.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=db8605439fe9b430dec2c627fffbdd60a378262996da0192e329ca975dc9ca3a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 303
      },
      {
        "segments": [
          {
            "segment_id": "93abd527-ccbc-436e-9645-60e4f83657d8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 132,
            "page_width": 612,
            "page_height": 792,
            "content": "132 Matrices\r\nThat is, let\r\nN =\r\n\r\n\r\nn\r\n1\r\n1 n\r\n1\r\n2\r\n· · · n\r\n1\r\ns\r\nn\r\n2\r\n1 n\r\n2\r\n2\r\n· · · n\r\n2\r\ns\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nn\r\nk\r\n1 n\r\nk\r\n2\r\n· · · n\r\nk\r\ns\r\n\r\n\r\nand call the columns N1 through Ns:\r\nN1 =\r\n\r\n\r\nn\r\n1\r\n1\r\nn\r\n2\r\n1\r\n.\r\n.\r\n.\r\nn\r\nk\r\n1\r\n\r\n\r\n, N2 =\r\n\r\n\r\nn\r\n1\r\n2\r\nn\r\n2\r\n2\r\n.\r\n.\r\n.\r\nn\r\nk\r\n2\r\n\r\n\r\n, . . . , Ns =\r\n\r\n\r\nn\r\n1\r\ns\r\nn\r\n2\r\ns\r\n.\r\n.\r\n.\r\nn\r\nk\r\ns\r\n\r\n\r\n.\r\nThen\r\nMN = M\r\n\r\n\r\n| | |\r\nN1 N2 · · · Ns\r\n| | |\r\n\r\n =\r\n\r\n\r\n| | |\r\nMN1 MN2 · · · MNs\r\n| | |\r\n\r\n\r\nConcisely: If M = (mi\r\nj\r\n) for i = 1, . . . , r; j = 1, . . . , k and N = (n\r\ni\r\nj\r\n) for\r\ni = 1, . . . , k; j = 1, . . . , s, then MN = L where L = (`\r\ni\r\nj\r\n) for i = i, . . . , r; j =\r\n1, . . . , s is given by\r\n`\r\ni\r\nj =\r\nX\r\nk\r\np=1\r\nmi\r\npn\r\np\r\nj\r\n.\r\nThis rule obeys linearity.\r\nNotice that in order for the multiplication to make sense, the columns\r\nand rows must match. For an r × k matrix M and an s × m matrix N, then\r\nto make the product MN we must have k = s. Likewise, for the product\r\nNM, it is required that m = r. A common shorthand for keeping track of\r\nthe sizes of the matrices involved in a given product is the following diagram.\r\n\u0010\r\nr × k\r\n\u0011\r\ntimes \u0010k × m\r\n\u0011\r\nis \u0010r × m\r\n\u0011\r\nReading homework: problem 2\r\n132",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/93abd527-ccbc-436e-9645-60e4f83657d8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ad93a53078e2f3805855b0981224e148374c22c4bb3f201cf2c8603b6e6d339a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 351
      },
      {
        "segments": [
          {
            "segment_id": "a4426140-cca5-4340-b1a5-ba6ecaa7b259",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 133,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 133\r\nExample 83 Multiplying a (3×1) matrix and a (1×2) matrix yields a (3×2) matrix.\r\n\r\n\r\n1\r\n3\r\n2\r\n\r\n\r\n\r\n2 3\u0001\r\n=\r\n\r\n\r\n1 · 2 1 · 3\r\n3 · 2 3 · 3\r\n2 · 2 2 · 3\r\n\r\n =\r\n\r\n\r\n2 3\r\n6 9\r\n4 6\r\n\r\n .\r\nAnother way to view matrix multiplication is in terms of dot products:\r\nThe entries of MN are made from the dot products of the rows of\r\nM with the columns of N.\r\nExample 84 Let\r\nM =\r\n\r\n\r\n1 3\r\n3 5\r\n2 6\r\n\r\n =:\r\n\r\n\r\nu\r\nT\r\nv\r\nT\r\nw\r\nT\r\n\r\n and N =\r\n\u0012\r\n2 3 1\r\n0 1 0\u0013\r\n=: \r\na b c\u0001\r\nwhere\r\nu =\r\n\u0012\r\n1\r\n3\r\n\u0013\r\n, v =\r\n\u0012\r\n3\r\n5\r\n\u0013\r\n, w =\r\n\u0012\r\n2\r\n6\r\n\u0013\r\n, a =\r\n\u0012\r\n2\r\n0\r\n\u0013\r\n, b =\r\n\u0012\r\n3\r\n1\r\n\u0013\r\n, c =\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n.\r\nThen\r\nMN =\r\n\r\n\r\nu · a u · b u · c\r\nv · a v · b v · c\r\nw · a w · b w · c\r\n\r\n =\r\n\r\n\r\n2 6 1\r\n6 14 3\r\n4 12 2\r\n\r\n .\r\nThis fact has an obvious yet important consequence:\r\nTheorem 7.3.1. Let M be a matrix and x a column vector. If\r\nMx = 0\r\nthen the vector x is orthogonal to the rows of M.\r\nRemark Remember that the set of all vectors that can be obtained by adding up\r\nscalar multiples of the columns of a matrix is called its column space . Similarly the\r\nrow space is the set of all row vectors obtained by adding up multiples of the rows\r\nof a matrix. The above theorem says that if Mx = 0, then the vector x is orthogonal\r\nto every vector in the row space of M.\r\n133",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a4426140-cca5-4340-b1a5-ba6ecaa7b259.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e11de806cc42032995bb93112077b541a293808b2904d95d295a54deeb9d90e5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 338
      },
      {
        "segments": [
          {
            "segment_id": "8bee4b65-89fa-4bec-aace-182e228cb0b1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 134,
            "page_width": 612,
            "page_height": 792,
            "content": "134 Matrices\r\nWe know that r × k matrices can be used to represent linear transforma\u0002tions R\r\nk → Rr via\r\n(MV )\r\ni =\r\nX\r\nk\r\nj=1\r\nmi\r\nj\r\nv\r\nj\r\n,\r\nwhich is the same rule used when we multiply an r × k matrix by a k × 1\r\nvector to produce an r × 1 vector.\r\nLikewise, we can use a matrix N = (n\r\ni\r\nj\r\n) to define a linear transformation\r\nof a vector space of matrices. For example\r\nL: Ms\r\nk\r\nN\r\n−→ Mr\r\nk\r\n,\r\nL(M) = (l\r\ni\r\nk\r\n) where l\r\ni\r\nk =\r\nXs\r\nj=1\r\nn\r\ni\r\njm\r\nj\r\nk\r\n.\r\nThis is the same as the rule we use to multiply matrices. In other words,\r\nL(M) = NM is a linear transformation.\r\nMatrix Terminology Let M = (mi\r\nj\r\n) be a matrix. The entries mi\r\ni\r\nare called\r\ndiagonal, and the set {m1\r\n1\r\n, m2\r\n2\r\n, . . .} is called the diagonal of the matrix.\r\nAny r × r matrix is called a square matrix. A square matrix that is\r\nzero for all non-diagonal entries is called a diagonal matrix. An example\r\nof a square diagonal matrix is\r\n\r\n\r\n2 0 0\r\n0 3 0\r\n0 0 0\r\n\r\n .\r\nThe r × r diagonal matrix with all diagonal entries equal to 1 is called\r\nthe identity matrix, Ir, or just I. An identity matrix looks like\r\nI =\r\n\r\n\r\n1 0 0 · · · 0\r\n0 1 0 · · · 0\r\n0 0 1 · · · 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 0 · · · 1\r\n\r\n\r\n.\r\nThe identity matrix is special because\r\nIrM = MIk = M\r\nfor all M of size r × k.\r\n134",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8bee4b65-89fa-4bec-aace-182e228cb0b1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4e6052204770501da4e7e270051678f9c5f54ac15d64b1bc475c070a313602f1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a968effe-c03b-4e23-b62b-64540997ca49",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 135,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 135\r\nDefinition The transpose of an r×k matrix M = (mi\r\nj\r\n) is the k ×r matrix\r\nwith entries\r\nMT = ( ˆmi\r\nj\r\n)\r\nwith ˆmi\r\nj = m\r\nj\r\ni\r\n.\r\nA matrix M is symmetric if M = MT.\r\nExample 85\r\n\u0012\r\n2 5 6\r\n1 3 4\u0013T\r\n=\r\n\r\n\r\n2 1\r\n5 3\r\n6 4\r\n\r\n ,\r\nand\r\n\u0012\r\n2 5 6\r\n1 3 4\u0013 \u00122 5 61 3 4\u0013T\r\n=\r\n\u0012\r\n65 43\r\n43 26\u0013\r\n,\r\nis symmetric.\r\nReading homework: problem 3\r\nObservations\r\n• Only square matrices can be symmetric.\r\n• The transpose of a column vector is a row vector, and vice-versa.\r\n• Taking the transpose of a matrix twice does nothing. i.e., (MT\r\n)\r\nT = M.\r\nTheorem 7.3.2 (Transpose and Multiplication). Let M, N be matrices such\r\nthat MN makes sense. Then\r\n(MN)\r\nT = NTMT\r\n.\r\nThe proof of this theorem is left to Review Question 2.\r\n135",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a968effe-c03b-4e23-b62b-64540997ca49.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=db6e52219ea934a23c3f81f5c11224bbedb7b4aa0abe11ac6215af765fc5be88",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 479
      },
      {
        "segments": [
          {
            "segment_id": "c9c1aaf9-b6c8-4f31-99bb-c3b6beaa5a4c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 136,
            "page_width": 612,
            "page_height": 792,
            "content": "136 Matrices\r\n7.3.1 Associativity and Non-Commutativity\r\nMany properties of matrices following from the same property for real num\u0002bers. Here is an example.\r\nExample 86 Associativity of matrix multiplication. We know for real numbers x, y\r\nand z that\r\nx(yz) = (xy)z ,\r\ni.e., the order of multiplications does not matter. The same property holds for matrix\r\nmultiplication, let us show why. Suppose M =\r\n\r\nmi\r\nj\r\n\u0001\r\n, N =\r\n\r\nn\r\nj\r\nk\r\n\u0001\r\nand R =\r\n\r\nr\r\nk\r\nl\r\n\u0001\r\nare, respectively, m × n, n × r and r × t matrices. Then from the rule for matrix\r\nmultiplication we have\r\nMN =\r\n\u0010Xn\r\nj=1\r\nmi\r\njn\r\nj\r\nk\r\n\u0011\r\nand NR =\r\n\u0010Xr\r\nk=1\r\nn\r\nj\r\nk\r\nr\r\nk\r\nl\r\n\u0011\r\n.\r\nSo first we compute\r\n(MN)R =\r\n\u0010Xr\r\nk=1\r\nhXn\r\nj=1\r\nmi\r\njn\r\nj\r\nk\r\ni\r\nr\r\nk\r\nl\r\n\u0011\r\n=\r\n\u0010Xr\r\nk=1\r\nXn\r\nj=1\r\nh\r\nmi\r\njn\r\nj\r\nk\r\ni\r\nr\r\nk\r\nl\r\n\u0011\r\n=\r\n\u0010Xr\r\nk=1\r\nXn\r\nj=1\r\nmi\r\njn\r\nj\r\nk\r\nr\r\nk\r\nl\r\n\u0011\r\n.\r\nIn the first step we just wrote out the definition for matrix multiplication, in the second\r\nstep we moved summation symbol outside the bracket (this is just the distributive\r\nproperty x(y+z) = xy+xz for numbers) and in the last step we used the associativity\r\nproperty for real numbers to remove the square brackets. Exactly the same reasoning\r\nshows that\r\nM(NR) = \u0010Xn\r\nj=1\r\nmi\r\nj\r\nhXr\r\nk=1\r\nn\r\nj\r\nk\r\nr\r\nk\r\nl\r\ni\u0011 =\u0010Xr\r\nk=1\r\nXn\r\nj=1\r\nmi\r\nj\r\nh\r\nn\r\nj\r\nk\r\nr\r\nk\r\nl\r\ni\u0011 =\u0010Xr\r\nk=1\r\nXn\r\nj=1\r\nmi\r\njn\r\nj\r\nk\r\nr\r\nk\r\nl\r\n\u0011\r\n.\r\nThis is the same as above so we are done. As a fun remark, note that Einstein would\r\nsimply have written (MN)R = (mi\r\njn\r\nj\r\nk\r\n)r\r\nk\r\nl = mi\r\njn\r\nj\r\nk\r\nr\r\nk\r\nl = mi\r\nj\r\n(n\r\nj\r\nk\r\nr\r\nk\r\nl\r\n) = M(NR).\r\nSometimes matrices do not share the properties of regular numbers. In\r\nparticular, for generic n × n square matrices M and N,\r\nMN 6= NM .\r\nDo Matrices Commute?\r\n136",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c9c1aaf9-b6c8-4f31-99bb-c3b6beaa5a4c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5ebd963dc36bc89a8a4094fee4732439954e6444f521c2432311a0120c7091f8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 354
      },
      {
        "segments": [
          {
            "segment_id": "fea2bd62-1397-4cec-ab50-1ec88a7e70c4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 137,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 137\r\nExample 87 (Matrix multiplication does not commute.)\r\n\u0012\r\n1 1\r\n0 1\u0013 \u00121 01 1\u0013\r\n=\r\n\u0012\r\n2 1\r\n1 1\u0013\r\nwhile, on the other hand,\r\n\u0012\r\n1 0\r\n1 1\u0013 \u00121 1\r\n0 1\u0013\r\n=\r\n\u0012\r\n1 1\r\n1 2\u0013\r\n.\r\nSince n × n matrices are linear transformations R\r\nn → Rn\r\n, we can see that\r\nthe order of successive linear transformations matters.\r\nHere is an example of matrices acting on objects in three dimensions that\r\nalso shows matrices not commuting.\r\nExample 88 In Review Problem 3, you learned that the matrix\r\nM =\r\n\u0012\r\ncos θ sin θ\r\n− sin θ cos θ\r\n\u0013\r\n,\r\nrotates vectors in the plane by an angle θ. We can generalize this, using block matrices,\r\nto three dimensions. In fact the following matrices built from a 2 × 2 rotation matrix,\r\na 1 × 1 identity matrix and zeroes everywhere else\r\nM =\r\n\r\n\r\ncos θ sin θ 0\r\n− sin θ cos θ 0\r\n0 0 1\r\n\r\n and N =\r\n\r\n\r\n1 0 0\r\n0 cos θ sin θ\r\n0 − sin θ cos θ\r\n\r\n ,\r\nperform rotations by an angle θ in the xy and yz planes, respectively. Because, they\r\nrotate single vectors, you can also use them to rotate objects built from a collection of\r\nvectors like pretty colored blocks! Here is a picture of M and then N acting on such\r\na block, compared with the case of N followed by M. The special case of θ = 90◦is\r\nshown.\r\nNotice how the endproducts of MN and NM are different, so MN 6= NM here.\r\n137",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fea2bd62-1397-4cec-ab50-1ec88a7e70c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3249304fa548b3ad388225620b838eb456c7a73c33678580ecd173b5d5242697",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 281
      },
      {
        "segments": [
          {
            "segment_id": "0f4478f2-2628-4644-b723-fc173cf905b4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 138,
            "page_width": 612,
            "page_height": 792,
            "content": "138 Matrices\r\n7.3.2 Block Matrices\r\nIt is often convenient to partition a matrix M into smaller matrices called\r\nblocks. For example\r\nM =\r\n\r\n\r\n1 2 3 1\r\n4 5 6 0\r\n7 8 9 1\r\n0 1 2 0\r\n\r\n =\r\n\u0012\r\nA B\r\nC D\r\n\u0013\r\nWhere A =\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n, B =\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n, C =\r\n\r\n0 1 2\u0001\r\n, D = (0).\r\n• The blocks of a block matrix must fit together to form a rectangle. So\r\n\u0012\r\nB A\r\nD C\r\n\u0013\r\nmakes sense, but \u0012\r\nC B\r\nD A\r\n\u0013\r\ndoes not.\r\nReading homework: problem 4\r\n• There are many ways to cut up an n × n matrix into blocks. Often\r\ncontext or the entries of the matrix will suggest a useful way to divide\r\nthe matrix into blocks. For example, if there are large blocks of zeros\r\nin a matrix, or blocks that look like an identity matrix, it can be useful\r\nto partition the matrix accordingly.\r\n• Matrix operations on block matrices can be carried out by treating the\r\nblocks as matrix entries. In the example above,\r\nM2 =\r\n\u0012\r\nA B\r\nC D\r\n\u0013 \u0012A B\r\nC D\r\n\u0013\r\n=\r\n\u0012\r\nA2 + BC AB + BD\r\nCA + DC CB + D2\r\n\u0013\r\n138",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0f4478f2-2628-4644-b723-fc173cf905b4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=69a69f600a247d31e312f8d556bfe3cead37de77d712f9c8306db7a2430420ff",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5e3a8274-4461-4e91-bf15-6d4d75776d96",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 139,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 139\r\nComputing the individual blocks, we get:\r\nA\r\n2 + BC =\r\n\r\n\r\n30 37 44\r\n66 81 96\r\n102 127 152\r\n\r\n\r\nAB + BD =\r\n\r\n\r\n4\r\n10\r\n16\r\n\r\n\r\nCA + DC =\r\n\r\n\r\n18\r\n21\r\n24\r\n\r\n\r\nCB + D\r\n2 = (2)\r\nAssembling these pieces into a block matrix gives:\r\n\r\n\r\n30 37 44 4\r\n66 81 96 10\r\n102 127 152 16\r\n4 10 16 2\r\n\r\n\r\nThis is exactly M2.\r\n7.3.3 The Algebra of Square Matrices\r\nNot every pair of matrices can be multiplied. When multiplying two matrices,\r\nthe number of rows in the left matrix must equal the number of columns in\r\nthe right. For an r × k matrix M and an s × l matrix N, then we must\r\nhave k = s.\r\nThis is not a problem for square matrices of the same size, though.\r\nTwo n × n matrices can be multiplied in either order. For a single ma\u0002trix M ∈ Mn\r\nn\r\n, we can form M2 = MM, M3 = MMM, and so on. It is useful\r\nto define\r\nM0 = I ,\r\nthe identity matrix, just like x\r\n0 = 1 for numbers.\r\nAs a result, any polynomial can be have square matrices in it’s domain.\r\n139",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5e3a8274-4461-4e91-bf15-6d4d75776d96.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=30af0968a88f564fc183209914e8a3fb84e7f524ee268fadf21bbc943bfeda01",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 457
      },
      {
        "segments": [
          {
            "segment_id": "a17986e6-30d8-4c84-9566-5f586afb5bd2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 140,
            "page_width": 612,
            "page_height": 792,
            "content": "140 Matrices\r\nExample 89 Let f(x) = x − 2x\r\n2 + 3x3\r\nand\r\nM =\r\n\u0012\r\n1 t\r\n0 1\u0013\r\n.\r\nThen\r\nM2 =\r\n\u0012\r\n1 2t\r\n0 1\u0013\r\n, M3 =\r\n\u0012\r\n1 3t\r\n0 1\u0013\r\n, . . .\r\nand so\r\nf(M) = \u0012\r\n1 t\r\n0 1\u0013\r\n− 2\r\n\u0012\r\n1 2t\r\n0 1\u0013\r\n+ 3 \u0012\r\n1 3t\r\n0 1\u0013\r\n=\r\n\u0012\r\n2 6t\r\n0 2\u0013\r\n.\r\nSuppose f(x) is any function defined by a convergent Taylor Series:\r\nf(x) = f(0) + f\r\n0\r\n(0)x +\r\n1\r\n2!f\r\n00(0)x2 + · · · .\r\nThen we can define the matrix function by just plugging in M:\r\nf(M) = f(0) + f\r\n0\r\n(0)M +\r\n1\r\n2!f\r\n00(0)M2 + · · · .\r\nThere are additional techniques to determine the convergence of Taylor Series\r\nof matrices, based on the fact that the convergence problem is simple for\r\ndiagonal matrices. It also turns out that the matrix exponential\r\nexp(M) = I + M +\r\n1\r\n2\r\nM2 +\r\n1\r\n3!M3 + · · · ,\r\nalways converges.\r\nMatrix Exponential Example\r\n7.3.4 Trace\r\nA large matrix contains a great deal of information, some of which often re\u0002flects the fact that you have not set up your problem efficiently. For example,\r\na clever choice of basis can often make the matrix of a linear transformation\r\nvery simple. Therefore, finding ways to extract the essential information of\r\na matrix is useful. Here we need to assume that n < ∞ otherwise there are\r\nsubtleties with convergence that we’d have to address.\r\n140",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a17986e6-30d8-4c84-9566-5f586afb5bd2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e5acf8c6e641f5cb2e1da1c795867c96cb58ead436da66838a0e50ae56c76aae",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "28b5ffce-5db3-49b2-9929-d0422727a9f3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 141,
            "page_width": 612,
            "page_height": 792,
            "content": "7.3 Properties of Matrices 141\r\nDefinition The trace of a square matrix M = (mi\r\nj\r\n) is the sum of its diag\u0002onal entries:\r\ntr M =\r\nXn\r\ni=1\r\nmi\r\ni\r\n.\r\nExample 90\r\ntr\r\n\r\n\r\n2 7 6\r\n9 5 1\r\n4 3 8\r\n\r\n = 2 + 5 + 8 = 15 .\r\nWhile matrix multiplication does not commute, the trace of a product of\r\nmatrices does not depend on the order of multiplication:\r\ntr(MN) = tr(X\r\nl\r\nMi\r\nl N\r\nl\r\nj\r\n)\r\n=\r\nX\r\ni\r\nX\r\nl\r\nMi\r\nl N\r\nl\r\ni\r\n=\r\nX\r\nl\r\nX\r\ni\r\nN\r\nl\r\niMil\r\n= tr(X\r\ni\r\nN\r\nl\r\niMil\r\n)\r\n= tr(NM).\r\nProof Explanation\r\nThus we have a Theorem:\r\nTheorem 7.3.3. For any square matrices M and N\r\ntr(MN) = tr(NM).\r\nExample 91 Continuing from the previous example,\r\nM =\r\n\u0012\r\n1 1\r\n0 1\u0013\r\n, N =\r\n\u0012\r\n1 0\r\n1 1\u0013\r\n.\r\nso\r\nMN =\r\n\u0012\r\n2 1\r\n1 1\u0013\r\n6= NM =\r\n\u0012\r\n1 1\r\n1 2\u0013\r\n.\r\nHowever, tr(MN) = 2 + 1 = 3 = 1 + 2 = tr(NM).\r\n141",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/28b5ffce-5db3-49b2-9929-d0422727a9f3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4ba157b6659e213da9e3e2dc5bc8a23fd27738317a4a32ff04dcded3f2ac6ce3",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 451
      },
      {
        "segments": [
          {
            "segment_id": "309cfac4-9900-4618-8549-2534603815bc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 142,
            "page_width": 612,
            "page_height": 792,
            "content": "142 Matrices\r\nAnother useful property of the trace is that:\r\ntr M = tr MT\r\nThis is true because the trace only uses the diagonal entries, which are fixed\r\nby the transpose. For example,\r\ntr \u0012\r\n1 1\r\n2 3\u0013\r\n= 4 = tr \u0012\r\n1 2\r\n1 3\u0013\r\n= tr \u0012\r\n1 2\r\n1 3\u0013T\r\n.\r\nFinally, trace is a linear transformation from matrices to the real numbers.\r\nThis is easy to check.\r\n7.4 Review Problems\r\nWebwork: Reading Problems 2 , 3 , 4\r\n1. Compute the following matrix products\r\n\r\n\r\n1 2 1\r\n4 5 2\r\n7 8 2\r\n\r\n\r\n\r\n\r\n−2\r\n4\r\n3 −\r\n1\r\n3\r\n2 −\r\n5\r\n3\r\n2\r\n3\r\n−1 2 −1\r\n\r\n ,\r\n\r\n1 2 3 4 5\u0001\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n5\r\n\r\n\r\n,\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n5\r\n\r\n\r\n\r\n1 2 3 4 5\u0001\r\n,\r\n\r\n\r\n1 2 1\r\n4 5 2\r\n7 8 2\r\n\r\n\r\n\r\n\r\n−2\r\n4\r\n3 −\r\n1\r\n3\r\n2 −\r\n5\r\n3\r\n2\r\n3\r\n−1 2 −1\r\n\r\n\r\n\r\n\r\n1 2 1\r\n4 5 2\r\n7 8 2\r\n\r\n ,\r\n\r\nx y z\u0001\r\n\r\n\r\n2 1 1\r\n1 2 1\r\n1 1 2\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n ,\r\n\r\n\r\n2 1 2 1 2\r\n0 2 1 2 1\r\n0 1 2 1 2\r\n0 2 1 2 1\r\n0 0 0 0 2\r\n\r\n\r\n\r\n\r\n1 2 1 2 1\r\n0 1 2 1 2\r\n0 2 1 2 1\r\n0 1 2 1 2\r\n0 0 0 0 1\r\n\r\n\r\n,\r\n142",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/309cfac4-9900-4618-8549-2534603815bc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=31e4181dca54fe814855eccb08f6fbb13e527bb6a8961bf3c242bd9ebd7ac8a3",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 284
      },
      {
        "segments": [
          {
            "segment_id": "49e42de0-778d-418c-9b0c-1ea12a7026f2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 143,
            "page_width": 612,
            "page_height": 792,
            "content": "7.4 Review Problems 143\r\n\r\n\r\n−2\r\n4\r\n3 −\r\n1\r\n3\r\n2 −\r\n5\r\n3\r\n2\r\n3\r\n−1 2 −1\r\n\r\n\r\n\r\n\r\n4\r\n2\r\n3 −\r\n2\r\n3\r\n6\r\n5\r\n3 −\r\n2\r\n3\r\n12 −\r\n16\r\n3\r\n10\r\n3\r\n\r\n\r\n\r\n\r\n1 2 1\r\n4 5 2\r\n7 8 2\r\n\r\n .\r\n2. Let’s prove the theorem (MN)\r\nT = NTMT\r\n.\r\nNote: the following is a common technique for proving matrix identities.\r\n(a) Let M = (mi\r\nj\r\n) and let N = (n\r\ni\r\nj\r\n). Write out a few of the entries of\r\neach matrix in the form given at the beginning of section 7.3.\r\n(b) Multiply out MN and write out a few of its entries in the same\r\nform as in part (a). In terms of the entries of M and the entries\r\nof N, what is the entry in row i and column j of MN?\r\n(c) Take the transpose (MN)\r\nT and write out a few of its entries in\r\nthe same form as in part (a). In terms of the entries of M and the\r\nentries of N, what is the entry in row i and column j of (MN)\r\nT\r\n?\r\n(d) Take the transposes NT and MT and write out a few of their\r\nentries in the same form as in part (a).\r\n(e) Multiply out NTMT and write out a few of its entries in the same\r\nform as in part a. In terms of the entries of M and the entries of\r\nN, what is the entry in row i and column j of NTMT?\r\n(f) Show that the answers you got in parts (c) and (e) are the same.\r\n3. (a) Let A =\r\n\u0012\r\n1 2 0\r\n3 −1 4\u0013\r\n. Find AAT and ATA and their traces.\r\n(b) Let M be any m × n matrix. Show that MTM and MMT are\r\nsymmetric. (Hint: use the result of the previous problem.) What\r\nare their sizes? What is the relationship between their traces?\r\n4. Let x =\r\n\r\n\r\nx1\r\n.\r\n.\r\n.\r\nxn\r\n\r\n\r\nand y =\r\n\r\n\r\ny1\r\n.\r\n.\r\n.\r\nyn\r\n\r\n\r\nbe column vectors. Show that the\r\ndot product x y = x\r\nT\r\nI y.\r\nHint\r\n143",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/49e42de0-778d-418c-9b0c-1ea12a7026f2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b3663015f5d2832c7227ebc68994e65bc5528cf22388c190163b72a202cc7569",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 386
      },
      {
        "segments": [
          {
            "segment_id": "8f5e31de-3c35-4ce3-b7ad-2875eced61a5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 144,
            "page_width": 612,
            "page_height": 792,
            "content": "144 Matrices\r\n5. Above, we showed that left multiplication by an r × s matrix N was\r\na linear transformation Ms\r\nk\r\nN\r\n−→ Mr\r\nk\r\n. Show that right multiplication\r\nby a k × m matrix R is a linear transformation Ms\r\nk\r\nR\r\n−→ Ms\r\nm. In other\r\nwords, show that right matrix multiplication obeys linearity.\r\nHint\r\n6. Let the V be a vector space where B = (v1, v2) is an ordered basis.\r\nSuppose\r\nL : V\r\nlinear\r\n−−−→ V\r\nand\r\nL(v1) = v1 + v2 , L(v2) = 2v1 + v2 .\r\nCompute the matrix of L in the basis B and then compute the trace of\r\nthis matrix. Suppose that ad − bc 6= 0 and consider now the new basis\r\nB\r\n0 = (av1 + bv2, cv1 + dv2).\r\nCompute the matrix of L in the basis B0. Compute the trace of this\r\nmatrix. What do you find? What do you conclude about the trace\r\nof a matrix? Does it make sense to talk about the “trace of a linear\r\ntransformation” without reference to any bases?\r\n7. Explain what happens to a matrix when:\r\n(a) You multiply it on the left by a diagonal matrix.\r\n(b) You multiply it on the right by a diagonal matrix.\r\nGive a few simple examples before you start explaining.\r\n8. Compute exp(A) for the following matrices:\r\n• A =\r\n\u0012\r\nλ 0\r\n0 λ\r\n\u0013\r\n• A =\r\n\u0012\r\n1 λ\r\n0 1\u0013\r\n144",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8f5e31de-3c35-4ce3-b7ad-2875eced61a5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2bca5fec528f455e7dd865e1d0bce974c8aaf2194e3eacd0e1b89555af3c93f6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 246
      },
      {
        "segments": [
          {
            "segment_id": "1dfcca65-68a2-4c8c-b2f8-77224abf0fdc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 145,
            "page_width": 612,
            "page_height": 792,
            "content": "7.5 Inverse Matrix 145\r\n• A =\r\n\u0012\r\n0 λ\r\n0 0\u0013\r\nHint\r\n9. Let M =\r\n\r\n\r\n1 0 0 0 0 0 0 1\r\n0 1 0 0 0 0 1 0\r\n0 0 1 0 0 1 0 0\r\n0 0 0 1 1 0 0 0\r\n0 0 0 0 2 1 0 0\r\n0 0 0 0 0 2 0 0\r\n0 0 0 0 0 0 3 1\r\n0 0 0 0 0 0 0 3\r\n\r\n\r\n. Divide M into named blocks,\r\nwith one block the 4 × 4 identity matrix, and then multiply blocks to\r\ncompute M2.\r\n10. A matrix A is called anti-symmetric (or skew-symmetric) if AT = −A.\r\nShow that for every n × n matrix M, we can write M = A + S where\r\nA is an anti-symmetric matrix and S is a symmetric matrix.\r\nHint: What kind of matrix is M + MT ? How about M − MT ?\r\n11. An example of an operation which is not associative is the cross prod\u0002uct.\r\n(a) Give a simple example of three vectors from 3-space u, v, w such\r\nthat u × (v × w) 6= (u × v) × w.\r\n(b) We saw in chapter 1 that the operator B = u× (cross product\r\nwith a vector) is a linear operator. It can therefore be written as\r\na matrix (given an ordered basis such as the standard basis). How\r\nis it that composing such linear operators is non-associative even\r\nthough matrix multiplication is associative?\r\n7.5 Inverse Matrix\r\nDefinition A square matrix M is invertible (or nonsingular) if there\r\nexists a matrix M−1such that\r\nM−1M = I = M−1M.\r\n145",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1dfcca65-68a2-4c8c-b2f8-77224abf0fdc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f48868116152ad5a87e6dbec7a57fc92f13150cc56ecd0ae068f09ec25d7cb0d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c2fe9df3-bab8-404d-b75e-c78ee2a87265",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 146,
            "page_width": 612,
            "page_height": 792,
            "content": "146 Matrices\r\nFigure 7.1: The formula for the inverse of a 2×2 matrix is worth memorizing!\r\nIf M has no inverse, we say M is Singular or non-invertible.\r\nInverse of a 2 × 2 Matrix Let M and N be the matrices:\r\nM =\r\n\u0012\r\na b\r\nc d\u0013\r\n, N =\r\n\u0012\r\nd −b\r\n−c a\u0013\r\nMultiplying these matrices gives:\r\nMN =\r\n\u0012\r\nad − bc 0\r\n0 ad − bc\u0013\r\n= (ad − bc)I .\r\nThen M−1 =\r\n1\r\nad−bc \u0012\r\nd −b\r\n−c a\u0013\r\n, so long as ad − bc 6= 0.\r\n7.5.1 Three Properties of the Inverse\r\n1. If A is a square matrix and B is the inverse of A, then A is the inverse\r\nof B, since AB = I = BA. So we have the identity\r\n(A\r\n−1\r\n)\r\n−1 = A.\r\n2. Notice that B−1A−1AB = B−1IB = I = ABB−1A−1so\r\n146",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c2fe9df3-bab8-404d-b75e-c78ee2a87265.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5265a0bd60d9ead0a83a76e41ad07ffc7e16828c7630d65f7848b1f89d80b037",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 435
      },
      {
        "segments": [
          {
            "segment_id": "007f6200-87a4-4c69-bb35-b1613b4f6faa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 147,
            "page_width": 612,
            "page_height": 792,
            "content": "7.5 Inverse Matrix 147\r\n(AB)\r\n−1 = B−1A−1\r\nThus, much like the transpose, taking the inverse of a product reverses\r\nthe order of the product.\r\n3. Finally, recall that (AB)\r\nT = BTAT\r\n. Since I\r\nT = I, then (A−1A)T =\r\nAT(A−1)\r\nT = I. Similarly, (AA−1\r\n)\r\nT = (A−1\r\n)\r\nTAT = I. Then:\r\n(A\r\n−1\r\n)\r\nT = (AT\r\n)\r\n−1\r\n2 × 2 Example\r\n7.5.2 Finding Inverses (Redux)\r\nGaussian elimination can be used to find inverse matrices. This concept is\r\ncovered in chapter 2, section 2.3.2, but is presented here again as review in\r\nmore sophisticated terms.\r\nSuppose M is a square invertible matrix and MX = V is a linear system.\r\nThe solution must be unique because it can be found by multiplying the\r\nequation on both sides by M−1 yielding X = M−1V . Thus, the reduced row\r\nechelon form of the linear system has an identity matrix on the left:\r\n\r\nM V\r\n\u0001\r\n∼\r\n\r\nI M−1V\r\n\u0001\r\nSolving the linear system MX = V then tells us what M−1V is.\r\nTo solve many linear systems with the same matrix at once,\r\nMX = V1, MX = V2\r\nwe can consider augmented matrices with many columns on the right and\r\nthen apply Gaussian row reduction to the left side of the matrix. Once the\r\nidentity matrix is on the left side of the augmented matrix, then the solution\r\nof each of the individual linear systems is on the right.\r\n\r\nM V1 V2\r\n\u0001\r\n∼\r\n\r\nI M−1V1 M−1V2\r\n\u0001\r\nTo compute M−1, we would like M−1, rather than M−1V to appear on\r\nthe right side of our augmented matrix. This is achieved by solving the\r\n147",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/007f6200-87a4-4c69-bb35-b1613b4f6faa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1db762d9287f690863ab39bfa88ff21a4f3b2870a9aadc05e916c2bbf89d59b5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 282
      },
      {
        "segments": [
          {
            "segment_id": "b6f4166f-fa57-4832-9b9a-bbee88688bc0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 148,
            "page_width": 612,
            "page_height": 792,
            "content": "148 Matrices\r\ncollection of systems MX = ek, where ek is the column vector of zeroes with\r\na 1 in the kth entry. I.e., the n×n identity matrix can be viewed as a bunch\r\nof column vectors In = (e1 e2 · · · en). So, putting the ek’s together into an\r\nidentity matrix, we get:\r\n\r\nM I\r\n\u0001\r\n∼\r\n\r\nI M−1I\r\n\u0001\r\n=\r\n\r\nI M−1\r\n\u0001\r\nExample 92 Find\r\n\r\n\r\n−1 2 −3\r\n2 1 0\r\n4 −2 5\r\n\r\n\r\n−1\r\n.\r\nWe start by writing the augmented matrix, then apply row reduction to the left side.\r\n\r\n\r\n−1 2 −3 1 0 0\r\n2 1 0 0 1 0\r\n4 −2 5 0 0 1\r\n\r\n ∼\r\n\r\n\r\n1 −2 3 1 0 0\r\n0 5 −6 2 1 0\r\n0 6 −7 4 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 3\r\n5 −\r\n1\r\n4\r\n2\r\n5\r\n0\r\n0 1 −\r\n6\r\n5\r\n2\r\n5\r\n1\r\n5\r\n0\r\n0 0 1\r\n5\r\n4\r\n5 −\r\n6\r\n5\r\n1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 −5 4 −3\r\n0 1 0 10 −7 6\r\n0 0 1 8 −6 5\r\n\r\n\r\nAt this point, we know M−1assuming we didn’t goof up. However, row reduction is a\r\nlengthy and involved process with lots of room for arithmetic errors, so we should check\r\nour answer, by confirming that MM−1 = I (or if you prefer M−1M = I):\r\nMM−1 =\r\n\r\n\r\n−1 2 −3\r\n2 1 0\r\n4 −2 5\r\n\r\n\r\n\r\n\r\n−5 4 −3\r\n10 −7 6\r\n8 −6 5\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\nThe product of the two matrices is indeed the identity matrix, so we’re done.\r\nReading homework: problem 5\r\n148",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b6f4166f-fa57-4832-9b9a-bbee88688bc0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a2996d27d040673248ff80aa799f90e2bfdc2170bb0890f19788aa069e7b422e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 309
      },
      {
        "segments": [
          {
            "segment_id": "8e6c43f0-aa87-4475-9c65-46a32b518c7a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 149,
            "page_width": 612,
            "page_height": 792,
            "content": "7.5 Inverse Matrix 149\r\n7.5.3 Linear Systems and Inverses\r\nIf M−1exists and is known, then we can immediately solve linear systems\r\nassociated to M.\r\nExample 93 Consider the linear system:\r\n−x +2y −3z = 1\r\n2x + y = 2\r\n4x −2y +5z = 0\r\nThe associated matrix equation is MX =\r\n\r\n\r\n1\r\n2\r\n0\r\n\r\n , where M is the same as in the\r\nprevious section, so the system above is equivalent to the matrix equation\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n−1 2 −3\r\n2 1 0\r\n4 −2 5\r\n\r\n\r\n−1 \r\n\r\n1\r\n2\r\n0\r\n\r\n =\r\n\r\n\r\n−5 4 −3\r\n10 −7 6\r\n8 −6 5\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n0\r\n\r\n =\r\n\r\n\r\n3\r\n−4\r\n−4\r\n\r\n .\r\nThat is, the system is equivalent to the equation\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n3\r\n−4\r\n−4\r\n\r\n, and it is easy to\r\nsee what the solution(s) to this equation are.\r\nIn summary, when M−1exists, then\r\nMX = V ⇔ X = M−1V .\r\nReading homework: problem 5\r\n7.5.4 Homogeneous Systems\r\nTheorem 7.5.1. A square matrix M is invertible if and only if the homoge\u0002neous system\r\nMX = 0\r\nhas no non-zero solutions.\r\n149",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8e6c43f0-aa87-4475-9c65-46a32b518c7a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9389c041c76ed423c9b0c29aedcc8898138d775b366f8334af98e66c43269d6b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6965c744-4285-46d4-aab3-9dd8898a07e0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 150,
            "page_width": 612,
            "page_height": 792,
            "content": "150 Matrices\r\nProof. First, suppose that M−1exists. Then MX = 0 ⇒ X = M−10 = 0.\r\nThus, if M is invertible, then MX = 0 has no non-zero solutions.\r\nOn the other hand, MX = 0 always has the solution X = 0. If no other\r\nsolutions exist, then M can be put into reduced row echelon form with every\r\nvariable a pivot. In this case, M−1can be computed using the process in the\r\nprevious section.\r\n7.5.5 Bit Matrices\r\nIn computer science, information is recorded using binary strings of data.\r\nFor example, the following string contains an English word:\r\n011011000110100101101110011001010110000101110010\r\nA bit is the basic unit of information, keeping track of a single one or zero.\r\nComputers can add and multiply individual bits very quickly.\r\nIn chapter 5, section 5.2 it is explained how to formulate vector spaces over\r\nfields other than real numbers. In particular, al of the properties of a vector\r\nspace make sense with numbers Z2 = {0, 1} with addition and multiplication\r\ngiven by the following tables.\r\n+ 0 1\r\n0 0 1\r\n1 1 0\r\n× 0 1\r\n0 0 0\r\n1 0 1\r\nNotice that −1 = 1, since 1 + 1 = 0. Therefore, we can apply all of the linear\r\nalgebra we have learned thus far to matrices with Z2 entries. A matrix with\r\nentries in Z2 is sometimes called a bit matrix .\r\n150",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6965c744-4285-46d4-aab3-9dd8898a07e0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a4ff7712a246a47b7e17f95ac8712b7c0c6114d7213715dad579c7d40002fcd4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 453
      },
      {
        "segments": [
          {
            "segment_id": "2929853a-656d-402d-98de-8917b85ffc16",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 151,
            "page_width": 612,
            "page_height": 792,
            "content": "7.6 Review Problems 151\r\nExample 94\r\n\r\n\r\n1 0 1\r\n0 1 1\r\n1 1 1\r\n\r\n is an invertible matrix over Z2;\r\n\r\n\r\n1 0 1\r\n0 1 1\r\n1 1 1\r\n\r\n\r\n−1\r\n=\r\n\r\n\r\n0 1 1\r\n1 0 1\r\n1 1 1\r\n\r\n .\r\nThis can be easily verified by multiplying:\r\n\r\n\r\n1 0 1\r\n0 1 1\r\n1 1 1\r\n\r\n\r\n\r\n\r\n0 1 1\r\n1 0 1\r\n1 1 1\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n\r\nApplication: Cryptography A very simple way to hide information is to use a sub\u0002stitution cipher, in which the alphabet is permuted and each letter in a message is\r\nsystematically exchanged for another. For example, the ROT-13 cypher just exchanges\r\na letter with the letter thirteen places before or after it in the alphabet. For example,\r\nHELLO becomes URYYB. Applying the algorithm again decodes the message, turning\r\nURYYB back into HELLO. Substitution ciphers are easy to break, but the basic idea\r\ncan be extended to create cryptographic systems that are practically uncrackable. For\r\nexample, a one-time pad is a system that uses a different substitution for each letter\r\nin the message. So long as a particular set of substitutions is not used on more than\r\none message, the one-time pad is unbreakable.\r\nEnglish characters are often stored in computers in the ASCII format. In ASCII,\r\na single character is represented by a string of eight bits, which we can consider as a\r\nvector in Z\r\n8\r\n2\r\n(which is like vectors in R\r\n8\r\n, where the entries are zeros and ones). One\r\nway to create a substitution cipher, then, is to choose an 8 × 8 invertible bit matrix\r\nM, and multiply each letter of the message by M. Then to decode the message, each\r\nstring of eight characters would be multiplied by M−1.\r\nTo make the message a bit tougher to decode, one could consider pairs (or longer\r\nsequences) of letters as a single vector in Z\r\n16\r\n2\r\n(or a higher-dimensional space), and\r\nthen use an appropriately-sized invertible matrix. For more on cryptography, see “The\r\nCode Book,” by Simon Singh (1999, Doubleday).\r\n7.6 Review Problems\r\nWebwork: Reading Problems 6 , 7\r\n1. Find formulas for the inverses of the following matrices, when they are\r\nnot singular:\r\n151",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2929853a-656d-402d-98de-8917b85ffc16.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b1775d13a95f305b0fac21f48b1d65afdf10ff2655b45a16581b3f8884016d2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 400
      },
      {
        "segments": [
          {
            "segment_id": "a47a4a96-4ae1-41aa-bfdb-8a043088e104",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 152,
            "page_width": 612,
            "page_height": 792,
            "content": "152 Matrices\r\n(a)\r\n\r\n\r\n1 a b\r\n0 1 c\r\n0 0 1\r\n\r\n\r\n(b)\r\n\r\n\r\na b c\r\n0 d e\r\n0 0 f\r\n\r\n\r\nWhen are these matrices singular?\r\n2. Write down all 2×2 bit matrices and decide which of them are singular.\r\nFor those which are not singular, pair them with their inverse.\r\n3. Let M be a square matrix. Explain why the following statements are\r\nequivalent:\r\n(a) MX = V has a unique solution for every column vector V .\r\n(b) M is non-singular.\r\nHint: In general for problems like this, think about the key words:\r\nFirst, suppose that there is some column vector V such that the equa\u0002tion MX = V has two distinct solutions. Show that M must be sin\u0002gular; that is, show that M can have no inverse.\r\nNext, suppose that there is some column vector V such that the equa\u0002tion MX = V has no solutions. Show that M must be singular.\r\nFinally, suppose that M is non-singular. Show that no matter what\r\nthe column vector V is, there is a unique solution to MX = V.\r\nHint\r\n4. Left and Right Inverses: So far we have only talked about inverses of\r\nsquare matrices. This problem will explore the notion of a left and\r\nright inverse for a matrix that is not square. Let\r\nA =\r\n\u0012\r\n0 1 1\r\n1 1 0\u0013\r\n(a) Compute:\r\n152",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a47a4a96-4ae1-41aa-bfdb-8a043088e104.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47c936de1f327ecc2b9ca8386fef8250c6fcc1ae5c43564782c8926af2715824",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 238
      },
      {
        "segments": [
          {
            "segment_id": "28cd42f5-3f4d-4a7f-ad5c-8d4c8b67c4dd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 153,
            "page_width": 612,
            "page_height": 792,
            "content": "7.6 Review Problems 153\r\ni. AAT,\r\nii. AAT\r\n\u0001−1\r\n,\r\niii. B := AT\r\n\r\nAAT\r\n\u0001−1\r\n(b) Show that the matrix B above is a right inverse for A, i.e., verify\r\nthat\r\nAB = I .\r\n(c) Is BA defined? (Why or why not?)\r\n(d) Let A be an n × m matrix with n > m. Suggest a formula for a\r\nleft inverse C such that\r\nCA = I\r\nHint: you may assume that ATA has an inverse.\r\n(e) Test your proposal for a left inverse for the simple example\r\nA =\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n,\r\n(f) True or false: Left and right inverses are unique. If false give a\r\ncounterexample.\r\nHint\r\n5. Show that if the range (remember that the range of a function is the\r\nset of all its outputs, not the codomain) of a 3 × 3 matrix M (viewed\r\nas a function R\r\n3 → R3\r\n) is a plane then one of the columns is a sum of\r\nmultiples of the other columns. Show that this relationship is preserved\r\nunder EROs. Show, further, that the solutions to Mx = 0 describe this\r\nrelationship between the columns.\r\n6. If M and N are square matrices of the same size such that M−1exists\r\nand N −1 does not exist, does (MN)\r\n−1\r\nexist?\r\n7. If M is a square matrix which is not invertible, is e\r\nM invertible?\r\n8. Elementary Column Operations (ECOs) can be defined in the same 3\r\ntypes as EROs. Describe the 3 kinds of ECOs. Show that if maximal\r\nelimination using ECOs is performed on a square matrix and a column\r\nof zeros is obtained then that matrix is not invertible.\r\n153",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/28cd42f5-3f4d-4a7f-ad5c-8d4c8b67c4dd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5b1ef9b55681ed9329d8564a3dc5439e66792adac07ed16060dd1d89d086a3f0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 281
      },
      {
        "segments": [
          {
            "segment_id": "69d1ee11-fce8-49cc-b51a-2f02b1f7b299",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 154,
            "page_width": 612,
            "page_height": 792,
            "content": "154 Matrices\r\n7.7 LU Redux\r\nCertain matrices are easier to work with than others. In this section, we\r\nwill see how to write any square1 matrix M as the product of two simpler\r\nmatrices. We will write\r\nM = LU ,\r\nwhere:\r\n• L is lower triangular . This means that all entries above the main\r\ndiagonal are zero. In notation, L = (l\r\ni\r\nj\r\n) with l\r\ni\r\nj = 0 for all j > i.\r\nL =\r\n\r\n\r\nl\r\n1\r\n1\r\n0 0 · · ·\r\nl\r\n2\r\n1\r\nl\r\n2\r\n2\r\n0 · · ·\r\nl\r\n3\r\n1\r\nl\r\n3\r\n2\r\nl\r\n3\r\n3\r\n· · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\n\r\n• U is upper triangular . This means that all entries below the main\r\ndiagonal are zero. In notation, U = (u\r\ni\r\nj\r\n) with u\r\ni\r\nj = 0 for all j < i.\r\nU =\r\n\r\n\r\nu\r\n1\r\n1 u\r\n1\r\n2 u\r\n1\r\n3\r\n· · ·\r\n0 u\r\n2\r\n2 u\r\n2\r\n3\r\n· · ·\r\n0 0 u\r\n3\r\n3\r\n· · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\n\r\nM = LU is called an LU decomposition of M.\r\nThis is a useful trick for computational reasons; it is much easier to com\u0002pute the inverse of an upper or lower triangular matrix than general matrices.\r\nSince inverses are useful for solving linear systems, this makes solving any lin\u0002ear system associated to the matrix much faster as well. The determinant—a\r\nvery important quantity associated with any square matrix—is very easy to\r\ncompute for triangular matrices.\r\nExample 95 Linear systems associated to upper triangular matrices are very easy to\r\nsolve by back substitution.\r\n\u0012\r\na b 1\r\n0 c e\r\n\u0013\r\n⇒ y =\r\ne\r\nc\r\n, x =\r\n1\r\na\r\n\u0012\r\n1 −\r\nbe\r\nc\r\n\u0013\r\n1The case where M is not square is dealt with at the end of the section.\r\n154",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/69d1ee11-fce8-49cc-b51a-2f02b1f7b299.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=16230999ac6b8d159d767c8b748c5c7d32551430164d355de1424611987bc993",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 343
      },
      {
        "segments": [
          {
            "segment_id": "defd3a25-bdda-4d15-ad0b-2cfebfa914ee",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 155,
            "page_width": 612,
            "page_height": 792,
            "content": "7.7 LU Redux 155\r\n\r\n\r\n1 0 0 d\r\na 1 0 e\r\nb c 1 f\r\n\r\n ⇒\r\n\r\n\r\n\r\nx = d\r\ny = e − ax\r\nz = f − bx − cy\r\n\r\n\r\n\r\n⇒\r\n\r\n\r\n\r\nx = d\r\ny = e − ad\r\nz = f − bd − c(e − ad)\r\n.\r\nFor lower triangular matrices, back substitution gives a quick solution; for upper tri\u0002angular matrices, forward substitution gives the solution.\r\n7.7.1 Using LU Decomposition to Solve Linear Systems\r\nSuppose we have M = LU and want to solve the system\r\nMX = LUX = V.\r\n• Step 1: Set W =\r\n\r\n\r\nu\r\nv\r\nw\r\n\r\n = UX.\r\n• Step 2: Solve the system LW = V . This should be simple by forward\r\nsubstitution since L is lower triangular. Suppose the solution to LW =\r\nV is W0.\r\n• Step 3: Now solve the system UX = W0. This should be easy by\r\nbackward substitution, since U is upper triangular. The solution to\r\nthis system is the solution to the original system.\r\nWe can think of this as using the matrix L to perform row operations on the\r\nmatrix U in order to solve the system; this idea also appears in the study of\r\ndeterminants.\r\nReading homework: problem 7\r\nExample 96 Consider the linear system:\r\n6x + 18y + 3z = 3\r\n2x + 12y + z = 19\r\n4x + 15y + 3z = 0\r\nAn LU decomposition for the associated matrix M is\r\n\r\n\r\n6 18 3\r\n2 12 1\r\n4 15 3\r\n\r\n =\r\n\r\n\r\n3 0 0\r\n1 6 0\r\n2 3 1\r\n\r\n\r\n\r\n\r\n2 6 1\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\n155",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/defd3a25-bdda-4d15-ad0b-2cfebfa914ee.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9fdd3df8d32d395d8104048c1de80ee2f8d3636cee99aa49f204e0ff56abfa7e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "c051ada0-52ed-40a4-84bb-15a6b917cce8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 156,
            "page_width": 612,
            "page_height": 792,
            "content": "156 Matrices\r\n• Step 1: Set W =\r\n\r\n\r\nu\r\nv\r\nw\r\n\r\n = UX.\r\n• Step 2: Solve the system LW = V :\r\n\r\n\r\n3 0 0\r\n1 6 0\r\n2 3 1\r\n\r\n\r\n\r\n\r\nu\r\nv\r\nw\r\n\r\n =\r\n\r\n\r\n3\r\n19\r\n0\r\n\r\n\r\nBy substitution, we get u = 1, v = 3, and w = −11. Then\r\nW0 =\r\n\r\n\r\n1\r\n3\r\n−11\r\n\r\n\r\n• Step 3: Solve the system UX = W0.\r\n\r\n\r\n2 6 1\r\n0 1 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n1\r\n3\r\n−11\r\n\r\n\r\nBack substitution gives z = −11, y = 3, and x = −3.\r\nThen X =\r\n\r\n\r\n−3\r\n3\r\n−11\r\n\r\n, and we’re done.\r\nUsing an LU decomposition\r\n156",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c051ada0-52ed-40a4-84bb-15a6b917cce8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5980af176fa494ec2ebeb9227da399de924c6d8332a396971f2bc5718836ca08",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 450
      },
      {
        "segments": [
          {
            "segment_id": "f8d4e49c-71c6-4943-93eb-cedcaa4cb4ee",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 157,
            "page_width": 612,
            "page_height": 792,
            "content": "7.7 LU Redux 157\r\n7.7.2 Finding an LU Decomposition.\r\nIn chapter 2, section 2.3.4, Gaussian elimination was used to find LU matrix\r\ndecompositions. These ideas are presented here again as review.\r\nFor any given matrix, there are actually many different LU decomposi\u0002tions. However, there is a unique LU decomposition in which the L matrix\r\nhas ones on the diagonal. In that case L is called a lower unit triangular\r\nmatrix .\r\nTo find the LU decomposition, we’ll create two sequences of matrices\r\nL1, L2, . . . and U1, U2, . . . such that at each step, LiUi = M. Each of the Li\r\nwill be lower triangular, but only the last Ui will be upper triangular. The\r\nmain trick for this calculation is captured by the following example:\r\nExample 97 (An Elementary Matrix)\r\nConsider\r\nE =\r\n\u0012\r\n1 0\r\nλ 1\r\n\u0013\r\n, M =\r\n\u0012\r\na b c · · ·\r\nd e f · · ·\u0013\r\n.\r\nLets compute EM\r\nEM =\r\n\u0012\r\na b c · · ·\r\nd + λa e + λb f + λc · · ·\u0013\r\n.\r\nSomething neat happened here: multiplying M by E performed the row operation\r\nR2 → R2 + λR1 on M. Another interesting fact:\r\nE\r\n−1\r\n:= \u0012\r\n1 0\r\n−λ 1\r\n\u0013\r\nobeys (check this yourself...)\r\nE\r\n−1E = 1 .\r\nHence M = E−1EM or, writing this out\r\n\u0012\r\na b c · · ·\r\nd e f · · ·\u0013\r\n=\r\n\u0012\r\n1 0\r\n−λ 1\r\n\u0013 \u0012 a b c · · ·\r\nd + λa e + λb f + λc · · ·\u0013\r\n.\r\nHere the matrix on the left is lower triangular, while the matrix on the right has had\r\na row operation performed on it.\r\nWe would like to use the first row of M to zero out the first entry of every\r\nrow below it. For our running example,\r\nM =\r\n\r\n\r\n6 18 3\r\n2 12 1\r\n4 15 3\r\n\r\n ,\r\n157",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f8d4e49c-71c6-4943-93eb-cedcaa4cb4ee.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2cc5bd2d8a2c696add04264b1fa0b106895748bfb908db460479c7be0b80e3b4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 339
      },
      {
        "segments": [
          {
            "segment_id": "4be7637e-c2b0-438b-95e3-239ff3ceac1a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 158,
            "page_width": 612,
            "page_height": 792,
            "content": "158 Matrices\r\nso we would like to perform the row operations\r\nR2 → R2 −\r\n1\r\n3\r\nR1 and R3 → R3 −\r\n2\r\n3\r\nR1 .\r\nIf we perform these row operations on M to produce\r\nU1 =\r\n\r\n\r\n6 18 3\r\n0 6 0\r\n0 3 1\r\n\r\n ,\r\nwe need to multiply this on the left by a lower triangular matrix L1 so that\r\nthe product L1U1 = M still. The above example shows how to do this: Set\r\nL1 to be the lower triangular matrix whose first column is filled with minus\r\nthe constants used to zero out the first column of M. Then\r\nL1 =\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n0 1\r\n\r\n .\r\nBy construction L1U1 = M, but you should compute this yourself as a double\r\ncheck.\r\nNow repeat the process by zeroing the second column of U1 below the\r\ndiagonal using the second row of U1 using the row operation R3 → R3 −\r\n1\r\n2R2\r\nto produce\r\nU2 =\r\n\r\n\r\n6 18 3\r\n0 6 0\r\n0 0 1\r\n\r\n .\r\nThe matrix that undoes this row operation is obtained in the same way we\r\nfound L1 above and is:\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0\r\n1\r\n2\r\n0\r\n\r\n .\r\nThus our answer for L2 is the product of this matrix with L1, namely\r\nL2 =\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n0 1\r\n\r\n\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0\r\n1\r\n2\r\n0\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n1\r\n2\r\n1\r\n\r\n .\r\nNotice that it is lower triangular because\r\n158",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4be7637e-c2b0-438b-95e3-239ff3ceac1a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9b211bba739516747f89adbc317f76914e9fa1b87b1c37a039e9b913a23b782a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "de28554b-1756-4ef1-9522-535da74db20f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 159,
            "page_width": 612,
            "page_height": 792,
            "content": "7.7 LU Redux 159\r\nThe product of lower triangular matrices is always lower triangular!\r\nMoreover it is obtained by recording minus the constants used for all our\r\nrow operations in the appropriate columns (this always works this way).\r\nMoreover, U2 is upper triangular and M = L2U2, we are done! Putting this\r\nall together we have\r\nM =\r\n\r\n\r\n6 18 3\r\n2 12 1\r\n4 15 3\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n1\r\n2\r\n1\r\n\r\n\r\n\r\n\r\n6 18 3\r\n0 6 0\r\n0 0 1\r\n\r\n .\r\nIf the matrix you’re working with has more than three rows, just continue\r\nthis process by zeroing out the next column below the diagonal, and repeat\r\nuntil there’s nothing left to do.\r\nAnother LU decomposition example\r\nThe fractions in the L matrix are admittedly ugly. For two matrices\r\nLU, we can multiply one entire column of L by a constant λ and divide the\r\ncorresponding row of U by the same constant without changing the product\r\nof the two matrices. Then:\r\nLU =\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n1\r\n2\r\n1\r\n\r\n\r\nI\r\n\r\n\r\n6 18 3\r\n0 6 0\r\n0 0 1\r\n\r\n\r\n=\r\n\r\n\r\n1 0 0\r\n1\r\n3\r\n1 0\r\n2\r\n3\r\n1\r\n2\r\n1\r\n\r\n\r\n\r\n\r\n3 0 0\r\n0 6 0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n1\r\n3\r\n0 0\r\n0\r\n1\r\n6\r\n0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n6 18 3\r\n0 6 0\r\n0 0 1\r\n\r\n\r\n=\r\n\r\n\r\n3 0 0\r\n1 6 0\r\n2 3 1\r\n\r\n\r\n\r\n\r\n2 6 1\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nThe resulting matrix looks nicer, but isn’t in standard (lower unit triangular\r\nmatrix) form.\r\n159",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/de28554b-1756-4ef1-9522-535da74db20f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a629321a6a6d631ab8b6285c571d134a8893f9453a876c1e5f6fee1a5ff58fc2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 316
      },
      {
        "segments": [
          {
            "segment_id": "9babdd9e-78c2-4c14-b52b-823a1dad07cd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 160,
            "page_width": 612,
            "page_height": 792,
            "content": "160 Matrices\r\nReading homework: problem 7\r\nFor matrices that are not square, LU decomposition still makes sense.\r\nGiven an m × n matrix M, for example we could write M = LU with L\r\na square lower unit triangular matrix, and U a rectangular matrix. Then\r\nL will be an m × m matrix, and U will be an m × n matrix (of the same\r\nshape as M). From here, the process is exactly the same as for a square\r\nmatrix. We create a sequence of matrices Li and Ui that is eventually the\r\nLU decomposition. Again, we start with L0 = I and U0 = M.\r\nExample 98 Let’s find the LU decomposition of M = U0 =\r\n\u0012\r\n−2 1 3\r\n−4 4 1\u0013\r\n. Since M\r\nis a 2 × 3 matrix, our decomposition will consist of a 2 × 2 matrix and a 2 × 3 matrix.\r\nThen we start with L0 = I2 =\r\n\u0012\r\n1 0\r\n0 1\u0013\r\n.\r\nThe next step is to zero-out the first column of M below the diagonal. There is\r\nonly one row to cancel, then, and it can be removed by subtracting 2 times the first\r\nrow of M to the second row of M. Then:\r\nL1 =\r\n\u0012\r\n1 0\r\n2 1\u0013\r\n, U1 =\r\n\u0012\r\n−2 1 3\r\n0 2 −5\r\n\u0013\r\nSince U1 is upper triangular, we’re done. With a larger matrix, we would just continue\r\nthe process.\r\n7.7.3 Block LDU Decomposition\r\nLet M be a square block matrix with square blocks X, Y, Z, W such that X−1\r\nexists. Then M can be decomposed as a block LDU decomposition, where\r\nD is block diagonal, as follows:\r\nM =\r\n\u0012\r\nX Y\r\nZ W\u0013\r\nThen:\r\nM =\r\n\u0012\r\nI 0\r\nZX−1I\r\n\u0013 \u0012 X 0\r\n0 W − ZX−1Y\r\n\u0013 \u0012 I X−1Y\r\n0 I\r\n\u0013\r\n.\r\n160",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9babdd9e-78c2-4c14-b52b-823a1dad07cd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=606b526745034656e94e3da3acc180a53c44c06903cabaea7a7b4039d013fa4a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8be857f3-7f61-4a31-850b-d19b1dd6914c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 161,
            "page_width": 612,
            "page_height": 792,
            "content": "7.8 Review Problems 161\r\nThis can be checked explicitly simply by block-multiplying these three ma\u0002trices.\r\nBlock LDU Explanation\r\nExample 99 For a 2 × 2 matrix, we can regard each entry as a 1 × 1 block.\r\n\u0012\r\n1 2\r\n3 4\u0013\r\n=\r\n\u0012\r\n1 0\r\n3 1\u0013 \u00121 0\r\n0 −2\r\n\u0013 \u00121 2\r\n0 1\u0013\r\nBy multiplying the diagonal matrix by the upper triangular matrix, we get the standard\r\nLU decomposition of the matrix.\r\nYou are now ready to attempt the first sample midterm.\r\n7.8 Review Problems\r\nWebwork: Reading Problems 7 ,8\r\nLU Decomposition 14\r\n1. Consider the linear system:\r\nx\r\n1 = v1\r\nl\r\n2\r\n1x\r\n1 +x2 = v2\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nl\r\nn\r\n1 x\r\n1 +ln\r\n2 x\r\n2 + · · · + xn = vn\r\ni. Find x\r\n1\r\n.\r\nii. Find x\r\n2\r\n.\r\niii. Find x\r\n3\r\n.\r\n161",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8be857f3-7f61-4a31-850b-d19b1dd6914c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f3a0d054900b44c71a2786673f3691c83941c736cc0a60e4bef3db22f9641551",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 466
      },
      {
        "segments": [
          {
            "segment_id": "226c1404-485e-43ab-8329-4fe920e0e897",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 162,
            "page_width": 612,
            "page_height": 792,
            "content": "162 Matrices\r\nk. Try to find a formula for x\r\nk\r\n. Don’t worry about simplifying your\r\nanswer.\r\n2. Let M =\r\n\u0012\r\nX Y\r\nZ W\u0013\r\nbe a square n × n block matrix with W invertible.\r\ni. If W has r rows, what size are X, Y , and Z?\r\nii. Find a UDL decomposition for M. In other words, fill in the stars\r\nin the following equation:\r\n\u0012\r\nX Y\r\nZ W\u0013\r\n=\r\n\u0012\r\nI ∗\r\n0 I\r\n\u0013 \u0012∗ 0\r\n0 ∗\r\n\u0013 \u0012I 0\r\n∗ I\r\n\u0013\r\n3. Show that if M is a square matrix which is not invertible then either\r\nthe matrix matrix U or the matrix L in the LU-decomposition M = LU\r\nhas a zero on it’s diagonal.\r\n4. Describe what upper and lower triangular matrices do to the unit hy\u0002percube in their domain.\r\n5. In chapter 3 we saw that, since in general row exchange matrices are\r\nnecessary to achieve upper triangular form, LDP U factorization is the\r\ncomplete decomposition of an invertible matrix into EROs of various\r\nkinds. Suggest a procedure for using LDP U decompositions to solve\r\nlinear systems that generalizes the procedure above.\r\n6. Is there a reason to prefer LU decomposition to UL decomposition, or\r\nis the order just a convention?\r\n7. If M is invertible then what are the LU, LDU, and LDP U decompo\u0002sitions of MT\r\nin terms of the decompositions for M? Can you do the\r\nsame for M−1?\r\n8. Argue that if M is symmetric then L = U\r\nT\r\nin the LDU decomposition\r\nof M.\r\n162",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/226c1404-485e-43ab-8329-4fe920e0e897.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8783801bd111e2da89b801957a177ce52fa9246e85b022b76ec56e4c9daea208",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "094eb115-4aa3-4d1a-812a-94392dc5f822",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 163,
            "page_width": 612,
            "page_height": 792,
            "content": "8\r\nDeterminants\r\nGiven a square matrix, is there an easy way to know when it is invertible?\r\nAnswering this fundamental question is the goal of this chapter.\r\n8.1 The Determinant Formula\r\nThe determinant boils down a square matrix to a a single number. That\r\nnumber determines whether the square matrix is invertible or not. Lets see\r\nhow this works for small matrices first.\r\n8.1.1 Simple Examples\r\nFor small cases, we already know when a matrix is invertible. If M is a 1 ×1\r\nmatrix, then M = (m) ⇒ M−1 = (1/m). Then M is invertible if and only if\r\nm 6= 0.\r\nFor M a 2 × 2 matrix, chapter 7 section 7.5 shows that if\r\nM =\r\n\u0012\r\nm1\r\n1 m12\r\nm2\r\n1 m2\r\n2\r\n\u0013\r\n,\r\nthen\r\nM−1 =\r\n1\r\nm1\r\n1m22 − m12m21\r\n\u0012\r\nm2\r\n2 −m1\r\n2\r\n−m2\r\n1 m11\r\n\u0013\r\n.\r\nThus M is invertible if and only if\r\n163",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/094eb115-4aa3-4d1a-812a-94392dc5f822.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dcf3dc1a808665a1e23ba4295193dfc994f7988637fcbcfb2c8ec5af666038da",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 421
      },
      {
        "segments": [
          {
            "segment_id": "542875d5-cf22-44a3-8c62-d9a57f168a20",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 164,
            "page_width": 612,
            "page_height": 792,
            "content": "164 Determinants\r\nFigure 8.1: Memorize the determinant formula for a 2×2 matrix!\r\nm1\r\n1m22 − m12m21 6= 0 .\r\nFor 2 × 2 matrices, this quantity is called the determinant of M.\r\ndet M = det \u0012\r\nm1\r\n1 m12\r\nm2\r\n1 m2\r\n2\r\n\u0013\r\n= m1\r\n1m22 − m12m21\r\n.\r\nExample 100 For a 3 × 3 matrix,\r\nM =\r\n\r\n\r\nm1\r\n1 m1\r\n2 m1\r\n3\r\nm2\r\n1 m2\r\n2 m2\r\n3\r\nm3\r\n1 m32 m33\r\n\r\n ,\r\nthen—see review question 1—M is non-singular if and only if:\r\ndet M = m1\r\n1m22m33 − m11m23m32 + m12m23m31 − m12m21m33 + m13m21m32 − m13m22m31 6= 0.\r\nNotice that in the subscripts, each ordering of the numbers 1, 2, and 3 occurs exactly\r\nonce. Each of these is a permutation of the set {1, 2, 3}.\r\n8.1.2 Permutations\r\nConsider n objects labeled 1 through n and shuffle them. Each possible shuf\u0002fle is called a permutation. For example, here is an example of a permutation\r\nof 1–5:\r\nσ =\r\n\u0014\r\n1 2 3 4 5\r\n4 2 5 1 3\u0015\r\n164",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/542875d5-cf22-44a3-8c62-d9a57f168a20.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d4566c384373f9534ec03bb9d27e2cfce39238c177f4adaeefa6ea08a92f6559",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 182
      },
      {
        "segments": [
          {
            "segment_id": "6ee98de5-ab1b-49aa-823c-b035aa8f9381",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 165,
            "page_width": 612,
            "page_height": 792,
            "content": "8.1 The Determinant Formula 165\r\nWe can consider a permutation σ as an invertible function from the set of\r\nnumbers [n] := {1, 2, . . . , n} to [n], so can write σ(3) = 5 in the above\r\nexample. In general we can write\r\n\u0014\r\n1 2 3 4 5\r\nσ(1) σ(2) σ(3) σ(4) σ(5) \u0015\r\n,\r\nbut since the top line of any permutation is always the same, we can omit it\r\nand just write:\r\nσ =\r\n\u0002\r\nσ(1) σ(2) σ(3) σ(4) σ(5)\u0003\r\nand so our example becomes simply σ = [4 2 5 1 3].\r\nThe mathematics of permutations is extensive; there are a few key prop\u0002erties of permutations that we’ll need:\r\n• There are n! permutations of n distinct objects, since there are n choices\r\nfor the first object, n − 1 choices for the second once the first has been\r\nchosen, and so on.\r\n• Every permutation can be built up by successively swapping pairs of\r\nobjects. For example, to build up the permutation \u0002\r\n3 1 2\u0003\r\nfrom the\r\ntrivial permutation \u0002\r\n1 2 3\u0003\r\n, you can first swap 2 and 3, and then\r\nswap 1 and 3.\r\n• For any given permutation σ, there is some number of swaps it takes to\r\nbuild up the permutation. (It’s simplest to use the minimum number of\r\nswaps, but you don’t have to: it turns out that any way of building up\r\nthe permutation from swaps will have have the same parity of swaps,\r\neither even or odd.) If this number happens to be even, then σ is\r\ncalled an even permutation; if this number is odd, then σ is an odd\r\npermutation. In fact, n! is even for all n ≥ 2, and exactly half of the\r\npermutations are even and the other half are odd. It’s worth noting\r\nthat the trivial permutation (which sends i → i for every i) is an even\r\npermutation, since it uses zero swaps.\r\nDefinition The sign function is a function sgn that sends permutations\r\nto the set {−1, 1} with rule of correspondence defined by\r\nsgn(σ) = \u001a\r\n1 if σ is even\r\n−1 if σ is odd.\r\n165",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6ee98de5-ab1b-49aa-823c-b035aa8f9381.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=91db521ccaf2fdd34c7e1622c54d7c205b185c6591742bddfd556548745d4b8e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 363
      },
      {
        "segments": [
          {
            "segment_id": "428c1cf1-d07f-478f-934f-70c5c0416cbf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 166,
            "page_width": 612,
            "page_height": 792,
            "content": "166 Determinants\r\nPermutation Example\r\nReading homework: problem 1\r\nWe can use permutations to give a definition of the determinant.\r\nDefinition The determinant of n × n matrix M is\r\ndet M =\r\nP\r\nσ\r\nsgn(σ) m1\r\nσ(1)m2σ(2) · · · mnσ(n)\r\n.\r\nThe sum is over all permutations of n objects; a sum over the all elements\r\nin the set set {σ : {1, . . . , n} → {1, . . . , n}}. Each summand is a product of\r\nn entries from the matrix with each factor from a different row. In different\r\nterms of the sum the column numbers are shuffled by different permuta\u0002tions σ.\r\nThe last statement about the summands yields a nice property of the\r\ndeterminant:\r\nTheorem 8.1.1. If M = (mi\r\nj\r\n) has a row consisting entirely of zeros, then\r\nmi\r\nσ(i) = 0 for every σ and some i. Moreover det M = 0.\r\nExample 101 Because there are many permutations of n, writing the determinant\r\nthis way for a general matrix gives a very long sum. For n = 4, there are 24 = 4!\r\npermutations, and for n = 5, there are already 120 = 5! permutations.\r\nFor a 4 × 4 matrix, M =\r\n\r\n\r\nm1\r\n1 m12 m13 m14\r\nm2\r\n1 m22 m23 m24\r\nm3\r\n1 m32 m33 m34\r\nm4\r\n1 m42 m43 m44\r\n\r\n\r\n, then det M is:\r\ndet M = m1\r\n1m22m33m44 − m11m23m32m44 − m11m22m34m43\r\n− m1\r\n2m21m33m44 + m11m23m34m42 + m11m24m32m43\r\n+ m1\r\n2m23m31m44 + m12m21m34m43 ± 16 more terms.\r\n166",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/428c1cf1-d07f-478f-934f-70c5c0416cbf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dced08e2cc38552587f48c3966708c042da2a980c2f02e8b3483a836f45ef3fb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 261
      },
      {
        "segments": [
          {
            "segment_id": "284e633c-69ae-44ac-97d4-ed2a34992b27",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 167,
            "page_width": 612,
            "page_height": 792,
            "content": "8.1 The Determinant Formula 167\r\nThis is very cumbersome.\r\nLuckily, it is very easy to compute the determinants of certain matrices.\r\nFor example, if M is diagonal, meaning that Mi\r\nj = 0 whenever i 6= j, then\r\nall summands of the determinant involving off-diagonal entries vanish and\r\ndet M =\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1)m2\r\nσ(2) · · · mn\r\nσ(n) = m1\r\n1m2\r\n2\r\n· · · mn\r\nn\r\n.\r\nThe determinant of a diagonal matrix is\r\nthe product of its diagonal entries.\r\nSince the identity matrix is diagonal with all diagonal entries equal to one,\r\nwe have\r\ndet I = 1.\r\nWe would like to use the determinant to decide whether a matrix is in\u0002vertible. Previously, we computed the inverse of a matrix by applying row\r\noperations. Therefore we ask what happens to the determinant when row\r\noperations are applied to a matrix.\r\nSwapping rows Lets swap rows i and j of a matrix M and then compute its determi\u0002nant. For the permutation σ, let σˆ be the permutation obtained by swapping positions\r\ni and j. Clearly\r\nσˆ = −σ .\r\nLet M0 be the matrix M with rows i and j swapped. Then (assuming i < j):\r\ndet M0 =\r\nX\r\nσ\r\nsgn(σ) m1\r\nσ(1) · · · m\r\nj\r\nσ(i)\r\n· · · mi\r\nσ(j)\r\n· · · mn\r\nσ(n)\r\n=\r\nX\r\nσ\r\nsgn(σ) m1\r\nσ(1) · · · miσ(j)\r\n· · · m\r\nj\r\nσ(i)\r\n· · · mn\r\nσ(n)\r\n=\r\nX\r\nσ\r\n(−sgn(ˆσ)) m1\r\nσˆ(1) · · · miσˆ(i)\r\n· · · m\r\nj\r\nσˆ(j)\r\n· · · mn\r\nσˆ(n)\r\n= −\r\nX\r\nσˆ\r\nsgn(ˆσ) m1\r\nσˆ(1) · · · miσˆ(i)\r\n· · · m\r\nj\r\nσˆ(j)\r\n· · · mn\r\nσˆ(n)\r\n= − det M.\r\nThe step replacing P\r\nσ\r\nby P\r\nσˆ\r\noften causes confusion; it hold since we sum over all\r\npermutations (see review problem 3). Thus we see that swapping rows changes the\r\nsign of the determinant. I.e.,\r\nM0 = − det M .\r\n167",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/284e633c-69ae-44ac-97d4-ed2a34992b27.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=57265798753c19b067a116ddec7397a8186e9d96c6763918c0abe411c4e78e06",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b21c8f8f-9481-4bfb-be29-1119c4a9f0af",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 168,
            "page_width": 612,
            "page_height": 792,
            "content": "168 Determinants\r\nFigure 8.2: Remember what row swap does to determinants!\r\nReading homework: problem 8.2\r\nApplying this result to M = I (the identity matrix) yields\r\ndet E\r\ni\r\nj = −1 ,\r\nwhere the matrix Ei\r\nj\r\nis the identity matrix with rows i and j swapped. It is a row swap\r\nelementary matrix.\r\nThis implies another nice property of the determinant. If two rows of the matrix\r\nare identical, then swapping the rows changes the sign of the matrix, but leaves the\r\nmatrix unchanged. Then we see the following:\r\nTheorem 8.1.2. If M has two identical rows, then det M = 0.\r\n8.2 Elementary Matrices and Determinants\r\nIn chapter 2 we found the matrices that perform the row operations involved\r\nin Gaussian elimination; we called them elementary matrices.\r\nAs a reminder, for any matrix M, and a matrix M0equal to M after a\r\nrow operation, multiplying by an elementary matrix E gave M0 = EM.\r\nElementary Matrices\r\nWe now examine what the elementary matrices to do determinants.\r\n168",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b21c8f8f-9481-4bfb-be29-1119c4a9f0af.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=28176a2125c5ac3b41f8909d2690c9cdd8f067dce239878bb7cdd4fc1285f2cc",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 505
      },
      {
        "segments": [
          {
            "segment_id": "621a661a-ee73-4f60-9760-2c019943f3e9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 169,
            "page_width": 612,
            "page_height": 792,
            "content": "8.2 Elementary Matrices and Determinants 169\r\n8.2.1 Row Swap\r\nOur first elementary matrix swaps rows i and j when it is applied to a matrix\r\nM. Explicitly, let R1through Rn denote the rows of M, and let M0 be the\r\nmatrix M with rows i and j swapped. Then M and M0can be regarded as\r\na block matrices (where the blocks are rows);\r\nM =\r\n\r\n\r\n.\r\n.\r\n.\r\nRi\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\n\r\n\r\nand M0 =\r\n\r\n\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\nRi\r\n.\r\n.\r\n.\r\n\r\n\r\n.\r\nThen notice that\r\nM0 =\r\n\r\n\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\nRi\r\n.\r\n.\r\n.\r\n\r\n\r\n=\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\n0 1\r\n.\r\n.\r\n.\r\n1 0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n\r\n\r\n.\r\n.\r\n.\r\nRi\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\n\r\n\r\n.\r\nThe matrix\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\n0 1\r\n.\r\n.\r\n.\r\n1 0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n=: E\r\ni\r\nj\r\nis just the identity matrix with rows i and j swapped. The matrix E\r\ni\r\nj\r\nis an\r\nelementary matrix and\r\nM0 = E\r\ni\r\njM .\r\nBecause det I = 1 and swapping a pair of rows changes the sign of the\r\ndeterminant, we have found that\r\ndet E\r\ni\r\nj = −1 .\r\n169",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/621a661a-ee73-4f60-9760-2c019943f3e9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0e9cba3501380422367fd3c9cc351d8aea0df9913170d139ffef8aa33c4a7516",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f350ab2f-aa0f-432b-9cd6-7aeeeca6d7ab",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 170,
            "page_width": 612,
            "page_height": 792,
            "content": "170 Determinants\r\nNow we know that swapping a pair of rows flips the sign of the determi\u0002nant so det M0 = −detM. But det E\r\ni\r\nj = −1 and M0 = E\r\ni\r\njM so\r\ndet E\r\ni\r\njM = det E\r\ni\r\nj det M .\r\nThis result hints at a general rule for determinants of products of matrices.\r\n8.2.2 Row Multiplication\r\nThe next row operation is multiplying a row by a scalar. Consider\r\nM =\r\n\r\n\r\nR1\r\n.\r\n.\r\n.\r\nRn\r\n\r\n ,\r\nwhere Ri are row vectors. Let Ri(λ) be the identity matrix, with the ith\r\ndiagonal entry replaced by λ, not to be confused with the row vectors. I.e.,\r\nR\r\ni\r\n(λ) =\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\nλ\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n.\r\nThen:\r\nM0 = R\r\ni\r\n(λ)M =\r\n\r\n\r\nR1\r\n.\r\n.\r\n.\r\nλRi\r\n.\r\n.\r\n.\r\nRn\r\n\r\n\r\n,\r\nequals M with one row multiplied by λ.\r\nWhat effect does multiplication by the elementary matrix Ri(λ) have on\r\nthe determinant?\r\ndet M0 =\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1) · · · λmiσ(i)\r\n· · · mn\r\nσ(n)\r\n= λ\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1) · · · miσ(i)\r\n· · · mn\r\nσ(n)\r\n= λ det M\r\n170",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f350ab2f-aa0f-432b-9cd6-7aeeeca6d7ab.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1a7b0990ea2a68d1575d63384f860b17a047a1e0ec80b4635b9b6f174f424577",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 448
      },
      {
        "segments": [
          {
            "segment_id": "e6201294-07dd-4ebb-8036-b8fbe4f4ffc3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 171,
            "page_width": 612,
            "page_height": 792,
            "content": "8.2 Elementary Matrices and Determinants 171\r\nFigure 8.3: Rescaling a row rescales the determinant.\r\nThus, multiplying a row by λ multiplies the determinant by λ. I.e.,\r\ndet R\r\ni\r\n(λ)M = λ det M .\r\nSince Ri(λ) is just the identity matrix with a single row multiplied by λ,\r\nthen by the above rule, the determinant of Ri(λ) is λ. Thus\r\ndet R\r\ni\r\n(λ) = det\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\nλ\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n= λ ,\r\nand once again we have a product of determinants formula\r\ndet R\r\ni\r\n(λ)M\r\n\u0001\r\n= det R\r\ni\r\n(λ)\r\n\u0001\r\ndet M.\r\n8.2.3 Row Addition\r\nThe final row operation is adding µRjto Ri. This is done with the elementary\r\nmatrix S\r\ni\r\nj\r\n(µ), which is an identity matrix but with an additional µ in the i, j\r\nposition;\r\n171",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e6201294-07dd-4ebb-8036-b8fbe4f4ffc3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=62a76133fff01318abc37e40a5eba3964f0cc77008c1df91307af69a461d6df7",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2095b617-29ad-4da9-b1b4-45e7a486cde5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 172,
            "page_width": 612,
            "page_height": 792,
            "content": "172 Determinants\r\nS\r\ni\r\nj\r\n(µ) =\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\n1 µ\r\n.\r\n.\r\n.\r\n1\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n.\r\nThen multiplying M by S\r\ni\r\nj\r\n(µ) performs a row addition;\r\n\r\n\r\n1\r\n.\r\n.\r\n.\r\n1 µ\r\n.\r\n.\r\n.\r\n1\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n\r\n\r\n.\r\n.\r\n.\r\nRi\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\n\r\n\r\n=\r\n\r\n\r\n.\r\n.\r\n.\r\nRi + µRj\r\n.\r\n.\r\n.\r\nRj\r\n.\r\n.\r\n.\r\n\r\n\r\n.\r\nWhat is the effect of multiplying by S\r\ni\r\nj\r\n(µ) on the determinant? Let M0 =\r\nS\r\ni\r\nj\r\n(µ)M, and let M00 be the matrix M but with Rireplaced by Rj. Then\r\ndet M0 =\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1) · · ·(miσ(i) + µm\r\nj\r\nσ(j)\r\n)· · · mn\r\nσ(n)\r\n=\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1) · · · miσ(i)\r\n· · · mn\r\nσ(n)\r\n+\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1) · · · µm\r\nj\r\nσ(j)\r\n· · · m\r\nj\r\nσ(j)\r\n· · · mn\r\nσ(n)\r\n= det M + µ det M00\r\nSince M00 has two identical rows, its determinant is 0 so\r\ndet M0 = det M,\r\nwhen M0is obtained from M by adding µ times row j to row i.\r\nReading homework: problem 3\r\n172",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2095b617-29ad-4da9-b1b4-45e7a486cde5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cb7e213def1e1b6fb2cc8aad581b43b9187f044d666bb19162bca639bb407695",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 365
      },
      {
        "segments": [
          {
            "segment_id": "50cfe0e2-26f4-4bdb-b24d-10a549d49336",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 173,
            "page_width": 612,
            "page_height": 792,
            "content": "8.2 Elementary Matrices and Determinants 173\r\nFigure 8.4: Adding one row to another leaves the determinant unchanged.\r\nWe also have learnt that\r\ndet S\r\ni\r\nj\r\n(µ)M\r\n\u0001\r\n= det M .\r\nNotice that if M is the identity matrix, then we have\r\ndet S\r\ni\r\nj\r\n(µ) = det(S\r\ni\r\nj\r\n(µ)I) = det I = 1 .\r\n8.2.4 Determinant of Products\r\nIn summary, the elementary matrices for each of the row operations obey\r\nE\r\ni\r\nj = I with rows i, j swapped; det E\r\ni\r\nj = −1\r\nRi(λ) = I with λ in position i, i; det Ri(λ) = λ\r\nS\r\ni\r\nj\r\n(µ) = I with µ in position i, j; det S\r\ni\r\nj\r\n(µ) = 1\r\nElementary Determinants\r\nMoreover we found a useful formula for determinants of products:\r\nTheorem 8.2.1. If E is any of the elementary matrices E\r\ni\r\nj\r\n, Ri(λ), Si\r\nj\r\n(µ),\r\nthen det(EM) = det E det M.\r\n173",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/50cfe0e2-26f4-4bdb-b24d-10a549d49336.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=75e03b195e66d4ce5e22739fa42464755402a54ddb67aa957ea30e8df70a3224",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9e6585e0-fe05-45d1-9ec8-9e2d62bf90bf",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 174,
            "page_width": 612,
            "page_height": 792,
            "content": "174 Determinants\r\nWe have seen that any matrix M can be put into reduced row echelon form\r\nvia a sequence of row operations, and we have seen that any row operation can\r\nbe achieved via left matrix multiplication by an elementary matrix. Suppose\r\nthat RREF(M) is the reduced row echelon form of M. Then\r\nRREF(M) = E1E2 · · · EkM ,\r\nwhere each Eiis an elementary matrix. We know how to compute determi\u0002nants of elementary matrices and products thereof, so we ask:\r\nWhat is the determinant of a square matrix in reduced row echelon form?\r\nThe answer has two cases:\r\n1. If M is not invertible, then some row of RREF(M) contains only zeros.\r\nThen we can multiply the zero row by any constant λ without chang\u0002ing M; by our previous observation, this scales the determinant of M\r\nby λ. Thus, if M is not invertible, det RREF(M) = λ det RREF(M),\r\nand so det RREF(M) = 0.\r\n2. Otherwise, every row of RREF(M) has a pivot on the diagonal; since\r\nM is square, this means that RREF(M) is the identity matrix. So if\r\nM is invertible, det RREF(M) = 1.\r\nNotice that because det RREF(M) = det(E1E2 · · · EkM), by the theorem\r\nabove,\r\ndet RREF(M) = det(E1)· · · det(Ek) det M .\r\nSince each Ei has non-zero determinant, then det RREF(M) = 0 if and only\r\nif det M = 0. This establishes an important theorem:\r\nTheorem 8.2.2. For any square matrix M, det M 6= 0 if and only if M is\r\ninvertible.\r\nSince we know the determinants of the elementary matrices, we can im\u0002mediately obtain the following:\r\nDeterminants and Inverses\r\n174",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9e6585e0-fe05-45d1-9ec8-9e2d62bf90bf.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=976266916309f60c84cbdb04a09949c444f3693c88ad0739f3e6838add9f1f80",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 439
      },
      {
        "segments": [
          {
            "segment_id": "5e7b9026-c4b5-4525-bad8-35dec4e68fe0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 175,
            "page_width": 612,
            "page_height": 792,
            "content": "8.2 Elementary Matrices and Determinants 175\r\nFigure 8.5: Determinants measure if a matrix is invertible.\r\nCorollary 8.2.3. Any elementary matrix E\r\ni\r\nj\r\n, Ri(λ), Si\r\nj\r\n(µ) is invertible, ex\u0002cept for Ri\r\n(0). In fact, the inverse of an elementary matrix is another ele\u0002mentary matrix.\r\nTo obtain one last important result, suppose that M and N are square\r\nn × n matrices, with reduced row echelon forms such that, for elementary\r\nmatrices Ei and Fi,\r\nM = E1E2 · · · Ek RREF(M),\r\nand\r\nN = F1F2 · · · Fl RREF(N).\r\nIf RREF(M) is the identity matrix (i.e., M is invertible), then:\r\ndet(MN) = det(E1E2 · · · Ek RREF(M)F1F2 · · · Fl RREF(N))\r\n= det(E1E2 · · · EkIF1F2 · · · Fl RREF(N))\r\n= det(E1)· · · det(Ek) det(I) det(F1)· · · det(Fl) det RREF(N)\r\n= det(M) det(N)\r\nOtherwise, M is not invertible, and det M = 0 = det RREF(M). Then there\r\nexists a row of zeros in RREF(M), so Rn(λ) RREF(M) = RREF(M) for any\r\nλ. Then:\r\ndet(MN) = det(E1E2 · · · Ek RREF(M)N)\r\n= det(E1E2 · · · Ek RREF(M)N)\r\n= det(E1)· · · det(Ek) det(RREF(M)N)\r\n= det(E1)· · · det(Ek) det(R\r\nn\r\n(λ) RREF(M)N)\r\n= det(E1)· · · det(Ek)λ det(RREF(M)N)\r\n= λ det(MN)\r\n175",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5e7b9026-c4b5-4525-bad8-35dec4e68fe0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e4dc2371af5830bc1c73ff43f16d199a57c7b8fc39bb089a230e7273b9bcf35e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9b533089-135e-4d57-b6ea-cca2c835d6ea",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 176,
            "page_width": 612,
            "page_height": 792,
            "content": "176 Determinants\r\nFigure 8.6: “The determinant of a product is the product of determinants.”\r\nWhich implies that det(MN) = 0 = det M det N.\r\nThus we have shown that for any matrices M and N,\r\ndet(MN) = det M det N\r\nThis result is extremely important; do not forget it!\r\nAlternative proof\r\nReading homework: problem 4\r\n8.3 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2 , 3 , 4\r\n2 × 2 Determinant 7\r\nDeterminants and invertibility 8, 9, 10, 11\r\n1. Let\r\nM =\r\n\r\n\r\nm1\r\n1 m12 m13\r\nm2\r\n1 m2\r\n2 m2\r\n3\r\nm3\r\n1 m32 m33\r\n\r\n .\r\n176",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9b533089-135e-4d57-b6ea-cca2c835d6ea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cc6e02f9bddcc31736f7755730dac95e930daef498f7cdffbc9c8992d87e1d46",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 320
      },
      {
        "segments": [
          {
            "segment_id": "ff856eb2-ec3a-4c40-af78-7688c20d911d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 177,
            "page_width": 612,
            "page_height": 792,
            "content": "8.3 Review Problems 177\r\nUse row operations to put M into row echelon form. For simplicity,\r\nassume that m1\r\n1 6= 0 6= m11m22 − m21m12\r\n.\r\nProve that M is non-singular if and only if:\r\nm1\r\n1m22m3\r\n3 − m1\r\n1m2\r\n3m3\r\n2 + m1\r\n2m2\r\n3m3\r\n1 − m1\r\n2m2\r\n1m3\r\n3 + m1\r\n3m2\r\n1m3\r\n2 − m1\r\n3m2\r\n2m3\r\n1 6= 0\r\n2. (a) What does the matrix E\r\n1\r\n2 =\r\n\u0012\r\n0 1\r\n1 0\u0013\r\ndo to M =\r\n\u0012\r\na b\r\nd c\u0013\r\nunder\r\nleft multiplication? What about right multiplication?\r\n(b) Find elementary matrices R1(λ) and R2(λ) that respectively mul\u0002tiply rows 1 and 2 of M by λ but otherwise leave M the same\r\nunder left multiplication.\r\n(c) Find a matrix S\r\n1\r\n2\r\n(λ) that adds a multiple λ of row 2 to row 1\r\nunder left multiplication.\r\n3. Let ˆσ denote the permutation obtained from σ by transposing the first\r\ntwo outputs, i.e. σˆ(1) = σ(2) and ˆσ(2) = σ(1). Suppose the function\r\nf : {1, 2, 3, 4} → R. Write out explicitly the following two sums:\r\nX\r\nσ\r\nf\r\n\r\nσ(s)\r\n\u0001\r\nand X\r\nσ\r\nf\r\n\r\nσˆ(s)\r\n\u0001\r\n.\r\nWhat do you observe? Now write a brief explanation why the following\r\nequality holds\r\nX\r\nσ\r\nF(σ) = X\r\nσ\r\nF(ˆσ),\r\nwhere the domain of the function F is the set of all permutations of n\r\nobjects and ˆσ is related to σ by swapping a given pair of objects.\r\n4. Let M be a matrix and S\r\ni\r\njM the same matrix with rows i and j\r\nswitched. Explain every line of the series of equations proving that\r\ndet M = − det(S\r\ni\r\njM).\r\n5. Let M0 be the matrix obtained from M by swapping two columns i\r\nand j. Show that det M0 = − det M.\r\n6. The scalar triple product of three vectors u, v, w from R\r\n3\r\nis u ·(v × w).\r\nShow that this product is the same as the determinant of the matrix\r\nwhose columns are u, v, w (in that order). What happens to the scalar\r\ntriple product when the factors are permuted?\r\n177",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ff856eb2-ec3a-4c40-af78-7688c20d911d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fb1f810555e32ed144ef1426769f669895bde3d6abd044ba8e81b9675345f3f7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 363
      },
      {
        "segments": [
          {
            "segment_id": "2cfa31cc-e1f8-4310-a6a1-32a9926f64b2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 178,
            "page_width": 612,
            "page_height": 792,
            "content": "178 Determinants\r\n7. Show that if M is a 3 × 3 matrix whose third row is a sum of multiples\r\nof the other rows (R3 = aR2 + bR1) then det M = 0. Show that the\r\nsame is true if one of the columns is a sum of multiples of the others.\r\n8. Calculate the determinant below by factoring the matrix into elemen\u0002tary matrices times simpler matrices and using the trick\r\ndet(M) = det(E\r\n−1EM) = det(E−1\r\n) det(EM).\r\nExplicitly show each ERO matrix.\r\ndet\r\n\r\n\r\n2 1 0\r\n4 3 1\r\n2 2 2\r\n\r\n\r\n9. Let M =\r\n\u0012\r\na b\r\nc d\u0013\r\nand N =\r\n\u0012\r\nx y\r\nz w\u0013\r\n. Compute the following:\r\n(a) det M.\r\n(b) det N.\r\n(c) det(MN).\r\n(d) det M det N.\r\n(e) det(M−1) assuming ad − bc 6= 0.\r\n(f) det(MT)\r\n(g) det(M +N) − (det M + det N). Is the determinant a linear trans\u0002formation from square matrices to real numbers? Explain.\r\n10. Suppose M =\r\n\u0012\r\na b\r\nc d\u0013\r\nis invertible. Write M as a product of elemen\u0002tary row matrices times RREF(M).\r\n11. Find the inverses of each of the elementary matrices, E\r\ni\r\nj\r\n, Ri(λ), Si\r\nj\r\n(λ).\r\nMake sure to show that the elementary matrix times its inverse is ac\u0002tually the identity.\r\n12. Let e\r\ni\r\nj denote the matrix with a 1 in the i-th row and j-th column\r\nand 0’s everywhere else, and let A be an arbitrary 2 × 2 matrix. Com\u0002pute det(A + tI2). What is the first order term (the t\r\n1\r\nterm)? Can you\r\n178",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2cfa31cc-e1f8-4310-a6a1-32a9926f64b2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8024f6b6f72aab22ebc8551d27130fe4de09bdb8fdeefacde9fe66055aaefb0d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "186617f4-8c50-49ac-8c11-8fe332ad88a0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 179,
            "page_width": 612,
            "page_height": 792,
            "content": "8.3 Review Problems 179\r\nexpress your results in terms of tr(A)? What about the first order term\r\nin det(A + tIn) for any arbitrary n × n matrix A in terms of tr(A)?\r\nNote that the result of det(A + tI2) is a polynomial in the variable t\r\nknown as the characteristic polynomial.\r\n13. (Directional) Derivative of the Determinant:\r\nNotice that det: Mn\r\nn → R (where Mnn\r\nis the vector space of all n × n\r\nmatrices) det is a function of n\r\n2 variables so we can take directional\r\nderivatives of det.\r\nLet A be an arbitrary n × n matrix, and for all i and j compute the\r\nfollowing:\r\n(a)\r\nlim\r\nt→0\r\ndet(I2 + tei\r\nj\r\n) − det(I2)\r\nt\r\n(b)\r\nlim\r\nt→0\r\ndet(I3 + tei\r\nj\r\n) − det(I3)\r\nt\r\n(c)\r\nlim\r\nt→0\r\ndet(In + tei\r\nj\r\n) − det(In)\r\nt\r\n(d)\r\nlim\r\nt→0\r\ndet(In + At) − det(In)\r\nt\r\nNote, these are the directional derivative in the e\r\ni\r\nj\r\nand A directions.\r\n14. How many functions are in the set\r\n{f : {1, . . . , n} → {1, . . . , n}|f\r\n−1\r\nexists} ?\r\nWhat about the set\r\n{1, . . . , n}\r\n{1,...,n}\r\n?\r\nWhich of these two sets correspond to the set of all permutations of n\r\nobjects?\r\n179",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/186617f4-8c50-49ac-8c11-8fe332ad88a0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f71ff92e5b0e3c357c7771b263fd29cf942fd715d9389781ed8220c59918b3a6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 492
      },
      {
        "segments": [
          {
            "segment_id": "e646c283-0c30-427f-b465-f8578adf7f8f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 180,
            "page_width": 612,
            "page_height": 792,
            "content": "180 Determinants\r\n8.4 Properties of the Determinant\r\nWe now know that the determinant of a matrix is non-zero if and only if that\r\nmatrix is invertible. We also know that the determinant is a multiplicative\r\nfunction, in the sense that det(MN) = det M det N. Now we will devise\r\nsome methods for calculating the determinant.\r\nRecall that:\r\ndet M =\r\nX\r\nσ\r\nsgn(σ)m1\r\nσ(1)m2\r\nσ(2) · · · mn\r\nσ(n)\r\n.\r\nA minor of an n × n matrix M is the determinant of any square matrix\r\nobtained from M by deleting one row and one column. In particular, any\r\nentry mi\r\nj\r\nof a square matrix M is associated to a minor obtained by deleting\r\nthe ith row and jth column of M.\r\nIt is possible to write the determinant of a matrix in terms of its minors\r\nas follows:\r\ndet M =\r\nX\r\nσ\r\nsgn(σ) m1\r\nσ(1)m2σ(2) · · · mnσ(n)\r\n= m1\r\n1\r\nX\r\nσ/\r\n1\r\nsgn(σ/\r\n1\r\n) m2\r\nσ/\r\n1\r\n(2) · · · mnσ/\r\n1\r\n(n)\r\n+ m1\r\n2\r\nX\r\nσ/\r\n2\r\nsgn(σ/\r\n2\r\n) m2\r\nσ/\r\n2\r\n(1)m3σ/\r\n2\r\n(3) · · · mnσ/\r\n2\r\n(n)\r\n+ m1\r\n3\r\nX\r\nσ/\r\n3\r\nsgn(σ/\r\n3\r\n) m2\r\nσ/\r\n3\r\n(1)m3σ/\r\n3\r\n(2)m4σ/\r\n3\r\n(4) · · · mnσ/\r\n3\r\n(n)\r\n+ · · ·\r\nHere the symbols σ/\r\nk\r\nrefers to the permutation σ with the input k removed.\r\nThe summand on the j’th line of the above formula looks like the determinant\r\nof the minor obtained by removing the first and j’th column of M. However\r\nwe still need to replace sum of σ/\r\nj\r\nby a sum over permutations of column\r\nnumbers of the matrix entries of this minor. This costs a minus sign whenever\r\nj −1 is odd. In other words, to expand by minors we pick an entry m1\r\nj\r\nof the\r\nfirst row, then add (−1)j−1times the determinant of the matrix with row i\r\nand column j deleted. An example will probably help:\r\n180",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e646c283-0c30-427f-b465-f8578adf7f8f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=60365ed71415c5cfa27a00a64046cfe7b0021945fa08281a347dfe0d9222d1a2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 336
      },
      {
        "segments": [
          {
            "segment_id": "f71735bf-c4b3-4f09-9426-419951442b66",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 181,
            "page_width": 612,
            "page_height": 792,
            "content": "8.4 Properties of the Determinant 181\r\nExample 102 Let’s compute the determinant of\r\nM =\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n\r\nusing expansion by minors:\r\ndet M = 1 det \u0012\r\n5 6\r\n8 9\u0013\r\n− 2 det \u0012\r\n4 6\r\n7 9\u0013\r\n+ 3 det \u0012\r\n4 5\r\n7 8\u0013\r\n= 1(5 · 9 − 8 · 6) − 2(4 · 9 − 7 · 6) + 3(4 · 8 − 7 · 5)\r\n= 0\r\nHere, M−1 does not exist because1 det M = 0.\r\nExample 103 Sometimes the entries of a matrix allow us to simplify the calculation\r\nof the determinant. Take N =\r\n\r\n\r\n1 2 3\r\n4 0 0\r\n7 8 9\r\n\r\n. Notice that the second row has many\r\nzeros; then we can switch the first and second rows of N before expanding in minors\r\nto get:\r\ndet\r\n\r\n\r\n1 2 3\r\n4 0 0\r\n7 8 9\r\n\r\n = − det\r\n\r\n\r\n4 0 0\r\n1 2 3\r\n7 8 9\r\n\r\n\r\n= −4 det \u0012\r\n2 3\r\n8 9\u0013\r\n= 24\r\nExample\r\nSince we know how the determinant of a matrix changes when you perform\r\nrow operations, it is often very beneficial to perform row operations before\r\ncomputing the determinant by brute force.\r\n1A fun exercise is to compute the determinant of a 4 × 4 matrix filled in order, from\r\nleft to right, with the numbers 1, 2, 3, . . . , 16. What do you observe? Try the same for a\r\n5 × 5 matrix with 1, 2, 3, . . . , 25. Is there a pattern? Can you explain it?\r\n181",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f71735bf-c4b3-4f09-9426-419951442b66.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0428c02647cb828794433dd159eef9a1f490f7009176bc81bcf66a5b0bc1df1b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e0f4a8b1-894c-4629-a15c-877069cfe598",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 182,
            "page_width": 612,
            "page_height": 792,
            "content": "182 Determinants\r\nFigure 8.7: Transposes leave the determinant unchanged.\r\nExample 104\r\ndet\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n = det\r\n\r\n\r\n1 2 3\r\n3 3 3\r\n6 6 6\r\n\r\n = det\r\n\r\n\r\n1 2 3\r\n3 3 3\r\n0 0 0\r\n\r\n = 0 .\r\nTry to determine which row operations we made at each step of this computation.\r\nYou might suspect that determinants have similar properties with respect\r\nto columns as what applies to rows:\r\nIf M is a square matrix then det MT = det M .\r\nReading homework: problem 5\r\nExample 105 Because of this, we see that expansion by minors also works over\r\ncolumns. Let\r\nM =\r\n\r\n\r\n1 2 3\r\n0 5 6\r\n0 8 9\r\n\r\n .\r\nThen\r\ndet M = det MT = 1 det \u0012\r\n5 8\r\n6 9\u0013\r\n= −3 .\r\n182",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e0f4a8b1-894c-4629-a15c-877069cfe598.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2faf42b0f09c44a75645a339fd4fb221c7acc69135fb06a1e9439a1916248929",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 443
      },
      {
        "segments": [
          {
            "segment_id": "2c09013e-d5ae-48f3-b796-5b46f73bffec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 183,
            "page_width": 612,
            "page_height": 792,
            "content": "8.4 Properties of the Determinant 183\r\n8.4.1 Determinant of the Inverse\r\nLet M and N be n × n matrices. We previously showed that\r\ndet(MN) = det M det N, and det I = 1.\r\nThen 1 = det I = det(MM−1) = det M det M−1. As such we have:\r\nTheorem 8.4.1.\r\ndet M−1 =\r\n1\r\ndet M\r\n8.4.2 Adjoint of a Matrix\r\nRecall that for a 2 × 2 matrix\r\n\u0012\r\nd −b\r\n−c a\u0013 \u0012a bc d\u0013\r\n= det \u0012\r\na b\r\nc d\u0013\r\nI .\r\nOr in a more careful notation: if\r\nM =\r\n\u0012\r\nm1\r\n1 m12\r\nm2\r\n1 m2\r\n2\r\n\u0013\r\n,\r\nthen\r\nM−1 =\r\n1\r\nm1\r\n1m22 − m12m21\r\n\u0012\r\nm2\r\n2 −m1\r\n2\r\n−m2\r\n1 m11\r\n\u0013\r\n,\r\nso long as det M = m1\r\n1m2\r\n2 − m1\r\n2m2\r\n1 6= 0. The matrix \u0012\r\nm2\r\n2 −m12\r\n−m2\r\n1 m11\r\n\u0013\r\nthat\r\nappears above is a special matrix, called the adjoint of M. Let’s define the\r\nadjoint for an n × n matrix.\r\nThe cofactor of M corresponding to the entry mi\r\nj\r\nof M is the product\r\nof the minor associated to mi\r\nj\r\nand (−1)i+j. This is written cofactor(mi\r\nj\r\n).\r\n183",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2c09013e-d5ae-48f3-b796-5b46f73bffec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0db1ddc60e11a0383dcb238fc1e0134044e99f7c69e4579d5b331b8f31759802",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 204
      },
      {
        "segments": [
          {
            "segment_id": "8cd334b7-0fd9-4f5f-a3e1-108cb80ad4fe",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 184,
            "page_width": 612,
            "page_height": 792,
            "content": "184 Determinants\r\nDefinition For M = (mi\r\nj\r\n) a square matrix, the adjoint matrix adj M is\r\ngiven by\r\nadj M = (cofactor(mi\r\nj\r\n))T.\r\nExample 106\r\nadj\r\n\r\n\r\n3 −1 −1\r\n1 2 0\r\n0 1 1\r\n\r\n =\r\n\r\n\r\ndet \u0012\r\n2 0\r\n1 1\u0013\r\n− det \u0012\r\n1 0\r\n0 1\u0013\r\ndet \u0012\r\n1 2\r\n0 1\u0013\r\n− det \u0012\r\n−1 −1\r\n1 1\u0013\r\ndet \u0012\r\n3 −1\r\n0 1\u0013\r\n− det \u0012\r\n3 −1\r\n0 1\u0013\r\ndet \u0012\r\n−1 −1\r\n2 0\u0013\r\n− det \u0012\r\n3 −1\r\n1 0\u0013\r\ndet \u0012\r\n3 −1\r\n1 2\u0013\r\n\r\n\r\nT\r\nReading homework: problem 6\r\nLet’s compute the product M adj M. For any matrix N, the i, j entry\r\nof MN is given by taking the dot product of the ith row of M and the jth\r\ncolumn of N. Notice that the dot product of the ith row of M and the ith\r\ncolumn of adj M is just the expansion by minors of det M in the ith row.\r\nFurther, notice that the dot product of the ith row of M and the jth column\r\nof adj M with j 6= i is the same as expanding M by minors, but with the\r\njth row replaced by the ith row. Since the determinant of any matrix with\r\na row repeated is zero, then these dot products are zero as well.\r\nWe know that the i, j entry of the product of two matrices is the dot\r\nproduct of the ith row of the first by the jth column of the second. Then:\r\nM adj M = (det M)I\r\nThus, when det M 6= 0, the adjoint gives an explicit formula for M−1.\r\nTheorem 8.4.2. For M a square matrix with det M 6= 0 (equivalently, if M\r\nis invertible), then\r\nM−1 =\r\n1\r\ndet M\r\nadj M\r\nThe Adjoint Matrix\r\n184",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8cd334b7-0fd9-4f5f-a3e1-108cb80ad4fe.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f7b4c1d1fc1d1ce05c430ab05ccd9e0ab56b784ce844cb9866b29f1e48e45fc1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 319
      },
      {
        "segments": [
          {
            "segment_id": "276e3db9-e371-4df7-ba43-3a6bae6a8a60",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 185,
            "page_width": 612,
            "page_height": 792,
            "content": "8.4 Properties of the Determinant 185\r\nExample 107 Continuing with the previous example,\r\nadj\r\n\r\n\r\n3 −1 −1\r\n1 2 0\r\n0 1 1\r\n\r\n =\r\n\r\n\r\n2 0 2\r\n−1 3 −1\r\n1 −3 7\r\n\r\n .\r\nNow, multiply:\r\n\r\n\r\n3 −1 −1\r\n1 2 0\r\n0 1 1\r\n\r\n\r\n\r\n\r\n2 0 2\r\n−1 3 −1\r\n1 −3 7\r\n\r\n =\r\n\r\n\r\n6 0 0\r\n0 6 0\r\n0 0 6\r\n\r\n\r\n⇒\r\n\r\n\r\n3 −1 −1\r\n1 2 0\r\n0 1 1\r\n\r\n\r\n−1\r\n=\r\n1\r\n6\r\n\r\n\r\n2 0 2\r\n−1 3 −1\r\n1 −3 7\r\n\r\n\r\nThis process for finding the inverse matrix is sometimes called Cramer’s Rule .\r\n8.4.3 Application: Volume of a Parallelepiped\r\nGiven three vectors u, v, w in R\r\n3\r\n, the parallelepiped determined by the three\r\nvectors is the “squished” box whose edges are parallel to u, v, and w as\r\ndepicted in Figure 8.8.\r\nFrom calculus, we know that the volume of this object is |u (v × w)|.\r\nThis is the same as expansion by minors of the matrix whose columns are\r\nu, v, w. Then:\r\nVolume =\r\n\f\r\n\f det \r\nu v w\u0001 \f\r\n\f\r\n185",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/276e3db9-e371-4df7-ba43-3a6bae6a8a60.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2e76be38264a00d77df941acf7a00f0be3fcf238932019a528d37e0e2a9efafd",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "af53c9a5-e5d2-46f5-abdd-ddb9ad1649c4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 186,
            "page_width": 612,
            "page_height": 792,
            "content": "186 Determinants\r\nFigure 8.8: A parallelepiped.\r\n8.5 Review Problems\r\nWebwork:\r\nReading Problems 5 ,6\r\nRow of zeros 12\r\n3 × 3 determinant 13\r\nTriangular determinants 14,15,16,17\r\nExpanding in a column 18\r\nMinors and cofactors 19\r\n1. Find the determinant via expanding by minors.\r\n\r\n\r\n2 1 3 7\r\n6 1 4 4\r\n2 1 8 0\r\n1 0 2 0\r\n\r\n\r\n2. Even if M is not a square matrix, both MMT and MTM are square. Is\r\nit true that det(MMT) = det(MTM) for all matrices M? How about\r\ntr(MMT) = tr(MTM)?\r\n186",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/af53c9a5-e5d2-46f5-abdd-ddb9ad1649c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=58ba2f818ff2c328dd50155b0afba466f212c54ac28c413467946523ca2c418a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 304
      },
      {
        "segments": [
          {
            "segment_id": "05f8d062-f3e6-418a-bfe3-5db3d4bf3996",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 187,
            "page_width": 612,
            "page_height": 792,
            "content": "8.5 Review Problems 187\r\n3. Let σ\r\n−1 denote the inverse permutation of σ. Suppose the function\r\nf : {1, 2, 3, 4} → R. Write out explicitly the following two sums:\r\nX\r\nσ\r\nf\r\n\r\nσ(s)\r\n\u0001\r\nand X\r\nσ\r\nf\r\n\r\nσ\r\n−1\r\n(s)\r\n\u0001\r\n.\r\nWhat do you observe? Now write a brief explanation why the following\r\nequality holds\r\nX\r\nσ\r\nF(σ) = X\r\nσ\r\nF(σ\r\n−1\r\n),\r\nwhere the domain of the function F is the set of all permutations of n\r\nobjects.\r\n4. Suppose M = LU is an LU decomposition. Explain how you would\r\nefficiently compute det M in this case. How does this decomposition\r\nallow you to easily see if M is invertible?\r\n5. In computer science, the complexity of an algorithm is (roughly) com\u0002puted by counting the number of times a given operation is performed.\r\nSuppose adding or subtracting any two numbers takes a seconds, and\r\nmultiplying two numbers takes m seconds. Then, for example, com\u0002puting 2 · 6 − 5 would take a + m seconds.\r\n(a) How many additions and multiplications does it take to compute\r\nthe determinant of a general 2 × 2 matrix?\r\n(b) Write a formula for the number of additions and multiplications it\r\ntakes to compute the determinant of a general n × n matrix using\r\nthe definition of the determinant as a sum over permutations.\r\nAssume that finding and multiplying by the sign of a permutation\r\nis free.\r\n(c) How many additions and multiplications does it take to compute\r\nthe determinant of a general 3 × 3 matrix using expansion by\r\nminors? Assuming m = 2a, is this faster than computing the\r\ndeterminant from the definition?\r\nHint\r\n187",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/05f8d062-f3e6-418a-bfe3-5db3d4bf3996.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bb0ec9a12c5d7545b6a405fea34c7c9bdb62e8fecb8dba0004608ef3ae724d79",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "648dd097-93b6-489d-8e7c-9785446dfc5d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 188,
            "page_width": 612,
            "page_height": 792,
            "content": "188 Determinants\r\n188",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/648dd097-93b6-489d-8e7c-9785446dfc5d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=484fa48146050ebcf3be2ec0bdf088c995687465e06c6de4f72b8f8d71ef79ef",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "81247d9f-a7e1-4bed-b5ba-ca2bde1d4f28",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 189,
            "page_width": 612,
            "page_height": 792,
            "content": "9\r\nSubspaces and Spanning Sets\r\nIt is time to study vector spaces more carefully and return to some funda\u0002mental questions:\r\n1. Subspaces: When is a subset of a vector space itself a vector space?\r\n(This is the notion of a subspace.)\r\n2. Linear Independence: Given a collection of vectors, is there a way to\r\ntell whether they are independent, or if one is a “linear combination”\r\nof the others?\r\n3. Dimension: Is there a consistent definition of how “big” a vector space\r\nis?\r\n4. Basis: How do we label vectors? Can we write any vector as a sum of\r\nsome basic set of vectors? How do we change our point of view from\r\nvectors labeled one way to vectors labeled in another way?\r\nLet’s start at the top!\r\n9.1 Subspaces\r\nDefinition We say that a subset U of a vector space V is a subspace of V\r\nif U is a vector space under the inherited addition and scalar multiplication\r\noperations of V .\r\n189",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/81247d9f-a7e1-4bed-b5ba-ca2bde1d4f28.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1d3f67101ac82652e7b12c8c462bf185619a655b7a6abce3706201bf7274bf56",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 449
      },
      {
        "segments": [
          {
            "segment_id": "8adc4a76-7a30-4df0-9743-93d16bda13dc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 190,
            "page_width": 612,
            "page_height": 792,
            "content": "190 Subspaces and Spanning Sets\r\nExample 108 Consider a plane P in R\r\n3\r\nthrough the origin:\r\nax + by + cz = 0.\r\nThis equation can be expressed as the homogeneous system \r\na b c\u0001\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n = 0, or\r\nMX = 0 with M the matrix \r\na b c\u0001\r\n. If X1 and X2 are both solutions to MX = 0,\r\nthen, by linearity of matrix multiplication, so is µX1 + νX2:\r\nM(µX1 + νX2) = µMX1 + νMX2 = 0.\r\nSo P is closed under addition and scalar multiplication. Additionally, P contains the\r\norigin (which can be derived from the above by setting µ = ν = 0). All other vector\r\nspace requirements hold for P because they hold for all vectors in R\r\n3\r\n.\r\nTheorem 9.1.1 (Subspace Theorem). Let U be a non-empty subset of a\r\nvector space V . Then U is a subspace if and only if µu1 + νu2 ∈ U for\r\narbitrary u1, u2 in U, and arbitrary constants µ, ν.\r\nProof. One direction of this proof is easy: if U is a subspace, then it is a vector\r\nspace, and so by the additive closure and multiplicative closure properties of\r\nvector spaces, it has to be true that µu1 + νu2 ∈ U for all u1, u2 in U and all\r\nconstants constants µ, ν.\r\nThe other direction is almost as easy: we need to show that if µu1+νu2 ∈\r\nU for all u1, u2 in U and all constants µ, ν, then U is a vector space. That\r\nis, we need to show that the ten properties of vector spaces are satisfied.\r\nWe know that the additive closure and multiplicative closure properties are\r\nsatisfied. Further, U All of the other eight properties because V has them.\r\n190",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8adc4a76-7a30-4df0-9743-93d16bda13dc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8ebdc91d4e9611bf494460140e1635e0ce597884e0548e38b5c1e6bfa802783d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 303
      },
      {
        "segments": [
          {
            "segment_id": "7b8e1070-73b9-4108-8218-1c291ae50e8d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 191,
            "page_width": 612,
            "page_height": 792,
            "content": "9.2 Building Subspaces 191\r\nNote that the requirements of the subspace theorem are often referred to as\r\n“closure”.\r\nWe can use this theorem to check if a set is a vector space. That is, if we\r\nhave some set U of vectors that come from some bigger vector space V , to\r\ncheck if U itself forms a smaller vector space we need check only two things:\r\n1. If we add any two vectors in U, do we end up with a vector in U?\r\n2. If we multiply any vector in U by any constant, do we end up with a\r\nvector in U?\r\nIf the answer to both of these questions is yes, then U is a vector space. If\r\nnot, U is not a vector space.\r\nReading homework: problem 1\r\n9.2 Building Subspaces\r\nConsider the set\r\nU =\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n⊂ R\r\n3\r\n.\r\nBecause U consists of only two vectors, it clear that U is not a vector space,\r\nsince any constant multiple of these vectors should also be in U. For example,\r\nthe 0-vector is not in U, nor is U closed under vector addition.\r\nBut we know that any two vectors define a plane:\r\n191",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7b8e1070-73b9-4108-8218-1c291ae50e8d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=23bb1f3defde61dacab302380ccc4a2b76160ebdc4ff834312ec838eb7e84722",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 220
      },
      {
        "segments": [
          {
            "segment_id": "80582af3-9f40-41d3-8a95-1507aa409f28",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 192,
            "page_width": 612,
            "page_height": 792,
            "content": "192 Subspaces and Spanning Sets\r\nIn this case, the vectors in U define the xy-plane in R\r\n3\r\n. We can view the\r\nxy-plane as the set of all vectors that arise as a linear combination of the two\r\nvectors in U. We call this set of all linear combinations the span of U:\r\nspan(U) =\r\n\r\n\r\n\r\nx\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n + y\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\nx, y ∈ R\r\n\r\n\r\n\r\n.\r\nNotice that any vector in the xy-plane is of the form\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n = x\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n + y\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ∈ span(U).\r\nDefinition Let V be a vector space and S = {s1, s2, . . .} ⊂ V a subset of V .\r\nThen the span of S, denoted span(S), is the set\r\nspan(S) := {r\r\n1\r\ns1 + r\r\n2\r\ns2 + · · · + r\r\nN sN | ri ∈ R, N ∈ N}.\r\nThat is, the span of S is the set of all finite linear combinations1 of\r\nelements of S. Any finite sum of the form “a constant times s1 plus a constant\r\ntimes s2 plus a constant times s3 and so on” is in the span of S.\r\n2\r\nExample 109 Let V = R\r\n3\r\nand X ⊂ V be the x-axis. Let P =\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n, and set\r\nS = X ∪ {P} .\r\nThe vector\r\n\r\n\r\n2\r\n3\r\n0\r\n\r\n is in span(S), because\r\n\r\n\r\n2\r\n3\r\n0\r\n\r\n =\r\n\r\n\r\n2\r\n0\r\n0\r\n\r\n + 3\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n . Similarly, the vector\r\n\r\n\r\n−12\r\n17.5\r\n0\r\n\r\n is in span(S), because\r\n\r\n\r\n−12\r\n17.5\r\n0\r\n\r\n =\r\n\r\n\r\n−12\r\n0\r\n0\r\n\r\n+17.5\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n . Similarly, any vector\r\n1Usually our vector spaces are defined over R, but in general we can have vector spaces\r\ndefined over different base fields such as C or Z2. The coefficients r\r\ni\r\nshould come from\r\nwhatever our base field is (usually R).\r\n2\r\nIt is important that we only allow finitely many terms in our linear combinations; in\r\nthe definition above, N must be a finite number. It can be any finite number, but it must\r\nbe finite.\r\n192",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/80582af3-9f40-41d3-8a95-1507aa409f28.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c507ea5daffebd727e3c4235c9713a14fed7d592f43abe043124cc133dc7806d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 413
      },
      {
        "segments": [
          {
            "segment_id": "70d72c28-a641-438e-9991-c109ade4864e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 193,
            "page_width": 612,
            "page_height": 792,
            "content": "9.2 Building Subspaces 193\r\nof the form\r\n\r\n\r\nx\r\n0\r\n0\r\n\r\n + y\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n\r\nis in span(S). On the other hand, any vector in span(S) must have a zero in the\r\nz-coordinate. (Why?) So span(S) is the xy-plane, which is a vector space. (Try\r\ndrawing a picture to verify this!)\r\nReading homework: problem 2\r\nLemma 9.2.1. For any subset S ⊂ V , span(S) is a subspace of V .\r\nProof. We need to show that span(S) is a vector space.\r\nIt suffices to show that span(S) is closed under linear combinations. Let\r\nu, v ∈ span(S) and λ, µ be constants. By the definition of span(S), there are\r\nconstants c\r\ni and di\r\n(some of which could be zero) such that:\r\nu = c\r\n1\r\ns1 + c\r\n2\r\ns2 + · · ·\r\nv = d\r\n1\r\ns1 + d\r\n2\r\ns2 + · · ·\r\n⇒ λu + µv = λ(c\r\n1\r\ns1 + c\r\n2\r\ns2 + · · ·) + µ(d\r\n1\r\ns1 + d\r\n2\r\ns2 + · · ·)\r\n= (λc1 + µd1)s1 + (λc2 + µd2)s2 + · · ·\r\nThis last sum is a linear combination of elements of S, and is thus in span(S).\r\nThen span(S) is closed under linear combinations, and is thus a subspace\r\nof V .\r\nNote that this proof, like many proofs, consisted of little more than just\r\nwriting out the definitions.\r\nExample 110 For which values of a does\r\nspan\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\na\r\n\r\n ,\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n ,\r\n\r\n\r\na\r\n1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n= R\r\n3\r\n?\r\nGiven an arbitrary vector\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n in R\r\n3\r\n, we need to find constants r\r\n1\r\n, r2, r3such that\r\n193",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/70d72c28-a641-438e-9991-c109ade4864e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8e9ebb08560cd9080dbf874fce1f6a95398b5625504277e988014d61e35e9488",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 322
      },
      {
        "segments": [
          {
            "segment_id": "4c2259f3-016e-4199-9f58-c0427c3dc1e6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 194,
            "page_width": 612,
            "page_height": 792,
            "content": "194 Subspaces and Spanning Sets\r\nr\r\n1\r\n\r\n\r\n1\r\n0\r\na\r\n\r\n + r\r\n2\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n + r\r\n3\r\n\r\n\r\na\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\nWe can write this as a linear system in the unknowns r\r\n1\r\n, r2, r3as follows:\r\n\r\n\r\n1 1 a\r\n0 2 1\r\na −3 0\r\n\r\n\r\n\r\n\r\nr\r\n1\r\nr\r\n2\r\nr\r\n3\r\n\r\n =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\nIf the matrix M =\r\n\r\n\r\n1 1 a\r\n0 2 1\r\na −3 0\r\n\r\n is invertible, then we can find a solution\r\nM−1\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\nr\r\n1\r\nr\r\n2\r\nr\r\n3\r\n\r\n\r\nfor any vector\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n ∈ R\r\n3\r\n.\r\nTherefore we should choose a so that M is invertible:\r\ni.e., 0 6= det M = −2a\r\n2 + 3 + a = −(2a − 3)(a + 1).\r\nThen the span is R\r\n3\r\nif and only if a 6= −1,\r\n3\r\n2\r\n.\r\nLinear systems as spanning sets\r\nSome other very important ways of building subspaces are given in the\r\nfollowing examples.\r\nExample 111 (The kernel of a linear map).\r\nSuppose L : U → V is a linear map between vector spaces. Then if\r\nL(u) = 0 = L(u\r\n0\r\n),\r\nlinearity tells us that\r\nL(αu + βu0) = αL(u) + βL(u\r\n0\r\n) = α0 + β0 = 0 .\r\n194",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4c2259f3-016e-4199-9f58-c0427c3dc1e6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=34f9e85053d3813f739410c2738c8658da9fdc47652c6276c78c2f5d7f62ab2a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 265
      },
      {
        "segments": [
          {
            "segment_id": "152df26a-2f6f-439a-8d9e-8e4a0f4a719e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 195,
            "page_width": 612,
            "page_height": 792,
            "content": "9.2 Building Subspaces 195\r\nHence, thanks to the subspace theorem, the set of all vectors in U that are mapped\r\nto the zero vector is a subspace of V . It is called the kernel of L:\r\nkerL := {u ∈ U|L(u) = 0} ⊂ U.\r\nNote that finding a kernel means finding a solution to a homogeneous linear equation.\r\nExample 112 (The image of a linear map).\r\nSuppose L : U → V is a linear map between vector spaces. Then if\r\nv = L(u) and v\r\n0 = L(u0\r\n),\r\nlinearity tells us that\r\nαv + βv0 = αL(u) + βL(u\r\n0\r\n) = L(αu + βu0).\r\nHence, calling once again on the subspace theorem, the set of all vectors in V that\r\nare obtained as outputs of the map L is a subspace. It is called the image of L:\r\nimL := {L(u) u ∈ U} ⊂ V.\r\nExample 113 (An eigenspace of a linear map).\r\nSuppose L : V → V is a linear map and V is a vector space. Then if\r\nL(u) = λu and L(v) = λv ,\r\nlinearity tells us that\r\nL(αu + βv) = αL(u) + βL(v) = αL(u) + βL(v) = αλu + βλv = λ(αu + βv).\r\nHence, again by subspace theorem, the set of all vectors in V that obey the eigenvector\r\nequation L(v) = λv is a subspace of V . It is called an eigenspace\r\nVλ := {v ∈ V |L(v) = λv}.\r\nFor most scalars λ, the only solution to L(v) = λv will be v = 0, which yields the\r\ntrivial subspace {0}. When there are nontrivial solutions to L(v) = λv, the number λ\r\nis called an eigenvalue, and carries essential information about the map L.\r\nKernels, images and eigenspaces are discussed in great depth in chap\u0002ters 16 and 12.\r\n195",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/152df26a-2f6f-439a-8d9e-8e4a0f4a719e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b063873e6022e0af41a77ae5c4dba4e84543741562c3e6657b62890025b3d6af",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "88927dbc-37e9-447c-857f-a5cee3b2e1e5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 196,
            "page_width": 612,
            "page_height": 792,
            "content": "196 Subspaces and Spanning Sets\r\n9.3 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2\r\nSubspaces 3, 4, 5, 6\r\nSpans 7, 8\r\n1. Determine if x − x\r\n3 ∈ span{x2\r\n, 2x + x\r\n2\r\n, x + x\r\n3}.\r\n2. Let U and W be subspaces of V . Are:\r\n(a) U ∪ W\r\n(b) U ∩ W\r\nalso subspaces? Explain why or why not. Draw examples in R\r\n3\r\n.\r\nHint\r\n3. Let L : R\r\n3 → R3 where\r\nL(x, y, z) = (x + 2y + z, 2x + y + z, 0).\r\nFind kerL, imL and eigenspaces R−1, R3. Your answers should be\r\nsubsets of R\r\n3\r\n. Express them using the span notation.\r\n196",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/88927dbc-37e9-447c-857f-a5cee3b2e1e5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9bb7cac1ce4e1aad602168f8bab387fe4d1d50ce783df1f5fe745ae381c20d37",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 429
      },
      {
        "segments": [
          {
            "segment_id": "b06e8f6c-fb41-4487-95c2-bcc9b670898f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 197,
            "page_width": 612,
            "page_height": 792,
            "content": "10\r\nLinear Independence\r\nConsider a plane P that includes the origin in R\r\n3 and non-zero vectors\r\n{u, v, w} in P.\r\nIf no two of u, v and w are parallel, then P = span{u, v, w}. But any two\r\nvectors determines a plane, so we should be able to span the plane using\r\nonly two of the vectors u, v, w. Then we could choose two of the vectors in\r\n{u, v, w} whose span is P, and express the other as a linear combination of\r\nthose two. Suppose u and v span P. Then there exist constants d\r\n1\r\n, d2(not\r\nboth zero) such that w = d\r\n1u + d2\r\nv. Since w can be expressed in terms of u\r\nand v we say that it is not independent. More generally, the relationship\r\nc\r\n1u + c2\r\nv + c\r\n3w = 0 ci ∈ R, some ci\r\n6= 0\r\nexpresses the fact that u, v, w are not all independent.\r\n197",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b06e8f6c-fb41-4487-95c2-bcc9b670898f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8db94fbce521d69ab5d76af1c9f3143810c2eb5b8b215ee4bd091d194d66206c",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "632d1342-01e6-4580-8fb1-32f54ce4e970",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 198,
            "page_width": 612,
            "page_height": 792,
            "content": "198 Linear Independence\r\nDefinition We say that the vectors v1, v2, . . . , vn are linearly dependent\r\nif there exist constants1c\r\n1\r\n, c2, . . . , cn not all zero such that\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + c\r\nn\r\nvn = 0.\r\nOtherwise, the vectors v1, v2, . . . , vn are linearly independent.\r\nRemark The zero vector 0V can never be on a list of independent vectors because\r\nα0V = 0V for any scalar α.\r\nExample 114 Consider the following vectors in R\r\n3\r\n:\r\nv1 =\r\n\r\n\r\n4\r\n−1\r\n3\r\n\r\n , v2 =\r\n\r\n\r\n−3\r\n7\r\n4\r\n\r\n , v3 =\r\n\r\n\r\n5\r\n12\r\n17\r\n\r\n , v4 =\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n .\r\nAre these vectors linearly independent?\r\nNo, since 3v1 + 2v2 − v3 + v4 = 0, the vectors are linearly dependent.\r\nWorked Example\r\n10.1 Showing Linear Dependence\r\nIn the above example we were given the linear combination 3v1+2v2−v3+v4\r\nseemingly by magic. The next example shows how to find such a linear\r\ncombination, if it exists.\r\nExample 115 Consider the following vectors in R\r\n3\r\n:\r\nv1 =\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n , v2 =\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n , v3 =\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n .\r\nAre they linearly independent?\r\nWe need to see whether the system\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + c\r\n3\r\nv3 = 0\r\n1Usually our vector spaces are defined over R, but in general we can have vector spaces\r\ndefined over different base fields such as C or Z2. The coefficients c\r\ni\r\nshould come from\r\nwhatever our base field is (usually R).\r\n198",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/632d1342-01e6-4580-8fb1-32f54ce4e970.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=74aa0853b4aa983340d415d67f1c2554c25986263efe6fb7d4f30ae60c9076d4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 464
      },
      {
        "segments": [
          {
            "segment_id": "79ac8df5-d9fe-4321-b1fc-7faf7243a513",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 199,
            "page_width": 612,
            "page_height": 792,
            "content": "10.1 Showing Linear Dependence 199\r\nhas any solutions for c\r\n1\r\n, c2, c3. We can rewrite this as a homogeneous system by\r\nbuilding a matrix whose columns are the vectors v1, v2 and v3:\r\n\r\nv1 v2 v3\r\n\u0001\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n = 0.\r\nThis system has solutions if and only if the matrix M =\r\n\r\nv1 v2 v3\r\n\u0001\r\nis singular, so\r\nwe should find the determinant of M:\r\ndet M = det\r\n\r\n\r\n0 1 1\r\n0 2 2\r\n1 1 3\r\n\r\n = det \u0012\r\n1 1\r\n2 2\u0013\r\n= 0.\r\nTherefore nontrivial solutions exist. At this point we know that the vectors are\r\nlinearly dependent. If we need to, we can find coefficients that demonstrate linear\r\ndependence by solving\r\n\r\n\r\n0 1 1 0\r\n0 2 2 0\r\n1 1 3 0\r\n\r\n ∼\r\n\r\n\r\n1 1 3 0\r\n0 1 1 0\r\n0 0 0 0\r\n\r\n ∼\r\n\r\n\r\n1 0 2 0\r\n0 1 1 0\r\n0 0 0 0\r\n\r\n .\r\nThe solution set {µ(−2, −1, 1) | µ ∈ R} encodes the linear combinations equal to zero;\r\nany choice of µ will produce coefficients c\r\n1\r\n, c2, c3that satisfy the linear homogeneous\r\nequation. In particular, µ = 1 corresponds to the equation\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + c\r\n3\r\nv3 = 0 ⇒ −2v1 − v2 + v3 = 0.\r\nReading homework: problem 1\r\nTheorem 10.1.1 (Linear Dependence). An ordered set of non-zero vectors\r\n(v1, . . . , vn) is linearly dependent if and only if one of the vectors vk is ex\u0002pressible as a linear combination of the preceding vectors.\r\nProof. The theorem is an if and only if statement, so there are two things to\r\nshow.\r\ni. First, we show that if vk = c\r\n1\r\nv1 + · · · c\r\nk−1\r\nvk−1 then the set is linearly\r\ndependent.\r\nThis is easy. We just rewrite the assumption:\r\nc\r\n1\r\nv1 + · · · + c\r\nk−1\r\nvk−1 − vk + 0vk+1 + · · · + 0vn = 0.\r\n199",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/79ac8df5-d9fe-4321-b1fc-7faf7243a513.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7e4483ed635ee714459a343417761edd02336dc8ea122c9c7569809ba8e9d558",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 362
      },
      {
        "segments": [
          {
            "segment_id": "6cd66ecb-e88a-47f7-8f33-f3a146c58a64",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 200,
            "page_width": 612,
            "page_height": 792,
            "content": "200 Linear Independence\r\nThis is a vanishing linear combination of the vectors {v1, . . . , vn} with\r\nnot all coefficients equal to zero, so {v1, . . . , vn} is a linearly dependent\r\nset.\r\nii. Now, we show that linear dependence implies that there exists k for\r\nwhich vk is a linear combination of the vectors {v1, . . . , vk−1}.\r\nThe assumption says that\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + c\r\nn\r\nvn = 0.\r\nTake k to be the largest number for which ck is not equal to zero. So:\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + c\r\nk−1\r\nvk−1 + c\r\nk\r\nvk = 0.\r\n(Note that k > 1, since otherwise we would have c\r\n1\r\nv1 = 0 ⇒ v1 = 0,\r\ncontradicting the assumption that none of the vi are the zero vector.)\r\nAs such, we can rearrange the equation:\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + c\r\nk−1\r\nvk−1 = −c\r\nk\r\nvk\r\n⇒ −\r\nc\r\n1\r\nc\r\nk\r\nv1 −\r\nc\r\n2\r\nc\r\nk\r\nv2 − · · · −\r\nc\r\nk−1\r\nc\r\nk\r\nvk−1 = vk.\r\nTherefore we have expressed vk as a linear combination of the previous\r\nvectors, and we are done.\r\nWorked proof\r\nExample 116 Consider the vector space P2(t) of polynomials of degree less than or\r\nequal to 2. Set:\r\nv1 = 1 + t\r\nv2 = 1 + t\r\n2\r\nv3 = t + t\r\n2\r\nv4 = 2 + t + t\r\n2\r\nv5 = 1 + t + t\r\n2\r\n.\r\nThe set {v1, . . . , v5} is linearly dependent, because v4 = v1 + v2.\r\n200",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6cd66ecb-e88a-47f7-8f33-f3a146c58a64.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4f2386d3f091511d21115a6a9205f2e738c125a02da25aa861c3e963e5bc770c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 294
      },
      {
        "segments": [
          {
            "segment_id": "14de6a8b-13cd-44d0-9f30-d355c2774a61",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 201,
            "page_width": 612,
            "page_height": 792,
            "content": "10.2 Showing Linear Independence 201\r\n10.2 Showing Linear Independence\r\nWe have seen two different ways to show a set of vectors is linearly dependent:\r\nwe can either find a linear combination of the vectors which is equal to\r\nzero, or we can express one of the vectors as a linear combination of the\r\nother vectors. On the other hand, to check that a set of vectors is linearly\r\nindependent, we must check that every linear combination of our vectors\r\nwith non-vanishing coefficients gives something other than the zero vector.\r\nEquivalently, to show that the set v1, v2, . . . , vn is linearly independent, we\r\nmust show that the equation c1v1 + c2v2 + · · · + cnvn = 0 has no solutions\r\nother than c1 = c2 = · · · = cn = 0.\r\nExample 117 Consider the following vectors in R\r\n3\r\n:\r\nv1 =\r\n\r\n\r\n0\r\n0\r\n2\r\n\r\n , v2 =\r\n\r\n\r\n2\r\n2\r\n1\r\n\r\n , v3 =\r\n\r\n\r\n1\r\n4\r\n3\r\n\r\n .\r\nAre they linearly independent?\r\nWe need to see whether the system\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + c\r\n3\r\nv3 = 0\r\nhas any solutions for c\r\n1\r\n, c2, c3. We can rewrite this as a homogeneous system:\r\n\r\nv1 v2 v3\r\n\u0001\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n = 0.\r\nThis system has solutions if and only if the matrix M =\r\n\r\nv1 v2 v3\r\n\u0001\r\nis singular, so\r\nwe should find the determinant of M:\r\ndet M = det\r\n\r\n\r\n0 2 1\r\n0 2 4\r\n2 1 3\r\n\r\n = 2 det \u0012\r\n2 1\r\n2 4\u0013\r\n= 12.\r\nSince the matrix M has non-zero determinant, the only solution to the system of\r\nequations\r\n\r\nv1 v2 v3\r\n\u0001\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n = 0\r\nis c1 = c2 = c3 = 0. So the vectors v1, v2, v3 are linearly independent.\r\nReading homework: problem 2\r\n201",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/14de6a8b-13cd-44d0-9f30-d355c2774a61.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=75130912125d60488c7909cf098964752811cea7b83b03c7000c8a8d88c5e999",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 341
      },
      {
        "segments": [
          {
            "segment_id": "a2c246bb-e227-4410-9cea-9a643e205aa4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 202,
            "page_width": 612,
            "page_height": 792,
            "content": "202 Linear Independence\r\n10.3 From Dependent Independent\r\nNow suppose vectors v1, . . . , vn are linearly dependent,\r\nc\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + c\r\nn\r\nvn = 0\r\nwith c\r\n1 6= 0. Then:\r\nspan{v1, . . . , vn} = span{v2, . . . , vn}\r\nbecause any x ∈ span{v1, . . . , vn} is given by\r\nx = a\r\n1\r\nv1 + · · · a\r\nn\r\nvn\r\n= a\r\n1\r\n\u0012\r\n−\r\nc\r\n2\r\nc1\r\nv2 − · · · −\r\nc\r\nn\r\nc1\r\nvn\r\n\u0013\r\n+ a\r\n2\r\nv2 + · · · + a\r\nn\r\nvn\r\n=\r\n\u0012\r\na\r\n2 − a1\r\nc\r\n2\r\nc1\r\n\u0013\r\nv2 + · · · +\r\n\u0012\r\na\r\nn − a1\r\nc\r\nn\r\nc1\r\n\u0013\r\nvn.\r\nThen x is in span{v2, . . . , vn}.\r\nWhen we write a vector space as the span of a list of vectors, we would like\r\nthat list to be as short as possible (this idea is explored further in chapter 11).\r\nThis can be achieved by iterating the above procedure.\r\nExample 118 In the above example, we found that v4 = v1 + v2. In this case,\r\nany expression for a vector as a linear combination involving v4 can be turned into a\r\ncombination without v4 by making the substitution v4 = v1 + v2.\r\nThen:\r\nS = span{1 + t, 1 + t\r\n2\r\n, t + t\r\n2\r\n, 2 + t + t\r\n2\r\n, 1 + t + t\r\n2\r\n}\r\n= span{1 + t, 1 + t\r\n2\r\n, t + t\r\n2\r\n, 1 + t + t\r\n2\r\n}.\r\nNow we notice that 1 + t + t\r\n2 =\r\n1\r\n2\r\n(1 + t) + 1\r\n2\r\n(1 + t\r\n2\r\n) + 1\r\n2\r\n(t + t\r\n2\r\n). So the vector\r\n1 + t + t\r\n2 = v5 is also extraneous, since it can be expressed as a linear combination of\r\nthe remaining three vectors, v1, v2, v3. Therefore\r\nS = span{1 + t, 1 + t\r\n2\r\n, t + t\r\n2\r\n}.\r\nIn fact, you can check that there are no (non-zero) solutions to the linear system\r\nc\r\n1\r\n(1 + t) + c\r\n2\r\n(1 + t\r\n2\r\n) + c\r\n3\r\n(t + t\r\n2\r\n) = 0.\r\nTherefore the remaining vectors {1 + t, 1 + t\r\n2\r\n, t + t\r\n2} are linearly independent, and\r\nspan the vector space S. Then these vectors are a minimal spanning set, in the sense\r\nthat no more vectors can be removed since the vectors are linearly independent. Such\r\na set is called a basis for S.\r\n202",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a2c246bb-e227-4410-9cea-9a643e205aa4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e7281c7da9670ddf68acd7e1b2b57b370dfe11ee7e3b05c7515e0d4a7c7bf290",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 461
      },
      {
        "segments": [
          {
            "segment_id": "062df273-6ea5-40a4-9350-2e99db0507f8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 203,
            "page_width": 612,
            "page_height": 792,
            "content": "10.4 Review Problems 203\r\nExample 119 Let Z\r\n3\r\n2\r\nbe the space of 3×1 bit-valued matrices (i.e., column vectors).\r\nIs the following subset linearly independent?\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\nIf the set is linearly dependent, then we can find non-zero solutions to the system:\r\nc\r\n1\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + c\r\n2\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n + c\r\n3\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n = 0,\r\nwhich becomes the linear system\r\n\r\n\r\n1 1 0\r\n1 0 1\r\n0 1 1\r\n\r\n\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n = 0.\r\nSolutions exist if and only if the determinant of the matrix is non-zero. But:\r\ndet\r\n\r\n\r\n1 1 0\r\n1 0 1\r\n0 1 1\r\n\r\n = 1 det \u0012\r\n0 1\r\n1 1\u0013\r\n− 1 det \u0012\r\n1 1\r\n0 1\u0013\r\n= −1 − 1 = 1 + 1 = 0\r\nTherefore non-trivial solutions exist, and the set is not linearly independent.\r\n10.4 Review Problems\r\nWebwork:\r\nReading Problems 1 ,2\r\nTesting for linear independence 3, 4\r\nGaussian elimination 5\r\nSpanning and linear independence 6\r\n1. Let Bn be the space of n × 1 bit-valued matrices (i.e., column vectors)\r\nover the field Z2. Remember that this means that the coefficients in\r\nany linear combination can be only 0 or 1, with rules for adding and\r\nmultiplying coefficients given here.\r\n(a) How many different vectors are there in Bn?\r\n(b) Find a collection S of vectors that span B3 and are linearly inde\u0002pendent. In other words, find a basis of B3\r\n.\r\n203",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/062df273-6ea5-40a4-9350-2e99db0507f8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9eaec37ba5feff2f47fa7650e114619455d7a37d6e274f636a35530d6f9250d9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "749114ed-47c8-4621-bf98-c99d2e336081",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 204,
            "page_width": 612,
            "page_height": 792,
            "content": "204 Linear Independence\r\n(c) Write each other vector in B3 as a linear combination of the vectors\r\nin the set S that you chose.\r\n(d) Would it be possible to span B3 with only two vectors?\r\nHint\r\n2. Let ei be the vector in R\r\nn with a 1 in the ith position and 0’s in every\r\nother position. Let v be an arbitrary vector in R\r\nn\r\n.\r\n(a) Show that the collection {e1, . . . , en} is linearly independent.\r\n(b) Demonstrate that v =\r\nPn\r\ni=1(v ei)ei\r\n.\r\n(c) The span{e1, . . . , en} is the same as what vector space?\r\n3. Consider the ordered set of vectors from R\r\n3\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n ,\r\n\r\n\r\n2\r\n4\r\n6\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n4\r\n5\r\n\r\n\r\n\r\n\r\n(a) Determine if the set is linearly independent by using the vectors\r\nas the columns of a matrix M and finding RREF(M).\r\n(b) If possible, write each vector as a linear combination of the pre\u0002ceding ones.\r\n(c) Remove the vectors which can be expressed as linear combinations\r\nof the preceding vectors to form a linearly independent ordered set.\r\n(Every vector in your set set should be from the given set.)\r\n4. Gaussian elimination is a useful tool figure out whether a set of vectors\r\nspans a vector space and if they are linearly independent. Consider a\r\nmatrix M made from an ordered set of column vectors (v1, v2, . . . , vm) ⊂\r\nR\r\nn and the three cases listed below:\r\n(a) RREF(M) is the identity matrix.\r\n(b) RREF(M) has a row of zeros.\r\n(c) Neither case i or ii apply.\r\n204",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/749114ed-47c8-4621-bf98-c99d2e336081.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a04c0bb9a9eef4d30f7822e39a36bb9df509398dfd248bc74f5d7e9cea61051d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "44f2c7bf-a48f-4aeb-8edd-a1fedf3be50d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 205,
            "page_width": 612,
            "page_height": 792,
            "content": "10.4 Review Problems 205\r\nFirst give an explicit example for each case, state whether the col\u0002umn vectors you use are linearly independent or spanning in each case.\r\nThen, in general, determine whether (v1, v2, . . . , vm) are linearly inde\u0002pendent and/or spanning R\r\nn\r\nin each of the three cases. If they are\r\nlinearly dependent, does RREF(M) tell you which vectors could be\r\nremoved to yield an independent set of vectors?\r\n205",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/44f2c7bf-a48f-4aeb-8edd-a1fedf3be50d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a1a8d949c96b38219bd33fc1bbd051e82bd6994ada4c7e5a81a4aa35a8b9eee5",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5e64dbb0-c767-4065-9c39-d95c065256bb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 206,
            "page_width": 612,
            "page_height": 792,
            "content": "206 Linear Independence\r\n206",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5e64dbb0-c767-4065-9c39-d95c065256bb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e9be0f229bc39979035fc3056e5e2c75ca0d9418d0ec27336ce1a6c19cdabbe3",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 373
      },
      {
        "segments": [
          {
            "segment_id": "ec95e97f-61fb-444f-8579-8941526268ac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 207,
            "page_width": 612,
            "page_height": 792,
            "content": "11\r\nBasis and Dimension\r\nIn chapter 10, the notions of a linearly independent set of vectors in a vector\r\nspace V , and of a set of vectors that span V were established; any set of\r\nvectors that span V can be reduced to some minimal collection of linearly\r\nindependent vectors; such a minimal set is called a basis of the subspace V .\r\nDefinition Let V be a vector space. Then a set S is a basis for V if S is\r\nlinearly independent and V = span S.\r\nIf S is a basis of V and S has only finitely many elements, then we say\r\nthat V is finite-dimensional. The number of vectors in S is the dimension\r\nof V .\r\nSuppose V is a finite-dimensional vector space, and S and T are two dif\u0002ferent bases for V . One might worry that S and T have a different number of\r\nvectors; then we would have to talk about the dimension of V in terms of the\r\nbasis S or in terms of the basis T. Luckily this isn’t what happens. Later in\r\nthis chapter, we will show that S and T must have the same number of vec\u0002tors. This means that the dimension of a vector space is basis-independent.\r\nIn fact, dimension is a very important characteristic of a vector space.\r\nExample 120 Pn(t) (polynomials in t of degree n or less) has a basis {1, t, . . . , tn},\r\nsince every vector in this space is a sum\r\na\r\n0\r\n1 + a\r\n1\r\nt + · · · + a\r\nn\r\nt\r\nn\r\n, ai ∈ R ,\r\nso Pn(t) = span{1, t, . . . , tn}. This set of vectors is linearly independent; If the\r\npolynomial p(t) = c\r\n01 + c1\r\nt + · · · + c\r\nn\r\nt\r\nn = 0, then c0 = c1 = · · · = cn = 0, so p(t) is\r\nthe zero polynomial. Thus Pn(t) is finite dimensional, and dim Pn(t) = n + 1.\r\n207",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ec95e97f-61fb-444f-8579-8941526268ac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=67dcbc5f9918da710ffe5a41782dff50ca8914d7401dead6e72bb7bc98630229",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 344
      },
      {
        "segments": [
          {
            "segment_id": "ed55c4bd-be74-4565-b700-b2797186900f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 208,
            "page_width": 612,
            "page_height": 792,
            "content": "208 Basis and Dimension\r\nTheorem 11.0.1. Let S = {v1, . . . , vn} be a basis for a vector space V .\r\nThen every vector w ∈ V can be written uniquely as a linear combination of\r\nvectors in the basis S:\r\nw = c\r\n1\r\nv1 + · · · + c\r\nn\r\nvn.\r\nProof. Since S is a basis for V , then span S = V , and so there exist con\u0002stants c\r\ni\r\nsuch that w = c\r\n1\r\nv1 + · · · + c\r\nn\r\nvn.\r\nSuppose there exists a second set of constants d\r\ni\r\nsuch that\r\nw = d\r\n1\r\nv1 + · · · + d\r\nn\r\nvn .\r\nThen\r\n0V = w − w\r\n= c\r\n1\r\nv1 + · · · + c\r\nn\r\nvn − d\r\n1\r\nv1 − · · · − d\r\nn\r\nvn\r\n= (c\r\n1 − d1\r\n)v1 + · · · + (c\r\nn − dn\r\n)vn.\r\nIf it occurs exactly once that c\r\ni 6= di\r\n, then the equation reduces to 0 =\r\n(c\r\ni − di\r\n)vi, which is a contradiction since the vectors vi are assumed to be\r\nnon-zero.\r\nIf we have more than one i for which c\r\ni 6= di\r\n, we can use this last equation\r\nto write one of the vectors in S as a linear combination of other vectors in S,\r\nwhich contradicts the assumption that S is linearly independent. Then for\r\nevery i, c\r\ni = di\r\n.\r\nProof Explanation\r\nRemark This theorem is the one that makes bases so useful–they allow us to convert\r\nabstract vectors into column vectors. By ordering the set S we obtain B = (v1, . . . , vn)\r\nand can write\r\nw = (v1, . . . , vn)\r\n\r\n\r\nc\r\n1\r\n.\r\n.\r\n.\r\nc\r\nn\r\n\r\n =\r\n\r\n\r\nc\r\n1\r\n.\r\n.\r\n.\r\nc\r\nn\r\n\r\n\r\nB\r\n.\r\nRemember that in general it makes no sense to drop the subscript B on the column\r\nvector on the right–most vector spaces are not made from columns of numbers!\r\n208",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ed55c4bd-be74-4565-b700-b2797186900f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=08cbaf8574e145c1ef3b8430c66ad1fb7830a4fd16dda733100e120e02b5bedb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 360
      },
      {
        "segments": [
          {
            "segment_id": "585be711-df1d-454b-8db4-5b5c3d4c0de8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 209,
            "page_width": 612,
            "page_height": 792,
            "content": "209\r\nWorked Example\r\nNext, we would like to establish a method for determining whether a\r\ncollection of vectors forms a basis for R\r\nn\r\n. But first, we need to show that\r\nany two bases for a finite-dimensional vector space has the same number of\r\nvectors.\r\nLemma 11.0.2. If S = {v1, . . . , vn} is a basis for a vector space V and\r\nT = {w1, . . . , wm} is a linearly independent set of vectors in V , then m ≤ n.\r\nThe idea of the proof is to start with the set S and replace vectors in S\r\none at a time with vectors from T, such that after each replacement we still\r\nhave a basis for V .\r\nReading homework: problem 1\r\nProof. Since S spans V , then the set {w1, v1, . . . , vn} is linearly dependent.\r\nThen we can write w1 as a linear combination of the vi; using that equation,\r\nwe can express one of the viin terms of w1 and the remaining vj with j 6=\r\ni. Then we can discard one of the vifrom this set to obtain a linearly\r\nindependent set that still spans V . Now we need to prove that S1 is a basis;\r\nwe must show that S1 is linearly independent and that S1 spans V .\r\nThe set S1 = {w1, v1, . . . , vi−1, vi+1, . . . , vn} is linearly independent: By\r\nthe previous theorem, there was a unique way to express w1 in terms of\r\nthe set S. Now, to obtain a contradiction, suppose there is some k and\r\nconstants c\r\ni\r\nsuch that\r\nvk = c\r\n0w1 + c1\r\nv1 + · · · + c\r\ni−1\r\nvi−1 + c\r\ni+1vi+1 + · · · + c\r\nn\r\nvn.\r\nThen replacing w1 with its expression in terms of the collection S gives a way\r\nto express the vector vk as a linear combination of the vectors in S, which\r\ncontradicts the linear independence of S. On the other hand, we cannot\r\nexpress w1 as a linear combination of the vectors in {vj|j 6= i}, since the\r\nexpression of w1 in terms of S was unique, and had a non-zero coefficient for\r\nthe vector vi. Then no vector in S1 can be expressed as a combination of\r\nother vectors in S1, which demonstrates that S1 is linearly independent.\r\nThe set S1 spans V : For any u ∈ V , we can express u as a linear com\u0002bination of vectors in S. But we can express vi as a linear combination of\r\n209",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/585be711-df1d-454b-8db4-5b5c3d4c0de8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b8845254b2fc9ba7066ef1b0b706393053b42413435c0a2031e58a16ae206c58",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 440
      },
      {
        "segments": [
          {
            "segment_id": "bd78249f-aaac-40d8-8c89-32d51914b341",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 210,
            "page_width": 612,
            "page_height": 792,
            "content": "210 Basis and Dimension\r\nvectors in the collection S1; rewriting vi as such allows us to express u as\r\na linear combination of the vectors in S1. Thus S1 is a basis of V with n\r\nvectors.\r\nWe can now iterate this process, replacing one of the viin S1 with w2,\r\nand so on. If m ≤ n, this process ends with the set Sm = {w1, . . . , wm,\r\nvi1, . . . , vin−m}, which is fine.\r\nOtherwise, we have m > n, and the set Sn = {w1, . . . , wn} is a basis\r\nfor V . But we still have some vector wn+1 in T that is not in Sn. Since Sn\r\nis a basis, we can write wn+1 as a combination of the vectors in Sn, which\r\ncontradicts the linear independence of the set T. Then it must be the case\r\nthat m ≤ n, as desired.\r\nWorked Example\r\nCorollary 11.0.3. For a finite-dimensional vector space V , any two bases\r\nfor V have the same number of vectors.\r\nProof. Let S and T be two bases for V . Then both are linearly independent\r\nsets that span V . Suppose S has n vectors and T has m vectors. Then by\r\nthe previous lemma, we have that m ≤ n. But (exchanging the roles of S\r\nand T in application of the lemma) we also see that n ≤ m. Then m = n,\r\nas desired.\r\nReading homework: problem 2\r\n11.1 Bases in R\r\nn\r\n.\r\nIn review question 2, chapter 10 you checked that\r\nR\r\nn = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n,\r\n\r\n\r\n0\r\n1\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n, . . . ,\r\n\r\n\r\n0\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n\r\n\r\n\r\n,\r\nand that this set of vectors is linearly independent. (If you didn’t do that\r\nproblem, check this before reading any further!) So this set of vectors is\r\n210",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bd78249f-aaac-40d8-8c89-32d51914b341.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=eaf11de994e2ebc5cd89186e94171a2ba4c65de321e44c9e8c63f82c1ebb1288",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 340
      },
      {
        "segments": [
          {
            "segment_id": "ac96ccdf-4f0c-4f70-b437-74f3780cd719",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 211,
            "page_width": 612,
            "page_height": 792,
            "content": "11.1 Bases in R\r\nn\r\n. 211\r\na basis for R\r\nn\r\n, and dim R\r\nn = n. This basis is often called the standard\r\nor canonical basis for R\r\nn\r\n. The vector with a one in the ith position and\r\nzeros everywhere else is written ei. (You could also view it as the function\r\n{1, 2, . . . , n} → R where ei(j) = 1 if i = j and 0 if i 6= j.) It points in the\r\ndirection of the ith coordinate axis, and has unit length. In multivariable\r\ncalculus classes, this basis is often written {ˆi, ˆj, ˆk} for R\r\n3\r\n.\r\nNote that it is often convenient to order basis elements, so rather than\r\nwriting a set of vectors, we would write a list. This is called an ordered\r\nbasis. For example, the canonical ordered basis for R\r\nn\r\nis (e1, e2, . . . , en). The\r\npossibility to reorder basis vectors is not the only way in which bases are\r\nnon-unique.\r\nBases are not unique. While there exists a unique way to express a vector in terms\r\nof any particular basis, bases themselves are far from unique. For example, both of\r\nthe sets\r\n\u001a\u00121\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n0\r\n1\r\n\u0013\u001b and \u001a\u00121\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n−1\r\n\u0013\u001b\r\nare bases for R\r\n2\r\n. Rescaling any vector in one of these sets is already enough to show\r\nthat R\r\n2 has infinitely many bases. But even if we require that all of the basis vectors\r\nhave unit length, it turns out that there are still infinitely many bases for R\r\n2\r\n(see\r\nreview question 3).\r\nTo see whether a set of vectors S = {v1, . . . , vm} is a basis for R\r\nn\r\n, we have\r\nto check that the elements are linearly independent and that they span R\r\nn\r\n.\r\nFrom the previous discussion, we also know that m must equal n, so lets\r\nassume S has n vectors. If S is linearly independent, then there is no non\u0002trivial solution of the equation\r\n0 = x\r\n1\r\nv1 + · · · + x\r\nn\r\nvn.\r\nLet M be a matrix whose columns are the vectors vi and X the column\r\nvector with entries x\r\ni\r\n. Then the above equation is equivalent to requiring\r\nthat there is a unique solution to\r\nMX = 0 .\r\nTo see if S spans R\r\nn\r\n, we take an arbitrary vector w and solve the linear\r\nsystem\r\nw = x\r\n1\r\nv1 + · · · + x\r\nn\r\nvn\r\n211",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ac96ccdf-4f0c-4f70-b437-74f3780cd719.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=94a278478a1cdb068d2d00a2d3f2144a8f2298084a36593e25539b6764b64b3e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 436
      },
      {
        "segments": [
          {
            "segment_id": "f8add008-7ca2-4788-a37d-49982dbbc149",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 212,
            "page_width": 612,
            "page_height": 792,
            "content": "212 Basis and Dimension\r\nin the unknowns x\r\ni\r\n. For this, we need to find a unique solution for the linear\r\nsystem MX = w.\r\nThus, we need to show that M−1exists, so that\r\nX = M−1w\r\nis the unique solution we desire. Then we see that S is a basis for V if and\r\nonly if det M 6= 0.\r\nTheorem 11.1.1. Let S = {v1, . . . , vm} be a collection of vectors in R\r\nn\r\n.\r\nLet M be the matrix whose columns are the vectors in S. Then S is a basis\r\nfor V if and only if m is the dimension of V and\r\ndet M 6= 0.\r\nRemark Also observe that S is a basis if and only if RREF(M) = I.\r\nExample 121 Let\r\nS =\r\n\u001a\u00121\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n0\r\n1\r\n\u0013\u001b and T =\u001a\u00121\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n−1\r\n\u0013\u001b .\r\nThen set MS =\r\n\u0012\r\n1 0\r\n0 1\u0013\r\n. Since det MS = 1 6= 0, then S is a basis for R\r\n2\r\n.\r\nLikewise, set MT =\r\n\u0012\r\n1 1\r\n1 −1\r\n\u0013\r\n. Since det MT = −2 6= 0, then T is a basis for R\r\n2\r\n.\r\n11.2 Matrix of a Linear Transformation (Redux)\r\nNot only do bases allow us to describe arbitrary vectors as column vectors,\r\nthey also permit linear transformations to be expressed as matrices. This\r\nis a very powerful tool for computations, which is covered in chapter 7 and\r\nreviewed again here.\r\nSuppose we have a linear transformation L: V → W and ordered input\r\nand output bases E = (e1, . . . , en) and F = (f1, . . . , fm) for V and W re\u0002spectively (of course, these need not be the standard basis–in all likelihood\r\nV is not R\r\nn\r\n). Since for each ej, L(ej ) is a vector in W, there exist unique\r\nnumbers mi\r\nj\r\nsuch that\r\nL(ej ) = f1m1\r\nj + · · · + fmmmj = (f1, . . . , fm)\r\n\r\n\r\nm1\r\nj\r\n.\r\n.\r\n.\r\nmm\r\nj\r\n\r\n .\r\n212",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f8add008-7ca2-4788-a37d-49982dbbc149.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4a345b55de2bb2176247185acde9457fc270dc2265837cb40bd138a0482b9ba2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 361
      },
      {
        "segments": [
          {
            "segment_id": "d2492542-b2d2-4ec2-9020-71bd0f06a30d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 213,
            "page_width": 612,
            "page_height": 792,
            "content": "11.2 Matrix of a Linear Transformation (Redux) 213\r\nThe number mi\r\nj\r\nis the ith component of L(ej ) in the basis F, while the fi\r\nare vectors (note that if α is a scalar, and v a vector, αv = vα, we have\r\nused the latter—rather uncommon—notation in the above formula). The\r\nnumbers mi\r\nj naturally form a matrix whose jth column is the column vector\r\ndisplayed above. Indeed, if\r\nv = e1v\r\n1 + · · · + envn\r\n,\r\nThen\r\nL(v) = L(v\r\n1\r\ne1 + v\r\n2\r\ne2 + · · · + v\r\nn\r\nen)\r\n= v\r\n1L(e1) + v2L(e2) + · · · + vnL(en) = Xm\r\nj=1\r\nL(ej )v\r\nj\r\n=\r\nXm\r\nj=1\r\n(f1m1\r\nj + · · · + fmmmj\r\n)v\r\nj =\r\nXn\r\ni=1\r\nfi\r\n\"Xm\r\nj=1\r\nMi\r\nj\r\nv\r\nj\r\n#\r\n=\r\n\r\nf1 f2 · · · fm\r\n\u0001\r\n\r\n\r\nm1\r\n1 m12\r\n· · · m1\r\nn\r\nm2\r\n1 m22\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nmm\r\n1\r\n· · · mm\r\nn\r\n\r\n\r\n\r\n\r\nv\r\n1\r\nv\r\n2\r\n.\r\n.\r\n.\r\nv\r\nn\r\n\r\n\r\nIn the column vector-basis notation this equality looks familiar:\r\nL\r\n\r\n\r\nv\r\n1\r\n.\r\n.\r\n.\r\nv\r\nn\r\n\r\n\r\nE\r\n=\r\n\r\n\r\n\r\n\r\nm1\r\n1\r\n. . . m1\r\nn\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nmm\r\n1\r\n. . . mm\r\nn\r\n\r\n\r\n\r\n\r\nv\r\n1\r\n.\r\n.\r\n.\r\nv\r\nn\r\n\r\n\r\n\r\n\r\nF\r\n.\r\nThe array of numbers M = (mi\r\nj\r\n) is called the matrix of L in the input and\r\noutput bases E and F for V and W, respectively. This matrix will change\r\nif we change either of the bases. Also observe that the columns of M are\r\ncomputed by examining L acting on each basis vector in V expanded in the\r\nbasis vectors of W.\r\nExample 122 Let L: P1(t) 7→ P1(t), such that L(a + bt) = (a + b)t. Since V =\r\n213",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d2492542-b2d2-4ec2-9020-71bd0f06a30d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2ab15bb01d6b476f148bd5104d49085234740fb7394c999134cdb09b454e269",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 343
      },
      {
        "segments": [
          {
            "segment_id": "78d96dbc-8a3a-41d5-aa15-c860a93129d5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 214,
            "page_width": 612,
            "page_height": 792,
            "content": "214 Basis and Dimension\r\nP1(t) = W, let’s choose the same ordered basis B = (1 − t, 1 + t) for V and W.\r\nL(1 − t) = (1 − 1)t = 0 = (1 − t) · 0 + (1 + t) · 0 = \r\n1 − t, 1 + t\r\n\u0001\r\n\u0012\r\n0\r\n0\r\n\u0013\r\nL(1 + t) = (1 + 1)t = 2t = (1 − t) · −1 + (1 + t) · 1 = \r\n1 − t, 1 + t\r\n\u0001\r\n\u0012\r\n−1\r\n1\r\n\u0013\r\n⇒ L\r\n\u0012\r\na\r\nb\r\n\u0013\r\nB\r\n=\r\n\u0012\u00120 −1\r\n0 1\u0013 \u0012a\r\nb\r\n\u0013\u0013\r\nB\r\n.\r\nWhen the vector space is R\r\nn and the standard basis is used, the problem\r\nof finding the matrix of a linear transformation will seem almost trivial. It\r\nis worthwhile working through it once in the above language though.\r\nExample 123 Any vector in R\r\nn\r\ncan be written as a linear combination of the standard\r\n(ordered) basis (e1, . . . en). The vector ei has a one in the ith position, and zeros\r\neverywhere else. I.e.\r\ne1 =\r\n\r\n\r\n1\r\n0\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n, e2 =\r\n\r\n\r\n0\r\n1\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n, . . . , en =\r\n\r\n\r\n0\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n.\r\nThen to find the matrix of any linear transformation L: R\r\nn → Rn\r\n, it suffices to know\r\nwhat L(ei) is for every i.\r\nFor any matrix M, observe that Meiis equal to the ith column of M. Then if the\r\nith column of M equals L(ei) for every i, then Mv = L(v) for every v ∈ R\r\nn\r\n. Then\r\nthe matrix representing L in the standard basis is just the matrix whose ith column\r\nis L(ei).\r\nFor example, if\r\nL\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n =\r\n\r\n\r\n1\r\n4\r\n7\r\n\r\n , L\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n2\r\n5\r\n8\r\n\r\n , L\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n =\r\n\r\n\r\n3\r\n6\r\n9\r\n\r\n ,\r\nthen the matrix of L in the standard basis is simply\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n .\r\n214",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/78d96dbc-8a3a-41d5-aa15-c860a93129d5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ed4d4b78bdf505d908388ee3b028ede48823d542e4cbf3e1581bfe302cb0715e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 389
      },
      {
        "segments": [
          {
            "segment_id": "d7bc07b0-e7ab-4655-a45f-be01c8677332",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 215,
            "page_width": 612,
            "page_height": 792,
            "content": "11.3 Review Problems 215\r\nAlternatively, this information would often be presented as\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\nx + 2y + 3z\r\n4x + 5y + 6z\r\n7x + 8y + 9z\r\n\r\n .\r\nYou could either rewrite this as\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n ,\r\nto immediately learn the matrix of L, or taking a more circuitous route:\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n = L\r\n\r\nx\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n + y\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n + z\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\n\r\n\r\n= x\r\n\r\n\r\n1\r\n4\r\n7\r\n\r\n + y\r\n\r\n\r\n2\r\n5\r\n8\r\n\r\n + z\r\n\r\n\r\n3\r\n6\r\n9\r\n\r\n =\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\n11.3 Review Problems\r\nWebwork:\r\nReading Problems 1 ,2\r\nBasis checks 3,4\r\nComputing column vectors 5,6\r\n1. (a) Draw the collection of all unit vectors in R\r\n2\r\n.\r\n(b) Let Sx =\r\n\u001a\u00121\r\n0\r\n\u0013\r\n, x\u001b, where x is a unit vector in R\r\n2\r\n. For which x\r\nis Sx a basis of R\r\n2\r\n?\r\n(c) Generalize to R\r\nn\r\n.\r\n2. Let Bn be the vector space of column vectors with bit entries 0, 1. Write\r\ndown every basis for B1 and B2. How many bases are there for B3?\r\nB4? Can you make a conjecture for the number of bases for Bn?\r\n(Hint: You can build up a basis for Bn by choosing one vector at a\r\ntime, such that the vector you choose is not in the span of the previous\r\nvectors you’ve chosen. How many vectors are in the span of any one\r\nvector? Any two vectors? How many vectors are in the span of any k\r\nvectors, for k ≤ n?)\r\n215",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d7bc07b0-e7ab-4655-a45f-be01c8677332.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c7d057b6dfb95198b2e32b4e05d39a04da702b95eff01516216c1a32298d1d06",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 348
      },
      {
        "segments": [
          {
            "segment_id": "e23fc2c3-0ccf-46ce-b485-8de9237886f1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 216,
            "page_width": 612,
            "page_height": 792,
            "content": "216 Basis and Dimension\r\nHint\r\n3. Suppose that V is an n-dimensional vector space.\r\n(a) Show that any n linearly independent vectors in V form a basis.\r\n(Hint: Let {w1, . . . , wm} be a collection of n linearly independent\r\nvectors in V , and let {v1, . . . , vn} be a basis for V . Apply the\r\nmethod of Lemma 11.0.2 to these two sets of vectors.)\r\n(b) Show that any set of n vectors in V which span V forms a basis\r\nfor V .\r\n(Hint: Suppose that you have a set of n vectors which span V but\r\ndo not form a basis. What must be true about them? How could\r\nyou get a basis from this set? Use Corollary 11.0.3 to derive a\r\ncontradiction.)\r\n4. Let S = {v1, . . . , vn} be a subset of a vector space V . Show that if every\r\nvector w in V can be expressed uniquely as a linear combination of vec\u0002tors in S, then S is a basis of V . In other words: suppose that for every\r\nvector w in V , there is exactly one set of constants c\r\n1\r\n, . . . , cnso that\r\nc\r\n1\r\nv1 + · · · + c\r\nn\r\nvn = w. Show that this means that the set S is linearly\r\nindependent and spans V . (This is the converse to theorem 11.0.1.)\r\n5. Vectors are objects that you can add together; show that the set of all\r\nlinear transformations mapping R\r\n3 → R is itself a vector space. Find a\r\nbasis for this vector space. Do you think your proof could be modified\r\nto work for linear transformations R\r\nn → R? For RN → Rm? For RR\r\n?\r\nHint: Represent R\r\n3 as column vectors, and argue that a linear trans\u0002formation T : R\r\n3 → R is just a row vector.\r\n6. Let Sn denote the vector space of all n × n symmetric matrices;\r\nSn := {M : R\r\nn → Rn\r\n| M = MT}.\r\nLet An denote the vector space of all n × n anti-symmetric matrices;\r\nAn = {M : R\r\nn → Rn\r\n| M = −MT}.\r\n(a) Find a basis for S3.\r\n216",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e23fc2c3-0ccf-46ce-b485-8de9237886f1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fb47d40e03ddf6f1d94c84bee77cd3c33806a352615fa948bb4909e21e1b1fab",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 382
      },
      {
        "segments": [
          {
            "segment_id": "982c20ce-bf23-49b5-ad9c-468a307915b8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 217,
            "page_width": 612,
            "page_height": 792,
            "content": "11.3 Review Problems 217\r\n(b) Find a basis for A3.\r\n(c) Can you find a basis for Sn? For An?\r\nHint: Describe it in terms of the matrices F\r\ni\r\nj which have a 1 in\r\nthe i-th row and the j-th column and 0 everywhere else. Note that\r\n{F\r\ni\r\nj\r\n| 1 ≤ i ≤ r, 1 ≤ j ≤ k} is a basis for Mr\r\nk\r\n.\r\n7. Give the matrix of the linear transformation L with respect to the input\r\nand output bases B and B0listed below:\r\n(a) L : V → W where B = (v1, . . . , vn) is a basis for V and B0 =\r\n(L(v1), . . . , L(vn)) is a basis for W.\r\n(b) L : V → V where B = B0 = (v1, . . . , vn) and L(vi) = λivi.\r\n217",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/982c20ce-bf23-49b5-ad9c-468a307915b8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=472713703825328a2f2f84a5b501a9c023d57e4cc6d38ce730f08723e1e54589",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e3a28cca-aff7-4258-8048-6353f5d712aa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 218,
            "page_width": 612,
            "page_height": 792,
            "content": "218 Basis and Dimension\r\n218",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e3a28cca-aff7-4258-8048-6353f5d712aa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=05652fed2fc1e5aa9468e49aeedd15a624974da49f18e8195fcba4d2408e8a38",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3977d8d8-4a8f-4fcf-bba3-81896273c8ce",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 219,
            "page_width": 612,
            "page_height": 792,
            "content": "12\r\nEigenvalues and Eigenvectors\r\nIn a vector space with no other structure no vector is more important than\r\nany other.1 Once one also has a linear transformation the situation changes\r\ndramatically. Consider a vibrating string, whose displacement at point x at\r\ntime t is given by a function y(x, t).\r\nThe set of all displacement functions for the string is a vector space\r\nV =\r\n\u001a\r\ny : R\r\n2 → R |\r\n∂\r\n2\r\ny\r\n∂x2\r\nand ∂\r\n2\r\ny\r\n∂t2\r\nexist \u001b.\r\nThe concavity and the acceleration of the string at the point (x, t) are ∂\r\n2y\r\n∂x2 (x, t)\r\nand ∂\r\n2y\r\n∂t2 (x, t) respectively. These quantities should exist at each point on the\r\nstring, hence the conditions in the set.\r\n1 Actually, the zero vector is more important that any other, but we mean to be\r\nprovocative.\r\n219",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3977d8d8-4a8f-4fcf-bba3-81896273c8ce.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0355e8d0d4aafc05ff0b63f854d904263525dde957d33aa3eea39d945e8adc5e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "f3d9e0ec-5ffd-42cc-a731-18a14ee7c0b0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 220,
            "page_width": 612,
            "page_height": 792,
            "content": "220 Eigenvalues and Eigenvectors\r\nIn fact, these quantities can be used to formulate a good model for the\r\nstring’s behavior in time and space; the wave equation\r\n∂\r\n2\r\ny\r\n∂t2\r\n=\r\n∂\r\n2\r\ny\r\n∂x2\r\n,\r\nsays that the acceleration of a point on the string is equal to the concavity\r\nat that point, an intuitive idea. Not all of the functions in V are solutions\r\nto the wave equation; not all of the functions in V describe the way a string\r\nwould really vibrate. The ways a string really would vibrate are solutions to\r\nthe linear equation\r\nLy = 0\r\nwhere\r\nL =\r\n\u0012\r\n∂\r\n2\r\n∂t2\r\n−\r\n∂\r\n2\r\n∂x2\r\n\u0013\r\n: V → V .\r\nSome examples solutions are\r\ny1(x, t) = sin(t) sin(x), y2(x, t) = 3 sin(2t) sin(2x),\r\nand y3(x, t) = sin(t) sin(x) + 3 sin(2t) sin(2x).\r\nSince Ly = 0 is a homogeneous linear equation linear combinations of solu\u0002tions are solutions; ker L is a vector space.\r\nWe can incorporate a realistic complication into our model of the string:\r\nsomething may be pulling the string toward the rest position with a Hooke’s\r\nlaw type force. In this case there are two causes for acceleration of a point\r\non the string: the concavity, and the Hooke’s force.\r\n∂\r\n2\r\ny\r\n∂t2\r\n=\r\n∂\r\n2\r\ny\r\n∂x2\r\n+ ky ,\r\nor, written as a linear equation\r\nLy = ky.\r\nThe solution set this equation will be different for every different value of the\r\nspring constant k. We can call those solution sets Vk. For any k the set Vk\r\nis a vector space since elements of the set are solutions to the homogeneous\r\nequation (L − k)y = 0.\r\nWe began this chapter by stating “In a vector space with no other struc\u0002ture no vector is more important than any other.” Our aim is now to show\r\n220",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f3d9e0ec-5ffd-42cc-a731-18a14ee7c0b0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a945d4510dddd8ceaf863651009bb657c81a44e0ddb3dcd4054e0842a404ab28",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 314
      },
      {
        "segments": [
          {
            "segment_id": "c18ba5f3-4fa5-40b1-8bec-310f570ca16f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 221,
            "page_width": 612,
            "page_height": 792,
            "content": "12.1 Invariant Directions 221\r\nyou that when a linear operator L acts on a vector space, providing the ad\u0002ditional structure we have in mind, the solutions to Ly = ky with the largest\r\nvalue of k are more important than those for smaller values of k. You might\r\nask “more important in what sense?” In the sense that the function L can be\r\nbuilt out of the various values of k and the vectors in Vk and the biggest park\r\nof that construction is the part with the biggest values of k. In particular\r\nfor some vectors vk ∈ Vk\r\nL =\r\nX\r\nk\r\nk vk v\r\nt\r\nk\r\n.\r\nWe are aware that we have made the startling suggestion that a derivative\r\noperator is a linear combination of products of vectors, and we hope that you\r\nare intrigued. Lets now return to the simpler case of linear functions which\r\nare matrices to develop this idea.\r\n12.1 Invariant Directions\r\nHave a look at the linear transformation L depicted below:\r\nIt was picked at random by choosing a pair of vectors L(e1) and L(e2) as\r\nthe outputs of L acting on the canonical basis vectors. Notice how the unit\r\nsquare with a corner at the origin is mapped to a parallelogram. The second\r\nline of the picture shows these superimposed on one another. Now look at the\r\nsecond picture on that line. There, two vectors f1 and f2 have been carefully\r\n221",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c18ba5f3-4fa5-40b1-8bec-310f570ca16f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=54a8ca40c15d197a2059aae2e6eec6d9d8ec4ca19f99d4c26d6b2b25427ab50d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 241
      },
      {
        "segments": [
          {
            "segment_id": "f1b281cc-c3c5-44c1-b2b7-dbd90f84d695",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 222,
            "page_width": 612,
            "page_height": 792,
            "content": "222 Eigenvalues and Eigenvectors\r\nchosen such that if the inputs into L are in the parallelogram spanned by f1\r\nand f2, the outputs also form a parallelogram with edges lying along the same\r\ntwo directions. Clearly this is a very special situation that should correspond\r\nto interesting properties of L.\r\nNow lets try an explicit example to see if we can achieve the last picture:\r\nExample 124 Consider the linear transformation L such that\r\nL\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n=\r\n\u0012\r\n−4\r\n−10\u0013\r\nand L\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n3\r\n7\r\n\u0013\r\n,\r\nso that the matrix of L in the standard basis is\r\n\u0012\r\n−4 3\r\n−10 7\u0013\r\n.\r\nRecall that a vector is a direction and a magnitude; L applied to \u0012\r\n1\r\n0\r\n\u0013\r\nor \u0012\r\n0\r\n1\r\n\u0013\r\nchanges\r\nboth the direction and the magnitude of the vectors given to it.\r\nNotice that\r\nL\r\n\u0012\r\n3\r\n5\r\n\u0013\r\n=\r\n\u0012\r\n−4 · 3 + 3 · 5\r\n−10 · 3 + 7 · 5\r\n\u0013\r\n=\r\n\u0012\r\n3\r\n5\r\n\u0013\r\n.\r\nThen L fixes the direction (and actually also the magnitude) of the vector v1 =\r\n\u0012\r\n3\r\n5\r\n\u0013\r\n.\r\nReading homework: problem 1\r\nNow, notice that any vector with the same direction as v1 can be written as cv1\r\nfor some constant c. Then L(cv1) = cL(v1) = cv1, so L fixes every vector pointing\r\nin the same direction as v1.\r\nAlso notice that\r\nL\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n=\r\n\u0012\r\n−4 · 1 + 3 · 2\r\n−10 · 1 + 7 · 2\r\n\u0013\r\n=\r\n\u0012\r\n2\r\n4\r\n\u0013\r\n= 2 \u0012\r\n1\r\n2\r\n\u0013\r\n,\r\nso L fixes the direction of the vector v2 =\r\n\u0012\r\n1\r\n2\r\n\u0013\r\nbut stretches v2 by a factor of 2.\r\nNow notice that for any constant c, L(cv2) = cL(v2) = 2cv2. Then L stretches every\r\nvector pointing in the same direction as v2 by a factor of 2.\r\n222",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f1b281cc-c3c5-44c1-b2b7-dbd90f84d695.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=65e8b649c4e9037714a5e1e9fc4a41576b993b1c746db49ecbde97ce7dcdf67d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 328
      },
      {
        "segments": [
          {
            "segment_id": "cfe9db8e-ae40-4ca1-a575-410f8930e6b7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 223,
            "page_width": 612,
            "page_height": 792,
            "content": "12.1 Invariant Directions 223\r\nFigure 12.1: The eigenvalue–eigenvector equation is probably the most im\u0002portant one in linear algebra.\r\nIn short, given a linear transformation L it is sometimes possible to find a\r\nvector v 6= 0 and constant λ 6= 0 such that Lv = λv. We call the direction of\r\nthe vector v an invariant direction. In fact, any vector pointing in the same\r\ndirection also satisfies this equation because L(cv) = cL(v) = λcv. More\r\ngenerally, any non-zero vector v that solves\r\nLv = λv\r\nis called an eigenvector of L, and λ (which now need not be zero) is an\r\neigenvalue. Since the direction is all we really care about here, then any other\r\nvector cv (so long as c 6= 0) is an equally good choice of eigenvector. Notice\r\nthat the relation “u and v point in the same direction” is an equivalence\r\nrelation.\r\nIn our example of the linear transformation L with matrix\r\n\u0012\r\n−4 3\r\n−10 7\u0013\r\n,\r\nwe have seen that L enjoys the property of having two invariant directions,\r\nrepresented by eigenvectors v1 and v2 with eigenvalues 1 and 2, respectively.\r\nIt would be very convenient if we could write any vector w as a linear\r\ncombination of v1 and v2. Suppose w = rv1 +sv2 for some constants r and s.\r\n223",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/cfe9db8e-ae40-4ca1-a575-410f8930e6b7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e82a1bdf4a04db79528573dbfaa832bc40355438506056974b43e32b33fc9d1f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2d50b311-5b5b-43fe-99a7-91cac52740e0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 224,
            "page_width": 612,
            "page_height": 792,
            "content": "224 Eigenvalues and Eigenvectors\r\nThen\r\nL(w) = L(rv1 + sv2) = rL(v1) + sL(v2) = rv1 + 2sv2.\r\nNow L just multiplies the number r by 1 and the number s by 2. If we could\r\nwrite this as a matrix, it would look like:\r\n\u0012\r\n1 0\r\n0 2\u0013 \u0012st\r\n\u0013\r\nwhich is much slicker than the usual scenario\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n=\r\n\u0012\r\na b\r\nc d\u0013\u0012xy\r\n\u0013\r\n=\r\n\u0012\r\nax + by\r\ncx + dy\u0013\r\n.\r\nHere, s and t give the coordinates of w in terms of the vectors v1 and v2. In\r\nthe previous example, we multiplied the vector by the matrix L and came up\r\nwith a complicated expression. In these coordinates, we see that L has a very\r\nsimple diagonal matrix, whose diagonal entries are exactly the eigenvalues\r\nof L.\r\nThis process is called diagonalization. It makes complicated linear sys\u0002tems much easier to analyze.\r\nReading homework: problem 2\r\nNow that we’ve seen what eigenvalues and eigenvectors are, there are a\r\nnumber of questions that need to be answered.\r\n• How do we find eigenvectors and their eigenvalues?\r\n• How many eigenvalues and (independent) eigenvectors does a given\r\nlinear transformation have?\r\n• When can a linear transformation be diagonalized?\r\nWe’ll start by trying to find the eigenvectors for a linear transformation.\r\n2 × 2 Example\r\n224",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2d50b311-5b5b-43fe-99a7-91cac52740e0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=21ca7577bae6cce3eeaba314637430c009eaeacbc38dda4da9392c76bbda92e4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 445
      },
      {
        "segments": [
          {
            "segment_id": "0cd629e1-b73c-4e5b-a575-0e426cd241ff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 225,
            "page_width": 612,
            "page_height": 792,
            "content": "12.1 Invariant Directions 225\r\nExample 125 Let L: R\r\n2 → R2\r\nsuch that L(x, y) = (2x + 2y, 16x + 6y). First, we\r\nfind the matrix of L:\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nL\r\n7−→ \u0012\r\n2 2\r\n16 6\u0013 \u0012x\r\ny\r\n\u0013\r\n.\r\nWe want to find an invariant direction v =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nsuch that\r\nLv = λv\r\nor, in matrix notation,\r\n\u0012\r\n2 2\r\n16 6\u0013 \u0012x\r\ny\r\n\u0013\r\n= λ\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n⇔\r\n\u0012\r\n2 2\r\n16 6\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\nλ 0\r\n0 λ\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n⇔\r\n\u0012\r\n2 − λ 2\r\n16 6 − λ\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\n.\r\nThis is a homogeneous system, so it only has solutions when the matrix \u0012\r\n2 − λ 2\r\n16 6 − λ\r\n\u0013\r\nis singular. In other words,\r\ndet \u0012\r\n2 − λ 2\r\n16 6 − λ\r\n\u0013\r\n= 0\r\n⇔ (2 − λ)(6 − λ) − 32 = 0\r\n⇔ λ\r\n2 − 8λ − 20 = 0\r\n⇔ (λ − 10)(λ + 2) = 0\r\nFor any square n × n matrix M, the polynomial in λ given by\r\nPM(λ) = det(λI − M) = (−1)n det(M − λI)\r\nis called the characteristic polynomial of M, and its roots are the eigenvalues of M.\r\nIn this case, we see that L has two eigenvalues, λ1 = 10 and λ2 = −2. To find the\r\neigenvectors, we need to deal with these two cases separately. To do so, we solve the\r\nlinear system \u0012\r\n2 − λ 2\r\n16 6 − λ\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\nwith the particular eigenvalue λ plugged\r\nin to the matrix.\r\n225",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0cd629e1-b73c-4e5b-a575-0e426cd241ff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f29013cb5720ed8e0491d38ef78bd7f4c59067c80ff71f416a5c1e109acf6186",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 293
      },
      {
        "segments": [
          {
            "segment_id": "ed72e3cb-5b43-4e71-a863-8b60d4ff34f6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 226,
            "page_width": 612,
            "page_height": 792,
            "content": "226 Eigenvalues and Eigenvectors\r\nλ = 10: We solve the linear system\r\n\u0012\r\n−8 2\r\n16 −4\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\n.\r\nBoth equations say that y = 4x, so any vector \u0012\r\nx\r\n4x\r\n\u0013\r\nwill do. Since we only\r\nneed the direction of the eigenvector, we can pick a value for x. Setting x = 1\r\nis convenient, and gives the eigenvector v1 =\r\n\u0012\r\n1\r\n4\r\n\u0013\r\n.\r\nλ = −2: We solve the linear system\r\n\u0012\r\n4 2\r\n16 8\u0013 \u0012xy\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\n.\r\nHere again both equations agree, because we chose λ to make the system\r\nsingular. We see that y = −2x works, so we can choose v2 =\r\n\u0012\r\n1\r\n−2\r\n\u0013\r\n.\r\nOur process was the following:\r\n1. Find the characteristic polynomial of the matrix M for L, given by2 det(λI−M).\r\n2. Find the roots of the characteristic polynomial; these are the eigenvalues of L.\r\n3. For each eigenvalue λi, solve the linear system (M − λiI)v = 0 to obtain an\r\neigenvector v associated to λi.\r\nJordan block example\r\n12.2 The Eigenvalue–Eigenvector Equation\r\nIn section 12, we developed the idea of eigenvalues and eigenvectors in the\r\ncase of linear transformations R\r\n2 → R2\r\n. In this section, we will develop the\r\nidea more generally.\r\nEigenvalues\r\n2To save writing many minus signs compute det(M − λI); which is equivalent if you\r\nonly need the roots.\r\n226",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ed72e3cb-5b43-4e71-a863-8b60d4ff34f6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=04ad5063d114f28faffa4b8d414e2cceb2043a44fa5cffd8ef5fe60e75e604fe",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 244
      },
      {
        "segments": [
          {
            "segment_id": "c139adae-3211-4bd4-8dbe-b8da141e3541",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 227,
            "page_width": 612,
            "page_height": 792,
            "content": "12.2 The Eigenvalue–Eigenvector Equation 227\r\nDefinition If L: V → V is linear and for some scalar λ and v 6= 0V\r\nLv = λv.\r\nthen λ is an eigenvalue of L with eigenvector v.\r\nThis equation says that the direction of v is invariant (unchanged) under L.\r\nLet’s try to understand this equation better in terms of matrices. Let V\r\nbe a finite-dimensional vector space and let L: V → V . If we have a basis\r\nfor V we can represent L by a square matrix M and find eigenvalues λ and\r\nassociated eigenvectors v by solving the homogeneous system\r\n(M − λI)v = 0.\r\nThis system has non-zero solutions if and only if the matrix\r\nM − λI\r\nis singular, and so we require that\r\ndet(λI − M) = 0.\r\nThe left hand side of this equation is a polynomial in the variable λ\r\ncalled the characteristic polynomial PM(λ) of M. For an n × n matrix,\r\nthe characteristic polynomial has degree n. Then\r\nPM(λ) = λ\r\nn + c1λn−1 + · · · + cn.\r\nNotice that PM(0) = det(−M) = (−1)n det M.\r\nNow recall the following.\r\nTheorem 12.2.1. (The Fundamental Theorem of Algebra) Any polynomial\r\ncan be factored into a product of first order polynomials over C.\r\nThis theorem implies that there exists a collection of n complex numbers\r\nλi (possibly with repetition) such that\r\nPM(λ) = (λ − λ1)(λ − λ2)· · ·(λ − λn) =⇒ PM(λi) = 0.\r\nThe eigenvalues λi of M are exactly the roots of PM(λ). These eigenvalues\r\ncould be real or complex or zero, and they need not all be different. The\r\nnumber of times that any given root λi appears in the collection of eigenvalues\r\nis called its multiplicity.\r\n227",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c139adae-3211-4bd4-8dbe-b8da141e3541.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=45db61f6f250d962d331723ec43a7fe3f53d26ca49dceae7a245d700c0300818",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "912afca1-e202-4b1c-9150-3274a0af3625",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 228,
            "page_width": 612,
            "page_height": 792,
            "content": "228 Eigenvalues and Eigenvectors\r\nFigure 12.2: Don’t forget the characteristic polynomial; you will need it to\r\ncompute eigenvalues.\r\nExample 126 Let L be the linear transformation L: R\r\n3 → R3 given by\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n2x + y − z\r\nx + 2y − z\r\n−x − y + 2z\r\n\r\n .\r\nIn the standard basis the matrix M representing L has columns Lei for each i, so:\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n\r\nL\r\n7→\r\n\r\n\r\n2 1 −1\r\n1 2 −1\r\n−1 −1 2\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\nThen the characteristic polynomial of L is3\r\nPM(λ) = det\r\n\r\n\r\nλ − 2 −1 1\r\n−1 λ − 2 1\r\n1 1 λ − 2\r\n\r\n\r\n= (λ − 2)[(λ − 2)2 − 1] + [−(λ − 2) − 1] + [−(λ − 2) − 1]\r\n= (λ − 1)2(λ − 4).\r\nSo L has eigenvalues λ1 = 1 (with multiplicity 2), and λ2 = 4 (with multiplicity 1).\r\nTo find the eigenvectors associated to each eigenvalue, we solve the homogeneous\r\nsystem (M − λiI)X = 0 for each i.\r\n3\r\nIt is often easier (and equivalent) to solve det(M − λI) = 0.\r\n228",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/912afca1-e202-4b1c-9150-3274a0af3625.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5c2060658d0d19a0a1d3026f25e7bfd426132a03f63fa88bae42c1a5fec3c54d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 509
      },
      {
        "segments": [
          {
            "segment_id": "2e81fc57-7472-4e3e-8c88-9bfd8092a21e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 229,
            "page_width": 612,
            "page_height": 792,
            "content": "12.2 The Eigenvalue–Eigenvector Equation 229\r\nλ = 4: We set up the augmented matrix for the linear system:\r\n\r\n\r\n−2 1 −1 0\r\n1 −2 −1 0\r\n−1 −1 −2 0\r\n\r\n ∼\r\n\r\n\r\n1 −2 −1 0\r\n0 −3 −3 0\r\n0 −3 −3 0\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 1 0\r\n0 1 1 0\r\n0 0 0 0\r\n\r\n .\r\nAny vector of the form t\r\n\r\n\r\n−1\r\n−1\r\n1\r\n\r\n is then an eigenvector with eigenvalue 4; thus\r\nL leaves a line through the origin invariant.\r\nλ = 1: Again we set up an augmented matrix and find the solution set:\r\n\r\n\r\n1 1 −1 0\r\n1 1 −1 0\r\n−1 −1 1 0\r\n\r\n ∼\r\n\r\n\r\n1 1 −1 0\r\n0 0 0 0\r\n0 0 0 0\r\n\r\n .\r\nThen the solution set has two free parameters, s and t, such that z = z =: t,\r\ny = y =: s, and x = −s + t. Thus L leaves invariant the set:\r\n\r\n\r\n\r\ns\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + t\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\n\f\r\ns, t ∈ R\r\n\r\n\r\n\r\n.\r\nThis set is a plane through the origin. So the multiplicity two eigenvalue has\r\ntwo independent eigenvectors,\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n and\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n that determine an invariant\r\nplane.\r\nExample 127 Let V be the vector space of smooth (i.e. infinitely differentiable)\r\nfunctions f : R → R. Then the derivative is a linear operator d\r\ndx : V → V . What are\r\nthe eigenvectors of the derivative? In this case, we don’t have a matrix to work with,\r\nso we have to make do.\r\nA function f is an eigenvector of d\r\ndx if there exists some number λ such that ddx f =\r\nλf. An obvious candidate is the exponential function, e\r\nλx; indeed, d\r\ndx e\r\nλx = λeλx\r\n.\r\nThe operator d\r\ndx has an eigenvector e\r\nλx for every λ ∈ R.\r\n229",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2e81fc57-7472-4e3e-8c88-9bfd8092a21e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=39eb1d124a65b87a0b84370ea64483e184531bbc902a51dec1924d167e4e7edb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 357
      },
      {
        "segments": [
          {
            "segment_id": "390b51bf-0d65-408e-83c4-0b9183ce83f6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 230,
            "page_width": 612,
            "page_height": 792,
            "content": "230 Eigenvalues and Eigenvectors\r\n12.3 Eigenspaces\r\nIn the previous example, we found two eigenvectors\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n and\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n\r\nfor L, both with eigenvalue 1. Notice that\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n =\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\nis also an eigenvector of L with eigenvalue 1. In fact, any linear combination\r\nr\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n + s\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n\r\nof these two eigenvectors will be another eigenvector with the same eigen\u0002value.\r\nMore generally, let {v1, v2, . . .} be eigenvectors of some linear transforma\u0002tion L with the same eigenvalue λ. A linear combination of the vi can be\r\nwritten c\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · for some constants c\r\n1\r\n, c2, . . .. Then\r\nL(c\r\n1\r\nv1 + c\r\n2\r\nv2 + · · ·) = c\r\n1Lv1 + c2Lv2 + · · · by linearity of L\r\n= c\r\n1λv1 + c2λv2 + · · · since Lvi = λvi\r\n= λ(c\r\n1\r\nv1 + c\r\n2\r\nv2 + · · ·).\r\nSo every linear combination of the viis an eigenvector of L with the same\r\neigenvalue λ. In simple terms, any sum of eigenvectors is again an eigenvector\r\nif they share the same eigenvalue.\r\nThe space of all vectors with eigenvalue λ is called an eigenspace. It\r\nis, in fact, a vector space contained within the larger vector space V . It\r\ncontains 0V , since L0V = 0V = λ0V , and is closed under addition and scalar\r\nmultiplication by the above calculation. All other vector space properties are\r\ninherited from the fact that V itself is a vector space. In other words, the\r\nsubspace theorem (9.1.1, chapter 9) ensures that Vλ := {v ∈ V |Lv = 0} is a\r\nsubspace of V .\r\n230",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/390b51bf-0d65-408e-83c4-0b9183ce83f6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5e355513d9fa18f7888ea8afc2a78ba7cce2555e9d2859cb9f505b5aed067e30",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "cfe65aaf-35bc-4dba-8b3f-de848fa6a4f1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 231,
            "page_width": 612,
            "page_height": 792,
            "content": "12.4 Review Problems 231\r\nEigenspaces\r\nReading homework: problem 3\r\nYou can now attempt the second sample midterm.\r\n12.4 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2 , 3\r\nCharacteristic polynomial 4, 5, 6\r\nEigenvalues 7, 8\r\nEigenspaces 9, 10\r\nEigenvectors 11, 12, 13, 14\r\nComplex eigenvalues 15\r\n1. Try to find more solutions to the vibrating string problem ∂\r\n2\r\ny/∂t2 =\r\n∂\r\n2\r\ny/∂x2 using the ansatz\r\ny(x, t) = sin(ωt)f(x).\r\nWhat equation must f(x) obey? Can you write this as an eigenvector\r\nequation? Suppose that the string has length L and f(0) = f(L) = 0.\r\nCan you find any solutions for f(x)?\r\n2. Let M =\r\n\u0012\r\n2 1\r\n0 2\u0013\r\n. Find all eigenvalues of M. Does M have two linearly\r\nindependent eigenvectors? Is there a basis in which the matrix of M is\r\ndiagonal? (I.e., can M be diagonalized?)\r\n3. Consider L: R\r\n2 → R2 with\r\nL\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n=\r\n\u0012\r\nx cos θ + y sin θ\r\n−x sin θ + y cos θ\r\n\u0013\r\n.\r\n231",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/cfe65aaf-35bc-4dba-8b3f-de848fa6a4f1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7af4d64205e169ad1af09662913e037a15c0797e4375a1c0aa1ac839ed5505c2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 505
      },
      {
        "segments": [
          {
            "segment_id": "531481cc-f816-4f46-8368-7dc9e4150b65",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 232,
            "page_width": 612,
            "page_height": 792,
            "content": "232 Eigenvalues and Eigenvectors\r\n(a) Write the matrix of L in the basis \u0012\r\n1\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n.\r\n(b) When θ 6= 0, explain how L acts on the plane. Draw a picture.\r\n(c) Do you expect L to have invariant directions?\r\n(d) Try to find real eigenvalues for L by solving the equation\r\nL(v) = λv.\r\n(e) Are there complex eigenvalues for L, assuming that i =\r\n√\r\n−1\r\nexists?\r\n4. Let L be the linear transformation L: R\r\n3 → R3 given by\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\nx + y\r\nx + z\r\ny + z\r\n\r\n .\r\nLet ei be the vector with a one in the ith position and zeros in all other\r\npositions.\r\n(a) Find Leifor each i.\r\n(b) Given a matrix M =\r\n\r\n\r\nm1\r\n1 m12 m13\r\nm2\r\n1 m2\r\n2 m2\r\n3\r\nm3\r\n1 m3\r\n2 m3\r\n3\r\n\r\n, what can you say about\r\nMeifor each i?\r\n(c) Find a 3 × 3 matrix M representing L.\r\n(d) Find the eigenvectors and eigenvalues of M.\r\n5. Let A be a matrix with eigenvector v with eigenvalue λ. Show that v is\r\nalso an eigenvector for A2 and find the corresponding eigenvalue. How\r\nabout for An where n ∈ N? Suppose that A is invertible. Show that v\r\nis also an eigenvector for A−1.\r\n6. A projection is a linear operator P such that P\r\n2 = P. Let v be an\r\neigenvector with eigenvalue λ for a projection P, what are all possible\r\nvalues of λ? Show that every projection P has at least one eigenvector.\r\nNote that every complex matrix has at least 1 eigenvector, but you\r\nneed to prove the above for any field.\r\n232",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/531481cc-f816-4f46-8368-7dc9e4150b65.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=59da4e161f744047c39b0b10cfbc28bdbb2543566a8eeff2317b51ccbfe2b5ed",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 300
      },
      {
        "segments": [
          {
            "segment_id": "a49b00ff-6498-476c-a465-6149123ea385",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 233,
            "page_width": 612,
            "page_height": 792,
            "content": "12.4 Review Problems 233\r\n7. Explain why the characteristic polynomial of an n × n matrix has de\u0002gree n. Make your explanation easy to read by starting with some\r\nsimple examples, and then use properties of the determinant to give a\r\ngeneral explanation.\r\n8. Compute the characteristic polynomial PM(λ) of the matrix\r\nM =\r\n\u0012\r\na b\r\nc d\u0013\r\n.\r\nNow, since we can evaluate polynomials on square matrices, we can\r\nplug M into its characteristic polynomial and find the matrix PM(M).\r\nWhat do you find from this computation? Does something similar hold\r\nfor 3 × 3 matrices? (Try assuming that the matrix of M is diagonal to\r\nanswer this.)\r\n9. Discrete dynamical system. Let M be the matrix given by\r\nM =\r\n\u0012\r\n3 2\r\n2 3\u0013\r\n.\r\nGiven any vector v(0) = \u0012\r\nx(0)\r\ny(0)\u0013\r\n, we can create an infinite sequence of\r\nvectors v(1), v(2), v(3), and so on using the rule:\r\nv(t + 1) = Mv(t) for all natural numbers t.\r\n(This is known as a discrete dynamical system whose initial condition\r\nis v(0).)\r\n(a) Find all eigenvectors and eigenvalues of M.\r\n(b) Find all vectors v(0) such that\r\nv(0) = v(1) = v(2) = v(3) = · · ·\r\n(Such a vector is known as a fixed point of the dynamical system.)\r\n(c) Find all vectors v(0) such that v(0), v(1), v(2), v(3), . . . all point in\r\nthe same direction. (Any such vector describes an invariant curve\r\nof the dynamical system.)\r\nHint\r\n233",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a49b00ff-6498-476c-a465-6149123ea385.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3ab7d063a12e2f5a5a6b3f354cac69fdd48fc67a44691fb1772c5b096467e65e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b87d8455-d6ed-4dd2-b83c-bb4e27f0d080",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 234,
            "page_width": 612,
            "page_height": 792,
            "content": "234 Eigenvalues and Eigenvectors\r\n234",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b87d8455-d6ed-4dd2-b83c-bb4e27f0d080.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bbd5bc3570f971c3f39acd72324aed21deafac66b779ea2976460192ad1d67e1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5a2912fa-09ae-4032-93eb-14101fee6deb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 235,
            "page_width": 612,
            "page_height": 792,
            "content": "13\r\nDiagonalization\r\nGiven a linear transformation, it is highly desirable to write its matrix with\r\nrespect to a basis of eigenvectors.\r\n13.1 Diagonalizability\r\nSuppose we are lucky, and we have L: V → V , and the ordered basis B =\r\n(v1, . . . , vn) is a set of eigenvectors for L, with eigenvalues λ1, . . . , λn. Then:\r\nL(v1) = λ1v1\r\nL(v2) = λ2v2\r\n.\r\n.\r\n.\r\nL(vn) = λnvn\r\nAs a result, the matrix of L in the basis of eigenvectors B is diagonal:\r\nL\r\n\r\n\r\nx\r\n1\r\nx\r\n2\r\n.\r\n.\r\n.\r\nx\r\nn\r\n\r\n\r\nB\r\n=\r\n\r\n\r\n\r\n\r\nλ1\r\nλ2\r\n.\r\n.\r\n.\r\nλn\r\n\r\n\r\n\r\n\r\nx\r\n1\r\nx\r\n2\r\n.\r\n.\r\n.\r\nx\r\nn\r\n\r\n\r\n\r\n\r\nB\r\n,\r\nwhere all entries off the diagonal are zero.\r\n235",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5a2912fa-09ae-4032-93eb-14101fee6deb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=07166f9647955e47c115bacf4615c28f3579cb397cde3e70fcf9daa3e3557b23",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 399
      },
      {
        "segments": [
          {
            "segment_id": "8a6e6f82-ca7f-4727-9c20-5f300eef9d80",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 236,
            "page_width": 612,
            "page_height": 792,
            "content": "236 Diagonalization\r\nSuppose that V is any n-dimensional vector space. We call a linear trans\u0002formation L: V 7→ V diagonalizable if there exists a collection of n linearly\r\nindependent eigenvectors for L. In other words, L is diagonalizable if there\r\nexists a basis for V of eigenvectors for L.\r\nIn a basis of eigenvectors, the matrix of a linear transformation is diag\u0002onal. On the other hand, if an n × n matrix is diagonal, then the standard\r\nbasis vectors ei must already be a set of n linearly independent eigenvectors.\r\nWe have shown:\r\nTheorem 13.1.1. Given an ordered basis B for a vector space V and a\r\nlinear transformation L: V → V , then the matrix for L in the basis B is\r\ndiagonal if and only if B consists of eigenvectors for L.\r\nNon-diagonalizable example\r\nReading homework: problem 1\r\nTypically, however, we do not begin a problem with a basis of eigenvec\u0002tors, but rather have to compute these. Hence we need to know how to\r\nchange from one basis to another:\r\n13.2 Change of Basis\r\nSuppose we have two ordered bases S = (v1, . . . , vn) and S\r\n0 = (v0\r\n1\r\n, . . . , v0\r\nn\r\n)\r\nfor a vector space V . (Here vi and v\r\n0\r\ni\r\nare vectors, not components of vectors\r\nin a basis!) Then we may write each v\r\n0\r\ni uniquely as\r\nv\r\n0\r\nj =\r\nX\r\ni\r\nvip\r\ni\r\nj\r\n,\r\nthis is v\r\n0 as a linear combination of the vj\r\n. In matrix notation\r\n\r\nv\r\n0\r\n1\r\n, v0\r\n2\r\n, · · · , v0\r\nn\r\n\u0001\r\n=\r\n\r\nv1, v2, · · · , vn\r\n\u0001\r\n\r\n\r\np\r\n1\r\n1\r\np\r\n1\r\n2\r\n· · · p\r\n1\r\nn\r\np\r\n2\r\n1\r\np\r\n2\r\n2\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\np\r\nn\r\n1\r\n· · · p\r\nn\r\nn\r\n\r\n\r\n.\r\n236",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8a6e6f82-ca7f-4727-9c20-5f300eef9d80.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cb0f8e243c1a2a3ee6c4d292cf732482c418b9b62928b6af991d842ec0bce9a0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 323
      },
      {
        "segments": [
          {
            "segment_id": "d2ff00cf-888a-4117-a2f8-6e154ae603a4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 237,
            "page_width": 612,
            "page_height": 792,
            "content": "13.2 Change of Basis 237\r\nHere, the p\r\ni\r\nj\r\nare constants, which we can regard as entries of a square ma\u0002trix P = (p\r\ni\r\nj\r\n). The matrix P must have an inverse since we can also write\r\neach vi uniquely as a linear combination of the v\r\n0\r\nj\r\n;\r\nvj =\r\nX\r\nk\r\nv\r\n0\r\nk\r\nq\r\nk\r\nj\r\n.\r\nThen we can write\r\nvj =\r\nX\r\nk\r\nX\r\ni\r\nvkq\r\nk\r\ni\r\np\r\ni\r\nj\r\n.\r\nBut P\r\ni\r\nq\r\nk\r\ni\r\np\r\ni\r\nj\r\nis the k, j entry of the product matrix QP. Since the expression\r\nfor vjin the basis S is vjitself, then QP maps each vj to itself. As a result,\r\neach vjis an eigenvector for QP with eigenvalue 1, so QP is the identity, i.e.\r\nP Q = QP = I ↔ Q = P\r\n−1\r\n.\r\nThe matrix P is called a change of basis matrix. There is a quick and\r\ndirty trick to obtain it; look at the formula above relating the new basis\r\nvectors v\r\n0\r\n1\r\n, v0\r\n2\r\n, . . . v0\r\nn\r\nto the old ones v1, v2, . . . , vn. In particular focus on v\r\n0\r\n1\r\nfor which\r\nv\r\n0\r\n1 =\r\n\r\nv1, v2, · · · , vn\r\n\u0001\r\n\r\n\r\np\r\n1\r\n1\r\np\r\n2\r\n1\r\n.\r\n.\r\n.\r\np\r\nn\r\n1\r\n\r\n\r\n.\r\nThis says that the first column of the change of basis matrix P is really just\r\nthe components of the vector v\r\n0\r\n1\r\nin the basis v1, v2, . . . , vn.\r\nThe columns of the change of basis matrix are the components\r\nof the new basis vectors in terms of the old basis vectors.\r\nExample 128 Suppose S\r\n0 = (v0\r\n1\r\n, v0\r\n2\r\n) is an ordered basis for a vector space V and that\r\nwith respect to some other ordered basis S = (v1, v2) for V\r\nv\r\n0\r\n1 =\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n!\r\nS\r\nand v\r\n0\r\n2 =\r\n \r\n√\r\n1\r\n3\r\n− √\r\n1\r\n3\r\n!\r\nS\r\n.\r\n237",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d2ff00cf-888a-4117-a2f8-6e154ae603a4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3cb588ab729e3fca1a2c1303dfcede343c1074321c5659c10b2b4855ed4f8128",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 359
      },
      {
        "segments": [
          {
            "segment_id": "3ff09100-e693-485e-9c6d-3c6e3cb4037f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 238,
            "page_width": 612,
            "page_height": 792,
            "content": "238 Diagonalization\r\nThis means\r\nv\r\n0\r\n1 =\r\n\r\nv1, v2\r\n\u0001\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n!\r\n=\r\nv1 + v2\r\n√\r\n2\r\nand v\r\n0\r\n2 =\r\n\r\nv1, v2\r\n\u0001\r\n \r\n√\r\n1\r\n3\r\n− √\r\n1\r\n3\r\n!\r\n=\r\nv1 − v2\r\n√\r\n3\r\n.\r\nThe change of basis matrix has as its columns just the components of v\r\n0\r\n1\r\nand v\r\n0\r\n2\r\n;\r\nP =\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n3\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n3\r\n!\r\n.\r\nChanging basis changes the matrix of a linear transformation. However,\r\nas a map between vector spaces, the linear transformation is the same\r\nno matter which basis we use. Linear transformations are the actual\r\nobjects of study of this book, not matrices; matrices are merely a convenient\r\nway of doing computations.\r\nChange of Basis Example\r\nLets now calculate how the matrix of a linear transformation changes\r\nwhen changing basis. To wit, let L: V −→ W with matrix M = (mi\r\nj\r\n) in the\r\nordered input and output bases S = (v1, . . . , vn) and T = (w1, . . . , wm) so\r\nL(vi) = X\r\nk\r\nwkmk\r\ni\r\n.\r\nNow, suppose S\r\n0 = (v0\r\n1\r\n, . . . , v0\r\nn\r\n) and T\r\n0 = (w0\r\n1\r\n, . . . , w0\r\nm) are new ordered input\r\nand out bases with matrix M0 = (m0k\r\ni\r\n). Then\r\nL(v\r\n0\r\ni\r\n) = X\r\nk\r\nwkm0k\r\ni\r\n.\r\nLet P = (p\r\ni\r\nj\r\n) be the change of basis matrix from input basis S to the basis\r\nS\r\n0 and Q = (q\r\nj\r\nk\r\n) be the change of basis matrix from output basis T to the\r\nbasis T\r\n0\r\n. Then:\r\nL(v\r\n0\r\nj\r\n) = L\r\n X\r\ni\r\nvip\r\ni\r\nj\r\n!\r\n=\r\nX\r\ni\r\nL(vi)p\r\ni\r\nj =\r\nX\r\ni\r\nX\r\nk\r\nwkmk\r\ni\r\np\r\ni\r\nj\r\n.\r\n238",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3ff09100-e693-485e-9c6d-3c6e3cb4037f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=61679f7d31b8fd60cb4257fe4212154db8da55ff53116fb8412e47a5440a6b43",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 328
      },
      {
        "segments": [
          {
            "segment_id": "5e5549ff-a2e3-4edf-a64d-5ce51d656a05",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 239,
            "page_width": 612,
            "page_height": 792,
            "content": "13.2 Change of Basis 239\r\nMeanwhile, we have:\r\nL(v\r\n0\r\ni\r\n) = X\r\nk\r\nvkm0k\r\ni =\r\nX\r\nk\r\nX\r\nj\r\nvjq\r\nj\r\nkmk\r\ni\r\n.\r\nSince the expression for a vector in a basis is unique, then we see that the\r\nentries of MP are the same as the entries of QM0. In other words, we see\r\nthat\r\nMP = QM0or M0 = Q−1MP.\r\nExample 129 Let V be the space of polynomials in t and degree 2 or less and L :\r\nV → R\r\n2 where\r\nL(1) = \u0012\r\n1\r\n2\r\n\u0013\r\nL(t) = \u0012\r\n2\r\n1\r\n\u0013\r\n, L(t\r\n2\r\n) = \u0012\r\n3\r\n3\r\n\u0013\r\n.\r\nFrom this information we can immediately read off the matrix M of L in the bases\r\nS = (1, t, t2) and T = (e1, e2), the standard basis for R\r\n2\r\n, because\r\n\r\nL(1), L(t), L(t\r\n2\r\n)\r\n\u0001\r\n= (e1 + 2e2, 2e1 + e2, 3e1 + 3e2)\r\n= (e1, e2)\r\n\u0012\r\n1 2 3\r\n2 1 3\u0013\r\n⇒ M =\r\n\u0012\r\n1 2 3\r\n2 1 3\u0013\r\n.\r\nNow suppose we are more interested in the bases\r\nS\r\n0 = (1 + t, t + t2\r\n, 1 + t\r\n2\r\n), T0 =\r\n\u0012\u00121\r\n2\r\n\u0013\r\n,\r\n\u0012\r\n2\r\n1\r\n\u0013\u0013 =: (w\r\n0\r\n1\r\n, w0\r\n2\r\n).\r\nTo compute the new matrix M0 of L we could simply calculate what L does the the\r\nnew input basis vectors in terms of the new output basis vectors:\r\n\r\nL(1 + t)L(t + t\r\n2\r\n), L(1 + t\r\n2\r\n)) = \u0012\u00121\r\n2\r\n\u0013\r\n+\r\n\u0012\r\n2\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n2\r\n1\r\n\u0013\r\n+\r\n\u0012\r\n3\r\n3\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n2\r\n\u0013\r\n+\r\n\u0012\r\n3\r\n3\r\n\u0013\u0013\r\n= (w1 + w2, w1 + 2w2, 2w2 + w1)\r\n= (w1, w2)\r\n\u0012\r\n1 1 2\r\n1 2 1\u0013\r\n⇒ M0 =\r\n\u0012\r\n1 1 2\r\n1 2 1\u0013\r\n.\r\nAlternatively we could calculate the change of basis matrices P and Q by noting that\r\n(1 + t, t + t\r\n2\r\n, 1 + t\r\n2\r\n) = (1, t, t2)\r\n\r\n\r\n1 0 1\r\n1 1 0\r\n0 1 1\r\n\r\n ⇒ P =\r\n\r\n\r\n1 0 1\r\n1 1 0\r\n0 1 1\r\n\r\n\r\n239",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5e5549ff-a2e3-4edf-a64d-5ce51d656a05.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4e69aff104087a2c21b34f126ba6c445de20d4a4ae7641aaf1ff369b0361b25f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 388
      },
      {
        "segments": [
          {
            "segment_id": "5f1bc571-5b2e-4f19-8467-ceda8cce4bcc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 240,
            "page_width": 612,
            "page_height": 792,
            "content": "240 Diagonalization\r\nand\r\n(w1, w2) = (e1 + 2e2, 2e1 + e2) = (e1, e1)\r\n\u0012\r\n1 2\r\n2 1\u0013\r\n⇒ Q =\r\n\u0012\r\n1 2\r\n2 1\u0013\r\n.\r\nHence\r\nM0 = Q\r\n−1MP = −\r\n1\r\n3\r\n\u0012\r\n1 −2\r\n−2 1\u0013 \u00121 2 32 1 3\u0013\r\n\r\n\r\n1 0 1\r\n1 1 0\r\n0 1 1\r\n\r\n =\r\n\u0012\r\n1 1 2\r\n1 2 1\u0013\r\n.\r\nNotice that the change of basis matrices P and Q are both square and invertible.\r\nAlso, since we really wanted Q−1\r\n, it is more efficient to try and write (e1, e2) in\r\nterms of (w1, w2) which would yield directly Q−1. Alternatively, one can check that\r\nMP = QM0.\r\n13.3 Changing to a Basis of Eigenvectors\r\nIf we are changing to a basis of eigenvectors, then there are various simplifi\u0002cations:\r\n• Since L : V → V , most likely you already know the matrix M of L\r\nusing the same input basis as output basis S = (u1, . . . , un) (say).\r\n• In the new basis of eigenvectors S\r\n0\r\n(v1, . . . , vn), the matrix D of L is\r\ndiagonal because Lvi = λivi and so\r\n\r\nL(v1), L(v2), . . . , L(vn)\r\n\u0001\r\n= (v1, v2, . . . , vn)\r\n\r\n\r\nλ1 0 · · · 0\r\n0 λ2 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · λn\r\n\r\n\r\n.\r\n• If P is the change of basis matrix from S to S\r\n0\r\n, the diagonal matrix of\r\neigenvalues D and the original matrix are related by\r\nD = P\r\n−1MP\r\nThis motivates the following definition:\r\n240",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5f1bc571-5b2e-4f19-8467-ceda8cce4bcc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7f2e812fdc6a786e9142569c6f024d1a10eefe9c41f7200975d2a53f2924b865",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 287
      },
      {
        "segments": [
          {
            "segment_id": "a7e0a93a-8179-4d55-9950-0bba8261bc89",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 241,
            "page_width": 612,
            "page_height": 792,
            "content": "13.3 Changing to a Basis of Eigenvectors 241\r\nDefinition A matrix M is diagonalizable if there exists an invertible ma\u0002trix P and a diagonal matrix D such that\r\nD = P\r\n−1MP.\r\nWe can summarize as follows.\r\n• Change of basis rearranges the components of a vector by the change\r\nof basis matrix P, to give components in the new basis.\r\n• To get the matrix of a linear transformation in the new basis, we con\u0002jugate the matrix of L by the change of basis matrix: M 7→ P\r\n−1MP.\r\nIf for two matrices N and M there exists a matrix P such that M =\r\nP\r\n−1NP, then we say that M and N are similar. Then the above discussion\r\nshows that diagonalizable matrices are similar to diagonal matrices.\r\nCorollary 13.3.1. A square matrix M is diagonalizable if and only if there\r\nexists a basis of eigenvectors for M. Moreover, these eigenvectors are the\r\ncolumns of a change of basis matrix P which diagonalizes M.\r\nReading homework: problem 2\r\nExample 130 Let’s try to diagonalize the matrix\r\nM =\r\n\r\n\r\n−14 −28 −44\r\n−7 −14 −23\r\n9 18 29\r\n\r\n .\r\nThe eigenvalues of M are determined by\r\ndet(M − λI) = −λ\r\n3 + λ2 + 2λ = 0.\r\nSo the eigenvalues of M are −1, 0, and 2, and associated eigenvectors turn out to be\r\nv1 =\r\n\r\n\r\n−8\r\n−1\r\n3\r\n\r\n , v2 =\r\n\r\n\r\n−2\r\n1\r\n0\r\n\r\n , and v3 =\r\n\r\n\r\n−1\r\n−1\r\n1\r\n\r\n .\r\nIn order for M to be diagonalizable, we need the vectors v1, v2, v3 to be linearly\r\nindependent. Notice that the matrix\r\nP =\r\n\r\nv1 v2 v3\r\n\u0001\r\n=\r\n\r\n\r\n−8 −2 −1\r\n−1 1 −1\r\n3 0 1\r\n\r\n\r\n241",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a7e0a93a-8179-4d55-9950-0bba8261bc89.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f26f9da778ae56b2fadeb94ad8fb98b9f5e080437a51e206947622335f525ad7",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "6ba80cd3-d47f-4a38-8d86-aafc7d8bc05d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 242,
            "page_width": 612,
            "page_height": 792,
            "content": "242 Diagonalization\r\nFigure 13.1: This theorem answers the question: “What is diagonalization?”\r\nis invertible because its determinant is −1. Therefore, the eigenvectors of M form a\r\nbasis of R, and so M is diagonalizable. Moreover, because the columns of P are the\r\ncomponents of eigenvectors,\r\nMP =\r\n\r\nMv1 Mv2 Mv3\r\n\u0001\r\n=\r\n\r\n−1.v1 0.v2 2.v3\r\n\u0001\r\n=\r\n\r\nv1 v2 v3\r\n\u0001\r\n\r\n\r\n−1 0 0\r\n0 0 0\r\n0 0 2\r\n\r\n .\r\nHence, the matrix P of eigenvectors is a change of basis matrix that diagonalizes M;\r\nP\r\n−1MP =\r\n\r\n\r\n−1 0 0\r\n0 0 0\r\n0 0 2\r\n\r\n .\r\n2 × 2 Example\r\n13.4 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2\r\nNo real eigenvalues 3\r\nDiagonalization 4, 5, 6, 7\r\n1. Let Pn(t) be the vector space of polynomials of degree n or less, and\r\nd\r\ndt : Pn(t) → Pn(t) be the derivative operator. Find the matrix of ddt\r\nin the ordered bases E = (1, t, . . . , tn) for Pn(t) and F = (t\r\nn\r\n, . . . , , t, 1)\r\nfor Pn(t). Determine if this derivative operator is diagonalizable.\r\nRecall from chapter 6 that the derivative operator is linear .\r\n242",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6ba80cd3-d47f-4a38-8d86-aafc7d8bc05d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e7679e8dcce71d3beb17449cf291c44026313f9cf5ac094f3f75b1cc77d9ba1c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 512
      },
      {
        "segments": [
          {
            "segment_id": "46a5faed-3af9-4221-85cc-a23dc0f22455",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 243,
            "page_width": 612,
            "page_height": 792,
            "content": "13.4 Review Problems 243\r\n2. When writing a matrix for a linear transformation, we have seen that\r\nthe choice of basis matters. In fact, even the order of the basis matters!\r\n(a) Write all possible reorderings of the standard basis (e1, e2, e3)\r\nfor R\r\n3\r\n.\r\n(b) Write each change of basis matrix between the standard basis\r\nand each of its reorderings. Make as many observations as you\r\ncan about these matrices. what are their entries? Do you notice\r\nanything about how many of each type of entry appears in each\r\nrow and column? What are their determinants? (Note: These\r\nmatrices are known as permutation matrices.)\r\n(c) Given L : R\r\n3 → R3\r\nis linear and\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n2y − z\r\n3x\r\n2z + x + y\r\n\r\n\r\nwrite the matrix M for L in the standard basis, and two reorder\u0002ings of the standard basis. How are these matrices related?\r\n3. Let\r\nX = {♥, ♣, ♠} , Y = {∗, ?} .\r\nWrite down two different ordered bases, S, S0 and T, T0respectively,\r\nfor each of the vector spaces R\r\nX and RY\r\n. Find the change of basis\r\nmatrices P and Q that map these bases to one another. Now consider\r\nthe map\r\n` : Y → X ,\r\nwhere `(∗) = ♥ and `(?) = ♠. Show that ` can be used to define a\r\nlinear transformation L : R\r\nX → RY\r\n. Compute the matrices M and\r\nM0 of L in the bases S, T and then S\r\n0\r\n, T0. Use your change of basis\r\nmatrices P and Q to check that M0 = Q−1MP.\r\n4. Recall that tr MN = tr NM. Use this fact to show that the trace of a\r\nsquare matrix M does not depend not the basis you used to compute M.\r\n5. When is the 2 × 2 matrix \u0012\r\na b\r\nc d\u0013\r\ndiagonalizable? Include examples in\r\nyour answer.\r\n243",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/46a5faed-3af9-4221-85cc-a23dc0f22455.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3062f60bca2749dbf3544b6599432bcb6d7e0318d2e44cf1f00630a7b4a2afbf",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 335
      },
      {
        "segments": [
          {
            "segment_id": "1fe46e4a-b276-4ec5-86c3-a8db2f24e41a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 244,
            "page_width": 612,
            "page_height": 792,
            "content": "244 Diagonalization\r\n6. Show that similarity of matrices is an equivalence relation. (The defi\u0002nition of an equivalence relation is given in the background WeBWorK\r\nset.)\r\n7. Jordan form\r\n• Can the matrix \u0012\r\nλ 1\r\n0 λ\r\n\u0013\r\nbe diagonalized? Either diagonalize it or\r\nexplain why this is impossible.\r\n• Can the matrix\r\n\r\n\r\nλ 1 0\r\n0 λ 1\r\n0 0 λ\r\n\r\n be diagonalized? Either diagonalize\r\nit or explain why this is impossible.\r\n• Can the n × n matrix\r\n\r\n\r\nλ 1 0 · · · 0 0\r\n0 λ 1 · · · 0 0\r\n0 0 λ · · · 0 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 0 · · · λ 1\r\n0 0 · · · 0 λ\r\n\r\n\r\nbe diagonalized?\r\nEither diagonalize it or explain why this is impossible.\r\nNote: It turns out that every matrix is similar to a block ma\u0002trix whose diagonal blocks look like diagonal matrices or the ones\r\nabove and whose off-diagonal blocks are all zero. This is called\r\nthe Jordan form of the matrix and a (maximal) block that looks\r\nlike\r\n\r\n\r\nλ 1 0 · · · 0\r\n0 λ 1 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nλ 1\r\n0 0 0 λ\r\n\r\n\r\nis called a Jordan n-cell or a Jordan block where n is the size of\r\nthe block.\r\n8. Let A and B be commuting matrices (i.e., AB = BA) and suppose\r\nthat A has an eigenvector v with eigenvalue λ.\r\n(a) Show that Bv is also an eigenvector of A with eigenvalue λ.\r\n244",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1fe46e4a-b276-4ec5-86c3-a8db2f24e41a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3159e7a5714d2d9f3a1616d0fbfdcc41b11e825c984d8dfa5ca247bd9b5266b3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "023252fa-8656-4601-957d-2164be3ec9dd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 245,
            "page_width": 612,
            "page_height": 792,
            "content": "13.4 Review Problems 245\r\n(b) Additionally suppose that A is diagonalizable with distinct eigen\u0002values. What is the dimension of each eigenspace of A?\r\n(c) Show that v is also an eigenvector of B.\r\n(d) Explain why this shows that A and B can be simultaneously diago\u0002nalized (i.e. there is an ordered basis in which both their matrices\r\nare diagonal.)\r\n245",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/023252fa-8656-4601-957d-2164be3ec9dd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=414f7ffe21da2f4bd88a9f624fbe2e5981f85f200d78a9cd534bd920c4fc0aaa",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4da9eb03-df2c-41fc-a6ea-e9cecbc01ea5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 246,
            "page_width": 612,
            "page_height": 792,
            "content": "246 Diagonalization\r\n246",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4da9eb03-df2c-41fc-a6ea-e9cecbc01ea5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=af359ce241a79a76d9718e7f89e937529d1ac99ae0db076d2046727ade39940c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 350
      },
      {
        "segments": [
          {
            "segment_id": "5e28ece7-f372-47ad-b0fb-b3c04a8f8fb6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 247,
            "page_width": 612,
            "page_height": 792,
            "content": "14\r\nOrthonormal Bases and Complements\r\nYou may have noticed that we have only rarely used the dot product. That\r\nis because many of the results we have obtained do not require a preferred\r\nnotion of lengths of vectors. Once a dot or inner product is available, lengths\r\nof and angles between vectors can be measured–very powerful machinery and\r\nresults are available in this case.\r\n14.1 Properties of the Standard Basis\r\nThe standard notion of the length of a vector x = (x1, x2, . . . , xn) ∈ R\r\nn\r\nis\r\n||x|| =\r\n√\r\nx x =\r\np\r\n(x1)\r\n2 + (x2)2 + · · ·(xn)2\r\n.\r\nThe canonical/standard basis in R\r\nn\r\ne1 =\r\n\r\n\r\n1\r\n0\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n, e2 =\r\n\r\n\r\n0\r\n1\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n, . . . , en =\r\n\r\n\r\n0\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n,\r\nhas many useful properties with respect to the dot product and lengths.\r\n• Each of the standard basis vectors has unit length;\r\nkeik =\r\n√\r\nei ei =\r\nq\r\ne\r\nT\r\ni\r\nei = 1 .\r\n247",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5e28ece7-f372-47ad-b0fb-b3c04a8f8fb6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6f8c7ac7922a0f023c3e28c6afe121f99542613fb259b8d5de0d46a13d92454b",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4afe02e3-1cec-4202-a65f-c13636176eae",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 248,
            "page_width": 612,
            "page_height": 792,
            "content": "248 Orthonormal Bases and Complements\r\n• The standard basis vectors are orthogonal (in other words, at right\r\nangles or perpendicular);\r\nei ej = e\r\nT\r\ni\r\nej = 0 when i 6= j\r\nThis is summarized by\r\ne\r\nT\r\ni\r\nej = δij =\r\n\u001a\r\n1 i = j\r\n0 i 6= j\r\n,\r\nwhere δij is the Kronecker delta. Notice that the Kronecker delta gives the\r\nentries of the identity matrix.\r\nGiven column vectors v and w, we have seen that the dot product v w is\r\nthe same as the matrix multiplication v\r\nTw. This is an inner product on Rn\r\n.\r\nWe can also form the outer product vwT, which gives a square matrix. The\r\nouter product on the standard basis vectors is interesting. Set\r\nΠ1 = e1e\r\nT\r\n1\r\n=\r\n\r\n\r\n1\r\n0\r\n.\r\n.\r\n.\r\n0\r\n\r\n\r\n\r\n1 0 · · · 0\r\n\u0001\r\n=\r\n\r\n\r\n1 0 · · · 0\r\n0 0 · · · 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · 0\r\n\r\n\r\n.\r\n.\r\n.\r\nΠn = ene\r\nT\r\nn\r\n=\r\n\r\n\r\n0\r\n0\r\n.\r\n.\r\n.\r\n1\r\n\r\n\r\n\r\n0 0 · · · 1\r\n\u0001\r\n=\r\n\r\n\r\n0 0 · · · 0\r\n0 0 · · · 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · 1\r\n\r\n\r\n248",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4afe02e3-1cec-4202-a65f-c13636176eae.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=153d910d5c94c007c8159a6a46b96a3baa88e070fbdec6906ae4ec559c114c25",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 430
      },
      {
        "segments": [
          {
            "segment_id": "2e2825cc-e73e-41a8-a2ad-e490ac2427b8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 249,
            "page_width": 612,
            "page_height": 792,
            "content": "14.2 Orthogonal and Orthonormal Bases 249\r\nIn short, Πiis the diagonal square matrix with a 1 in the ith diagonal position\r\nand zeros everywhere else1.\r\nNotice that ΠiΠj = eie\r\nT\r\ni\r\neje\r\nT\r\nj = eiδije\r\nT\r\nj\r\n. Then:\r\nΠiΠj =\r\n\u001a\r\nΠi i = j\r\n0 i 6= j\r\n.\r\nMoreover, for a diagonal matrix D with diagonal entries λ1, . . . , λn, we can\r\nwrite\r\nD = λ1Π1 + · · · + λnΠn.\r\n14.2 Orthogonal and Orthonormal Bases\r\nThere are many other bases that behave in the same way as the standard\r\nbasis. As such, we will study:\r\n• Orthogonal bases {v1, . . . , vn}:\r\nvi vj = 0 if i 6= j .\r\nIn other words, all vectors in the basis are perpendicular.\r\n• Orthonormal bases {u1, . . . , un}:\r\nui uj = δij .\r\nIn addition to being orthogonal, each vector has unit length.\r\nSuppose T = {u1, . . . , un} is an orthonormal basis for R\r\nn\r\n. Because T is\r\na basis, we can write any vector v uniquely as a linear combination of the\r\nvectors in T;\r\nv = c\r\n1u1 + · · · cnun.\r\nSince T is orthonormal, there is a very easy way to find the coefficients of this\r\nlinear combination. By taking the dot product of v with any of the vectors\r\n1This is reminiscent of an older notation, where vectors are written in juxtaposition.\r\nThis is called a “dyadic tensor”, and is still used in some applications.\r\n249",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2e2825cc-e73e-41a8-a2ad-e490ac2427b8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9c0a8cd5844a53b83f1ff67db2630426e8861c58c9eeb20414f01f999172c493",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "188095a1-42c9-4f46-a3aa-131b6f42299b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 250,
            "page_width": 612,
            "page_height": 792,
            "content": "250 Orthonormal Bases and Complements\r\nin T, we get\r\nv ui = c\r\n1u1 ui + · · · + ciui ui + · · · + cnun ui\r\n= c\r\n1\r\n· 0 + · · · + c\r\ni\r\n· 1 + · · · + c\r\nn\r\n· 0\r\n= c\r\ni\r\n,\r\n⇒ c\r\ni = v ui\r\n⇒ v = (v u1)u1 + · · · + (v un)un\r\n=\r\nX\r\ni\r\n(v ui)ui\r\n.\r\nThis proves the following theorem.\r\nTheorem 14.2.1. For an orthonormal basis {u1, . . . , un}, any vector v can\r\nbe expressed as\r\nv =\r\nX\r\ni\r\n(v ui)ui.\r\nReading homework: problem 1\r\nAll orthonormal bases for R\r\n2\r\n14.3 Relating Orthonormal Bases\r\nSuppose T = {u1, . . . , un} and R = {w1, . . . , wn} are two orthonormal bases\r\nfor R\r\nn\r\n. Then\r\nw1 = (w1 u1)u1 + · · · + (w1 un)un\r\n.\r\n.\r\n.\r\nwn = (wn u1)u1 + · · · + (wn un)un\r\n⇒ wi =\r\nX\r\nj\r\nuj (uj wi)\r\n250",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/188095a1-42c9-4f46-a3aa-131b6f42299b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5f489d5666ca770b3e603c91525acdbc1fda0d65fd0670e315d73c64450ae73d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 446
      },
      {
        "segments": [
          {
            "segment_id": "c03c9a3c-5806-41de-8d30-335e9081ed1c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 251,
            "page_width": 612,
            "page_height": 792,
            "content": "14.3 Relating Orthonormal Bases 251\r\nThus the matrix for the change of basis from T to R is given by\r\nP = (P\r\nj\r\ni\r\n) = (uj wi).\r\nWe would like to calculate the product P PT. For that, we first develop a\r\ndirty trick for products of dot products:\r\n(u.v)(w.z) = (u\r\nT\r\nv)(w\r\nT\r\nz) = u\r\nT\r\n(vwT)z .\r\nThe object vwTis the square matrix made from the outer product of v and\r\nw. Now we are ready to compute the components of the matrix product\r\nP PT. X\r\ni\r\n(uj wi)(wi uk) = X\r\ni\r\n(u\r\nT\r\nj wi)(w\r\nT\r\ni uk)\r\n= u\r\nT\r\nj\r\n\"X\r\ni\r\n(wiw\r\nT\r\ni\r\n)\r\n#\r\nuk\r\n(∗)\r\n= u\r\nT\r\nj\r\nInuk\r\n= u\r\nT\r\nj uk = δjk.\r\nThe equality (∗) is explained below. Assuming (∗) holds, we have shown that\r\nP PT = In, which implies that\r\nP\r\nT = P−1\r\n.\r\nThe equality in the line (∗) says that P\r\ni wiw\r\nT\r\ni = In. To see this, we\r\nexamine P\r\ni wiw\r\nT\r\ni\r\n\u0001\r\nv for an arbitrary vector v. We can find constants c\r\nj\r\nsuch that v =\r\nP\r\nj\r\nc\r\njwj\r\n, so that:\r\n X\r\ni\r\nwiw\r\nT\r\ni\r\n!\r\nv =\r\n X\r\ni\r\nwiw\r\nT\r\ni\r\n! X\r\nj\r\nc\r\njwj\r\n!\r\n=\r\nX\r\nj\r\nc\r\nj X\r\ni\r\nwiw\r\nT\r\ni wj\r\n=\r\nX\r\nj\r\nc\r\nj X\r\ni\r\nwiδij\r\n=\r\nX\r\nj\r\nc\r\njwj since all terms with i 6= j vanish\r\n= v.\r\n251",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c03c9a3c-5806-41de-8d30-335e9081ed1c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ca25034138946e0dd14e6f47563c39f5adc7453a649eee2136cfd6edfa4e636b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 260
      },
      {
        "segments": [
          {
            "segment_id": "41964d5b-2e37-4b52-9baf-2e37dc188220",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 252,
            "page_width": 612,
            "page_height": 792,
            "content": "252 Orthonormal Bases and Complements\r\nThus, as a linear transformation, P\r\ni wiw\r\nT\r\ni = In fixes every vector, and thus\r\nmust be the identity In.\r\nDefinition A matrix P is orthogonal if P\r\n−1 = PT\r\n.\r\nThen to summarize,\r\nTheorem 14.3.1. A change of basis matrix P relating two orthonormal bases\r\nis an orthogonal matrix. I.e.,\r\nP\r\n−1 = PT\r\n.\r\nReading homework: problem 2\r\nExample 131 Consider R\r\n3 with the ordered orthonormal basis\r\nS = (u1, u2, u3) =\r\n\r\n\r\n\r\n\r\n√\r\n2\r\n6\r\n√\r\n1\r\n6\r\n√−1\r\n6\r\n\r\n ,\r\n\r\n\r\n0\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n\r\n ,\r\n\r\n\r\n√\r\n1\r\n3\r\n√−1\r\n3\r\n√\r\n1\r\n3\r\n\r\n\r\n\r\n .\r\nLet E be the standard basis (e1, e2, e3). Since we are changing from the standard\r\nbasis to a new basis, then the columns of the change of basis matrix are exactly the\r\nstandard basis vectors. Then the change of basis matrix from E to S is given by\r\nP = (P\r\nj\r\ni\r\n) = (ej · ui) =\r\n\r\n\r\ne1 u1 e1 u2 e1 u3\r\ne2 u1 e2 u2 e2 u3\r\ne3 u1 e3 u2 e3 u3\r\n\r\n\r\n=\r\n\r\nu1 u2 u3\r\n\u0001\r\n=\r\n\r\n\r\n√\r\n2\r\n6\r\n0 √\r\n1\r\n3\r\n√\r\n1\r\n6\r\n√\r\n1\r\n2\r\n√−1\r\n3\r\n√−1\r\n6\r\n√\r\n1\r\n2\r\n√\r\n1\r\n3\r\n\r\n .\r\nFrom our theorem, we observe that\r\nP\r\n−1 = PT =\r\n\r\n\r\nu\r\nT\r\n1\r\nu\r\nT\r\n2\r\nu\r\nT\r\n3\r\n\r\n\r\n=\r\n\r\n\r\n√\r\n2\r\n6\r\n√\r\n1\r\n6\r\n√−1\r\n6\r\n0 √\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√\r\n1\r\n3\r\n√−1\r\n3\r\n√\r\n1\r\n3\r\n\r\n .\r\n252",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/41964d5b-2e37-4b52-9baf-2e37dc188220.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2079fc47879affc602e5ac5658671c16276efd97b5b0689cd8d34e46eaff344",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "f4c71ae9-c966-4c6c-9445-39ccbfd8be9d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 253,
            "page_width": 612,
            "page_height": 792,
            "content": "14.4 Gram-Schmidt & Orthogonal Complements 253\r\nWe can check that P\r\nTP = I by a lengthy computation, or more simply, notice\r\nthat\r\n(P\r\nTP) =\r\n\r\n\r\nu\r\nT\r\n1\r\nu\r\nT\r\n2\r\nu\r\nT\r\n3\r\n\r\n\r\n\r\nu1 u2 u3\r\n\u0001\r\n=\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nAbove we are using orthonormality of the ui and the fact that matrix multiplication\r\namounts to taking dot products between rows and columns. It is also very important\r\nto realize that the columns of an orthogonal matrix are made from an orthonormal\r\nset of vectors.\r\nOrthonormal Change of Basis and Diagonal Matrices. Suppose D is a diagonal\r\nmatrix and we are able to use an orthogonal matrix P to change to a new basis. Then\r\nthe matrix M of D in the new basis is:\r\nM = P DP −1 = P DPT.\r\nNow we calculate the transpose of M.\r\nMT = (P DPT)\r\nT\r\n= (P\r\nT\r\n)\r\nT DTPT\r\n= P DPT\r\n= M\r\nThe matrix M = P DPTis symmetric!\r\n14.4 Gram-Schmidt & Orthogonal Complements\r\nGiven a vector v and some other vector u not in span {v} we can construct\r\nthe new vector\r\nv\r\n⊥ := v −\r\nu · v\r\nu · u\r\nu .\r\n253",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f4c71ae9-c966-4c6c-9445-39ccbfd8be9d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=67ce848177ef15c6f89ee234189adb6211f249534f0cc2fa279a7f020435d472",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 219
      },
      {
        "segments": [
          {
            "segment_id": "1289f509-2a3b-4e34-9062-699d220e26c0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 254,
            "page_width": 612,
            "page_height": 792,
            "content": "254 Orthonormal Bases and Complements\r\nv\r\nu\r\nv\r\n⊥\r\nu·v\r\nu·u\r\nu = v\r\nk\r\nThis new vector v\r\n⊥ is orthogonal to u because\r\nu v\r\n⊥ = u v −\r\nu · v\r\nu · u\r\nu u = 0.\r\nHence, {u, v⊥} is an orthogonal basis for span{u, v}. When v is not par\u0002allel to u, v\r\n⊥ 6= 0, and normalizing these vectors we obtain n\r\nu\r\n|u|\r\n,\r\nv⊥\r\n|v⊥|\r\no\r\n, an\r\northonormal basis for the vector space span {u, v}.\r\nSometimes we write v = v\r\n⊥ + vk where:\r\nv\r\n⊥ = v −\r\nu · v\r\nu · u\r\nu\r\nv\r\nk =\r\nu · v\r\nu · u\r\nu.\r\nThis is called an orthogonal decomposition because we have decomposed\r\nv into a sum of orthogonal vectors. This decomposition depends on u; if we\r\nchange the direction of u we change v\r\n⊥ and vk\r\n.\r\nIf u, v are linearly independent vectors in R\r\n3\r\n, then the set {u, v⊥, u×v\r\n⊥}\r\nwould be an orthogonal basis for R\r\n3\r\n. This set could then be normalized by\r\ndividing each vector by its length to obtain an orthonormal basis.\r\nHowever, it often occurs that we are interested in vector spaces with di\u0002mension greater than 3, and must resort to craftier means than cross products\r\nto obtain an orthogonal basis2.\r\n2Actually, given a set T of (n − 1) independent vectors in n-space, one can define an\r\nanalogue of the cross product that will produce a vector orthogonal to the span of T, using\r\na method exactly analogous to the usual computation for calculating the cross product of\r\ntwo vectors in R\r\n3\r\n. This only gets us the last orthogonal vector, though; the process in\r\nthis Section gives a way to get a full orthogonal basis.\r\n254",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1289f509-2a3b-4e34-9062-699d220e26c0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6cfcee03e66ca22ee1761ec01945e56291a0c31f104134d2f0be543aa415dbf2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 308
      },
      {
        "segments": [
          {
            "segment_id": "a5816fe0-e32b-406e-af00-241d8009046f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 255,
            "page_width": 612,
            "page_height": 792,
            "content": "14.4 Gram-Schmidt & Orthogonal Complements 255\r\nGiven a third vector w, we should first check that w does not lie in the\r\nspan{u, v}, i.e., check that u, v and w are linearly independent. If it does\r\nnot, we then can define\r\nw\r\n⊥ := w −\r\nu w\r\nu u\r\nu −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nv\r\n⊥.\r\nWe can check that u w\r\n⊥ and v⊥ w⊥ are both zero:\r\nu w\r\n⊥ = u\r\n\u0012\r\nw −\r\nu w\r\nu u\r\nu −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nv\r\n⊥\r\n\u0013\r\n= u w −\r\nu w\r\nu u\r\nu u −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nu v\r\n⊥\r\n= u w − u w −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nu v\r\n⊥ = 0\r\nsince u is orthogonal to v\r\n⊥, and\r\nv\r\n⊥ w\r\n⊥ = v⊥\r\n\u0012\r\nw −\r\nu w\r\nu u\r\nu −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nv\r\n⊥\r\n\u0013\r\n= v\r\n⊥ w −\r\nu w\r\nu u\r\nv\r\n⊥ u −\r\nv\r\n⊥ w\r\nv\r\n⊥ v⊥\r\nv\r\n⊥ v⊥\r\n= v\r\n⊥ w −\r\nu w\r\nu u\r\nv\r\n⊥ u − v\r\n⊥ w = 0\r\nbecause u is orthogonal to v\r\n⊥. Since w⊥ is orthogonal to both u and v⊥, we\r\nhave that {u, v⊥, w⊥} is an orthogonal basis for span{u, v, w}.\r\n255",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a5816fe0-e32b-406e-af00-241d8009046f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=953d1b035d81e1703aa696f92d4c63c905758da72372af14ad8c6738427f3823",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 238
      },
      {
        "segments": [
          {
            "segment_id": "15e7492a-5cad-40aa-969e-396f39c9cbc3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 256,
            "page_width": 612,
            "page_height": 792,
            "content": "256 Orthonormal Bases and Complements\r\n14.4.1 The Gram-Schmidt Procedure\r\nIn fact, given an ordered set (v1, v2, . . .) of linearly independent vectors, we\r\ncan define an orthogonal basis for span{v1, v2, . . .} consisting of the vectors\r\nv\r\n⊥\r\n1\r\n:= v1\r\nv\r\n⊥\r\n2\r\n:= v2 −\r\nv\r\n⊥\r\n1\r\n· v2\r\nv\r\n⊥\r\n1\r\n· v\r\n⊥\r\n1\r\nv\r\n⊥\r\n1\r\nv\r\n⊥\r\n3\r\n:= v3 −\r\nv\r\n⊥\r\n1\r\n· v3\r\nv\r\n⊥\r\n1\r\n· v\r\n⊥\r\n1\r\nv\r\n⊥\r\n1 −\r\nv\r\n⊥\r\n2\r\n· v3\r\nv\r\n⊥\r\n2\r\n· v\r\n⊥\r\n2\r\nv\r\n⊥\r\n2\r\n.\r\n.\r\n.\r\nv\r\n⊥\r\ni\r\n:= vi −\r\nv\r\n⊥\r\n1\r\n· vi\r\nv\r\n⊥\r\n1\r\n· v\r\n⊥\r\n1\r\nv\r\n⊥\r\n1 −\r\nv\r\n⊥\r\n2\r\n· vi\r\nv\r\n⊥\r\n2\r\n· v\r\n⊥\r\n2\r\nv\r\n⊥\r\n2 − · · · −\r\nv\r\n⊥\r\ni−1\r\n· vi\r\nv\r\n⊥\r\ni−1\r\n· v\r\n⊥\r\ni−1\r\nv\r\n⊥\r\ni−1\r\n.\r\n.\r\n.\r\nNotice that each v\r\n⊥\r\ni here depends on v\r\n⊥\r\nj\r\nfor every j < i. This allows us to\r\ninductively/algorithmically build up a linearly independent, orthogonal set\r\nof vectors {v\r\n⊥\r\n1\r\n, v⊥\r\n2\r\n, . . .} such that span{v\r\n⊥\r\n1\r\n, v⊥\r\n2\r\n, . . .} = span{v1, v2, . . .}. That\r\nis, an orthogonal basis for the latter vector space.\r\nNote that the set of vectors you start out with needs to be ordered to\r\nuniquely specify the algorithm; changing the order of the vectors will give a\r\ndifferent orthogonal basis. You might need to be the one to put an order on\r\nthe initial set of vectors.\r\nThis algorithm is called the Gram–Schmidt orthogonalization pro\u0002cedure–Gram worked at a Danish insurance company over one hundred years\r\nago, Schmidt was a student of Hilbert (the famous German mathmatician).\r\nExample 132 We’ll obtain an orthogonal basis for R\r\n3 by appling Gram-Schmidt to\r\nthe linearly independent set\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n3\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n.\r\nBecause he Gram-Schmidt algorithm uses the first vector from the ordered set the\r\nlargest number of times, we will choose the vector with the most zeros to be the first\r\nin hopes of simplifying computations; we choose to order the set as\r\n(v1, v2, v3) :=\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n3\r\n1\r\n1\r\n\r\n\r\n\r\n .\r\n256",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/15e7492a-5cad-40aa-969e-396f39c9cbc3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3cde1dcaa5f38c3ac88d586d23549eab2d348e105784fc1a81494b8d8200a819",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 435
      },
      {
        "segments": [
          {
            "segment_id": "1a646158-8a42-47b1-8f67-92bcf962a3ea",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 257,
            "page_width": 612,
            "page_height": 792,
            "content": "14.5 QR Decomposition 257\r\nFirst, we set v\r\n⊥\r\n1\r\n:= v1. Then\r\nv\r\n⊥\r\n2\r\n:=\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n −\r\n2\r\n2\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\nv\r\n⊥\r\n3\r\n:=\r\n\r\n\r\n3\r\n1\r\n1\r\n\r\n −\r\n4\r\n2\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n −\r\n1\r\n1\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n =\r\n\r\n\r\n1\r\n−1\r\n0\r\n\r\n .\r\nThen the set\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n−1\r\n0\r\n\r\n\r\n\r\n\r\n\r\nis an orthogonal basis for R\r\n3\r\n. To obtain an orthonormal basis we simply divide each\r\nof these vectors by its length, yielding\r\n\r\n\r\n\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n ,\r\n\r\n\r\n√\r\n1\r\n2\r\n√−1\r\n2\r\n0\r\n\r\n\r\n\r\n\r\n\r\n.\r\nA 4 × 4 Gram--Schmidt Example\r\n14.5 QR Decomposition\r\nIn chapter 7, section 7.7 we learned how to solve linear systems by decom\u0002posing a matrix M into a product of lower and upper triangular matrices\r\nM = LU .\r\nThe Gram–Schmidt procedure suggests another matrix decomposition,\r\nM = QR ,\r\nwhere Q is an orthogonal matrix and R is an upper triangular matrix. So\u0002called QR-decompositions are useful for solving linear systems, eigenvalue\r\nproblems and least squares approximations. You can easily get the idea\r\nbehind the QR decomposition by working through a simple example.\r\n257",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1a646158-8a42-47b1-8f67-92bcf962a3ea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9619df31046904d4d0bde1faafc005cedd88ebc88ab944cb5ccc1e3cd57c77bd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 269
      },
      {
        "segments": [
          {
            "segment_id": "517a33a4-a663-4a5b-81ca-7ff321d2d711",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 258,
            "page_width": 612,
            "page_height": 792,
            "content": "258 Orthonormal Bases and Complements\r\nExample 133 Find the QR decomposition of\r\nM =\r\n\r\n\r\n2 −1 1\r\n1 3 −2\r\n0 1 −2\r\n\r\n .\r\nWhat we will do is to think of the columns of M as three 3-vectors and use Gram–\r\nSchmidt to build an orthonormal basis from these that will become the columns of\r\nthe orthogonal matrix Q. We will use the matrix R to record the steps of the Gram–\r\nSchmidt procedure in such a way that the product QR equals M.\r\nTo begin with we write\r\nM =\r\n\r\n\r\n2 −\r\n7\r\n5\r\n1\r\n1\r\n14\r\n5 −2\r\n0 1 −2\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n5\r\n0\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nIn the first matrix the first two columns are orthogonal because we simpy replaced the\r\nsecond column of M by the vector that the Gram–Schmidt procedure produces from\r\nthe first two columns of M, namely\r\n\r\n\r\n−\r\n7\r\n5\r\n14\r\n5\r\n1\r\n\r\n =\r\n\r\n\r\n−1\r\n3\r\n1\r\n\r\n −\r\n1\r\n5\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n .\r\nThe matrix on the right is almost the identity matrix, save the +\r\n1\r\n5\r\nin the second entry\r\nof the first row, whose effect upon multiplying the two matrices precisely undoes what\r\nwe we did to the second column of the first matrix.\r\nFor the third column of M we use Gram–Schmidt to deduce the third orthogonal\r\nvector\r\n\r\n\r\n−\r\n1\r\n6\r\n1\r\n3\r\n−\r\n7\r\n6\r\n\r\n =\r\n\r\n\r\n1\r\n−2\r\n−2\r\n\r\n − 0\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n −\r\n−9\r\n54\r\n5\r\n\r\n\r\n−\r\n7\r\n5\r\n14\r\n5\r\n1\r\n\r\n ,\r\nand therefore, using exactly the same procedure write\r\nM =\r\n\r\n\r\n2 −\r\n7\r\n5 −\r\n1\r\n6\r\n1\r\n14\r\n5\r\n1\r\n3\r\n0 1 −\r\n7\r\n6\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n5\r\n0\r\n0 1 −\r\n5\r\n6\r\n0 0 1\r\n\r\n .\r\nThis is not quite the answer because the first matrix is now made of mutually orthog\u0002onal column vectors, but a bona fide orthogonal matrix is comprised of orthonormal\r\n258",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/517a33a4-a663-4a5b-81ca-7ff321d2d711.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6948b1f90b408d43d25467d2bd7369eb74c376e816495c411c2ec005eb91a3a5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 371
      },
      {
        "segments": [
          {
            "segment_id": "4ddb77cb-d87f-4da3-8065-fffa16622b6b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 259,
            "page_width": 612,
            "page_height": 792,
            "content": "14.6 Orthogonal Complements 259\r\nvectors. To achieve that we divide each column of the first matrix by its length and\r\nmultiply the corresponding row of the second matrix by the same amount:\r\nM =\r\n\r\n\r\n2\r\n√\r\n5\r\n5 −\r\n7\r\n√\r\n30\r\n90 −\r\n√\r\n6\r\n18\r\n√\r\n5\r\n5\r\n7\r\n√\r\n30\r\n45\r\n√\r\n6\r\n9\r\n0\r\n√\r\n30\r\n18 −\r\n7\r\n√\r\n6\r\n18\r\n\r\n\r\n\r\n\r\n√\r\n5\r\n√\r\n5\r\n5\r\n0\r\n0\r\n3\r\n√\r\n30\r\n5 −\r\n√\r\n30\r\n2\r\n0 0\r\n√\r\n6\r\n2\r\n\r\n\r\n= QR .\r\nA nice check of this result is to verify that entry (i, j) of the matrix R equals the dot\r\nproduct of the i-th column of Q with the j-th column of M. (Some people memorize\r\nthis fact and use it as a recipe for computing QR deompositions.) A good test of\r\nyour own understanding is to work out why this is true!\r\nAnother QR decomposition example\r\n14.6 Orthogonal Complements\r\nLet U and V be subspaces of a vector space W. In review exercise 2 you are\r\nasked to show that U∩V is a subspace of W, and that U∪V is not a subspace.\r\nHowever, span(U ∪ V ) is certainly a subspace, since the span of any subset\r\nof a vector space is a subspace. Notice that all elements of span(U ∪ V ) take\r\nthe form u + v with u ∈ U and v ∈ V . We call the subspace\r\nU + V := span(U ∪ V ) = {u + v | u ∈ U, v ∈ V }\r\nthe sum of U and V . Here, we are not adding vectors, but vector spaces to\r\nproduce a new vector space.\r\nExample 134\r\nspan\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n+ span\r\n\r\n\r\n\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n= span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n.\r\nNotice that the addends have elements in common;\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n\r\nis in both addends. Even\r\nthough both of the addends are 2-dimensional their sum is not 4-dimensional.\r\n259",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4ddb77cb-d87f-4da3-8065-fffa16622b6b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a1ca919399c57c71cbc39d80ed6e72fda3ae92f0507ffbbf967e64ceabc2fbdc",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 413
      },
      {
        "segments": [
          {
            "segment_id": "66051ba9-16ab-4dcf-9ce9-7eb7bdae046c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 260,
            "page_width": 612,
            "page_height": 792,
            "content": "260 Orthonormal Bases and Complements\r\nIn the special case that U and V do not have any non-zero vectors in\r\ncommon their sum is a vector space with dimension dim U + dim V .\r\nDefinition If U and V are subspaces of a vector space W such that\r\nU ∩ V = {0W } then the vector space\r\nU ⊕ V := span(U ∪ V ) = {u + v | u ∈ U, v ∈ V }\r\nis the direct sum of U and V .\r\nRemark\r\n• When U ∩ V = {0W }, U + V = U ⊕ V.\r\n• When U ∩ V 6= {0W }, U + V 6= U ⊕ V .\r\nThis distinction is important because the direct sum has a very nice property.\r\nTheorem 14.6.1. If w ∈ U ⊕ V then there is only one way to write w as\r\nthe sum of a vector in U and a vector in V .\r\nProof. Suppose that u + v = u\r\n0 + v0\r\n, with u, u0 ∈ U, and v, v0 ∈ V . Then we\r\ncould express 0 = (u − u\r\n0\r\n) + (v − v\r\n0\r\n). Then (u − u\r\n0\r\n) = −(v − v\r\n0\r\n). Since U\r\nand V are subspaces, we have (u − u\r\n0\r\n) ∈ U and −(v − v\r\n0\r\n) ∈ V . But since\r\nthese elements are equal, we also have (u−u\r\n0\r\n) ∈ V . Since U ∩V = {0}, then\r\n(u − u\r\n0\r\n) = 0. Similarly, (v − v\r\n0\r\n) = 0. Therefore u = u\r\n0 and v = v0\r\n, proving\r\nthe theorem.\r\nReading homework: problem 3\r\nHere is a sophisticated algebra question:\r\nGiven a subspace U in W, what are the solutions to\r\nU ⊕ V = W.\r\nThat is, how can we write W as the direct sum of U and some\u0002thing?\r\nThere is not a unique answer to this question as can be seen from the following\r\npicture of subspaces in W = R\r\n3\r\n.\r\n260",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/66051ba9-16ab-4dcf-9ce9-7eb7bdae046c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a1c44f362526c130bc876243e81ff9b164e618efba90e6049850e3780c57c2ff",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "19ab3622-2774-41c0-bf1a-f11667fc60d0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 261,
            "page_width": 612,
            "page_height": 792,
            "content": "14.6 Orthogonal Complements 261\r\nHowever, using the inner product, there is a natural candidate U\r\n⊥ for this\r\nsecond subspace as shown below.\r\nDefinition If U is a subspace of the vector space W then the vector space\r\nU\r\n⊥ := \b\r\nw ∈ W|w u = 0 for all u ∈ U\r\n\t\r\nis the orthogonal complement of U in W.\r\nRemark The symbols “U\r\n⊥” are often read as “U-perp”. This is the set of all vectors\r\nin W orthogonal to every vector in U.\r\nPossibly by now you are feeling overwhelmed, it may help to watch this quick\r\noverview video.\r\nOverview\r\n261",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/19ab3622-2774-41c0-bf1a-f11667fc60d0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2d113470852c11a46b18d87a14c6683b972c1b08f544394934526446e2d6074e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 460
      },
      {
        "segments": [
          {
            "segment_id": "a195a758-5aca-4424-bb77-76d951cba995",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 262,
            "page_width": 612,
            "page_height": 792,
            "content": "262 Orthonormal Bases and Complements\r\nExample 135 Consider any plane P through the origin in R\r\n3\r\n. Then P is a subspace,\r\nand P\r\n⊥ is the line through the origin orthogonal to P. For example, if P is the\r\nxy-plane, then\r\nR\r\n3 = P ⊕ P⊥ = {(x, y, 0)|x, y ∈ R} ⊕ {(0, 0, z)|z ∈ R}.\r\nTheorem 14.6.2. Let U be a subspace of a finite-dimensional vector space W.\r\nThen the set U\r\n⊥ is a subspace of W, and W = U ⊕ U⊥.\r\nProof. First, to see that U\r\n⊥ is a subspace, we only need to check closure,\r\nwhich requires a simple check: Suppose v, w ∈ U\r\n⊥, then we know\r\nv u = 0 = w u (∀u ∈ U).\r\nHence\r\n⇒ u (αv + βw) = αu v + βu w = 0 (∀u ∈ U),\r\nand so αv + βw ∈ U\r\n⊥.\r\nNext, to form a direct sum between U and U ⊥ we need to show that\r\nU ∩ U\r\n⊥ = {0}. This holds because if u ∈ U and u ∈ U⊥ it follows that\r\nu u = 0 ⇔ u = 0.\r\nFinally, we show that any vector w ∈ W is in U ⊕ U\r\n⊥. (This is where\r\nwe use the assumption that W is finite-dimensional.) Let e1, . . . , en be an\r\northonormal basis for W. Set:\r\nu = (w e1)e1 + · · · + (w en)en ∈ U ,\r\nu\r\n⊥ = w − u .\r\nIt is easy to check that u\r\n⊥ ∈ U⊥ (see the Gram-Schmidt procedure). Then\r\nw = u + u\r\n⊥, so w ∈ U ⊕ U⊥, and we are done.\r\nReading homework: problem 4\r\nExample 136 Consider any line L through the origin in R\r\n4\r\n. Then L is a subspace,\r\nand L\r\n⊥ is a 3-dimensional subspace orthogonal to L. For example, let\r\nL = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n262",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a195a758-5aca-4424-bb77-76d951cba995.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=dc50d9e8e1b4f77300795b275705b0a4154d112cb856317e5f6881693e5f0f7a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 345
      },
      {
        "segments": [
          {
            "segment_id": "2e596651-0455-44e6-af2a-015b17ee5ca3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 263,
            "page_width": 612,
            "page_height": 792,
            "content": "14.6 Orthogonal Complements 263\r\nbe a line in R\r\n4\r\n. Then\r\nL\r\n⊥ =\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n∈ R\r\n4\r\n| (x, y, z, w) (1, 1, 1, 1) = 0\r\n\r\n\r\n\r\n=\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n∈ R\r\n4\r\n| x + y + z + w = 0\r\n\r\n\r\n\r\n.\r\nUsing the Gram-Schmidt procedure one may find an orthogonal basis for L\r\n⊥. The\r\nset\r\n\r\n\r\n\r\n\r\n\r\n1\r\n−1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n−1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n0\r\n−1\r\n\r\n\r\n\r\n\r\n\r\nforms a basis for L\r\n⊥ so, first, we order the basis as\r\n(v1, v2, v2) =\r\n\r\n\r\n\r\n\r\n1\r\n−1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n−1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n0\r\n−1\r\n\r\n\r\n\r\n .\r\nNext, we set v\r\n⊥\r\n1 = v1. Then\r\nv\r\n⊥\r\n2 =\r\n\r\n\r\n1\r\n0\r\n−1\r\n0\r\n\r\n −\r\n1\r\n2\r\n\r\n\r\n1\r\n−1\r\n0\r\n0\r\n\r\n =\r\n\r\n\r\n1\r\n2\r\n1\r\n2\r\n−1\r\n0\r\n\r\n ,\r\nv\r\n⊥\r\n3 =\r\n\r\n\r\n1\r\n0\r\n0\r\n−1\r\n\r\n −\r\n1\r\n2\r\n\r\n\r\n1\r\n−1\r\n0\r\n0\r\n\r\n −\r\n1/2\r\n3/2\r\n\r\n\r\n1\r\n2\r\n1\r\n2\r\n−1\r\n0\r\n\r\n =\r\n\r\n\r\n1\r\n3\r\n1\r\n3\r\n1\r\n3\r\n−1\r\n\r\n\r\n.\r\nSo the set\r\n\r\n\r\n\r\n\r\n\r\n1\r\n−1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n2\r\n1\r\n2\r\n−1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n3\r\n1\r\n3\r\n1\r\n3\r\n−1\r\n\r\n\r\n\r\n\r\n\r\n263",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2e596651-0455-44e6-af2a-015b17ee5ca3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2a2f9e5b84a78588acfff9382f5d5327749003de3cf5a03d9f4b03b6948adf5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 301
      },
      {
        "segments": [
          {
            "segment_id": "217847df-2c61-42bd-9f88-ff84c2befc4c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 264,
            "page_width": 612,
            "page_height": 792,
            "content": "264 Orthonormal Bases and Complements\r\nis an orthogonal basis for L\r\n⊥. Dividing each basis vector by its length yields\r\n\r\n\r\n\r\n\r\n\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n0\r\n0\r\n\r\n\r\n,\r\n\r\n\r\n√\r\n1\r\n6\r\n√\r\n1\r\n6\r\n− √\r\n2\r\n6\r\n0\r\n\r\n\r\n,\r\n\r\n\r\n√\r\n3\r\n√\r\n6\r\n3\r\n√\r\n6\r\n3\r\n6\r\n−\r\n√\r\n3\r\n2\r\n\r\n\r\n\r\n\r\n\r\n,\r\nand orthonormal basis for L\r\n⊥. Moreover, we have\r\nR\r\n4 = L ⊕ L⊥ =\r\n\r\n\r\n\r\n\r\n\r\nc\r\nc\r\nc\r\nc\r\n\r\n\r\n| c ∈ R\r\n\r\n\r\n\r\n⊕\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n∈ R\r\n4\r\n| x + y + z + w = 0\r\n\r\n\r\n\r\n,\r\na decomposition of R\r\n4\r\ninto a line and its three dimensional orthogonal compliment.\r\nNotice that for any subspace U, the subspace (U\r\n⊥)⊥ is just U again. As\r\nsuch, ⊥ is an involution on the set of subspaces of a vector space. (An invo\u0002lution is any mathematical operation which performed twice does nothing.)\r\n14.7 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2 , 3 , 4\r\nGram–Schmidt 5\r\nOrthogonal eigenbasis 6, 7\r\nOrthogonal complement 8\r\n1. Let D =\r\n\u0012\r\nλ1 0\r\n0 λ2\r\n\u0013\r\n.\r\n(a) Write D in terms of the vectors e1 and e2, and their transposes.\r\n(b) Suppose P =\r\n\u0012\r\na b\r\nc d\u0013\r\nis invertible. Show that D is similar to\r\nM =\r\n1\r\nad − bc \u0012\r\nλ1ad − λ2bc −(λ1 − λ2)ab\r\n(λ1 − λ2)cd −λ1bc + λ2ad\u0013\r\n.\r\n(c) Suppose the vectors \r\na, b\u0001\r\nand \r\nc, d\u0001\r\nare orthogonal. What can\r\nyou say about M in this case? (Hint: think about what MTis\r\nequal to.)\r\n264",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/217847df-2c61-42bd-9f88-ff84c2befc4c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=48501586ff1946e359642f2595e4090cd8a81ac4fe025a7a0c24e3210d6fdc24",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 303
      },
      {
        "segments": [
          {
            "segment_id": "98f277e1-3602-4e9c-a432-42d3e08f2a9a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 265,
            "page_width": 612,
            "page_height": 792,
            "content": "14.7 Review Problems 265\r\n2. Suppose S = {v1, . . . , vn} is an orthogonal (not orthonormal) basis\r\nfor R\r\nn\r\n. Then we can write any vector v as v =\r\nP\r\ni\r\nc\r\ni\r\nvifor some\r\nconstants c\r\ni\r\n. Find a formula for the constants c\r\ni\r\nin terms of v and the\r\nvectors in S.\r\nHint\r\n3. Let u, v be linearly independent vectors in R\r\n3\r\n, and P = span{u, v} be\r\nthe plane spanned by u and v.\r\n(a) Is the vector v\r\n⊥ := v −\r\nu·v\r\nu·u\r\nu in the plane P?\r\n(b) What is the (cosine of the) angle between v\r\n⊥ and u?\r\n(c) How can you find a third vector perpendicular to both u and v\r\n⊥?\r\n(d) Construct an orthonormal basis for R\r\n3\r\nfrom u and v.\r\n(e) Test your abstract formulæ starting with\r\nu =\r\n\r\n1, 2, 0\r\n\u0001\r\nand v =\r\n\r\n0, 1, 1\r\n\u0001\r\n.\r\nHint\r\n4. Find an orthonormal basis for R\r\n4 which includes (1, 1, 1, 1) using the\r\nfollowing procedure:\r\n(a) Pick a vector perpendicular to the vector\r\nv1 =\r\n\r\n\r\n1\r\n1\r\n1\r\n1\r\n\r\n\r\nfrom the solution set of the matrix equation\r\nv\r\nT\r\n1 x = 0 .\r\nPick the vector v2 obtained from the standard Gaussian elimina\u0002tion procedure which is the coefficient of x2.\r\n265",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/98f277e1-3602-4e9c-a432-42d3e08f2a9a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d6fdc80bac2269a222ba44308e40ca8376c74afe5b3926036fe494cff7ef3fd2",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3f18bd25-16c0-43ad-8b1e-2a31beeda6ff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 266,
            "page_width": 612,
            "page_height": 792,
            "content": "266 Orthonormal Bases and Complements\r\n(b) Pick a vector perpendicular to both v1 and v2 from the solutions\r\nset of the matrix equation\r\n\u0012\r\nv\r\nT\r\n1\r\nv\r\nT\r\n2\r\n\u0013\r\nx = 0 .\r\nPick the vector v3 obtained from the standard Gaussian elimina\u0002tion procedure with x3 as the coefficient.\r\n(c) Pick a vector perpendicular to v1, v2, and v3 from the solution set\r\nof the matrix equation\r\n\r\n\r\nv\r\nT\r\n1\r\nv\r\nT\r\n2\r\nv\r\nT\r\n3\r\n\r\n\r\nx = 0 .\r\nPick the vector v4 obtained from the standard Gaussian elimina\u0002tion procedure with x3 as the coefficient.\r\n(d) Normalize the four vectors obtained above.\r\n5. Use the inner product\r\nf · g := Z 1\r\n0\r\nf(x)g(x)dx\r\non the vector space V = span{1, x, x2, x3} to perform the Gram-Schmidt\r\nprocedure on the set of vectors {1, x, x2, x3}.\r\n6. Use the inner product\r\nf · g := Z 2π\r\n0\r\nf(x)g(x)dx\r\non the vector space V = span{sin(x),sin(2x),sin(3x)} to perform the\r\nGram-Schmidt procedure on the set of vectors {sin(x),sin(2x),sin(3x)}.\r\nWhat do you suspect about the vector space span{sin(nx) | n ∈ N}?\r\nWhat do you suspect about the vector space span{sin(ax) | a ∈ R}?\r\n7. (a) Show that if Q is an orthogonal n × n matrix then\r\nu v = (Qu) (Qv),\r\nfor any u, v ∈ R\r\nn\r\n. That is, Q preserves the inner product.\r\n266",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3f18bd25-16c0-43ad-8b1e-2a31beeda6ff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=52d74431fe08de4e6395536f9922de9ba2552fed5cdb747b7798c956df8f9318",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 472
      },
      {
        "segments": [
          {
            "segment_id": "360cfa69-f41d-46cf-8e31-8ff516ecce69",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 267,
            "page_width": 612,
            "page_height": 792,
            "content": "14.7 Review Problems 267\r\n(b) Does Q preserve the outer product?\r\n(c) If {u1, . . . , un} is an orthonormal set and {λ1, · · · , λn} is a set of\r\nnumbers then what are the eigenvalues and eigenvectors of the\r\nmatrix M =\r\nPn\r\ni=1 λiuiu\r\nT\r\ni\r\n?\r\n(d) How does Q change this matrix? How do the eigenvectors and\r\neigenvalues change?\r\n8. Carefully write out the Gram-Schmidt procedure for the set of vectors\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n−1\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n1\r\n−1\r\n\r\n\r\n\r\n\r\n\r\n.\r\nAre you free to rescale the second vector obtained in the procedure to\r\na vector with integer components?\r\n9. (a) Suppose u and v are linearly independent. Show that u and v\r\n⊥\r\nare also linearly independent. Explain why {u, v⊥} is a basis for\r\nspan{u, v}.\r\nHint\r\n(b) Repeat the previous problem, but with three independent vectors\r\nu, v, w.\r\n10. Find the QR factorization of\r\nM =\r\n\r\n\r\n1 0 2\r\n−1 2 0\r\n−1 −2 2\r\n\r\n .\r\n11. Given any three vectors u, v, w, when do v\r\n⊥ or w⊥ of the Gram–Schmidt\r\nprocedure vanish?\r\n12. For U a subspace of W, use the subspace theorem to check that U\r\n⊥ is\r\na subspace of W.\r\n267",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/360cfa69-f41d-46cf-8e31-8ff516ecce69.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=246f1c3d72d62ef123cf5d4c592d5a61596ab29c3383a8077c7bce4128325a59",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "9be4c672-f79d-4e33-9b66-cd7aa0182c22",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 268,
            "page_width": 612,
            "page_height": 792,
            "content": "268 Orthonormal Bases and Complements\r\n13. Let Sn and An define the space of n×n symmetric and anti-symmetric\r\nmatrices respectively. These are subspaces of the vector space Mn\r\nn\r\nof\r\nall n × n matrices. What is dim Mn\r\nn\r\n, dim Sn, and dim An? Show that\r\nMn\r\nn = Sn + An. Is A⊥n = Sn? Is Mnn = Sn ⊕ An?\r\n14. The vector space V = span{sin(t),sin(2t),sin(3t),sin(3t)} has an inner\r\nproduct:\r\nf · g := Z 2π\r\n0\r\nf(t)g(t)dt .\r\nFind the orthogonal compliment to U = span{sin(t) + sin(2t)} in V .\r\nExpress sin(t) − sin(2t) as the sum of vectors from U and U\r\nT\r\n.\r\n268",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9be4c672-f79d-4e33-9b66-cd7aa0182c22.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5975fe632d031256cdaa6aa6e299a8dc23db9d42495cd1fa47da6842d9e86c5d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4318827c-78d8-4c0b-a991-96fe2248a19d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 269,
            "page_width": 612,
            "page_height": 792,
            "content": "15\r\nDiagonalizing Symmetric Matrices\r\nSymmetric matrices have many applications. For example, if we consider the\r\nshortest distance between pairs of important cities, we might get a table like\r\nthe following.\r\nDavis Seattle San Francisco\r\nDavis 0 2000 80\r\nSeattle 2000 0 2010\r\nSan Francisco 80 2010 0\r\nEncoded as a matrix, we obtain\r\nM =\r\n\r\n\r\n0 2000 80\r\n2000 0 2010\r\n80 2010 0\r\n\r\n = MT\r\n.\r\nDefinition A matrix M is symmetric if MT = M.\r\nOne very nice property of symmetric matrices is that they always have\r\nreal eigenvalues. Review exercise 1 guides you through the general proof, but\r\nbelow is an example for 2 × 2 matrices.\r\n269",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4318827c-78d8-4c0b-a991-96fe2248a19d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cda33b39ff16ea63ec5775726a13315eff927cb3a5f5b046a13bf3a45c76595f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 461
      },
      {
        "segments": [
          {
            "segment_id": "22c5a797-0363-43a3-bdd0-e3d08b41d49a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 270,
            "page_width": 612,
            "page_height": 792,
            "content": "270 Diagonalizing Symmetric Matrices\r\nExample 137 For a general symmetric 2 × 2 matrix, we have:\r\nPλ\r\n\u0012\r\na b\r\nb d\u0013\r\n= det \u0012\r\nλ − a −b\r\n−b λ − d\r\n\u0013\r\n= (λ − a)(λ − d) − b\r\n2\r\n= λ\r\n2 − (a + d)λ − b2 + ad\r\n⇒ λ =\r\na + d\r\n2\r\n±\r\ns\r\nb\r\n2 +\r\n\u0012\r\na − d\r\n2\r\n\u00132\r\n.\r\nNotice that the discriminant 4b\r\n2 + (a − d)2\r\nis always positive, so that the eigenvalues\r\nmust be real.\r\nNow, suppose a symmetric matrix M has two distinct eigenvalues λ 6= µ\r\nand eigenvectors x and y;\r\nMx = λx, My = µy.\r\nConsider the dot product x y = x\r\nT\r\ny = y\r\nT x and calculate\r\nx\r\nTMy = xT µy = µx y, and\r\nx\r\nTMy = (yTMx)T\r\n(by transposing a 1 × 1 matrix)\r\n= x\r\nTMT\r\ny\r\n= x\r\nTMy\r\n= x\r\nT λy\r\n= λx y.\r\nSubtracting these two results tells us that:\r\n0 = x\r\nTMy − xTMy = (µ − λ) x y.\r\nSince µ and λ were assumed to be distinct eigenvalues, λ − µ is non-zero,\r\nand so x y = 0. We have proved the following theorem.\r\nTheorem 15.0.1. Eigenvectors of a symmetric matrix with distinct eigen\u0002values are orthogonal.\r\nReading homework: problem 1\r\n270",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/22c5a797-0363-43a3-bdd0-e3d08b41d49a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=adef860e247fe1502dab25cc6558e9a6a6dba83215809f539240f66d50df5e8e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4c30acdb-148c-47ba-836c-ea79f86f54d0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 271,
            "page_width": 612,
            "page_height": 792,
            "content": "271\r\nExample 138 The matrix M =\r\n\u0012\r\n2 1\r\n1 2\u0013\r\nhas eigenvalues determined by\r\ndet(M − λI) = (2 − λ)\r\n2 − 1 = 0.\r\nSo the eigenvalues of\r\n\u0012\r\nM are 3 and 1, and the associated eigenvectors turn out to be\r\n1\r\n1\r\n\u0013\r\nand \u0012\r\n1\r\n−1\r\n\u0013\r\n. It is easily seen that these eigenvectors are orthogonal;\r\n\u0012\r\n1\r\n1\r\n\u0013 \u0012\r\n1\r\n−1\r\n\u0013\r\n= 0.\r\nIn chapter 14 we saw that the matrix P built from any orthonormal basis\r\n(v1, . . . , vn) for R\r\nn as its columns,\r\nP =\r\n\r\nv1 · · · vn\r\n\u0001\r\n,\r\nwas an orthogonal matrix. This means that\r\nP\r\n−1 = PT\r\n, or P PT = I = P\r\nTP.\r\nMoreover, given any (unit) vector x1, one can always find vectors x2, . . . , xn\r\nsuch that (x1, . . . , xn) is an orthonormal basis. (Such a basis can be obtained\r\nusing the Gram-Schmidt procedure.)\r\nNow suppose M is a symmetric n×n matrix and λ1 is an eigenvalue with\r\neigenvector x1 (this is always the case because every matrix has at least one\r\neigenvalue–see review problem 3). Let P be the square matrix of orthonormal\r\ncolumn vectors\r\nP =\r\n\r\nx1 x2 · · · xn\r\n\u0001\r\n,\r\nWhile x1 is an eigenvector for M, the others are not necessarily eigenvectors\r\nfor M. Then\r\nMP =\r\n\r\nλ1x1 Mx2 · · · Mxn\r\n\u0001\r\n.\r\n271",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4c30acdb-148c-47ba-836c-ea79f86f54d0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3a9206a4915620c014ab38b1df9e41794b4b738fc839d4c167272b9fd407f781",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 477
      },
      {
        "segments": [
          {
            "segment_id": "f23860ef-1a93-4c66-8065-d02276f0a274",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 272,
            "page_width": 612,
            "page_height": 792,
            "content": "272 Diagonalizing Symmetric Matrices\r\nBut P is an orthogonal matrix, so P\r\n−1 = PT\r\n. Then:\r\nP\r\n−1 = PT =\r\n\r\n\r\nx\r\nT\r\n1\r\n.\r\n.\r\n.\r\nx\r\nT\r\nn\r\n\r\n\r\n⇒ P\r\nTMP =\r\n\r\n\r\nx\r\nT\r\n1 λ1x1 ∗ · · · ∗\r\nx\r\nT\r\n2 λ1x1 ∗ · · · ∗\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nx\r\nT\r\nn λ1x1 ∗ · · · ∗\r\n\r\n\r\n=\r\n\r\n\r\nλ1 ∗ · · · ∗\r\n0 ∗ · · · ∗\r\n.\r\n.\r\n. ∗\r\n.\r\n.\r\n.\r\n0 ∗ · · · ∗\r\n\r\n\r\n=\r\n\r\n\r\nλ1 0 · · · 0\r\n0\r\n.\r\n.\r\n. Mˆ\r\n0\r\n\r\n\r\n.\r\nThe last equality follows since P\r\nTMP is symmetric. The asterisks in the\r\nmatrix are where “stuff” happens; this extra information is denoted by Mˆ\r\nin the final expression. We know nothing about Mˆ except that it is an\r\n(n − 1) × (n − 1) matrix and that it is symmetric. But then, by finding an\r\n(unit) eigenvector for Mˆ , we could repeat this procedure successively. The\r\nend result would be a diagonal matrix with eigenvalues of M on the diagonal.\r\nAgain, we have proved a theorem:\r\nTheorem 15.0.2. Every symmetric matrix is similar to a diagonal matrix\r\nof its eigenvalues. In other words,\r\nM = MT ⇔ M = P DPT\r\nwhere P is an orthogonal matrix and D is a diagonal matrix whose entries\r\nare the eigenvalues of M.\r\nReading homework: problem 2\r\n272",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f23860ef-1a93-4c66-8065-d02276f0a274.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f652a633f75e78a528367e6f001ce66f8853e57bd098f65ac5030f92f6557c0a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 262
      },
      {
        "segments": [
          {
            "segment_id": "f8a96f86-9890-4ab5-b311-1fc6960679b7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 273,
            "page_width": 612,
            "page_height": 792,
            "content": "15.1 Review Problems 273\r\nTo diagonalize a real symmetric matrix, begin by building an orthogonal\r\nmatrix from an orthonormal basis of eigenvectors, as in the example below.\r\nExample 139 The symmetric matrix\r\nM =\r\n\u0012\r\n2 1\r\n1 2\u0013\r\n,\r\nhas eigenvalues 3 and 1 with eigenvectors \u0012\r\n1\r\n1\r\n\u0013\r\nand \u0012\r\n1\r\n−1\r\n\u0013\r\nrespectively. After normal\u0002izing these eigenvectors, we build the orthogonal matrix:\r\nP =\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√−1\r\n2\r\n!\r\n.\r\nNotice that P\r\nTP = I. Then:\r\nMP =\r\n \r\n√\r\n3\r\n2\r\n√\r\n1\r\n2\r\n√\r\n3\r\n2\r\n√−1\r\n2\r\n!\r\n=\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√−1\r\n2\r\n! 3 0\r\n0 1!\r\n.\r\nIn short, MP = P D, so D = P\r\nTMP. Then D is the diagonalized form of M\r\nand P the associated change-of-basis matrix from the standard basis to the basis of\r\neigenvectors.\r\n3 × 3 Example\r\n15.1 Review Problems\r\nWebwork: Reading Problems 1 , 2 ,\r\nDiagonalizing a symmetric matrix 3, 4\r\n1. (On Reality of Eigenvalues)\r\n(a) Suppose z = x + iy where x, y ∈ R, i =\r\n√\r\n−1, and z = x − iy.\r\nCompute zz and zz in terms of x and y. What kind of numbers\r\nare zz and zz? (The complex number z is called the complex\r\nconjugate of z).\r\n(b) Suppose that λ = x + iy is a complex number with x, y ∈ R, and\r\nthat λ = λ. Does this determine the value of x or y? What kind\r\nof number must λ be?\r\n273",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f8a96f86-9890-4ab5-b311-1fc6960679b7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c5f7dc4ea952f7b79789582ebd96abf37482c080a1b6a6c5458235465e09f8f8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 269
      },
      {
        "segments": [
          {
            "segment_id": "7335a481-deec-47c8-ac3e-faeda52ed592",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 274,
            "page_width": 612,
            "page_height": 792,
            "content": "274 Diagonalizing Symmetric Matrices\r\n(c) Let x =\r\n\r\n\r\nz\r\n1\r\n.\r\n.\r\n.\r\nz\r\nn\r\n\r\n\r\n∈ C\r\nn\r\n. Let x\r\n† =\r\n\r\nz\r\n1\r\n· · · z\r\nn\r\n\u0001\r\n∈ C\r\nn\r\n(a 1 × n\r\ncomplex matrix or a row vector). Compute x\r\n†x. Using the result\r\nof part 1a, what can you say about the number x\r\n†x? (E.g., is it\r\nreal, imaginary, positive, negative, etc.)\r\n(d) Suppose M = MTis an n×n symmetric matrix with real entries.\r\nLet λ be an eigenvalue of M with eigenvector x, so Mx = λx.\r\nCompute:\r\nx\r\n†Mx\r\nx\r\n†x\r\n(e) Suppose Λ is a 1 × 1 matrix. What is ΛT?\r\n(f) What is the size of the matrix x\r\n†Mx?\r\n(g) For any matrix (or vector) N, we can compute N by applying\r\ncomplex conjugation to each entry of N. Compute (x\r\n†\r\n)\r\nT . Then\r\ncompute (x\r\n†Mx)T . Note that for matrices AB + C = AB + C.\r\n(h) Show that λ = λ. Using the result of a previous part of this\r\nproblem, what does this say about λ?\r\nHint\r\n2. Let\r\nx1 =\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n ,\r\nwhere a\r\n2 + b2 + c2 = 1. Find vectors x2 and x3 such that {x1, x2, x3}\r\nis an orthonormal basis for R\r\n3\r\n. What can you say about the matrix P\r\nwhose columns are the vectors x1, x2 and x3 that you found?\r\n3. Let V 3 v 6= 0 be a vector space, dimV = n and L : V\r\nlinear\r\n−−−→ V .\r\n(a) Explain why the list of vectors (v, Lv, L2v, . . . , Lnv) is linearly\r\ndependent.\r\n274",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7335a481-deec-47c8-ac3e-faeda52ed592.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cb64d2231468724a454dfc139bc53794c6854bd6d15324406ae00407fcc2e88f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 292
      },
      {
        "segments": [
          {
            "segment_id": "4ec309e6-f102-45ca-a832-d64d5c8bf65f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 275,
            "page_width": 612,
            "page_height": 792,
            "content": "15.1 Review Problems 275\r\n(b) Explain why there exist scalars αi not all zero such that\r\nα0v + α1Lv + α2L\r\n2\r\nv + · · · + αnL\r\nn\r\nv = 0 .\r\n(c) Let m be the largest integer such that αm 6= 0 and\r\np(z) = α0 + α1z + α2z\r\n2 + · · · + αmzn\r\n.\r\nExplain why the polynomial p(z) can be written as\r\np(z) = αm(z − λ1)(z − λ2). . .(z − λm).\r\n[Note that some of the roots λi could be complex.]\r\n(d) Why does the following equation hold\r\n(L − λ1)(L − λ2). . .(L − λm)v = 0 ?\r\n(e) Explain why one of the numbers λi (1 ≤ i ≤ m) must be an\r\neigenvalue of L.\r\n4. (Dimensions of Eigenspaces)\r\n(a) Let\r\nA =\r\n\r\n\r\n4 0 0\r\n0 2 −2\r\n0 −2 2\r\n\r\n .\r\nFind all eigenvalues of A.\r\n(b) Find a basis for each eigenspace of A. What is the sum of the\r\ndimensions of the eigenspaces of A?\r\n(c) Based on your answer to the previous part, guess a formula for the\r\nsum of the dimensions of the eigenspaces of a real n×n symmetric\r\nmatrix. Explain why your formula must work for any real n × n\r\nsymmetric matrix.\r\n5. If M is not square then it can not be symmetric. However, MMT and\r\nMTM are symmetric, and therefore diagonalizable.\r\n(a) Is it the case that all of the eigenvalues of MMT must also be\r\neigenvalues of MTM?\r\n275",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4ec309e6-f102-45ca-a832-d64d5c8bf65f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=77928e60332812e2a25ed486dcca518ebb8dd0149bf94ba588c2bb632deda711",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "607c869d-6941-43a5-86d5-7197b4e3a91c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 276,
            "page_width": 612,
            "page_height": 792,
            "content": "276 Diagonalizing Symmetric Matrices\r\n(b) Given an eigenvector of MMT how can you obtain an eigenvector\r\nof MTM?\r\n(c) Let\r\nM =\r\n\r\n\r\n1 2\r\n3 3\r\n2 1\r\n\r\n .\r\nCompute an orthonormal basis of eigenvectors for both MMT\r\nand MTM. If any of the eigenvalues for these two matrices agree,\r\nchoose an order for them and us it to help order your orthonor\u0002mal bases. Finally, change the input and output bases for the\r\nmatrix M to these ordered orthonormal bases. Comment on what\r\nyou find. (Hint: The result is called the Singular Value Decompo\u0002sition Theorem.)\r\n276",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/607c869d-6941-43a5-86d5-7197b4e3a91c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=959ffad21087ae8bcb97caa2d1275d7ef014fed5376ad1d131539f32e8e6ac9b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 359
      },
      {
        "segments": [
          {
            "segment_id": "601d9a1b-561a-4705-83a1-04017eef7de0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 277,
            "page_width": 612,
            "page_height": 792,
            "content": "16\r\nKernel, Range, Nullity, Rank\r\nGiven a linear transformation\r\nL: V → W ,\r\nwe often want to know if it has an inverse, i.e., if there exists a linear trans\u0002formation\r\nM : W → V\r\nsuch that for any vector v ∈ V , we have\r\nMLv = v ,\r\nand for any vector w ∈ W, we have\r\nLMw = w .\r\nA linear transformation is a special kind of function from one vector space to\r\nanother. So before we discuss which linear transformations have inverses, let\r\nus first discuss inverses of arbitrary functions. When we later specialize to\r\nlinear transformations, we’ll also find some nice ways of creating subspaces.\r\nLet f : S → T be a function from a set S to a set T. Recall that S is\r\ncalled the domain of f, T is called the codomain or target of f. We now\r\nformally introduce a term that should be familar to you from many previous\r\ncourses.\r\n277",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/601d9a1b-561a-4705-83a1-04017eef7de0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1dfe6cf940a9af70084b5cc157e6dec2fe062b3138c65edd90f31c9f3fe9d12",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 164
      },
      {
        "segments": [
          {
            "segment_id": "ac71f21d-ec8b-4f03-9a24-2c6a46758424",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 278,
            "page_width": 612,
            "page_height": 792,
            "content": "278 Kernel, Range, Nullity, Rank\r\n16.1 Range\r\nDefinition The range of a function f : S → T is the set\r\nran(f) := {f(s)|s ∈ S} ⊂ T .\r\nIt is the subset of the codomain consisting of elements to which the function\r\nf maps, i.e., the things in T which you can get to by starting in S and\r\napplying f.\r\nThe range of a matrix is very easy to find; the range of a matrix is the\r\nspan of its columns. Thus, calculation of the range of a matrix is very easy\r\nuntil the last step: simplification. One aught to end by the calculation by\r\nwriting the vector space as the span of a linearly independent set.\r\nExample 140 of calculating the range of a matrix.\r\nran\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n :=\r\n\r\n\r\n\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n|\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n∈ R\r\n4\r\n\r\n\r\n\r\n=\r\n\r\n\r\n\r\nx\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + y\r\n\r\n\r\n2\r\n2\r\n0\r\n\r\n + z\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n + w\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n |x, y, z, w ∈ R\r\n\r\n\r\n\r\n.\r\nThat is\r\nran\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n2\r\n2\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n\r\n\r\n\r\n\r\nbut since\r\nRREF\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n =\r\n\r\n\r\n1 2 0 1\r\n0 0 1 1\r\n0 0 0 0\r\n\r\n\r\nthe third and fourth columns, the non-pivot columns, can be expressed as linear com\u0002binations of columns to their left. They can then be removed from the set in the span\r\nto obtain\r\nran\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n.\r\n278",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ac71f21d-ec8b-4f03-9a24-2c6a46758424.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0ce23848fc4429d9d560f1c8b413ac9ab4f71f54713e4850f072a8a2b9b0ea0c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 405
      },
      {
        "segments": [
          {
            "segment_id": "da251d6e-d806-4230-8848-8ba7ddf767c3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 279,
            "page_width": 612,
            "page_height": 792,
            "content": "16.2 Image 279\r\nIt might occur to you that the range of the 3 × 4 matrix from the last\r\nexample can be expressed as the range of a 3 × 2 matrix;\r\nran\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n = ran\r\n\r\n\r\n1 0\r\n1 1\r\n0 1\r\n\r\n .\r\nIndeed, because the span of a set of vectors does not change when we replace\r\nthe vectors with another set through an invertible process, we can calculate\r\nranges through strings of equalities of ranges of matrices that differer by\r\nElementary Column Operations, ECOs, ending with the range of a matrix\r\nin Column Reduced Echelon Form, CREF, with its zero columns deleted.\r\nExample 141 Calculating a range with ECOs\r\nran\r\n\r\n\r\n0 1 1\r\n1 3 1\r\n1 2 0\r\n\r\n c1↔c3 = ran\r\n\r\n\r\n1 1 0\r\n1 2 1\r\n0 1 1\r\n\r\n\r\nc\r\n0\r\n2=c2−c1\r\n= ran\r\n\r\n\r\n1 0 0\r\n1 2 1\r\n0 2 1\r\n\r\n\r\nc\r\n0\r\n2= 1\r\n2\r\nc2\r\n= ran\r\n\r\n\r\n1 0 0\r\n1 1 1\r\n0 1 1\r\n\r\n\r\nc\r\n0\r\n3=c3−c2\r\n= ran\r\n\r\n\r\n1 0 0\r\n1 1 0\r\n0 1 0\r\n\r\n = ran\r\n\r\n\r\n1 0\r\n1 1\r\n0 1\r\n\r\n .\r\nWe think this is the most sophisticated and efficient way to calculate the\r\nrange of a matrix, and encourage students to use this line of thinking.\r\n16.2 Image\r\nDefinition For any subset U of the domain S of a function f : S → T the\r\nimage of U is\r\nImg U := {f(x)|x ∈ U} .\r\nExample 142 The image of the cube\r\nU =\r\n\r\n\r\n\r\na\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n + b\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n + c\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n |a, b, c ∈ [0, 1]\r\n\r\n\r\n\r\nunder the matrix\r\nM =\r\n\r\n\r\n1 0 0\r\n1 1 1\r\n0 0 1\r\n\r\n\r\n279",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/da251d6e-d806-4230-8848-8ba7ddf767c3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9e4203f8c65dd505dbde91eb9154a052c5ce9dcf858709e7686709d2e68cf142",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 354
      },
      {
        "segments": [
          {
            "segment_id": "a9bfeaa6-cffb-4053-89a4-babbc30a8315",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 280,
            "page_width": 612,
            "page_height": 792,
            "content": "280 Kernel, Range, Nullity, Rank\r\nis the parallelepiped\r\nImg U =\r\n\r\n\r\n\r\na\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + b\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n + c\r\n\r\n\r\n0\r\n1\r\n1\r\n\r\n |a, b, c ∈ [0, 1]\r\n\r\n\r\n\r\n.\r\nNote that for most subsets U of the domain S of a function f the image of\r\nU is not a vector space. The range of a function is the particular case of the\r\nimage where the subset of the domain is the entire domain; ranf = ImgS.\r\nFor this reason, the range of f is also sometimes called the image of f and is\r\nsometimes denoted im(f) or f(S). We have seen that the range of a matrix\r\nis always a span of vectors, and hence a vector space.\r\nNote that we prefer the phrase “range of f” to the phrase “image of f”\r\nbecause we wish to avoid confusion between homophones; the word “image”\r\nis also used to describe a single element of the codomain assigned to a single\r\nelement of the domain. For example, one might say of the function A : R → R\r\nwith rule of correspondence A(x =) = 2x − 1 for all x in R that the image of\r\n2 is 3 with this second meaning of the word “image” in mind. By contrast,\r\none would never say that the range of 2 is 3 since the former is not a function\r\nand the latter is not a set.\r\nFor thinking about inverses of function we want to think in the oposite\r\ndirection in a sense.\r\nDefinition The pre-image of any subset U ⊂ T is\r\nf\r\n−1\r\n(U) := {s ∈ S|f(s) ∈ U} ⊂ S.\r\nThe pre-image of a set U is the set of all elements of S which map to U.\r\nExample 143 The pre-image of the set U =\r\n\r\n\r\n\r\na\r\n\r\n\r\n2\r\n1\r\n1\r\n\r\n |a ∈ [0, 1]\r\n\r\n\r\n\r\n(a line segment)\r\nunder the matrix\r\nM =\r\n\r\n\r\n1 0 1\r\n0 1 1\r\n0 1 1\r\n\r\n : R\r\n3 → R3\r\nis the set\r\nM−1U = {x|Mx = v for some v ∈ U}\r\n=\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n |\r\n\r\n\r\n1 0 1\r\n0 1 1\r\n0 1 1\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n = a\r\n\r\n\r\n2\r\n1\r\n1\r\n\r\n for some a ∈ [0, 1]\r\n\r\n\r\n\r\n.\r\n280",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a9bfeaa6-cffb-4053-89a4-babbc30a8315.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9e21196deba0d8a00ddee073fb7725303724d84c771f9fb1175f95a800822e32",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 431
      },
      {
        "segments": [
          {
            "segment_id": "54bdda10-f356-42f6-b9e5-65eb544c5f29",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 281,
            "page_width": 612,
            "page_height": 792,
            "content": "16.2 Image 281\r\nFigure 16.1: For the function f : S → T, S is the domain, T is the tar\u0002get/codomain, f(S) is the range and f\r\n−1\r\n(U) is the pre-image of U ⊂ T.\r\nSince\r\nRREF\r\n\r\n\r\n1 0 1 2a\r\n0 1 1 a\r\n0 1 1 a\r\n\r\n =\r\n\r\n\r\n1 0 1 2a\r\n0 1 1 a\r\n0 0 0 0\r\n\r\n\r\nwe have\r\nM−1U =\r\n\r\n\r\n\r\na\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n + b\r\n\r\n\r\n−1\r\n−1\r\n1\r\n\r\n |a ∈ [0, 1], b ∈ R\r\n\r\n\r\n\r\n,\r\na strip from a plane in R\r\n3\r\n.\r\n16.2.1 One-to-one and Onto\r\nThe function f is one-to-one (sometimes denoted 1:1) if different elements\r\nin S always map to different elements in T. That is, f is one-to-one if for\r\nany elements x 6= y ∈ S, we have that f(x) 6= f(y), as pictured below.\r\n281",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/54bdda10-f356-42f6-b9e5-65eb544c5f29.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=989a79fd49d250712d797f6514d757f99a0c71781fe1db4c1b0cbf990de98b80",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "1e6597df-6232-4bde-8850-4c3d062175e1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 282,
            "page_width": 612,
            "page_height": 792,
            "content": "282 Kernel, Range, Nullity, Rank\r\nOne-to-one functions are also called injective functions (and sometimes\r\ncalled monomorphisms.) Notice that injectivity is a condition on the pre\u0002images of f.\r\nThe function f is onto if every element of T is mapped to by some element\r\nof S. That is, f is onto if for any t ∈ T, there exists some s ∈ S such that\r\nf(s) = t. Onto functions are also called surjective functions (and sometimes\r\nepimorphisms.) Notice that surjectivity is a condition on the range of f.\r\nIf f is both injective and surjective, it is bijective (or an isomorphism.)\r\n282",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1e6597df-6232-4bde-8850-4c3d062175e1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bbdd51adc02440df98846442b75da39582dbb5530aeccf32c71915da9d5cd601",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 265
      },
      {
        "segments": [
          {
            "segment_id": "96b08017-f685-43c3-842d-829582ae989b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 283,
            "page_width": 612,
            "page_height": 792,
            "content": "16.2 Image 283\r\nTheorem 16.2.1. A function f : S → T has an inverse function g : T → S\r\nif and only if f is bijective.\r\nProof. This is an “if and only if” statement so the proof has two parts.\r\n1. (Existence of an inverse ⇒ bijective.)\r\nSuppose that f has an inverse function g. We need to show f is bijec\u0002tive, which we break down into injective and surjective.\r\n• The function f is injective: Suppose that we have s, s0 ∈ S such\r\nthat f(x) = f(y). We must have that g(f(s)) = s for any s ∈ S, so\r\nin particular g(f(s)) = s and g(f(s\r\n0\r\n)) = s\r\n0\r\n. But since f(s) = f(s\r\n0\r\n),\r\nwe have g(f(s)) = g(f(s\r\n0\r\n)) so s = s\r\n0\r\n. Therefore, f is injective.\r\n• The function f is surjective: Let t be any element of T. We must\r\nhave that f(g(t)) = t. Thus, g(t) is an element of S which maps\r\nto t. So f is surjective.\r\n2. (Bijectivity ⇒ existence of an inverse.) Suppose that f is bijective.\r\nHence f is surjective, so every element t ∈ T has at least one pre\u0002image. Being bijective, f is also injective, so every t has no more than\r\none pre-image. Therefore, to construct an inverse function g, we simply\r\ndefine g(t) to be the unique pre-image f\r\n−1\r\n(t) of t.\r\nNow let us specialize to functions f that are linear maps between two\r\nvector spaces. Everything we said above for arbitrary functions is exactly\r\nthe same for linear functions. However, the structure of vector spaces lets\r\nus say much more about one-to-one and onto functions whose domains are\r\nvector spaces than we can say about functions on general sets. For example,\r\nwe know that a linear function always sends 0V to 0W , i.e.,\r\nf(0V ) = 0W\r\nIn review exercise 3, you will show that a linear transformation is one-to-one\r\nif and only if 0V is the only vector that is sent to 0W . Linear functions are\r\nunlike arbitrary functions between sets in that, by looking at just one (very\r\nspecial) vector, we can figure out whether f is one-to-one!\r\n283",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/96b08017-f685-43c3-842d-829582ae989b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6fdb6d6111d4e0dec6915d9a6250a95c141c2b4f77560bc1d7bd519678895738",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 373
      },
      {
        "segments": [
          {
            "segment_id": "969d5167-b7ee-4caa-b3aa-3e1f91fa33ed",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 284,
            "page_width": 612,
            "page_height": 792,
            "content": "284 Kernel, Range, Nullity, Rank\r\n16.2.2 Kernel\r\nLet L: V → W be a linear transformation. Suppose L is not injective. Then\r\nwe can find v1 6= v2 such that Lv1 = Lv2. So v1 − v2 6= 0, but\r\nL(v1 − v2) = 0.\r\nDefinition If L: V → W is a linear function then the set\r\nker L = {v ∈ V | Lv = 0W } ⊂ V\r\nis called the kernel of L.\r\nProof. The proof of this theorem is review exercise 3.\r\nNotice that if L has matrix M in some basis, then finding the kernel of L\r\nis equivalent to solving the homogeneous system\r\nMX = 0.\r\nExample 144 Let L(x, y) = (x + y, x + 2y, y). Is L one-to-one?\r\nTo find out, we can solve the linear system:\r\n\r\n\r\n1 1 0\r\n1 2 0\r\n0 1 0\r\n\r\n ∼\r\n\r\n\r\n1 0 0\r\n0 1 0\r\n0 0 0\r\n\r\n .\r\nThen all solutions of MX = 0 are of the form x = y = 0. In other words, kerL = {0},\r\nand so L is injective.\r\nReading homework: problem 1\r\nNotice that in the above example we found\r\nker\r\n\r\n\r\n1 1\r\n1 2\r\n0 1\r\n\r\n = ker\r\n\r\n\r\n1 0\r\n0 1\r\n0 0\r\n\r\n .\r\nIn general, an efficient way to get the kernel of a matrix is to write a string\r\nof equalities between kernels of matrices which differ by row operations and,\r\nonce RREF is reached, note that the linear relationships between the columns\r\nfor a basis for the nullspace.\r\n284",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/969d5167-b7ee-4caa-b3aa-3e1f91fa33ed.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5fd926b41fc31024f38ba48917eaa0b8e24f8ecd46090ed32ecb45865262a808",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 277
      },
      {
        "segments": [
          {
            "segment_id": "aeac3242-bb71-408d-b945-528120b19aff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 285,
            "page_width": 612,
            "page_height": 792,
            "content": "16.2 Image 285\r\nExample 145 of calculating the kernel of a matrix.\r\nker\r\n\r\n\r\n1 2 0 1\r\n1 2 1 2\r\n0 0 1 1\r\n\r\n = ker\r\n\r\n\r\n1 2 0 1\r\n0 0 1 1\r\n0 0 1 1\r\n\r\n = ker\r\n\r\n\r\n1 2 0 1\r\n0 0 1 1\r\n0 0 0 0\r\n\r\n\r\n= span\r\n\r\n\r\n\r\n\r\n\r\n−2\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n−1\r\n0\r\n−1\r\n1\r\n\r\n\r\n\r\n\r\n\r\n.\r\nThe two column vectors in this last line describe linear relations between the columns\r\nc1, c2, c3, c4. In particular −2c1 + 1c2 = 0 and −c1 − c3 + c4 = 0.\r\nIn general, a description of the kernel of a matrix should be of the form\r\nspan{v1, v2, . . . , vn} with one vector vifor each non-pivot column. To agree\r\nwith the standard procedure, think about how to describe each non-pivot\r\ncolumn in terms of columns to its left; this will yield an expression of the\r\nform wherein each vector has a 1 as its last non-zero entry. (Think of Column\r\nReduced Echelon Form, CREF.)\r\nThinking again of augmented matrices, if a matrix has more than one\r\nelement in its kernel then it is not invertible since the existence of multiple\r\nsolutions to Mx = 0 implies that RREF M 6= I. However just because\r\nthe kernel of a linear function is trivial does not mean that the function is\r\ninvertible.\r\nExample 146 ker\r\n\r\n\r\n1 0\r\n1 1\r\n0 1\r\n\r\n =\r\n\u001a\u00120\r\n0\r\n\u0013\u001b since the matrix has no non-pivot columns.\r\nHowever,\r\n\r\n\r\n1 0\r\n1 1\r\n0 1\r\n\r\n : R\r\n2 → R3\r\nis not invertible because there are many things in its\r\ncodomain that are not in its range, such as\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n.\r\nA trivial kernel only gives us half of what is needed for invertibility.\r\nTheorem 16.2.2. A linear transformation L is injective if and only if\r\nker L = {0V } .\r\n285",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/aeac3242-bb71-408d-b945-528120b19aff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c2d57bed5a7fa543bfa928fda3d8c79df779b25870d1724120c3c9d9c6a26280",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 354
      },
      {
        "segments": [
          {
            "segment_id": "0be4e394-c73e-4242-b557-f440d684bfd3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 286,
            "page_width": 612,
            "page_height": 792,
            "content": "286 Kernel, Range, Nullity, Rank\r\nTheorem 16.2.3. If L: V\r\nlinear\r\n−−−→ W then ker L is a subspace of V .\r\nProof. Notice that if L(v) = 0 and L(u) = 0, then for any constants c, d,\r\nL(cu+dv) = 0. Then by the subspace theorem, the kernel of L is a subspace\r\nof V .\r\nExample 147 Let L: R\r\n3 → R be the linear transformation defined by L(x, y, z) =\r\n(x + y + z). Then kerL consists of all vectors (x, y, z) ∈ R\r\n3\r\nsuch that x + y + z = 0.\r\nTherefore, the set\r\nV = {(x, y, z) ∈ R\r\n3\r\n| x + y + z = 0}\r\nis a subspace of R\r\n3\r\n.\r\nWhen L : V → V , the above theorem has an interpretation in terms of\r\nthe eigenspaces of L. Suppose L has a zero eigenvalue. Then the associated\r\neigenspace consists of all vectors v such that Lv = 0v = 0; the 0-eigenspace\r\nof L is exactly the kernel of L.\r\nIn the example where L(x, y) = (x + y, x + 2y, y), the map L is clearly\r\nnot surjective, since L maps R\r\n2\r\nto a plane through the origin in R\r\n3\r\n. But any\r\nplane through the origin is a subspace. In general notice that if w = L(v)\r\nand w\r\n0 = L(v0\r\n), then for any constants c, d, linearity of L ensures that\r\ncw + dw0 = L(cv + dv0).\r\nNow the subspace theorem strikes again, and we have the following theorem:\r\nTheorem 16.2.4. If L: V → W is linear then the range L(V ) is a subspace\r\nof W.\r\nExample 148 Let L(x, y) = (x + y, x + 2y, y). The range of L is a plane through\r\nthe origin and thus a subspace of R\r\n3\r\n. Indeed the matrix of L in the standard basis is\r\n\r\n\r\n1 1\r\n1 2\r\n0 1\r\n\r\n .\r\nThe columns of this matrix encode the possible outputs of the function L because\r\nL(x, y) =\r\n\r\n\r\n1 1\r\n1 2\r\n0 1\r\n\r\n\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n= x\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n + y\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n .\r\n286",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0be4e394-c73e-4242-b557-f440d684bfd3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2386b5280c746ca086393d3f01b932670aeebf958f705dca08c981edbe21004a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 390
      },
      {
        "segments": [
          {
            "segment_id": "da22042d-44d9-47b3-b295-d6eeab5eaccc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 287,
            "page_width": 612,
            "page_height": 792,
            "content": "16.2 Image 287\r\nThus\r\nL(R\r\n2\r\n) = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n\r\n\r\n\r\n\r\nHence, when bases and a linear transformation is are given, people often refer to its\r\nrange as the column space of the corresponding matrix.\r\nTo find a basis of the range of L, we can start with a basis S = {v1, . . . , vn}\r\nfor V . Then the most general input for L is of the form α\r\n1\r\nv1 + · · · + α\r\nn\r\nvn.\r\nIn turn, its most general output looks like\r\nL\r\n\r\nα\r\n1\r\nv1 + · · · + α\r\nn\r\nvn\r\n\u0001\r\n= α\r\n1Lv1 + · · · + αnLvn ∈ span{Lv1, . . . Lvn} .\r\nThus\r\nL(V ) = span L(S) = span{Lv1, . . . , Lvn} .\r\nHowever, the set {Lv1, . . . , Lvn} may not be linearly independent; we must\r\nsolve\r\nc\r\n1Lv1 + · · · + cnLvn = 0 ,\r\nto determine whether it is. By finding relations amongst the elements of\r\nL(S) = {Lv1, . . . , Lvn}, we can discard vectors until a basis is arrived at.\r\nThe size of this basis is the dimension of the range of L, which is known as\r\nthe rank of L.\r\nDefinition The rank of a linear transformation L is the dimension of its\r\nrange. The nullity of a linear transformation is the dimension of the kernel.\r\nThe notation for these numbers is\r\nnullL := dim ker L,\r\nrank L := dim L(V ) = dim ran L.\r\n287",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/da22042d-44d9-47b3-b295-d6eeab5eaccc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=cdfd216bb3cab1523945ed665d32197a289f8c160e0e76b01afe8624a783cb28",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 280
      },
      {
        "segments": [
          {
            "segment_id": "64ea5422-96d6-4755-a089-016501a077d1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 288,
            "page_width": 612,
            "page_height": 792,
            "content": "288 Kernel, Range, Nullity, Rank\r\nTheorem 16.2.5 (Dimension Formula). Let L: V → W be a linear trans\u0002formation, with V a finite-dimensional vector space1\r\n. Then:\r\ndim V = dim ker V + dim L(V )\r\n= null L + rank L.\r\nProof. Pick a basis for V :\r\n{v1, . . . , vp, u1, . . . , uq},\r\nwhere v1, . . . , vp is also a basis for ker L. This can always be done, for exam\u0002ple, by finding a basis for the kernel of L and then extending to a basis for V .\r\nThen p = null L and p + q = dim V . Then we need to show that q = rank L.\r\nTo accomplish this, we show that {L(u1), . . . , L(uq)} is a basis for L(V ).\r\nTo see that {L(u1), . . . , L(uq)} spans L(V ), consider any vector w in L(V ).\r\nThen we can find constants c\r\ni\r\n, djsuch that:\r\nw = L(c\r\n1\r\nv1 + · · · + c\r\np\r\nvp + d\r\n1u1 + · · · + dquq)\r\n= c\r\n1L(v1) + · · · + cpL(vp) + d1L(u1) + · · · + dqL(uq)\r\n= d\r\n1L(u1) + · · · + dqL(uq) since L(vi) = 0,\r\n⇒ L(V ) = span{L(u1), . . . , L(uq)}.\r\nNow we show that {L(u1), . . . , L(uq)} is linearly independent. We argue\r\nby contradiction. Suppose there exist constants d\r\nj\r\n(not all zero) such that\r\n0 = d\r\n1L(u1) + · · · + dqL(uq)\r\n= L(d\r\n1u1 + · · · + dquq).\r\nBut since the u\r\nj are linearly independent, then d1u1 + · · · + dquq 6= 0, and\r\nso d\r\n1u1 + · · · + dquq is in the kernel of L. But then d1u1 + · · · + dquq must\r\nbe in the span of {v1, . . . , vp}, since this was a basis for the kernel. This\r\ncontradicts the assumption that {v1, . . . , vp, u1, . . . , uq} was a basis for V , so\r\nwe are done.\r\nReading homework: problem 2\r\n1The formula still makes sense for infinite dimensional vector spaces, such as the space\r\nof all polynomials, but the notion of a basis for an infinite dimensional space is more\r\nsticky than in the finite-dimensional case. Furthermore, the dimension formula for infinite\r\ndimensional vector spaces isn’t useful for computing the rank of a linear transformation,\r\nsince an equation like ∞ = ∞ + x cannot be solved for x. As such, the proof presented\r\nassumes a finite basis for V .\r\n288",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/64ea5422-96d6-4755-a089-016501a077d1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b4ceb153796a9c3dc4262deb295eb6333d732eafdb084f55dbfe9c8daae6e610",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 455
      },
      {
        "segments": [
          {
            "segment_id": "021d0854-ee6f-4d74-b4f6-69c1fd29ec49",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 289,
            "page_width": 612,
            "page_height": 792,
            "content": "16.3 Summary 289\r\n16.3 Summary\r\nWe have seen that a linear transformation has an inverse if and only if it is\r\nbijective (i.e., one-to-one and onto). We also know that linear transforma\u0002tions can be represented by matrices, and we have seen many ways to tell\r\nwhether a matrix is invertible. Here is a list of them:\r\nTheorem 16.3.1 (Invertibility). Let M be an n × n matrix, and let\r\nL: R\r\nn → Rn\r\nbe the linear transformation defined by L(v) = Mv. Then the following\r\nstatements are equivalent:\r\n1. If V is any vector in R\r\nn\r\n, then the system MX = V has exactly one\r\nsolution.\r\n2. The matrix M is row-equivalent to the identity matrix.\r\n3. If v is any vector in R\r\nn\r\n, then L(x) = v has exactly one solution.\r\n4. The matrix M is invertible.\r\n5. The homogeneous system MX = 0 has no non-zero solutions.\r\n6. The determinant of M is not equal to 0.\r\n7. The transpose matrix MTis invertible.\r\n8. The matrix M does not have 0 as an eigenvalue.\r\n9. The linear transformation L does not have 0 as an eigenvalue.\r\n10. The characteristic polynomial det(λI − M) does not have 0 as a root.\r\n11. The columns (or rows) of M span R\r\nn\r\n.\r\n12. The columns (or rows) of M are linearly independent.\r\n13. The columns (or rows) of M are a basis for R\r\nn\r\n.\r\n14. The linear transformation L is injective.\r\n15. The linear transformation L is surjective.\r\n289",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/021d0854-ee6f-4d74-b4f6-69c1fd29ec49.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1c469d536903b997e0b42a4c81dddb515d6d8e5d2952e2d202028a07339899d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "83e15555-579e-4ef4-be60-80724dbbf4b0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 290,
            "page_width": 612,
            "page_height": 792,
            "content": "290 Kernel, Range, Nullity, Rank\r\n16. The linear transformation L is bijective.\r\nNote: it is important that M be an n × n matrix! If M is not square,\r\nthen it can’t be invertible, and many of the statements above are no longer\r\nequivalent to each other.\r\nProof. Many of these equivalences were proved earlier in other chapters.\r\nSome were left as review questions or sample final questions. The rest are\r\nleft as exercises for the reader.\r\nInvertibility Conditions\r\n16.4 Review Problems\r\nWebwork:\r\nReading Problems 1 , 2 ,\r\nElements of kernel 3\r\nBasis for column space 4\r\nBasis for kernel 5\r\nBasis for kernel and range 6\r\nOrthonomal range basis 7\r\nOrthonomal kernel basis 8\r\nOrthonomal kernel and range bases 9\r\nOrthonomal kernel, range and row space bases 10\r\nRank 11\r\n1. Consider an arbitrary matrix M : R\r\nm → Rn\r\n.\r\n(a) Argue that Mx = 0 if only if x is perpendicular to all columns\r\nof MT.\r\n(b) Argue that Mx = 0 if only if x is perpendicular to all of the linear\r\ncombinations of the columns of MT.\r\n(c) Argue that ker M is perpendicular to ran MT.\r\n(d) Argue further R\r\nm = ker M ⊕ ran MT\r\n.\r\n(e) Argue analogously that R\r\nn = ker MT ⊕ ran M.\r\n290",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/83e15555-579e-4ef4-be60-80724dbbf4b0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47e4fef2a9171b521621f06c61a3f7495752a0cf79a5e139dac276d3c0d0dc36",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 476
      },
      {
        "segments": [
          {
            "segment_id": "3eb5eff7-79a6-4411-b2a7-ba9eb7cb65d7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 291,
            "page_width": 612,
            "page_height": 792,
            "content": "16.4 Review Problems 291\r\nThe equations in the last two parts describe how a linear transforma\u0002tion M : R\r\nm → Rn determines orthogonal decompositions of both it’s\r\ndomain and target. This result sometimes goes by the humble name\r\nThe Fundamental Theorem of Linear Algebra.\r\n2. Projection Matrices.\r\n3. Let L: V → W be a linear transformation. Show that ker L = {0V } if\r\nand only if L is one-to-one:\r\n(a) (Trivial kernel ⇒ injective.) Suppose that ker L = {0V }. Show\r\nthat L is one-to-one. Think about methods of proof–does a proof\r\nby contradiction, a proof by induction, or a direct proof seem most\r\nappropriate?\r\n(b) (Injective ⇒ trivial kernel.) Now suppose that L is one-to-one.\r\nShow that ker L = {0V }. That is, show that 0V is in ker L, and\r\nthen show that there are no other vectors in ker L.\r\nHint\r\n4. Let {v1, . . . , vn} be a basis for V . Carefully explain why\r\nL(V ) = span{Lv1, . . . , Lvn}.\r\n5. Suppose L: R\r\n4 → R3 whose matrix M in the standard basis is row\r\nequivalent to the following matrix:\r\n\r\n\r\n1 0 0 −1\r\n0 1 0 1\r\n0 0 1 1\r\n\r\n = RREF(M) ∼ M.\r\n(a) Explain why the first three columns of the original matrix M form\r\na basis for L(R\r\n4\r\n).\r\n(b) Find and describe an algorithm (i.e., a general procedure) for\r\ncomputing a basis for L(R\r\nn\r\n) when L: R\r\nn → Rm.\r\n291",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3eb5eff7-79a6-4411-b2a7-ba9eb7cb65d7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1d770844ac5abf628a5363c3582826d96ca13dec6f27655a80acc9adeaed175",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 260
      },
      {
        "segments": [
          {
            "segment_id": "0446fb9d-ef24-4843-ac84-58d71c0ba610",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 292,
            "page_width": 612,
            "page_height": 792,
            "content": "292 Kernel, Range, Nullity, Rank\r\n(c) Use your algorithm to find a basis for L(R\r\n4\r\n) when L: R\r\n4 → R3\r\nis\r\nthe linear transformation whose matrix M in the standard basis\r\nis\r\n\r\n\r\n2 1 1 4\r\n0 1 0 5\r\n4 1 1 6\r\n\r\n .\r\n6. Claim:\r\nIf {v1, . . . , vn} is a basis for ker L, where L: V → W, then it\r\nis always possible to extend this set to a basis for V .\r\nChoose some simple yet non-trivial linear transformations with non\u0002trivial kernels and verify the above claim for those transformations.\r\n7. Let Pn(x) be the space of polynomials in x of degree less than or equal\r\nto n, and consider the derivative operator\r\nd\r\ndx : Pn(x) → Pn(x).\r\nFind the dimension of the kernel and image of this operator. What\r\nhappens if the target space is changed to Pn−1(x) or Pn+1(x)?\r\nNow consider P2(x, y), the space of polynomials of degree two or less\r\nin x and y. (Recall how degree is counted; xy is degree two, y is degree\r\none and x\r\n2\r\ny is degree three, for example.) Let\r\nL :=\r\n∂\r\n∂x +\r\n∂\r\n∂y : P2(x, y) → P2(x, y).\r\n(For example, L(xy) = ∂\r\n∂x (xy) + ∂∂y (xy) = y + x.) Find a basis for the\r\nkernel of L. Verify the dimension formula in this case.\r\n8. Lets demonstrate some ways the dimension formula can break down if\r\na vector space is infinite dimensional.\r\n(a) Let R[x] be the vector space of all polynomials in the variable x\r\nwith real coefficients. Let D =\r\nd\r\ndx be the usual derivative operator.\r\nShow that the range of D is R[x]. What is ker D?\r\nHint: Use the basis {x\r\nn\r\n| n ∈ N}.\r\n292",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0446fb9d-ef24-4843-ac84-58d71c0ba610.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3bcde8ea8aacd1c42b488b52bc3d9f8896d04229883166c8d8d9f7dd81dcef3d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "8859ea46-504d-4525-b356-a3d9085c7228",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 293,
            "page_width": 612,
            "page_height": 792,
            "content": "16.4 Review Problems 293\r\n(b) Let L: R[x] → R[x] be the linear map\r\nL(p(x)) = xp(x).\r\nWhat is the kernel and range of M?\r\n(c) Let V be an infinite dimensional vector space and L: V → V be a\r\nlinear operator. Suppose that dim ker L < ∞, show that dim L(V )\r\nis infinite. Also show that when dim L(V ) < ∞ that dim ker L is\r\ninfinite.\r\n9. This question will answer the question, “If I choose a bit vector at\r\nrandom, what is the probability that it lies in the span of some other\r\nvectors?”\r\ni. Given a collection S of k bit vectors in B3, consider the bit ma\u0002trix M whose columns are the vectors in S. Show that S is linearly\r\nindependent if and only if the kernel of M is trivial, namely the\r\nset kerM = {v ∈ B3| Mv = 0} contains only the zero vector.\r\nii. Give some method for choosing a random bit vector v in B3. Sup\u0002pose S is a collection of 2 linearly independent bit vectors in B3\r\n.\r\nHow can we tell whether S ∪ {v} is linearly independent? Do you\r\nthink it is likely or unlikely that S ∪ {v} is linearly independent?\r\nExplain your reasoning.\r\niii. If P is the characteristic polynomial of a 3 × 3 bit matrix, what\r\nmust the degree of P be? Given that each coefficient must be\r\neither 0 or 1, how many possibilities are there for P? How many\r\nof these possible characteristic polynomials have 0 as a root? If M\r\nis a 3×3 bit matrix chosen at random, what is the probability that\r\nit has 0 as an eigenvalue? (Assume that you are choosing a random\r\nmatrix M in such a way as to make each characteristic polynomial\r\nequally likely.) What is the probability that the columns of M\r\nform a basis for B3? (Hint: what is the relationship between the\r\nkernel of M and its eigenvalues?)\r\nNote: We could ask the same question for real vectors: If I choose a real\r\nvector at random, what is the probability that it lies in the span\r\nof some other vectors? In fact, once we write down a reasonable\r\nway of choosing a random real vector, if I choose a real vector in\r\n293",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8859ea46-504d-4525-b356-a3d9085c7228.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e563c5c8e8e56dba22400d0701574fb3cd77cb5cc3330cb4a07e2d31268aa38f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "f91f72f6-9077-4eb0-8a9f-e7a7a87d67ae",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 294,
            "page_width": 612,
            "page_height": 792,
            "content": "294 Kernel, Range, Nullity, Rank\r\nR\r\nn at random, the probability that it lies in the span of n − 1\r\nother real vectors is zero!\r\n294",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f91f72f6-9077-4eb0-8a9f-e7a7a87d67ae.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=be3037cc6940a8a3907277843f831a7ba9ce3807c7a2b374d27a982a6a31e7c9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 413
      },
      {
        "segments": [
          {
            "segment_id": "25098dd8-d4b3-460a-a433-c54bb06dacad",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 295,
            "page_width": 612,
            "page_height": 792,
            "content": "17\r\nLeast squares and Singular Values\r\nConsider the linear algebraic equation L(x) = v, where L: U\r\nlinear\r\n−−−→ W and\r\nv ∈ W are known while x is unknown. As we have seen, this system may\r\nhave one solution, no solutions, or infinitely many solutions. But if v is not\r\nin the range of L there will never be any solutions for L(x) = v.\r\nHowever, for many applications we do not need an exact solution of the\r\nsystem; instead, we may only need the best approximation possible.\r\n“My work always tried to unite the Truth with the Beautiful,\r\nbut when I had to choose one or the other, I usually chose the\r\nBeautiful.”\r\n– Hermann Weyl.\r\n295",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/25098dd8-d4b3-460a-a433-c54bb06dacad.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8447d1378334efd58d63a39f6373872aabd2f3c32619169348681f59ab509c0e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "d4e94a9f-2571-4170-9437-6ac61de042b7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 296,
            "page_width": 612,
            "page_height": 792,
            "content": "296 Least squares and Singular Values\r\nIf the vector space W has a notion of lengths of vectors, we can try to\r\nfind x that minimizes ||L(x) − v||.\r\nThis method has many applications, such as when trying to fit a (perhaps\r\nlinear) function to a “noisy” set of observations. For example, suppose we\r\nmeasured the position of a bicycle on a racetrack once every five seconds.\r\nOur observations won’t be exact, but so long as the observations are right on\r\naverage, we can figure out a best-possible linear function of position of the\r\nbicycle in terms of time.\r\nSuppose M is the matrix for the linear function L : U → W in some\r\nbases for U and W. The vectors v and x are represented by column vectors\r\nV and X in these bases. Then we need to approximate\r\nMX − V ≈ 0 .\r\nNote that if dim U = n and dim W = m then M can be represented by\r\nan m × n matrix and x and v as vectors in R\r\nn and Rm, respectively. Thus,\r\nwe can write W = L(U) ⊕ L(U)\r\n⊥. Then we can uniquely write v = vk + v⊥,\r\nwith v\r\nk ∈ L(U) and v⊥ ∈ L(U)⊥.\r\nThus we should solve L(u) = v\r\nk\r\n. In components, v\r\n⊥ is just V −MX, and\r\nis the part we will eventually wish to minimize.\r\nIn terms of M, recall that L(V ) is spanned by the columns of M. (In\r\nthe standard basis, the columns of M are Me1, . . ., Men.) Then v\r\n⊥ must be\r\nperpendicular to the columns of M. i.e., MT(V − MX) = 0, or\r\nMTMX = MT V.\r\nSolutions of MTMX = MT V for X are called least squares solutions to\r\nMX = V . Notice that any solution X to MX = V is a least squares solution.\r\n296",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d4e94a9f-2571-4170-9437-6ac61de042b7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6521dda25061c5f2e2779c75d074452d567b7138b3012b5d17a0809a3347467e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 441
      },
      {
        "segments": [
          {
            "segment_id": "fb8cef85-ad31-41e9-8597-d1a17523e762",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 297,
            "page_width": 612,
            "page_height": 792,
            "content": "297\r\nHowever, the converse is often false. In fact, the equation MX = V may have\r\nno solutions at all, but still have least squares solutions to MTMX = MT V .\r\nObserve that since M is an m × n matrix, then MTis an n × m matrix.\r\nThen MTM is an n × n matrix, and is symmetric, since (MTM)\r\nT = MTM.\r\nThen, for any vector X, we can evaluate XTMTMX to obtain a num\u0002ber. This is a very nice number, though! It is just the length |MX|\r\n2 =\r\n(MX)\r\nT\r\n(MX) = XTMTMX.\r\nReading homework: problem 1\r\nNow suppose that ker L = {0}, so that the only solution to MX = 0 is\r\nX = 0. (This need not mean that M is invertible because M is an n × m\r\nmatrix, so not necessarily square.) However the square matrix MTM is\r\ninvertible. To see this, suppose there was a vector X such that MTMX = 0.\r\nThen it would follow that XTMTMX = |MX|\r\n2 = 0. In other words the\r\nvector MX would have zero length, so could only be the zero vector. But we\r\nare assuming that ker L = {0} so MX = 0 implies X = 0. Thus the kernel\r\nof MTM is {0} so this matrix is invertible. So, in this case, the least squares\r\nsolution (the X that solves MTMX = MV ) is unique, and is equal to\r\nX = (MTM)\r\n−1MT V.\r\nIn a nutshell, this is the least squares method:\r\n• Compute MTM and MT V .\r\n• Solve (MTM)X = MT V by Gaussian elimination.\r\nExample 149 Captain Conundrum falls off of the leaning tower of Pisa and makes\r\nthree (rather shaky) measurements of his velocity at three different times.\r\nt s v m/s\r\n1 11\r\n2 19\r\n3 31\r\nHaving taken some calculus1, he believes that his data are best approximated by\r\na straight line\r\nv = at + b.\r\n1\r\nIn fact, he is a Calculus Superhero.\r\n297",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fb8cef85-ad31-41e9-8597-d1a17523e762.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=873dcb87c597684c53593a6a67272f30916b54d3b5d664a46c581f4a41b28852",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 337
      },
      {
        "segments": [
          {
            "segment_id": "6ff0d508-fb85-4960-916f-4d3716754a39",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 298,
            "page_width": 612,
            "page_height": 792,
            "content": "298 Least squares and Singular Values\r\nThen he should find a and b to best fit the data.\r\n11 = a · 1 + b\r\n19 = a · 2 + b\r\n31 = a · 3 + b.\r\nAs a system of linear equations, this becomes:\r\n\r\n\r\n1 1\r\n2 1\r\n3 1\r\n\r\n\r\n\u0012\r\na\r\nb\r\n\u0013\r\n?=\r\n\r\n\r\n11\r\n19\r\n31\r\n\r\n .\r\nThere is likely no actual straight line solution, so instead solve MTMX = MT V .\r\n\u0012\r\n1 2 3\r\n1 1 1\u0013\r\n\r\n\r\n1 1\r\n2 1\r\n3 1\r\n\r\n\r\n\u0012\r\na\r\nb\r\n\u0013\r\n=\r\n\u0012\r\n1 2 3\r\n1 1 1\u0013\r\n\r\n\r\n11\r\n19\r\n31\r\n\r\n .\r\nThis simplifies to\r\n\u0012\r\n14 6 142\r\n6 3 61\u0013\r\n∼\r\n\u0012\r\n1 0 10\r\n0 1 1\r\n3\r\n\u0013\r\n.\r\nThus, the least-squares fit is the line\r\nv = 10 t +\r\n1\r\n3\r\n.\r\nNotice that this equation implies that Captain Conundrum accelerates towards Italian\r\nsoil at 10 m/s2(which is an excellent approximation to reality) and that he started at\r\na downward velocity of 1\r\n3 m/s (perhaps somebody gave him a shove...)!\r\n17.1 Projection Matrices\r\nWe have seen that even if MX = V has no solutions MTMX = MT V does\r\nhave solutions. One way to think about this is, since the codomain of M is\r\nthe direct sum\r\ncodom M = ranM ⊕ ker MT\r\nthere is a unique way to write V = Vr+Vk with Vk ∈ ker MT and Vr ∈ ran M,\r\nand it is clear that Mx = V only has a solution of V ∈ ran M ⇔ Vk = 0.\r\nIf not, then the closest thing to a solution of MX = V is a solution to\r\n298",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6ff0d508-fb85-4960-916f-4d3716754a39.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9b76e778dd44825a07770110279547629f0ade6573bcfa9e0940cffec4f2519b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 302
      },
      {
        "segments": [
          {
            "segment_id": "e6149e83-5ec2-4203-beaa-a2d92a6f3c54",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 299,
            "page_width": 612,
            "page_height": 792,
            "content": "17.1 Projection Matrices 299\r\nMX = Vr. We learned to find solutions to this in the previous subsection of\r\nthis book.\r\nBut here is another question, how can we determine what Vr is given M\r\nand V ? The answer is simple; suppose X is a solution to MX = Vr. Then\r\nMX = Vr =⇒ MTMx = MT Vr =⇒ MTMx = MT(Vr + 0)\r\n=⇒ MTMx = MT(Vr+Vk) =⇒ MTMx = MT V =⇒ X = (MTM)\r\n−1MT V\r\nif indeed MTM is invertible. Since, by assumption, X is a solution\r\nM(MTM)\r\n−1MT V = Vr.\r\nThat is, the matrix which projects V onto its ran M part is M(MTM)\r\n−1MT\r\n.\r\nExample 150 To project\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n onto span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n1\r\n−1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n= ran\r\n\r\n\r\n1 1\r\n1 −1\r\n0 0\r\n\r\n multi\u0002ply by the matrix\r\n\r\n\r\n1 1\r\n1 −1\r\n0 0\r\n\r\n\r\n\r\n\r\n\u0012\r\n1 1 0\r\n1 −1 0\u0013\r\n\r\n\r\n1 1\r\n1 −1\r\n0 0\r\n\r\n\r\n\r\n\r\n−1\r\n\u0012\r\n1 1 0\r\n1 −1 0\u0013\r\n=\r\n\r\n\r\n1 1\r\n1 −1\r\n0 0\r\n\r\n\r\n\u0012\r\n2 0\r\n0 2\u0013−1 \u0012\r\n1 1 0\r\n1 −1 0\u0013\r\n=\r\n1\r\n2\r\n\r\n\r\n1 1\r\n1 −1\r\n0 0\r\n\r\n\r\n\u0012\r\n1 1 0\r\n1 −1 0\u0013\r\n=\r\n1\r\n2\r\n\r\n\r\n2 0 0\r\n0 2 0\r\n0 0 0\r\n\r\n .\r\nThis gives\r\n1\r\n2\r\n\r\n\r\n2 0 0\r\n0 2 0\r\n0 0 0\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n .\r\n299",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e6149e83-5ec2-4203-beaa-a2d92a6f3c54.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9164c4e17efd8f7ae85934997c52db66cf6eadd4e47978b011784dc361853b8f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 297
      },
      {
        "segments": [
          {
            "segment_id": "fa9afdea-c71b-4704-9cfd-8d8eccda77ab",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 300,
            "page_width": 612,
            "page_height": 792,
            "content": "300 Least squares and Singular Values\r\n17.2 Singular Value Decomposition\r\nSuppose\r\nL : V\r\nlinear\r\n−−−→W .\r\nIt is unlikely that dim V =: n = m := dim W so a m × n matrix M of L\r\nin bases for V and W will not be square. Therefore there is no eigenvalue\r\nproblem we can use to uncover a preferred basis. However, if the vector\r\nspaces V and W both have inner products, there does exist an analog of the\r\neigenvalue problem, namely the singular values of L.\r\nBefore giving the details of the powerful technique known as the singular\r\nvalue decomposition, we note that it is an excellent example of what Eugene\r\nWigner called the “Unreasonable Effectiveness of Mathematics”:\r\nThere is a story about two friends who were classmates in high school, talking about\r\ntheir jobs. One of them became a statistician and was working on population trends. He\r\nshowed a reprint to his former classmate. The reprint started, as usual with the Gaussian\r\ndistribution and the statistician explained to his former classmate the meaning of the\r\nsymbols for the actual population and so on. His classmate was a bit incredulous and was\r\nnot quite sure whether the statistician was pulling his leg. “How can you know that?”\r\nwas his query. “And what is this symbol here?” “Oh,” said the statistician, this is “π.”\r\n“And what is that?” “The ratio of the circumference of the circle to its diameter.” “Well,\r\nnow you are pushing your joke too far,” said the classmate, “surely the population has\r\nnothing to do with the circumference of the circle.”\r\nEugene Wigner, Commun. Pure and Appl. Math. XIII, 1 (1960).\r\nWhenever we mathematically model a system, any “canonical quantities”\r\n(those that do not depend on any choices we make for calculating them) will\r\ncorrespond to important features of the system. For examples, the eigenval\u0002ues of the eigenvector equation you found in review question 1, chapter 12\r\nencode the notes and harmonics that a guitar string can play!\r\nSingular values appear in many linear algebra applications, especially\r\nthose involving very large data sets such as statistics and signal processing.\r\nLet us focus on the m×n matrix M of a linear transformation L : V → W\r\nwritten in orthonormal bases for the input and outputs of L (notice, the\r\nexistence of these othonormal bases is predicated on having inner products for\r\nV and W). Even though the matrix M is not square, both the matrices MMT\r\nand MTM are square and symmetric! In terms of linear transformations MT\r\nis the matrix of a linear transformation\r\nL\r\n∗\r\n: W\r\nlinear\r\n−−−→V .\r\n300",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fa9afdea-c71b-4704-9cfd-8d8eccda77ab.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5ed5c23f388288c06e1e67ee35d1c68b795b63711caf8b9ba49247bc559f2893",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 439
      },
      {
        "segments": [
          {
            "segment_id": "90bc55c5-5ba8-4b4c-abb7-4a8aa67573dc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 301,
            "page_width": 612,
            "page_height": 792,
            "content": "17.2 Singular Value Decomposition 301\r\nThus LL∗: W → W and L\r\n∗L : V → V and both have eigenvalue problems.\r\nMoreover, as we learned in chapter 15, both L\r\n∗L and LL∗ have orthonormal\r\nbases of eigenvectors, and both MMT and MTM can be diagonalized.\r\nNext, let us make a simplifying assumption, namely ker L = {0}. This\r\nis not necessary, but will make some of our computations simpler. Now\r\nsuppose we have found an orthonormal basis (u1, . . . , un) for V composed of\r\neigenvectors for L\r\n∗L. That is\r\nL\r\n∗Lui = λiui\r\n.\r\nThen multiplying by L gives\r\nLL∗Lui = λiLui.\r\nI.e., Luiis an eigenvector of LL∗. The vectors (Lu1, . . . , Lun) are linearly\r\nindependent, because ker L = {0} (this is where we use our simplifying as\u0002sumption, but you can try and extend our analysis to the case where it no\r\nlonger holds).\r\nLets compute the angles between and lengths of these vectors. For that\r\nwe express the vectors uiin the bases used to compute the matrix M of L .\r\nDenoting these column vectors by Ui we then compute\r\n(MUi) · (MUj ) = U\r\nT\r\ni MTMUj = λj U\r\nT\r\ni Uj = λj Ui\r\n· Uj = λjδij .\r\nWe see that vectors (Lu1, . . . , Lun) are orthogonal but not orthonormal.\r\nMoreover, the length of Luiis √\r\nλi. Normalizing gives the orthonormal and\r\nlinearly independent ordered set\r\n\u0012\r\nLu1\r\n√\r\nλ1\r\n, . . . ,\r\nLun √\r\nλn\r\n\u0013\r\n.\r\nThis cannot be a basis for W since ker L = {0}, dim L(V ) = dim V, and\r\nin turn dim V ≤ dim W, so n ≤ m.\r\nHowever, it is a subset of the eigenvectors of LL∗so there is an orthonor\u0002mal basis of eigenvectors of LL∗ of the form\r\nO\r\n0 =\r\n\u0012\r\nLu1\r\n√\r\nλ1\r\n, . . . ,\r\nLun √\r\nλn\r\n, vm+1, . . . , vm\r\n\u0013\r\n=: (v1, . . . , vm).\r\nNow lets compute the matrix of L with respect to the orthonormal basis\r\nO = (u1, . . . , un) for V and the orthonormal basis O0 = (v1, . . . , vm) for W.\r\n301",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/90bc55c5-5ba8-4b4c-abb7-4a8aa67573dc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9cfbd4d8ac935cd9301d74c7a44c0e49ac3b62f7f4934de111d98660ef8d7b00",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 379
      },
      {
        "segments": [
          {
            "segment_id": "6ec6b56e-b375-4780-9335-5aa1184fa1d5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 302,
            "page_width": 612,
            "page_height": 792,
            "content": "302 Least squares and Singular Values\r\nAs usual, our starting point is the computation of L acting on the input basis\r\nvectors;\r\nLO =\r\n\r\nLu1, . . . , Lun\r\n\u0001\r\n=\r\np\r\nλ1 v1, . . . ,pλn vn\r\n\u0001\r\n=\r\n\r\nv1, . . . , vm\r\n\u0001\r\n\r\n\r\n√\r\nλ1 0 · · · 0\r\n0\r\n√\r\nλ2 · · · 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · √\r\nλn\r\n0 0 · · · 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · 0\r\n\r\n\r\n.\r\nThe result is very close to diagonalization; the numbers √\r\nλi along the leading\r\ndiagonal are called the singular values of L.\r\nExample 151 Let the matrix of a linear transformation be\r\nM =\r\n\r\n\r\n1\r\n2\r\n1\r\n2\r\n−1 1\r\n−\r\n1\r\n2 −\r\n1\r\n2\r\n\r\n .\r\nClearly ker M = {0} while\r\nMTM =\r\n 3\r\n2 −\r\n1\r\n2\r\n−\r\n1\r\n2\r\n3\r\n2\r\n!\r\nwhich has eigenvalues and eigenvectors\r\nλ = 1 , u1 := \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n!\r\n; λ = 2 , u2 := \r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n!\r\n.\r\nso our orthonormal input basis is\r\nO =\r\n √\r\n1\r\n2\r\n√\r\n1\r\n2\r\n!\r\n,\r\n \r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n!! .\r\nThese are called the right singular vectors of M. The vectors\r\nMu1 =\r\n\r\n\r\n√\r\n1\r\n2\r\n0\r\n− √\r\n1\r\n2\r\n\r\n\r\nand Mu2 =\r\n\r\n\r\n0\r\n−\r\n√\r\n2\r\n0\r\n\r\n\r\n302",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6ec6b56e-b375-4780-9335-5aa1184fa1d5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=13e6996f2e0c73684de44356b76770bbf9c63c11b40338f6059a012189adc253",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 275
      },
      {
        "segments": [
          {
            "segment_id": "1164e754-393a-41a2-850b-aed4109816fc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 303,
            "page_width": 612,
            "page_height": 792,
            "content": "17.2 Singular Value Decomposition 303\r\nare eigenvectors of\r\nMMT =\r\n\r\n\r\n1\r\n2\r\n0 −\r\n1\r\n2\r\n0 2 0\r\n−\r\n1\r\n2\r\n0\r\n1\r\n2\r\n\r\n\r\nwith eigenvalues 1 and 2, respectively. The third eigenvector (with eigenvalue 0) of\r\nMMTis\r\nv3 =\r\n\r\n\r\n√\r\n1\r\n2\r\n0\r\n√\r\n1\r\n2\r\n\r\n .\r\nThe eigenvectors Mu1 and Mu2 are necessarily orthogonal, dividing them by their\r\nlengths we obtain the left singular vectors and in turn our orthonormal output basis\r\nO\r\n0 =\r\n\r\n\r\n\r\n\r\n√\r\n1\r\n2\r\n0\r\n− √\r\n1\r\n2\r\n\r\n ,\r\n\r\n\r\n0\r\n−1\r\n0\r\n\r\n ,\r\n\r\n\r\n√\r\n1\r\n2\r\n0\r\n√\r\n1\r\n2\r\n\r\n\r\n\r\n .\r\nThe new matrix M0 of the linear transformation given by M with respect to the bases\r\nO and O0is\r\nM0 =\r\n\r\n\r\n1 0\r\n0\r\n√\r\n2\r\n0 0\r\n\r\n ,\r\nso the singular values are 1,\r\n√\r\n2.\r\nFinally note that arranging the column vectors of O and O0into change of basis\r\nmatrices\r\nP =\r\n \r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n!\r\n, Q =\r\n\r\n\r\n√\r\n1\r\n2\r\n0 √\r\n1\r\n2\r\n0 −1 0\r\n− √\r\n1\r\n2\r\n0 √\r\n1\r\n2\r\n\r\n ,\r\nwe have, as usual,\r\nM0 = Q\r\n−1MP .\r\nSingular vectors and values have a very nice geometric interpretation;\r\nthey provide an orthonormal bases for the domain and range of L and give\r\nthe factors by which L stretches the orthonormal input basis vectors. This\r\nis depicted below for the example we just computed.\r\n303",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1164e754-393a-41a2-850b-aed4109816fc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=5bf47c0ea5db8688e71f22bcf7eaf886043763615d2c29b92f054ada20cf3589",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "2bdcc1f6-6c67-45a7-a659-e59c7934abe4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 304,
            "page_width": 612,
            "page_height": 792,
            "content": "304 Least squares and Singular Values\r\nCongratulations, you have reached the end of the book!\r\nNow test your skills on the sample final exam.\r\n17.3 Review Problems\r\nWebwork: Reading Problem 1 ,\r\n1. Let L : U → V be a linear transformation. Suppose v ∈ L(U) and you\r\nhave found a vector ups that obeys L(ups) = v.\r\nExplain why you need to compute ker L to describe the solution set of\r\nthe linear system L(u) = v.\r\nHint\r\n2. Suppose that M is an m × n matrix with trivial kernel. Show that for\r\nany vectors u and v in R\r\nm:\r\n• u\r\nTMTMv = vTMTMu.\r\n304",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2bdcc1f6-6c67-45a7-a659-e59c7934abe4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a8e0b492c619772f66f748c577af255d395cd437f92fb17f5c412771d5cf759c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 386
      },
      {
        "segments": [
          {
            "segment_id": "b59e8720-e505-4e27-81a1-879718c6b0c4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 305,
            "page_width": 612,
            "page_height": 792,
            "content": "17.3 Review Problems 305\r\n• v\r\nTMTMv ≥ 0. In case you are concerned (you don’t need to be)\r\nand for future reference, the notation v ≥ 0 means each component\r\nv\r\ni ≥ 0.\r\n• If v\r\nTMTMv = 0, then v = 0.\r\n(Hint: Think about the dot product in R\r\nn\r\n.)\r\nHint\r\n3. Rewrite the Gram-Schmidt algorithm in terms of projection matrices.\r\n4. Show that if v1, . . . , Vk are linearly independent that the matrix M =\r\n(v1 · · · vk) is not necessarily invertible but the matrix MTM is invert\u0002ible.\r\n5. Write out the singular value decomposition theorem of a 3 × 1, a 3 × 2,\r\nand a 3×3 symmetric matrix. Make it so that none of the components\r\nof your matrices are zero but your computations are simple. Explain\r\nwhy you choose the matrices you choose.\r\n6. Find the best polynomial approximation to a solution to the differential\r\nequation d\r\ndx f = x + x\r\n2 by considering the derivative to have domain\r\nand codomain span {1, x, x2}.\r\n(Hint: Begin by defining bases for the domain and codomain.)\r\n305",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b59e8720-e505-4e27-81a1-879718c6b0c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0e7be76de933ab3595b951ad3f43a55b153351f6b6a03dca8dc6bcb4f9d5247f",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "a12cc97c-93a2-47ed-aaa1-4f72e46b310d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 306,
            "page_width": 612,
            "page_height": 792,
            "content": "306 Least squares and Singular Values\r\n306",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a12cc97c-93a2-47ed-aaa1-4f72e46b310d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=43421d93e15a5a0a47aaf69e4d54add649de3c478b3ad3cf77ad45c1c3893f31",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "619d5007-68fd-4ff7-94c2-0ee8c68229b9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 307,
            "page_width": 612,
            "page_height": 792,
            "content": "A\r\nList of Symbols\r\n∈ “Is an element of”.\r\n∼\r\n“Is equivalent to”, see equivalence relations.\r\nAlso, “is row equivalent to” for matrices.\r\nR The real numbers.\r\nIn The n × n identity matrix.\r\nP\r\nF\r\nn The vector space of polynomials of degree at most n with\r\ncoefficients in the field F.\r\nMr\r\nk The vector space of r × k matrices.\r\n307",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/619d5007-68fd-4ff7-94c2-0ee8c68229b9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=34f4c4a23a75cdc9886813d538d378d5bc83e036f8678556e9c724f2815bdd79",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "401a5fc4-92fa-4c66-a879-85d7234d7170",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 308,
            "page_width": 612,
            "page_height": 792,
            "content": "308 List of Symbols\r\n308",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/401a5fc4-92fa-4c66-a879-85d7234d7170.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6ace2262324825ade96352b6536a2852a9af6f940050da991a6a719fa7994f5e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "99add2fa-c1ae-4382-be88-629c595200a6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 309,
            "page_width": 612,
            "page_height": 792,
            "content": "B\r\nFields\r\nDefinition A field F is a set with two operations + and ·, such that for all\r\na, b, c ∈ F the following axioms are satisfied:\r\nA1. Addition is associative (a + b) + c = a + (b + c).\r\nA2. There exists an additive identity 0.\r\nA3. Addition is commutative a + b = b + a.\r\nA4. There exists an additive inverse −a.\r\nM1. Multiplication is associative (a · b) · c = a · (b · c).\r\nM2. There exists a multiplicative identity 1.\r\nM3. Multiplication is commutative a · b = b · a.\r\nM4. There exists a multiplicative inverse a\r\n−1\r\nif a 6= 0.\r\nD. The distributive law holds a · (b + c) = ab + ac.\r\nRoughly, all of the above mean that you have notions of +, −, × and ÷ just\r\nas for regular real numbers.\r\nFields are a very beautiful structure; some examples are rational num\u0002bers Q, real numbers R, and complex numbers C. These examples are in\u0002finite, however this does not necessarily have to be the case. The smallest\r\n309",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/99add2fa-c1ae-4382-be88-629c595200a6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2121a3c6bdfa7718e5db61e2cd9120dcb777418991116d1863deef337978e271",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "77a9053c-9d62-4342-883f-77207a54d84e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 310,
            "page_width": 612,
            "page_height": 792,
            "content": "310 Fields\r\nexample of a field has just two elements, Z2 = {0, 1} or bits. The rules for\r\naddition and multiplication are the usual ones save that\r\n1 + 1 = 0 .\r\n310",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/77a9053c-9d62-4342-883f-77207a54d84e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0d6b74bf7fbbaefcb0a9340afbb23be7a9c55795f5821ce3afa9c5e913963fcd",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 489
      },
      {
        "segments": [
          {
            "segment_id": "55f9b18b-f246-48db-87a9-c2351a888bac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 311,
            "page_width": 612,
            "page_height": 792,
            "content": "C\r\nOnline Resources\r\nHere are some internet places to get linear algebra help:\r\n• Strang’s MIT Linear Algebra Course. Videos of lectures and more:\r\nhttp://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/\r\n• Beezer’s online Linear Algebra Course\r\nhttp://linear.ups.edu/version3.html\r\n• The Khan Academy has thousands of free videos on a multitude of\r\ntopics including linear algebra:\r\nhttp://www.khanacademy.org/\r\n• The Linear Algebra toolkit:\r\nhttp://www.math.odu.edu/∼bogacki/lat/\r\n• Carter, Tapia and Papakonstantinou’s online linear algebra resource\r\nhttp://ceee.rice.edu/Books/LA/index.html\r\n• S.O.S. Mathematics Matrix Algebra primer:\r\nhttp://www.sosmath.com/matrix/matrix.html\r\n• The Numerical Methods Guy on Youtube. Lots of worked examples:\r\n311",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/55f9b18b-f246-48db-87a9-c2351a888bac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b051699249558974cb616aaf79d6c0fd387a85c619d849038414695b2f1c2d4a",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3a5d723b-2c4f-498e-a54b-bd951cf1b1f2",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 312,
            "page_width": 612,
            "page_height": 792,
            "content": "312 Online Resources\r\nhttp://www.youtube.com/user/numericalmethodsguy\r\n• Interactive Mathematics. Lots of useful math lessons on many topics:\r\nhttp://www.intmath.com/\r\n• Stat Trek. A quick matrix tutorial for statistics students:\r\nhttp://stattrek.com/matrix-algebra/matrix.aspx\r\n• Wolfram’s Mathworld. An online mathematics encyclopædia:\r\nhttp://mathworld.wolfram.com/\r\n• Paul Dawkin’s online math notes:\r\nhttp://tutorial.math.lamar.edu/\r\n• Math Doctor Bob:\r\nhttp://www.youtube.com/user/MathDoctorBob?feature=watch\r\n• Some pictures of how to rotate objects with matrices:\r\nhttp://people.cornellcollege.edu/dsherman/visualize-matrix.html\r\n• xkcd. Geek jokes:\r\nhttp://xkcd.com/184/\r\n• See the bridge actually fall down:\r\nhttp://anothermathgeek.hubpages.com/hub/What-the-Heck-are-Eigenvalues-and-Eigenvectors\r\n312",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3a5d723b-2c4f-498e-a54b-bd951cf1b1f2.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b9f61590f600db3703a18291f72bd505306128463b199e7efde86121dfdafe8",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "e708567d-d1ad-4a39-9fbd-6328446322fb",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 313,
            "page_width": 612,
            "page_height": 792,
            "content": "D\r\nSample First Midterm\r\nHere are some worked problems typical for what you might expect on a first\r\nmidterm examination.\r\n1. Solve the following linear system. Write the solution set in vector form.\r\nCheck your solution. Write one particular solution and one homogeneous\r\nsolution, if they exist. What does the solution set look like geometrically?\r\nx + 3y = 4\r\nx − 2y + z = 1\r\n2x + y + z = 5\r\n2. Consider the system of equations\r\n\r\n\r\n\r\nx − z + 2w = −1\r\nx + y + z − w = 2\r\n− y − 2z + 3w = −3\r\n5x + 2y − z + 4w = 1\r\n(a) Write an augmented matrix for this system.\r\n(b) Use elementary row operations to find its reduced row echelon form.\r\n(c) Write the solution set for the system in the form\r\nS = {X0 +\r\nX\r\ni\r\nµiYi: µi ∈ R}.\r\n313",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e708567d-d1ad-4a39-9fbd-6328446322fb.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=933a3b5a69fd86254b5b939fe142f1f49b5a6cecd4b7243d7a2ed7bf60e0a474",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 315
      },
      {
        "segments": [
          {
            "segment_id": "3e7e280f-c248-4f0c-b044-0470624129e1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 314,
            "page_width": 612,
            "page_height": 792,
            "content": "314 Sample First Midterm\r\n(d) What are the vectors X0 and Yi called and which matrix equations do\r\nthey solve?\r\n(e) Check separately that X0 and each Yi solve the matrix systems you\r\nclaimed they solved in part (d).\r\n3. Use row operations to invert the matrix\r\n\r\n\r\n1 2 3 4\r\n2 4 7 11\r\n3 7 14 25\r\n4 11 25 50\r\n\r\n\r\n4. Let M =\r\n\u0012\r\n2 1\r\n3 −1\r\n\u0013\r\n. Calculate MTM−1. Is M symmetric? What is the\r\ntrace of the transpose of f(M), where f(x) = x\r\n2 − 1?\r\n5. In this problem M is the matrix\r\nM =\r\n\u0012\r\ncos θ sin θ\r\n− sin θ cos θ\r\n\u0013\r\nand X is the vector\r\nX =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n.\r\nCalculate all possible dot products between the vectors X and MX. Com\u0002pute the lengths of X and MX. What is the angle between the vectors MX\r\nand X. Draw a picture of these vectors in the plane. For what values of θ\r\ndo you expect equality in the triangle and Cauchy–Schwartz inequalities?\r\n6. Let M be the matrix\r\n\r\n\r\n1 0 0 1 0 0\r\n0 1 0 0 1 0\r\n0 0 1 0 0 1\r\n0 0 0 1 0 0\r\n0 0 0 0 1 0\r\n0 0 0 0 0 1\r\n\r\n\r\nFind a formula for Mkfor any positive integer power k. Try some simple\r\nexamples like k = 2, 3 if confused.\r\n7. Determinants: The determinant det M of a 2 × 2 matrix M =\r\n\u0012\r\na b\r\nc d\u0013\r\nis\r\ndefined by\r\ndet M = ad − bc .\r\n314",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3e7e280f-c248-4f0c-b044-0470624129e1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=590e7d508cc9c3b36b20b38060f0aba06d1cb7f021340de4ee072d7a7bf4aca8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 281
      },
      {
        "segments": [
          {
            "segment_id": "875ba7fc-9398-4c15-a14b-c42127bf518e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 315,
            "page_width": 612,
            "page_height": 792,
            "content": "315\r\n(a) For which values of det M does M have an inverse?\r\n(b) Write down all 2×2 bit matrices with determinant 1. (Remember bits\r\nare either 0 or 1 and 1 + 1 = 0.)\r\n(c) Write down all 2 × 2 bit matrices with determinant 0.\r\n(d) Use one of the above examples to show why the following statement is\r\nFALSE.\r\nSquare matrices with the same determinant are always row\r\nequivalent.\r\n8. What does it mean for a function to be linear? Check that integration is a\r\nlinear function from V to V , where V = {f : R → R | f is integrable} is a\r\nvector space over R with usual addition and scalar multiplication.\r\n9. What are the four main things we need to define for a vector space? Which\r\nof the following is a vector space over R? For those that are not vector\r\nspaces, modify one part of the definition to make it into a vector space.\r\n(a) V = { 2 × 2 matrices with entries in R}, usual matrix addition, and\r\nk ·\r\n\u0012\r\na b\r\nc d \u0013\r\n=\r\n\u0012\r\nka b\r\nkc d \u0013\r\nfor k ∈ R.\r\n(b) V = {polynomials with complex coefficients of degree ≤ 3}, with usual\r\naddition and scalar multiplication of polynomials.\r\n(c) V = {vectors in R\r\n3 with at least one entry containing a 1}, with usual\r\naddition and scalar multiplication.\r\n10. Subspaces: If V is a vector space, we say that U is a subspace of V when the\r\nset U is also a vector space, using the vector addition and scalar multiplica\u0002tion rules of the vector space V . (Remember that U ⊂ V says that “U is a\r\nsubset of V ”, i.e., all elements of U are also elements of V . The symbol ∀\r\nmeans “for all” and ∈ means “is an element of”.)\r\nExplain why additive closure (u + w ∈ U ∀ u, v ∈ U) and multiplicative\r\nclosure (r.u ∈ U ∀ r ∈ R, u ∈ V ) ensure that (i) the zero vector 0 ∈ U and\r\n(ii) every u ∈ U has an additive inverse.\r\nIn fact it suffices to check closure under addition and scalar multiplication\r\nto verify that U is a vector space. Check whether the following choices of U\r\nare vector spaces:\r\n315",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/875ba7fc-9398-4c15-a14b-c42127bf518e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=773d6a7f7ba8a0ae2cb1f42c418c5faf27f470bdc02b752ccd2f1c02b1b35480",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 396
      },
      {
        "segments": [
          {
            "segment_id": "890d8192-f137-453d-a0cf-ecea164646e6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 316,
            "page_width": 612,
            "page_height": 792,
            "content": "316 Sample First Midterm\r\n(a) U =\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n : x, y ∈ R\r\n\r\n\r\n\r\n(b) U =\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\nz\r\n\r\n : z ∈ R\r\n\r\n\r\n\r\nSolutions\r\n1. As an additional exercise, write out the row operations above the ∼ signs\r\nbelow.\r\n\r\n\r\n1 3 0 4\r\n1 −2 1 1\r\n2 1 1 5\r\n\r\n ∼\r\n\r\n\r\n1 3 0 4\r\n0 −5 1 −3\r\n0 −5 1 −3\r\n\r\n ∼\r\n\r\n\r\n1 0 3\r\n5\r\n11\r\n5\r\n0 1 −\r\n1\r\n5\r\n3\r\n5\r\n0 0 0 0\r\n\r\n .\r\nSolution set is\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n11\r\n5\r\n3\r\n5\r\n0\r\n\r\n + µ\r\n\r\n\r\n−\r\n3\r\n5\r\n1\r\n5\r\n1\r\n\r\n : µ ∈ R\r\n\r\n\r\n\r\n.\r\nGeometrically this represents a line in R\r\n3\r\nthrough the point\r\n\r\n\r\n11\r\n5\r\n3\r\n5\r\n0\r\n\r\n running\r\nparallel to the vector\r\n\r\n\r\n−\r\n3\r\n5\r\n1\r\n5\r\n1\r\n\r\n.\r\nThe vector\r\n\r\n\r\n11\r\n5\r\n3\r\n5\r\n0\r\n\r\n is a particular solution and\r\n\r\n\r\n−\r\n3\r\n5\r\n1\r\n5\r\n1\r\n\r\n is a homogeneous\r\nsolution.\r\nAs a double check note that\r\n\r\n\r\n1 3 0\r\n1 −2 1\r\n2 1 1\r\n\r\n\r\n\r\n\r\n11\r\n5\r\n3\r\n5\r\n0\r\n\r\n =\r\n\r\n\r\n4\r\n1\r\n5\r\n\r\n and\r\n\r\n\r\n1 3 0\r\n1 −2 1\r\n2 1 1\r\n\r\n\r\n\r\n\r\n−\r\n3\r\n5\r\n1\r\n5\r\n1\r\n\r\n =\r\n\r\n\r\n0\r\n0\r\n0\r\n\r\n .\r\n316",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/890d8192-f137-453d-a0cf-ecea164646e6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8059dd991cf03de1df7241ffccc0b7d2efdd7ebda0d69adf40e083ace965e44f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 295
      },
      {
        "segments": [
          {
            "segment_id": "fa5f9810-9090-4ce0-8825-eb1ded556359",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 317,
            "page_width": 612,
            "page_height": 792,
            "content": "317\r\n2. (a) The augmented matrix\r\n\r\n\r\n1 0 −1 2 −1\r\n1 1 1 −1 2\r\n0 −1 −2 3 −3\r\n5 2 −1 4 1\r\n\r\n\r\nencodes the system of equations.\r\n(b) Again, write out the row operations as an additional exercise.\r\nThe above augmented matrix is row equivalent to\r\n\r\n\r\n1 0 −1 2 −1\r\n0 1 2 −3 3\r\n0 −1 −2 3 −3\r\n0 2 4 −6 6\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 −1 2 −1\r\n0 1 2 −3 3\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n\r\n\r\nwhich is in reduced row echelon form.\r\n(c) Solution set is\r\n\r\n\r\n\r\nX =\r\n\r\n\r\n−1\r\n3\r\n0\r\n0\r\n\r\n\r\n+ µ1\r\n\r\n\r\n1\r\n−2\r\n1\r\n0\r\n\r\n\r\n+ µ2\r\n\r\n\r\n−2\r\n3\r\n0\r\n1\r\n\r\n\r\n: µ1, µ2 ∈ R\r\n\r\n\r\n\r\n.\r\n(d) The vector X0 =\r\n\r\n\r\n−1\r\n3\r\n0\r\n0\r\n\r\n\r\nis a particular solution and the vectors\r\nY1 =\r\n\r\n\r\n1\r\n−2\r\n1\r\n0\r\n\r\n\r\nand Y2 =\r\n\r\n\r\n−2\r\n3\r\n0\r\n1\r\n\r\n\r\nare homogeneous solutions. They obey\r\nMX = V , MY1 = 0 = MY2 .\r\nwhere\r\nM =\r\n\r\n\r\n1 0 −1 2\r\n1 1 1 −1\r\n0 −1 −2 3\r\n5 2 −1 4\r\n\r\n\r\nand V =\r\n\r\n\r\n−1\r\n2\r\n−3\r\n1\r\n\r\n .\r\n317",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fa5f9810-9090-4ce0-8825-eb1ded556359.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fdf381b3f9c72a7a8a106691f3c8296ff7cb5d9a5ac76026f69286da16566d54",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 248
      },
      {
        "segments": [
          {
            "segment_id": "0cd42042-765f-4343-8400-399885a9642a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 318,
            "page_width": 612,
            "page_height": 792,
            "content": "318 Sample First Midterm\r\n(e) This amounts to explicitly performing the matrix manipulations\r\nMX − V, MY1, and MY2\r\nto verify that they are all zero vectors.\r\n3. As usual, be sure to write out the row operations above the ∼’s so your work\r\ncan be easily checked.\r\n\r\n\r\n1 2 3 4 1 0 0 0\r\n2 4 7 11 0 1 0 0\r\n3 7 14 25 0 0 1 0\r\n4 11 25 50 0 0 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 2 3 4 1 0 0 0\r\n0 0 1 3 −2 1 0 0\r\n0 1 5 13 −3 0 1 0\r\n0 3 13 34 −4 0 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 −7 −22 7 0 −2 0\r\n0 1 5 13 −3 0 1 0\r\n0 0 1 3 −2 1 0 0\r\n0 0 −2 −5 5 0 −3 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 −1 −7 7 −2 0\r\n0 1 0 −2 7 −5 1 0\r\n0 0 1 3 −2 1 0 0\r\n0 0 0 1 1 2 −3 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 0 −6 9 −5 1\r\n0 1 0 0 9 −1 −5 2\r\n0 0 1 0 −5 −5 9 −3\r\n0 0 0 1 1 2 −3 1\r\n\r\n .\r\nCheck\r\n\r\n\r\n1 2 3 4\r\n2 4 7 11\r\n3 7 14 25\r\n4 11 25 50\r\n\r\n\r\n\r\n\r\n−6 9 −5 1\r\n9 −1 −5 2\r\n−5 −5 9 −3\r\n1 2 −3 1\r\n\r\n =\r\n\r\n\r\n1 0 0 0\r\n0 1 0 0\r\n0 0 1 0\r\n0 0 0 1\r\n\r\n .\r\n4.\r\nMTM−1 =\r\n\u0012\r\n2 3\r\n1 −1\r\n\u0013 1\r\n5\r\n1\r\n5\r\n3\r\n5 −\r\n2\r\n5\r\n!\r\n=\r\n\u0012 11\r\n5 −\r\n4\r\n5\r\n−\r\n2\r\n5\r\n3\r\n5\r\n\u0013\r\n.\r\n318",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0cd42042-765f-4343-8400-399885a9642a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8052d05018e361437eae256d491c1104ae6919b78ab428f084fadea34c5deb64",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 330
      },
      {
        "segments": [
          {
            "segment_id": "778a97c2-9b58-4f56-87ee-ff55784c19f3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 319,
            "page_width": 612,
            "page_height": 792,
            "content": "319\r\nSince MTM−1 6= I, it follows MT 6= M so M is not symmetric. Finally\r\ntrf(M)\r\nT = trf(M) = tr(M2 − I) = tr \u0012\r\n2 1\r\n3 −1\r\n\u0013 \u00122 1\r\n3 −1\r\n\u0013\r\n− trI\r\n= (2 · 2 + 1 · 3) + (3 · 1 + (−1) · (−1)) − 2 = 9 .\r\n5. First\r\nX (MX) = XTMX =\r\n\r\nx y\u0001\r\n\u0012\r\ncos θ sin θ\r\n− sin θ cos θ\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\r\nx y\u0001\r\n\u0012\r\nx cos θ + y sin θ\r\n−x sin θ + y cos θ\r\n\u0013\r\n= (x\r\n2 + y2\r\n) cos θ .\r\nNow ||X|| =\r\n√\r\nX X =\r\np\r\nx\r\n2 + y2 and (MX) (MX) = XMTMX. But\r\nMTM =\r\n\u0012\r\ncos θ − sin θ\r\nsin θ cos θ\r\n\u0013 \u0012 cos θ sin θ\r\n− sin θ cos θ\r\n\u0013\r\n=\r\n\u0012\r\ncos2θ + sin2θ 0\r\n0 cos2θ + sin2θ\r\n\u0013\r\n= I .\r\nHence ||MX|| = ||X|| =\r\np\r\nx\r\n2 + y2. Thus the cosine of the angle between X\r\nand MX is given by\r\nX (MX)\r\n||X|| ||MX|| =\r\n(x\r\n2 + y2\r\n) cos θ\r\np\r\nx\r\n2 + y2\r\np\r\nx\r\n2 + y2\r\n= cos θ .\r\nIn other words, the angle is θ OR −θ. You should draw two pictures, one\r\nwhere the angle between X and MX is θ, the other where it is −θ.\r\nFor Cauchy–Schwartz, |X (MX)|\r\n||X|| ||MX|| = | cos θ| = 1 when θ = 0, π. For the\r\ntriangle equality MX = X achieves ||X + MX|| = ||X|| + ||MX||, which\r\nrequires θ = 0.\r\n6. This is a block matrix problem. Notice the that matrix M is really just\r\nM =\r\n\u0012\r\nI I\r\n0 I\r\n\u0013\r\n, where I and 0 are the 3×3 identity zero matrices, respectively.\r\nBut\r\nM2 =\r\n\u0012\r\nI I\r\n0 I\r\n\u0013 \u0012I I\r\n0 I\r\n\u0013\r\n=\r\n\u0012\r\nI 2I\r\n0 I\r\n\u0013\r\nand\r\nM3 =\r\n\u0012\r\nI I\r\n0 I\r\n\u0013 \u0012I 2I\r\n0 I\r\n\u0013\r\n=\r\n\u0012\r\nI 3I\r\n0 I\r\n\u0013\r\n319",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/778a97c2-9b58-4f56-87ee-ff55784c19f3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0909d9cbc97cd49a5e5da245b2764e5ba4dd91715602d678290b2faa3da08b8b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 361
      },
      {
        "segments": [
          {
            "segment_id": "71831631-a59b-4935-a1c9-393b3b21fb57",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 320,
            "page_width": 612,
            "page_height": 792,
            "content": "320 Sample First Midterm\r\nso, Mk =\r\n\u0012\r\nI kI\r\n0 I\r\n\u0013\r\n, or explicitly\r\nMk =\r\n\r\n\r\n1 0 0 k 0 0\r\n0 1 0 0 k 0\r\n0 0 1 0 0 k\r\n0 0 0 1 0 0\r\n0 0 0 0 1 0\r\n0 0 0 0 0 1\r\n\r\n\r\n.\r\n7. (a) Whenever detM = ad − bc 6= 0.\r\n(b) Unit determinant bit matrices:\r\n\u0012\r\n1 0\r\n0 1\u0013\r\n,\r\n\u0012\r\n1 1\r\n0 1\u0013\r\n,\r\n\u0012\r\n1 0\r\n1 1\u0013\r\n,\r\n\u0012\r\n0 1\r\n1 0\u0013\r\n,\r\n\u0012\r\n1 1\r\n1 0\u0013\r\n,\r\n\u0012\r\n0 1\r\n1 1\u0013\r\n.\r\n(c) Bit matrices with vanishing determinant:\r\n\u0012\r\n0 0\r\n0 0\u0013\r\n,\r\n\u0012\r\n1 0\r\n0 0\u0013\r\n,\r\n\u0012\r\n0 1\r\n0 0\u0013\r\n,\r\n\u0012\r\n0 0\r\n1 0\u0013\r\n,\r\n\u0012\r\n0 0\r\n0 1\u0013\r\n,\r\n\u0012\r\n1 1\r\n0 0\u0013\r\n,\r\n\u0012\r\n0 0\r\n1 1\u0013\r\n,\r\n\u0012\r\n1 0\r\n1 0\u0013\r\n,\r\n\u0012\r\n0 1\r\n0 1\u0013\r\n,\r\n\u0012\r\n1 1\r\n1 1\u0013\r\n.\r\nAs a check, count that the total number of 2×2 bit matrices is 2\r\n(number of entries) =\r\n2\r\n4 = 16.\r\n(d) To disprove this statement, we just need to find a single counterexam\u0002ple. All the unit determinant examples above are actually row equiva\u0002lent to the identity matrix, so focus on the bit matrices with vanishing\r\ndeterminant. Then notice (for example), that\r\n\u0012\r\n1 1\r\n0 0\u0013\r\n∼/\r\n\u0012\r\n0 0\r\n0 0\u0013\r\n.\r\nSo we have found a pair of matrices that are not row equivalent but\r\ndo have the same determinant. It follows that the statement is false.\r\n8. We can call a function f : V −→ W linear if the sets V and W are vector\r\nspaces and f obeys\r\nf(αu + βv) = αf(u) + βf(v),\r\nfor all u, v ∈ V and α, β ∈ R.\r\n320",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/71831631-a59b-4935-a1c9-393b3b21fb57.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0d4c95d5824afa6c31cf3ec52cac87db2f73ebc0ac05526a59356d17559e6896",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 320
      },
      {
        "segments": [
          {
            "segment_id": "4a8734dd-e7a9-4fea-b164-449abb4e8922",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 321,
            "page_width": 612,
            "page_height": 792,
            "content": "321\r\nNow, integration is a linear transformation from the space V of all inte\u0002grable functions (don’t be confused between the definition of a linear func\u0002tion above, and integrable functions f(x) which here are the vectors in V )\r\nto the real numbers R, because R ∞\r\n−∞(αf(x) + βg(x))dx = α\r\nR ∞\r\n−∞ f(x)dx +\r\nβ\r\nR ∞\r\n−∞ g(x)dx.\r\n9. The four main ingredients are (i) a set V of vectors, (ii) a number field K\r\n(usually K = R), (iii) a rule for adding vectors (vector addition) and (iv)\r\na way to multiply vectors by a number to produce a new vector (scalar\r\nmultiplication). There are, of course, ten rules that these four ingredients\r\nmust obey.\r\n(a) This is not a vector space. Notice that distributivity of scalar multi\u0002plication requires 2u = (1 + 1)u = u + u for any vector u but\r\n2 ·\r\n\u0012\r\na b\r\nc d\u0013\r\n=\r\n\u0012\r\n2a b\r\n2c d\u0013\r\nwhich does not equal\r\n\u0012\r\na b\r\nc d\u0013\r\n+\r\n\u0012\r\na b\r\nc d\u0013\r\n=\r\n\u0012\r\n2a 2b\r\n2c 2d\r\n\u0013\r\n.\r\nThis could be repaired by taking\r\nk ·\r\n\u0012\r\na b\r\nc d\u0013\r\n=\r\n\u0012\r\nka kb\r\nkc kd\u0013\r\n.\r\n(b) This is a vector space. Although, the question does not ask you to, it is\r\na useful exercise to verify that all ten vector space rules are satisfied.\r\n(c) This is not a vector space for many reasons. An easy one is that\r\n(1, −1, 0) and (−1, 1, 0) are both in the space, but their sum (0, 0, 0) is\r\nnot (i.e., additive closure fails). The easiest way to repair this would\r\nbe to drop the requirement that there be at least one entry equaling 1.\r\n10. (i) Thanks to multiplicative closure, if u ∈ U, so is (−1)·u. But (−1)·u+u =\r\n(−1)·u+ 1·u = (−1+ 1)·u = 0.u = 0 (at each step in this chain of equalities\r\nwe have used the fact that V is a vector space and therefore can use its vector\r\nspace rules). In particular, this means that the zero vector of V is in U and\r\nis its zero vector also. (ii) Also, in V , for each u there is an element −u\r\nsuch that u+ (−u) = 0. But by additive close, (−u) must also be in U, thus\r\nevery u ∈ U has an additive inverse.\r\n321",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4a8734dd-e7a9-4fea-b164-449abb4e8922.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=77b3c16fa032c7fc30fdb454a244434872acd8edc71ed61bac03742fc8b35d08",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 402
      },
      {
        "segments": [
          {
            "segment_id": "b7050b8b-c34b-42de-964b-b6cc4f616dda",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 322,
            "page_width": 612,
            "page_height": 792,
            "content": "322 Sample First Midterm\r\n(a) This is a vector space. First we check additive closure: let\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n and\r\n\r\n\r\nz\r\nw\r\n0\r\n\r\n be arbitrary vectors in U. But since\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n +\r\n\r\n\r\nz\r\nw\r\n0\r\n\r\n =\r\n\r\n\r\nx + z\r\ny + w\r\n0\r\n\r\n,\r\nso is their sum (because vectors in U are those whose third component\r\nvanishes). Multiplicative closure is similar: for any α ∈ R, α\r\n\r\n\r\nx\r\ny\r\n0\r\n\r\n =\r\n\r\n\r\nαx\r\nαy\r\n0\r\n\r\n, which also has no third component, so is in U.\r\n(b) This is not a vector space for various reasons. A simple one is that\r\nu =\r\n\r\n\r\n1\r\n0\r\nz\r\n\r\n is in U but the vector u + u =\r\n\r\n\r\n2\r\n0\r\n2z\r\n\r\n is not in U (it has a 2\r\nin the first component, but vectors in U always have a 1 there).\r\n322",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b7050b8b-c34b-42de-964b-b6cc4f616dda.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=eadc46420b6f00054c5a7e587ced69569ec3d07880dc09afe6217aade1e6d19e",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "b1b60570-5f83-4dd7-a032-60dc9f45353d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 323,
            "page_width": 612,
            "page_height": 792,
            "content": "E\r\nSample Second Midterm\r\nHere are some worked problems typical for what you might expect on a second\r\nmidterm examination.\r\n1. Find an LU decomposition for the matrix\r\n\r\n\r\n1 1 −1 2\r\n1 3 2 2\r\n−1 −3 −4 6\r\n0 4 7 −2\r\n\r\n\r\nUse your result to solve the system\r\n\r\n\r\n\r\nx + y − z + 2w = 7\r\nx + 3y + 2z + 2w = 6\r\n−x − 3y − 4z + 6w = 12\r\n4y + 7z − 2w = −7\r\n2. Let\r\nA =\r\n\r\n\r\n1 1 1\r\n2 2 3\r\n4 5 6\r\n\r\n .\r\nCompute det A. Find all solutions to (i) AX = 0 and (ii) AX =\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n for\r\nthe vector X ∈ R\r\n3\r\n. Find, but do not solve, the characteristic polynomial of\r\nA.\r\n323",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b1b60570-5f83-4dd7-a032-60dc9f45353d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e07acad68cfa60d989cb256fdb76e1fc808e0a43c2c0feefba0430eded3e9583",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 328
      },
      {
        "segments": [
          {
            "segment_id": "013b892b-ccef-4714-b64d-4ed68e15c32a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 324,
            "page_width": 612,
            "page_height": 792,
            "content": "324 Sample Second Midterm\r\n3. Let M be any 2 × 2 matrix. Show\r\ndet M = −\r\n1\r\n2\r\ntrM2 +\r\n1\r\n2\r\n(trM)\r\n2\r\n.\r\n4. The permanent: Let M = (Mi\r\nj\r\n) be an n×n matrix. An operation producing\r\na single number from M similar to the determinant is the “permanent”\r\nperm M =\r\nX\r\nσ\r\nM1\r\nσ(1)M2σ(2) · · · Mnσ(n)\r\n.\r\nFor example\r\nperm \u0012\r\na b\r\nc d\u0013\r\n= ad + bc .\r\nCalculate\r\nperm\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n .\r\nWhat do you think would happen to the permanent of an n × n matrix M\r\nif (include a brief explanation with each answer):\r\n(a) You multiplied M by a number λ.\r\n(b) You multiplied a row of M by a number λ.\r\n(c) You took the transpose of M.\r\n(d) You swapped two rows of M.\r\n5. Let X be an n × 1 matrix subject to\r\nXT X = (1),\r\nand define\r\nH = I − 2XXT,\r\n(where I is the n × n identity matrix). Show\r\nH = HT = H−1.\r\n6. Suppose λ is an eigenvalue of the matrix M with associated eigenvector v.\r\nIs v an eigenvector of Mk(where k is any positive integer)? If so, what\r\nwould the associated eigenvalue be?\r\nNow suppose that the matrix N is nilpotent, i.e.\r\nN\r\nk = 0\r\nfor some integer k ≥ 2. Show that 0 is the only eigenvalue of N.\r\n324",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/013b892b-ccef-4714-b64d-4ed68e15c32a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7bf12aa5e45c8090ec13b4d51ea5abb4db3c1f8ee1a75e83be6269a9a3cf4775",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 252
      },
      {
        "segments": [
          {
            "segment_id": "00b0dec3-c440-43e5-81b8-5671be4ae6ea",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 325,
            "page_width": 612,
            "page_height": 792,
            "content": "325\r\n7. Let M =\r\n \r\n3 −5\r\n1 −3\r\n!\r\n. Compute M12. (Hint: 212 = 4096.)\r\n8. The Cayley Hamilton Theorem: Calculate the characteristic polynomial\r\nPM(λ) of the matrix M =\r\n\u0012\r\na b\r\nc d\u0013\r\n. Now compute the matrix polynomial\r\nPM(M). What do you observe? Now suppose the n×n matrix A is “similar”\r\nto a diagonal matrix D, in other words\r\nA = P\r\n−1DP\r\nfor some invertible matrix P and D is a matrix with values λ1, λ2, . . . λn\r\nalong its diagonal. Show that the two matrix polynomials PA(A) and PA(D)\r\nare similar (i.e. PA(A) = P\r\n−1PA(D)P). Finally, compute PA(D), what can\r\nyou say about PA(A)?\r\n9. Define what it means for a set U to be a subspace of a vector space V .\r\nNow let U and W be non-trivial subspaces of V . Are the following also\r\nsubspaces? (Remember that ∪ means “union” and ∩ means “intersection”.)\r\n(a) U ∪ W\r\n(b) U ∩ W\r\nIn each case draw examples in R\r\n3\r\nthat justify your answers. If you answered\r\n“yes” to either part also give a general explanation why this is the case.\r\n10. Define what it means for a set of vectors {v1, v2, . . . , vn} to (i) be linearly\r\nindependent, (ii) span a vector space V and (iii) be a basis for a vector\r\nspace V .\r\nConsider the following vectors in R\r\n3\r\nu =\r\n\r\n\r\n−1\r\n−4\r\n3\r\n\r\n , v =\r\n\r\n\r\n4\r\n5\r\n0\r\n\r\n , w =\r\n\r\n\r\n10\r\n7\r\nh + 3\r\n\r\n .\r\nFor which values of h is {u, v, w} a basis for R\r\n3\r\n?\r\nSolutions\r\n1.\r\n\r\n\r\n1 1 −1 2\r\n1 3 2 2\r\n−1 −3 −4 6\r\n0 4 7 −2\r\n\r\n =\r\n\r\n\r\n1 0 0 0\r\n1 1 0 0\r\n−1 0 1 0\r\n0 0 0 1\r\n\r\n\r\n\r\n\r\n1 1 −1 2\r\n0 2 3 0\r\n0 −2 −5 8\r\n0 4 7 −2\r\n\r\n\r\n325",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/00b0dec3-c440-43e5-81b8-5671be4ae6ea.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a3224f0184b03f2825898710ddf9d1a897fbadee2459d6750afc2e5e1ee4b47a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 352
      },
      {
        "segments": [
          {
            "segment_id": "307941b5-108b-4d23-98fa-e7b51002cdd9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 326,
            "page_width": 612,
            "page_height": 792,
            "content": "326 Sample Second Midterm\r\n=\r\n\r\n\r\n1 0 0 0\r\n1 1 0 0\r\n−1 −1 1 0\r\n0 2 0 1\r\n\r\n\r\n\r\n\r\n1 1 −1 2\r\n0 2 3 0\r\n0 0 −2 8\r\n0 0 1 −2\r\n\r\n\r\n=\r\n\r\n\r\n1 0 0 0\r\n1 1 0 0\r\n−1 −1 1 0\r\n0 2 −\r\n1\r\n2\r\n1\r\n\r\n\r\n\r\n\r\n1 1 −1 2\r\n0 2 3 0\r\n0 0 −2 8\r\n0 0 0 2\r\n\r\n .\r\nTo solve MX = V using M = LU we first solve LW = V whose augmented\r\nmatrix reads\r\n\r\n\r\n1 0 0 0 7\r\n1 1 0 0 6\r\n−1 −1 1 0 12\r\n0 2 −\r\n1\r\n2\r\n1 −7\r\n\r\n ∼\r\n\r\n\r\n1 0 0 0 7\r\n0 1 0 0 −1\r\n0 0 1 0 18\r\n0 2 −\r\n1\r\n2\r\n1 −7\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 0 7\r\n0 1 0 0 −1\r\n0 0 1 0 18\r\n0 0 0 1 4\r\n\r\n ,\r\nfrom which we can read off W. Now we compute X by solving UX = W\r\nwith the augmented matrix\r\n\r\n\r\n1 1 −1 2 7\r\n0 2 3 0 −1\r\n0 0 −2 8 18\r\n0 0 0 2 4\r\n\r\n ∼\r\n\r\n\r\n1 1 −1 2 7\r\n0 2 3 0 −1\r\n0 0 −2 0 2\r\n0 0 0 1 2\r\n\r\n\r\n∼\r\n\r\n\r\n1 1 −1 2 7\r\n0 2 0 0 2\r\n0 0 1 0 −1\r\n0 0 0 1 2\r\n\r\n ∼\r\n\r\n\r\n1 0 0 0 1\r\n0 1 0 0 1\r\n0 0 1 0 −1\r\n0 0 0 1 2\r\n\r\n .\r\nSo x = 1, y = 1, z = −1 and w = 2.\r\n2.\r\ndetA = 1.(2.6 − 3.5) − 1.(2.6 − 3.4) + 1.(2.5 − 2.4) = −1 .\r\n(i) Since detA 6= 0, the homogeneous system AX = 0 only has the solution\r\nX = 0. (ii) It is efficient to compute the adjoint\r\nadj A =\r\n\r\n\r\n−3 0 2\r\n−1 2 −1\r\n1 −1 0\r\n\r\n\r\nT\r\n=\r\n\r\n\r\n−3 −1 1\r\n0 2 −1\r\n2 −1 0\r\n\r\n\r\n326",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/307941b5-108b-4d23-98fa-e7b51002cdd9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=180d23138f60c65ab636c9016b767765c711d183eceaa477efee1d073fae4be5",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 396
      },
      {
        "segments": [
          {
            "segment_id": "74736d8d-d62e-4437-8c20-a1e9a7fd5659",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 327,
            "page_width": 612,
            "page_height": 792,
            "content": "327\r\nHence\r\nA\r\n−1 =\r\n\r\n\r\n3 1 −1\r\n0 −2 1\r\n−2 1 0\r\n\r\n .\r\nThus\r\nX =\r\n\r\n\r\n3 1 −1\r\n0 −2 1\r\n−2 1 0\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n =\r\n\r\n\r\n2\r\n−1\r\n0\r\n\r\n .\r\nFinally,\r\nPA(λ) = − det\r\n\r\n\r\n1 − λ 1 1\r\n2 2 − λ 3\r\n4 5 6 − λ\r\n\r\n\r\n= −\r\nh\r\n(1 − λ)[(2 − λ)(6 − λ) − 15] − [2.(6 − λ) − 12] + [10 − 4.(2 − λ)]i\r\n= λ\r\n3 − 9λ2 − λ + 1 .\r\n3. Call M =\r\n\u0012\r\na b\r\nc d\u0013\r\n. Then detM = ad − bc, yet\r\n−\r\n1\r\n2\r\ntr M2 +\r\n1\r\n2\r\n(tr M)\r\n2 = −\r\n1\r\n2\r\ntr \u0012\r\na\r\n2 + bc ∗\r\n∗ bc + d\r\n2\r\n\u0013\r\n−\r\n1\r\n2\r\n(a + d)\r\n2\r\n= −\r\n1\r\n2\r\n(a\r\n2 + 2bc + d2\r\n) + 1\r\n2\r\n(a\r\n2 + 2ad + d2\r\n) = ad − bc ,\r\nwhich is what we were asked to show.\r\n4.\r\nperm\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n = 1 ·(5 · 9 + 6 · 8) + 2 ·(4 · 9 + 6 · 7) + 3 ·(4 · 8 + 5 · 7) = 450 .\r\n(a) Multiplying M by λ replaces every matrix element Mi\r\nσ(j)\r\nin the formula\r\nfor the permanent by λMi\r\nσ(j)\r\n, and therefore produces an overall factor\r\nλ\r\nn\r\n.\r\n(b) Multiplying the i\r\nth row by λ replaces Mi\r\nσ(j)\r\nin the formula for the\r\npermanent by λMi\r\nσ(j)\r\n. Therefore the permanent is multiplied by an\r\noverall factor λ.\r\n327",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/74736d8d-d62e-4437-8c20-a1e9a7fd5659.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=08b814f283c22704c3d80e0543c43fc3d5852282a23fc17a641fa450cbbecfac",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 302
      },
      {
        "segments": [
          {
            "segment_id": "ee55faa1-ed9f-4738-b0b0-09b6337bf066",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 328,
            "page_width": 612,
            "page_height": 792,
            "content": "328 Sample Second Midterm\r\n(c) The permanent of a matrix transposed equals the permanent of the\r\noriginal matrix, because in the formula for the permanent this amounts\r\nto summing over permutations of rows rather than columns. But we\r\ncould then sort the product M\r\nσ(1)\r\n1 M\r\nσ(2)\r\n2\r\n. . . Mσ(n)\r\nn back into its original\r\norder using the inverse permutation σ\r\n−1\r\n. But summing over permuta\u0002tions is equivalent to summing over inverse permutations, and therefore\r\nthe permanent is unchanged.\r\n(d) Swapping two rows also leaves the permanent unchanged. The argu\u0002ment is almost the same as in the previous part, except that we need\r\nonly reshuffle two matrix elements M\r\nj\r\nσ(i)\r\nand Mi\r\nσ(j)\r\n(in the case where\r\nrows i and j were swapped). Then we use the fact that summing over\r\nall permutations σ or over all permutations σe obtained by swapping a\r\npair in σ are equivalent operations.\r\n5. Firstly, lets call (1) = 1 (the 1 × 1 identity matrix). Then we calculate\r\nHT = (I −2XXT)\r\nT = IT −2(XXT\r\n)\r\nT = I −2(XT\r\n)\r\nT XT = I −2XXT = H ,\r\nwhich demonstrates the first equality. Now we compute\r\nH2 = (I − 2XXT)(I − 2XXT) = I − 4XXT + 4XXT XXT\r\n= I − 4XXT + 4X(XT X)XT = I − 4XXT + 4X.1.XT = I .\r\nSo, since HH = I, we have H−1 = H.\r\n6. We know Mv = λv. Hence\r\nM2v = MMv = Mλv = λMv = λ\r\n2\r\nv ,\r\nand similarly\r\nMkv = λMk−1v = . . . = λ\r\nk\r\nv .\r\nSo v is an eigenvector of Mk with eigenvalue λ\r\nk\r\n.\r\nNow let us assume v is an eigenvector of the nilpotent matrix N with eigen\u0002value λ. Then from above\r\nN\r\nk\r\nv = λ\r\nk\r\nv\r\nbut by nilpotence, we also have\r\nN\r\nk\r\nv = 0.\r\nHence λ\r\nkv = 0 and v (being an eigenvector) cannot vanish. Thus λk = 0\r\nand in turn λ = 0.\r\n328",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ee55faa1-ed9f-4738-b0b0-09b6337bf066.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0e7affd7630dde385e5d2012de8a07cf6456303b3c1aa7f2c86e1fedbcd3c7ef",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 345
      },
      {
        "segments": [
          {
            "segment_id": "0d9149b2-686d-4c31-a619-f7b8a74f5e2b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 329,
            "page_width": 612,
            "page_height": 792,
            "content": "329\r\n7. Let us think about the eigenvalue problem Mv = λv. This has solutions\r\nwhen\r\n0 = det \u0012\r\n3 − λ −5\r\n1 −3 − λ\r\n\u0013\r\n= λ\r\n2 − 4 ⇒ λ = ±2 .\r\nThe associated eigenvalues solve the homogeneous systems (in augmented\r\nmatrix form)\r\n\u0012\r\n1 −5 0\r\n1 −5 0\r\n\u0013\r\n∼\r\n\u0012\r\n1 −5 0\r\n0 0 0\r\n\u0013\r\nand \u0012\r\n5 −5 0\r\n1 −1 0\r\n\u0013\r\n∼\r\n\u0012\r\n1 −1 0\r\n0 0 0\r\n\u0013\r\n,\r\nrespectively, so are v2 =\r\n\u0012\r\n5\r\n1\r\n\u0013\r\nand v−2 =\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n. Hence M12v2 = 212v2 and\r\nM12v−2 = (−2)12v−2. Now, \u0012\r\nx\r\ny\r\n\u0013\r\n=\r\nx−y\r\n4\r\n\u0012\r\n5\r\n1\r\n\u0013\r\n−\r\nx−5y\r\n4\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n(this was obtained\r\nby solving the linear system av2 + bv−2 = for a and b). Thus\r\nM\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n=\r\nx − y\r\n4\r\nMv2 −\r\nx − 5y\r\n4\r\nMv−2\r\n= 212\u0010x − y\r\n4\r\nv2 −\r\nx − 5y\r\n4\r\nv−2\r\n\u0011\r\n= 212 \u0012\r\nx\r\ny\r\n\u0013\r\n.\r\nThus\r\nM12 =\r\n\u0012\r\n4096 0\r\n0 4096\u0013\r\n.\r\nIf you understand the above explanation, then you have a good understanding\r\nof diagonalization. A quicker route is simply to observe that M2 =\r\n\u0012\r\n4 0\r\n0 4\u0013\r\n.\r\n8.\r\nPM(λ) = (−1)2det \u0012\r\na − λ b\r\nc d − λ\r\n\u0013\r\n= (λ − a)(λ − d) − bc .\r\nThus\r\nPM(M) = (M − aI)(M − dI) − bcI\r\n=\r\n\u0012\u0012a b\r\nc d\u0013\r\n−\r\n\u0012\r\na 0\r\n0 a\r\n\u0013\u0013 \u0012\u0012a b\r\nc d\u0013\r\n−\r\n\u0012\r\nd 0\r\n0 d\r\n\u0013\u0013 −\u0012\r\nbc 0\r\n0 bc\u0013\r\n=\r\n\u0012\r\n0 b\r\nc d − a\r\n\u0013 \u0012a − d b\r\nc 0\r\n\u0013\r\n−\r\n\u0012\r\nbc 0\r\n0 bc\u0013\r\n= 0 .\r\nObserve that any 2 × 2 matrix is a zero of its own characteristic polynomial\r\n(in fact this holds for square matrices of any size).\r\n329",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0d9149b2-686d-4c31-a619-f7b8a74f5e2b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=32687b70c8a9a6ccb903cb66ab61ca9b2ab40549c389c4d74d98ddafbc3628ca",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 335
      },
      {
        "segments": [
          {
            "segment_id": "742dea6a-c1f3-40e2-9c47-eccec46ca08b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 330,
            "page_width": 612,
            "page_height": 792,
            "content": "330 Sample Second Midterm\r\nNow if A = P\r\n−1DP then A2 = P−1DP P −1DP = P−1D2P. Similarly\r\nAk = P\r\n−1DkP. So for any matrix polynomial we have\r\nA\r\nn + c1An−1 + · · · cn−1A + cnI\r\n= P\r\n−1DnP + c1P−1Dn−1P + · · · cn−1P−1DP + cnP−1P\r\n= P\r\n−1\r\n(Dn + c1Dn−1 + · · · cn−1D + cnI)P .\r\nThus we may conclude PA(A) = P\r\n−1PA(D)P.\r\nNow suppose D =\r\n\r\n\r\nλ1 0 · · · 0\r\n0 λ2 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 · · · λn\r\n\r\n\r\n. Then\r\nPA(λ) = det(λI − A) = det(λP −1IP − P\r\n−1DP) = detP.det(λI − D).detP\r\n= det(λI − D) = det\r\n\r\n\r\nλ − λ1 0 · · · 0\r\n0 λ − λ2 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · λ − λn\r\n\r\n\r\n= (λ − λ1)(λ − λ2). . .(λ − λn).\r\nThus we see that λ1, λ2, . . . , λn are the eigenvalues of M. Finally we compute\r\nPA(D) = (D − λ1)(D − λ2). . .(D − λn)\r\n=\r\n\r\n\r\n0 0 · · · 0\r\n0 λ2 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · λn\r\n\r\n\r\n\r\n\r\nλ1 0 · · · 0\r\n0 0 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · λn\r\n\r\n\r\n. . .\r\n\r\n\r\nλ1 0 · · · 0\r\n0 λ2 0\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n0 0 · · · 0\r\n\r\n\r\n= 0 .\r\nWe conclude the PM(M) = 0.\r\n9. A subset of a vector space is called a subspace if it itself is a vector space,\r\nusing the rules for vector addition and scalar multiplication inherited from\r\nthe original vector space.\r\n(a) So long as U 6= U ∪ W 6= W the answer is no. Take, for example, U\r\nto be the x-axis in R\r\n2 and W to be the y-axis. Then \r\n1, 0\r\n\u0001\r\n∈ U and\r\n\r\n0, 1\r\n\u0001\r\n∈ W, but \r\n1, 0\r\n\u0001\r\n+\r\n\r\n0, 1\r\n\u0001\r\n=\r\n\r\n1, 1\r\n\u0001\r\n∈/ U ∪ W. So U ∪ W is not\r\nadditively closed and is not a vector space (and thus not a subspace).\r\nIt is easy to draw the example described.\r\n330",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/742dea6a-c1f3-40e2-9c47-eccec46ca08b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=8df485e4d8d66f2b0bcc8993bebc94ed6db2e5f3d4c62f8492ec58fb856afca7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 421
      },
      {
        "segments": [
          {
            "segment_id": "040ec4b2-8358-4a9c-8ef2-ed8e52fdb666",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 331,
            "page_width": 612,
            "page_height": 792,
            "content": "331\r\n(b) Here the answer is always yes. The proof is not difficult. Take a vector\r\nu and w such that u ∈ U ∩ W 3 w. This means that both u and w\r\nare in both U and W. But, since U is a vector space, αu + βw is also\r\nin U. Similarly, αu + βw ∈ W. Hence αu + βw ∈ U ∩ W. So closure\r\nholds in U ∩ W and this set is a subspace by the subspace theorem.\r\nHere, a good picture to draw is two planes through the origin in R\r\n3\r\nintersecting at a line (also through the origin).\r\n10. (i) We say that the vectors {v1, v2, . . . vn} are linearly independent if there\r\nexist no constants c\r\n1\r\n, c\r\n2\r\n, . . . cn(not all vanishing) such that c\r\n1v1 + c2v2 +\r\n· · · + c\r\nnvn = 0. Alternatively, we can require that there is no non-trivial\r\nsolution for scalars c\r\n1\r\n, c\r\n2\r\n, . . . , cnto the linear system c\r\n1v1 + c2v2 + · · · +\r\nc\r\nnvn = 0. (ii) We say that these vectors span a vector space V if the set\r\nspan{v1, v2, . . . vn} = {c\r\n1v1 + c2v2 + · · · + cnvn : c1\r\n, c2, . . . cn ∈ R} = V . (iii)\r\nWe call {v1, v2, . . . vn} a basis for V if {v1, v2, . . . vn} are linearly independent\r\nand span{v1, v2, . . . vn} = V .\r\nFor u, v, w to be a basis for R\r\n3\r\n, we firstly need (the spanning requirement)\r\nthat any vector\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n can be written as a linear combination of u, v and w\r\nc\r\n1\r\n\r\n\r\n−1\r\n−4\r\n3\r\n\r\n + c\r\n2\r\n\r\n\r\n4\r\n5\r\n0\r\n\r\n + c\r\n3\r\n\r\n\r\n10\r\n7\r\nh + 3\r\n\r\n =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\nThe linear independence requirement implies that when x = y = z = 0, the\r\nonly solution to the above system is c\r\n1 = c2 = c3 = 0. But the above system\r\nin matrix language reads\r\n\r\n\r\n−1 4 10\r\n−4 5 7\r\n3 0 h + 3\r\n\r\n\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n .\r\nBoth requirements mean that the matrix on the left hand side must be\r\ninvertible, so we examine its determinant\r\ndet\r\n\r\n\r\n−1 4 10\r\n−4 5 7\r\n3 0 h + 3\r\n\r\n = −4 · (−4 · (h + 3) − 7 · 3) + 5 · (−1 · (h + 3) − 10 · 3)\r\n= 11(h − 3)·\r\nHence we obtain a basis whenever h 6= 3.\r\n331",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/040ec4b2-8358-4a9c-8ef2-ed8e52fdb666.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3f58107ef9cc409688c0459bc037292b5febbda653f294e9c537706ff40399fa",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "ae0eaaf2-39d8-42c2-9ecf-4e762c775ba8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 332,
            "page_width": 612,
            "page_height": 792,
            "content": "332 Sample Second Midterm\r\n332",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ae0eaaf2-39d8-42c2-9ecf-4e762c775ba8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=aaee326afbdeb9a036739e727588802b7f28424bb4b1e39204fa8685b76dd6c4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 503
      },
      {
        "segments": [
          {
            "segment_id": "171d1ebe-8437-466d-a12c-7e535865a220",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 333,
            "page_width": 612,
            "page_height": 792,
            "content": "F\r\nSample Final Exam\r\nHere are some worked problems typical for what you might expect on a final\r\nexamination.\r\n1. Define the following terms:\r\n(a) An orthogonal matrix.\r\n(b) A basis for a vector space.\r\n(c) The span of a set of vectors.\r\n(d) The dimension of a vector space.\r\n(e) An eigenvector.\r\n(f) A subspace of a vector space.\r\n(g) The kernel of a linear transformation.\r\n(h) The nullity of a linear transformation.\r\n(i) The image of a linear transformation.\r\n(j) The rank of a linear transformation.\r\n(k) The characteristic polynomial of a square matrix.\r\n(l) An equivalence relation.\r\n(m) A homogeneous solution to a linear system of equations.\r\n(n) A particular solution to a linear system of equations.\r\n(o) The general solution to a linear system of equations.\r\n(p) The direct sum of a pair of subspaces of a vector space.\r\n333",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/171d1ebe-8437-466d-a12c-7e535865a220.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d19d788510eb44c75f3a25b117b9b9ac39e76dfbbf484624a803d3c743074112",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4447d149-a7a6-493a-9de0-d6c053f8ac26",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 334,
            "page_width": 612,
            "page_height": 792,
            "content": "334 Sample Final Exam\r\n(q) The orthogonal complement to a subspace of a vector space.\r\n2. Kirchoff ’s laws: Electrical circuits are easy to analyze using systems of equa\u0002tions. The change in voltage (measured in Volts) around any loop due to\r\nbatteries |\r\n\f\r\n\f and resistors /\\/\\/\\/\\ (given by the product of the current mea\u0002sured in Amps and resistance measured in Ohms) equals zero. Also, the sum\r\nof currents entering any junction vanishes. Consider the circuit\r\nJ Amps\r\n3 Ohms\r\n60 Volts\r\n1 Ohm 2 Ohms\r\n80 Volts\r\n3 Ohms\r\nV Volts\r\nI Amps 13 Amps\r\nFind all possible equations for the unknowns I, J and V and then solve for\r\nI, J and V . Give your answers with correct units.\r\n3. Suppose M is the matrix of a linear transformation\r\nL : U → V\r\nand the vector spaces U and V have dimensions\r\ndim U = n , dim V = m ,\r\nand\r\nm 6= n .\r\nAlso assume\r\nkerL = {0U } .\r\n(a) How many rows does M have?\r\n(b) How many columns does M have?\r\n(c) Are the columns of M linearly independent?\r\n(d) What size matrix is MTM?\r\n(e) What size matrix is MMT?\r\n(f) Is MTM invertible?\r\n(g) is MTM symmetric?\r\n334",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4447d149-a7a6-493a-9de0-d6c053f8ac26.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9cfc59f0e7ad24b9fd61e4b64f3e39f91993c56b1453b031db7f5a0d272372c8",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 354
      },
      {
        "segments": [
          {
            "segment_id": "a833a0f4-af20-4092-b958-ff11362d2bfc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 335,
            "page_width": 612,
            "page_height": 792,
            "content": "335\r\n(h) Is MTM diagonalizable?\r\n(i) Does MTM have a zero eigenvalue?\r\n(j) Suppose U = V and ker L 6= {0U }. Find an eigenvalue of M.\r\n(k) Suppose U = V and ker L 6= {0U }. Find det M.\r\n4. Consider the system of equations\r\nx + y + z + w = 1\r\nx + 2y + 2z + 2w = 1\r\nx + 2y + 3z + 3w = 1\r\nExpress this system as a matrix equation MX = V and then find the solution\r\nset by computing an LU decomposition for the matrix M (be sure to use\r\nback and forward substitution).\r\n5. Compute the following determinants\r\ndet \u0012\r\n1 2\r\n3 4\u0013\r\n, det\r\n\r\n\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n\r\n , det\r\n\r\n\r\n1 2 3 4\r\n5 6 7 8\r\n9 10 11 12\r\n13 14 15 16\r\n\r\n ,\r\ndet\r\n\r\n\r\n1 2 3 4 5\r\n6 7 8 9 10\r\n11 12 13 14 15\r\n16 17 18 19 20\r\n21 22 23 24 25\r\n\r\n\r\n.\r\nNow test your skills on\r\ndet\r\n\r\n\r\n1 2 3 · · · n\r\nn + 1 n + 2 n + 3 · · · 2n\r\n2n + 1 2n + 2 2n + 3 3n\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\nn\r\n2 − n + 1 n2 − n + 2 n2 − n + 3 · · · n2\r\n\r\n\r\n.\r\nMake sure to jot down a few brief notes explaining any clever tricks you use.\r\n6. For which values of a does\r\nU = span\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n ,\r\n\r\n\r\na\r\n1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n= R\r\n3\r\n?\r\n335",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a833a0f4-af20-4092-b958-ff11362d2bfc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2cc12f20b457077abc2999e0ea65f5fee2ce08ff50450a6940c5952742b6b51c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 317
      },
      {
        "segments": [
          {
            "segment_id": "72a0b700-70d1-4586-87a5-5ad3e76401cc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 336,
            "page_width": 612,
            "page_height": 792,
            "content": "336 Sample Final Exam\r\nFor any special values of a at which U 6= R\r\n3\r\n, express the subspace U as the\r\nspan of the least number of vectors possible. Give the dimension of U for\r\nthese cases and draw a picture showing U inside R\r\n3\r\n.\r\n7. Vandermonde determinant: Calculate the following determinants\r\ndet \u0012\r\n1 x\r\n1 y\r\n\u0013\r\n, det\r\n\r\n\r\n1 x x2\r\n1 y y2\r\n1 z z2\r\n\r\n , det\r\n\r\n\r\n1 x x2 x\r\n3\r\n1 y y2 y\r\n3\r\n1 z z2z\r\n3\r\n1 w w2 w\r\n3\r\n\r\n .\r\nBe sure to factorize you answers, if possible.\r\nChallenging: Compute the determinant\r\ndet\r\n\r\n\r\n1 x1 (x1)\r\n2\r\n· · · (x1)\r\nn−1\r\n1 x2 (x2)\r\n2\r\n· · · (x2)\r\nn−1\r\n1 x3 (x3)\r\n2\r\n· · · (x3)\r\nn−1\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n1 xn (xn)\r\n2\r\n· · · (xn)\r\nn−1\r\n\r\n\r\n.\r\n8. (a) Do the vectors\r\n\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n\r\n ,\r\n\r\n\r\n3\r\n2\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\n\r\n\r\n\r\nform a basis for R\r\n3\r\n?\r\nBe sure to justify your answer.\r\n(b) Find a basis for R\r\n4\r\nthat includes the vectors\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\nand\r\n\r\n\r\n4\r\n3\r\n2\r\n1\r\n\r\n.\r\n(c) Explain in words how to generalize your computation in part (b) to\r\nobtain a basis for R\r\nn\r\nthat includes a given pair of (linearly independent)\r\nvectors u and v.\r\n9. Elite NASA engineers determine that if a satellite is placed in orbit starting\r\nat a point O, it will return exactly to that same point after one orbit of the\r\nearth. Unfortunately, if there is a small mistake in the original location of\r\nthe satellite, which the engineers label by a vector X in R\r\n3 with origin1 at O,\r\n1This is a spy satellite. The exact location of O, the orientation of the coordinate axes\r\nin R\r\n3 and the unit system employed by the engineers are CIA secrets.\r\n336",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/72a0b700-70d1-4586-87a5-5ad3e76401cc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0d3943ac0d7e4f8fdf49b86e2047826299b9d540228734c1c18faaa353f3cbce",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 387
      },
      {
        "segments": [
          {
            "segment_id": "c323ba19-0c0c-49d0-a4d6-b8da3d9ab267",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 337,
            "page_width": 612,
            "page_height": 792,
            "content": "337\r\nafter one orbit the satellite will instead return to some other point Y ∈ R\r\n3\r\n.\r\nThe engineer’s computations show that Y is related to X by a matrix\r\nY =\r\n\r\n\r\n0\r\n1\r\n2\r\n1\r\n1\r\n2\r\n1\r\n2\r\n1\r\n2\r\n1\r\n1\r\n2\r\n0\r\n\r\n\r\nX .\r\n(a) Find all eigenvalues of the above matrix.\r\n(b) Determine all possible eigenvectors associated with each eigenvalue.\r\nLet us assume that the rule found by the engineers applies to all subsequent\r\norbits. Discuss case by case, what will happen to the satellite if the initial\r\nmistake in its location is in a direction given by an eigenvector.\r\n10. In this problem the scalars in the vector spaces are bits (0, 1 with 1+ 1 = 0).\r\nThe space Bkis the vector space of bit-valued, k-component column vectors.\r\n(a) Find a basis for B3.\r\n(b) Your answer to part (a) should be a list of vectors v1, v2, . . . vn. What\r\nnumber did you find for n?\r\n(c) How many elements are there in the set B3.\r\n(d) What is the dimension of the vector space B3.\r\n(e) Suppose L : B3 → B = {0, 1} is a linear transformation. Explain why\r\nspecifying L(v1), L(v2), . . . , L(vn) completely determines L.\r\n(f) Use the notation of part (e) to list all linear transformations\r\nL : B\r\n3 → B .\r\nHow many different linear transformations did you find? Compare your\r\nanswer to part (c).\r\n(g) Suppose L1 : B3 → B and L2 : B3 → B are linear transformations,\r\nand α and β are bits. Define a new map (αL1 + βL2) : B3 → B by\r\n(αL1 + βL2)(v) = αL1(v) + βL2(v).\r\nIs this map a linear transformation? Explain.\r\n(h) Do you think the set of all linear transformations from B3to B is a\r\nvector space using the addition rule above? If you answer yes, give a\r\nbasis for this vector space and state its dimension.\r\n337",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c323ba19-0c0c-49d0-a4d6-b8da3d9ab267.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d6f9995e072df963628d40cdf52990080521dfd0820272bae746b195ddae11ec",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 337
      },
      {
        "segments": [
          {
            "segment_id": "53926109-f3e6-48f5-a654-a5e137d59e93",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 338,
            "page_width": 612,
            "page_height": 792,
            "content": "338 Sample Final Exam\r\n11. A team of distinguished, post-doctoral engineers analyzes the design for a\r\nbridge across the English channel. They notice that the force on the center\r\nof the bridge when it is displaced by an amount X =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n is given by\r\nF =\r\n\r\n\r\n−x − y\r\n−x − 2y − z\r\n−y − z\r\n\r\n .\r\nMoreover, having read Newton’s Principiæ, they know that force is propor\u0002tional to acceleration so that2\r\nF =\r\nd\r\n2X\r\ndt2\r\n.\r\nSince the engineers are worried the bridge might start swaying in the heavy\r\nchannel winds, they search for an oscillatory solution to this equation of the\r\nform3\r\nX = cos(ωt)\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n .\r\n(a) By plugging their proposed solution in the above equations the engi\u0002neers find an eigenvalue problem\r\nM\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n = −ω\r\n2\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n .\r\nHere M is a 3 × 3 matrix. Which 3 × 3 matrix M did the engineers\r\nfind? Justify your answer.\r\n(b) Find the eigenvalues and eigenvectors of the matrix M.\r\n(c) The number |ω| is often called a characteristic frequency. What char\u0002acteristic frequencies do you find for the proposed bridge?\r\n(d) Find an orthogonal matrix P such that MP = P D where D is a\r\ndiagonal matrix. Be sure to also state your result for D.\r\n2The bridge is intended for French and English military vehicles, so the exact units,\r\ncoordinate system and constant of proportionality are state secrets.\r\n3Here, a, b, c and ω are constants which we aim to calculate.\r\n338",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/53926109-f3e6-48f5-a654-a5e137d59e93.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=557c78b656e2fa631169b1110af8689fd6962c68d7ef2b6006b942a8e25df6f9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 278
      },
      {
        "segments": [
          {
            "segment_id": "84c7e251-7bd0-4d6a-8a5e-724dafd214df",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 339,
            "page_width": 612,
            "page_height": 792,
            "content": "339\r\n(e) Is there a direction in which displacing the bridge yields no force? If\r\nso give a vector in that direction. Briefly evaluate the quality of this\r\nbridge design.\r\n12. Conic Sections: The equation for the most general conic section is given by\r\nax2 + 2bxy + dy2 + 2cx + 2ey + f = 0 .\r\nOur aim is to analyze the solutions to this equation using matrices.\r\n(a) Rewrite the above quadratic equation as one of the form\r\nXTMX + XT C + C\r\nT X + f = 0\r\nrelating an unknown column vector X =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n, its transpose XT, a\r\n2 × 2 matrix M, a constant column vector C and the constant f.\r\n(b) Does your matrix M obey any special properties? Find its eigenvalues.\r\nYou may call your answers λ and µ for the rest of the problem to save\r\nwriting.\r\nFor the rest of this problem we will focus on central conics for\r\nwhich the matrix M is invertible.\r\n(c) Your equation in part (a) above should be be quadratic in X. Recall\r\nthat if m 6= 0, the quadratic equation mx2 + 2cx + f = 0 can be\r\nrewritten by completing the square\r\nm\r\n\u0010\r\nx +\r\nc\r\nm\r\n\u00112\r\n=\r\nc\r\n2\r\nm\r\n− f .\r\nBeing very careful that you are now dealing with matrices, use the\r\nsame trick to rewrite your answer to part (a) in the form\r\nY\r\nTMY = g.\r\nMake sure you give formulas for the new unknown column vector Y\r\nand constant g in terms of X, M, C and f. You need not multiply out\r\nany of the matrix expressions you find.\r\nIf all has gone well, you have found a way to shift coordinates\r\nfor the original conic equation to a new coordinate system\r\nwith its origin at the center of symmetry. Our next aim is\r\nto rotate the coordinate axes to produce a readily recognizable\r\nequation.\r\n339",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/84c7e251-7bd0-4d6a-8a5e-724dafd214df.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7b3ef97a5afcbd542403c8912d9e1484b00b76275ab747121d15cc3494996959",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 331
      },
      {
        "segments": [
          {
            "segment_id": "23cfdbae-07e1-4b8f-909d-2900d95e197a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 340,
            "page_width": 612,
            "page_height": 792,
            "content": "340 Sample Final Exam\r\n(d) Why is the angle between vectors V and W is not changed when you\r\nreplace them by P V and PW for P any orthogonal matrix?\r\n(e) Explain how to choose an orthogonal matrix P such that MP = P D\r\nwhere D is a diagonal matrix.\r\n(f) For the choice of P above, define our final unknown vector Z by Y =\r\nP Z. Find an expression for Y\r\nTMY in terms of Z and the eigenvalues\r\nof M.\r\n(g) Call Z =\r\n\u0012\r\nz\r\nw\r\n\u0013\r\n. What equation do z and w obey? (Hint, write your\r\nanswer using λ, µ and g.)\r\n(h) Central conics are circles, ellipses, hyperbolae or a pair of straight lines.\r\nGive examples of values of (λ, µ, g) which produce each of these cases.\r\n13. Let L: V → W be a linear transformation between finite-dimensional vector\r\nspaces V and W, and let M be a matrix for L (with respect to some basis\r\nfor V and some basis for W). We know that L has an inverse if and only if\r\nit is bijective, and we know a lot of ways to tell whether M has an inverse.\r\nIn fact, L has an inverse if and only if M has an inverse:\r\n(a) Suppose that L is bijective (i.e., one-to-one and onto).\r\ni. Show that dim V = rankL = dim W.\r\nii. Show that 0 is not an eigenvalue of M.\r\niii. Show that M is an invertible matrix.\r\n(b) Now, suppose that M is an invertible matrix.\r\ni. Show that 0 is not an eigenvalue of M.\r\nii. Show that L is injective.\r\niii. Show that L is surjective.\r\n14. Captain Conundrum gives Queen Quandary a pair of newborn doves, male\r\nand female for her birthday. After one year, this pair of doves breed and\r\nproduce a pair of dove eggs. One year later these eggs hatch yielding a new\r\npair of doves while the original pair of doves breed again and an additional\r\npair of eggs are laid. Captain Conundrum is very happy because now he will\r\nnever need to buy the Queen a present ever again!\r\nLet us say that in year zero, the Queen has no doves. In year one she has\r\none pair of doves, in year two she has two pairs of doves etc... Call Fn the\r\nnumber of pairs of doves in years n. For example, F0 = 0, F1 = 1 and\r\nF2 = 1. Assume no doves die and that the same breeding pattern continues\r\n340",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/23cfdbae-07e1-4b8f-909d-2900d95e197a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d5d31c4e436f1c8b265e22c8994ca0d76144ac86a019bfece6b4608a937c7fd4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 430
      },
      {
        "segments": [
          {
            "segment_id": "faa5bbd4-75e0-40bf-b6b0-5493fbc7b099",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 341,
            "page_width": 612,
            "page_height": 792,
            "content": "341\r\nwell into the future. Then F3 = 2 because the eggs laid by the first pair of\r\ndoves in year two hatch. Notice also that in year three, two pairs of eggs are\r\nlaid (by the first and second pair of doves). Thus F4 = 3.\r\n(a) Compute F5 and F6.\r\n(b) Explain why (for any n ≥ 2) the following recursion relation holds\r\nFn = Fn−1 + Fn−2 .\r\n(c) Let us introduce a column vector Xn =\r\n\u0012\r\nFn\r\nFn−1\r\n\u0013\r\n. Compute X1 and X2.\r\nVerify that these vectors obey the relationship\r\nX2 = MX1 where M =\r\n\u0012\r\n1 1\r\n1 0\u0013\r\n.\r\n(d) Show that Xn+1 = MXn.\r\n(e) Diagonalize M. (I.e., write M as a product M = P DP −1 where D is\r\ndiagonal.)\r\n(f) Find a simple expression for Mnin terms of P, D and P\r\n−1\r\n.\r\n(g) Show that Xn+1 = MnX1.\r\n(h) The number\r\nϕ =\r\n1 + √\r\n5\r\n2\r\nis called the golden ratio. Write the eigenvalues of M in terms of ϕ.\r\n(i) Put your results from parts (c), (f) and (g) together (along with a short\r\nmatrix computation) to find the formula for the number of doves Fn\r\nin year n expressed in terms of ϕ, 1 − ϕ and n.\r\n15. Use Gram–Schmidt to find an orthonormal basis for\r\nspan\r\n\r\n\r\n\r\n\r\n\r\n1\r\n1\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n1\r\n1\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n2\r\n\r\n\r\n\r\n\r\n\r\n.\r\n16. Let M be the matrix of a linear transformation L : V → W in given bases\r\nfor V and W. Fill in the blanks below with one of the following six vector\r\nspaces: V , W, kerL,\r\n\r\nkerL\r\n\u0001⊥\r\n, imL,\r\n\r\nimL\r\n\u0001⊥\r\n.\r\n341",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/faa5bbd4-75e0-40bf-b6b0-5493fbc7b099.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e00710a5f3dab5993b98880b5dd4a7a03c6836ee57b5123d2878445d5391419b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "a439e9b5-7471-4cec-ab5d-73330cc34861",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 342,
            "page_width": 612,
            "page_height": 792,
            "content": "342 Sample Final Exam\r\n(a) The columns of M span in the basis given for .\r\n(b) The rows of M span in the basis given for .\r\nSuppose\r\nM =\r\n\r\n\r\n1 2 1 3\r\n2 1 −1 2\r\n1 0 0 −1\r\n4 1 −1 0\r\n\r\n\r\nis the matrix of L in the bases {v1, v2, v3, v4} for V and {w1, w2, w3, w4}\r\nfor W. Find bases for kerL and imL. Use the dimension formula to check\r\nyour result.\r\n17. Captain Conundrum collects the following data set\r\ny x\r\n5 −2\r\n2 −1\r\n0 1\r\n3 2\r\nwhich he believes to be well-approximated by a parabola\r\ny = ax2 + bx + c .\r\n(a) Write down a system of four linear equations for the unknown coeffi\u0002cients a, b and c.\r\n(b) Write the augmented matrix for this system of equations.\r\n(c) Find the reduced row echelon form for this augmented matrix.\r\n(d) Are there any solutions to this system?\r\n(e) Find the least squares solution to the system.\r\n(f) What value does Captain Conundrum predict for y when x = 2?\r\n18. Suppose you have collected the following data for an experiment\r\nx y\r\nx1 y1\r\nx2 y2\r\nx3 y3\r\nand believe that the result is well modeled by a straight line\r\ny = mx + b .\r\n342",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a439e9b5-7471-4cec-ab5d-73330cc34861.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ef3fae14f152297481c9d344ec708a2f77db0f341ba7006f644b7c854dd8f5f0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 227
      },
      {
        "segments": [
          {
            "segment_id": "7fa67a78-cc3d-45b8-9e30-d2aa3ffa7e50",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 343,
            "page_width": 612,
            "page_height": 792,
            "content": "343\r\n(a) Write down a linear system of equations you could use to find the slope\r\nm and constant term b.\r\n(b) Arrange the unknowns (m, b) in a column vector X and write your\r\nanswer to (a) as a matrix equation\r\nMX = V .\r\nBe sure to give explicit expressions for the matrix M and column vector\r\nV .\r\n(c) For a generic data set, would you expect your system of equations to\r\nhave a solution? Briefly explain your answer.\r\n(d) Calculate MTM and (MTM)\r\n−1\r\n(for the latter computation, state the\r\ncondition required for the inverse to exist).\r\n(e) Compute the least squares solution for m and b.\r\n(f) The least squares method determines a vector X that minimizes the\r\nlength of the vector V − MX. Draw a rough sketch of the three data\r\npoints in the (x, y)-plane as well as their least squares fit. Indicate how\r\nthe components of V − MX could be obtained from your picture.\r\nSolutions\r\n1. You can find the definitions for all these terms by consulting the index of\r\nthis book.\r\n2. Both junctions give the same equation for the currents\r\nI + J + 13 = 0 .\r\nThere are three voltage loops (one on the left, one on the right and one going\r\naround the outside of the circuit). Respectively, they give the equations\r\n60 − I − 80 − 3I = 0\r\n80 + 2J − V + 3J = 0\r\n60 − I + 2J − V + 3J − 3I = 0 . (F.1)\r\nThe above equations are easily solved (either using an augmented matrix\r\nand row reducing, or by substitution). The result is I = −5 Amps, J = −8\r\nAmps, V = 40 Volts.\r\n3. (a) m.\r\n343",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7fa67a78-cc3d-45b8-9e30-d2aa3ffa7e50.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d9e64628dc61d52d8866dc5cffeb764fbc4cce7f7be26fc3c71649be5a619bfa",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "452cfef9-dacb-483b-ac0b-de4e78801e73",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 344,
            "page_width": 612,
            "page_height": 792,
            "content": "344 Sample Final Exam\r\n(b) n.\r\n(c) Yes.\r\n(d) n × n.\r\n(e) m × m.\r\n(f) Yes. This relies on kerM = 0 because if MTM had a non-trivial kernel,\r\nthen there would be a non-zero solution X to MTMX = 0. But then\r\nby multiplying on the left by XT we see that ||MX|| = 0. This in turn\r\nimplies MX = 0 which contradicts the triviality of the kernel of M.\r\n(g) Yes because MTM\r\n\u0001T = MT\r\n(MT)\r\nT = MTM.\r\n(h) Yes, all symmetric matrices have a basis of eigenvectors.\r\n(i) No, because otherwise it would not be invertible.\r\n(j) Since the kernel of L is non-trivial, M must have 0 as an eigenvalue.\r\n(k) Since M has a zero eigenvalue in this case, its determinant must vanish.\r\nI.e., det M = 0.\r\n4. To begin with the system becomes\r\n\r\n\r\n1 1 1 1\r\n1 2 2 2\r\n1 2 3 3\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n\r\n=\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n\r\nThen\r\nM =\r\n\r\n\r\n1 1 1 1\r\n1 2 2 2\r\n1 2 3 3\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n1 1 0\r\n1 0 1\r\n\r\n\r\n\r\n\r\n1 1 1 1\r\n0 1 1 1\r\n0 1 2 2\r\n\r\n\r\n=\r\n\r\n\r\n1 0 0\r\n1 1 0\r\n1 1 1\r\n\r\n\r\n\r\n\r\n1 1 1 1\r\n0 1 1 1\r\n0 0 1 1\r\n\r\n = LU\r\nSo now MX = V becomes LW = V where W = UX =\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n (say). Thus\r\nwe solve LW = V by forward substitution\r\na = 1, a + b = 1, a + b + c = 1 ⇒ a = 1, b = 0, c = 0 .\r\n344",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/452cfef9-dacb-483b-ac0b-de4e78801e73.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1dedf06c9ce1197039f3eb6d92ec65383f14c62e8796574d7a8e838fafa6eed4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 316
      },
      {
        "segments": [
          {
            "segment_id": "1350845a-b427-44e8-b393-ea7baa28bbf7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 345,
            "page_width": 612,
            "page_height": 792,
            "content": "345\r\nNow solve UX = W by back substitution\r\nx + y + z + w = 1, y + z + w = 0, z + w = 0\r\n⇒ w = µ (arbitrary), z = −µ, y = 0, x = 1 .\r\nThe solution set is\r\n\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\ny\r\n\r\n =\r\n\r\n\r\n1\r\n0\r\n−µ\r\nµ\r\n\r\n\r\n: µ ∈ R\r\n\r\n\r\n\r\n5. First\r\ndet \u0012\r\n1 2\r\n3 4\u0013\r\n= −2 .\r\nAll the other determinants vanish because the first three rows of each matrix\r\nare not independent. Indeed, 2R2 − R1 = R3 in each case, so we can make\r\nrow operations to get a row of zeros and thus a zero determinant.\r\n6. If U spans R\r\n3\r\n, then we must be able to express any vector X =\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n ∈ R\r\n3\r\nas\r\nX = c\r\n1\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n + c\r\n2\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n + c\r\n3\r\n\r\n\r\na\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n1 1 a\r\n0 2 1\r\n1 −3 0\r\n\r\n\r\n\r\n\r\nc\r\n1\r\nc\r\n2\r\nc\r\n3\r\n\r\n ,\r\nfor some coefficients c\r\n1\r\n, c\r\n2 and c3\r\n. This is a linear system. We could solve\r\nfor c\r\n1\r\n, c\r\n2 and c3 using an augmented matrix and row operations. However,\r\nsince we know that dim R\r\n3 = 3, if U spans R3\r\n, it will also be a basis. Then\r\nthe solution for c\r\n1\r\n, c\r\n2 and c3 would be unique. Hence, the 3×3 matrix above\r\nmust be invertible, so we examine its determinant\r\ndet\r\n\r\n\r\n1 1 a\r\n0 2 1\r\n1 −3 0\r\n\r\n = 1.(2.0 − 1.(−3)) + 1.(1.1 − a.2) = 4 − 2a .\r\nThus U spans R\r\n3 whenever a 6= 2. When a = 2 we can write the third vector\r\nin U in terms of the preceding ones as\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n =\r\n3\r\n2\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n +\r\n1\r\n2\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n .\r\n(You can obtain this result, or an equivalent one by studying the above linear\r\nsystem with X = 0, i.e., the associated homogeneous system.) The two\r\n345",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1350845a-b427-44e8-b393-ea7baa28bbf7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=05b18a19b59b56f43e1e4baa0eb826a702342f63faa270e288a3b60c2db98a8f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 406
      },
      {
        "segments": [
          {
            "segment_id": "9aef30d3-38b6-43b5-987a-9db46fa51c76",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 346,
            "page_width": 612,
            "page_height": 792,
            "content": "346 Sample Final Exam\r\nvectors\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n and\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n are clearly linearly independent, so this is the\r\nleast number of vectors spanning U for this value of a. Also we see that\r\ndimU = 2 in this case. Your picture should be a plane in R\r\n3\r\nthough the\r\norigin containing the vectors\r\n\r\n\r\n1\r\n2\r\n−3\r\n\r\n and\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n.\r\n7.\r\ndet \u0012\r\n1 x\r\n1 y\r\n\u0013\r\n= y − x ,\r\ndet\r\n\r\n\r\n1 x x2\r\n1 y y2\r\n1 z z2\r\n\r\n = det\r\n\r\n\r\n1 x x2\r\n0 y − x y2 − x\r\n2\r\n0 z − x z2 − x\r\n2\r\n\r\n\r\n= (y − x)(z\r\n2 − x2\r\n) − (y\r\n2 − x2\r\n)(z − x) = (y − x)(z − x)(z − y).\r\ndet\r\n\r\n\r\n1 x x2 x\r\n3\r\n1 y y2 y\r\n3\r\n1 z z2z\r\n3\r\n1 w w2 w\r\n3\r\n\r\n\r\n= det\r\n\r\n\r\n1 x x2 x\r\n3\r\n0 y − x y2 − x\r\n2 y3 − x3\r\n0 z − x z2 − x\r\n2\r\nz\r\n3 − x3\r\n0 w − x w2 − x\r\n2 w3 − x3\r\n\r\n\r\n= det\r\n\r\n\r\n1 0 0 0\r\n0 y − x y(y − x) y\r\n2\r\n(y − x)\r\n0 z − x z(z − x) z\r\n2\r\n(z − x)\r\n0 w − x w(w − x) w\r\n2\r\n(w − x)\r\n\r\n\r\n= (y − x)(z − x)(w − x) det\r\n\r\n\r\n1 0 0 0\r\n0 1 y y2\r\n0 1 z z2\r\n0 1 w w2\r\n\r\n\r\n= (y − x)(z − x)(w − x) det\r\n\r\n\r\n1 y y2\r\n1 z z2\r\n1 w w2\r\n\r\n\r\n= (y − x)(z − x)(w − x)(z − y)(w − y)(w − z).\r\nFrom the 4 × 4 case above, you can see all the tricks required for a general\r\nVandermonde matrix. First zero out the first column by subtracting the first\r\nrow from all other rows (which leaves the determinant unchanged). Now zero\r\n346",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9aef30d3-38b6-43b5-987a-9db46fa51c76.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=63605a80a34ce75df2d501cec6ed3843494ea729e36ac43f1cb86ec8d394cd70",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 377
      },
      {
        "segments": [
          {
            "segment_id": "e6c0f278-efe6-4417-9140-a3c60a3f0a0d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 347,
            "page_width": 612,
            "page_height": 792,
            "content": "347\r\nout the top row by subtracting x1 times the first column from the second\r\ncolumn, x1 times the second column from the third column etc. Again these\r\ncolumn operations do not change the determinant. Now factor out x2 − x1\r\nfrom the second row, x3 − x1 from the third row, etc. This does change the\r\ndeterminant so we write these factors outside the remaining determinant,\r\nwhich is just the same problem but for the (n − 1) × (n − 1) case. Iterating\r\nthe same procedure gives the result\r\ndet\r\n\r\n\r\n1 x1 (x1)\r\n2\r\n· · · (x1)\r\nn−1\r\n1 x2 (x2)\r\n2\r\n· · · (x2)\r\nn−1\r\n1 x3 (x3)\r\n2\r\n· · · (x3)\r\nn−1\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n1 xn (xn)\r\n2\r\n· · · (xn)\r\nn−1\r\n\r\n\r\n=\r\nY\r\ni>j\r\n(xi − xj ).\r\n(Here Qstands for a multiple product, just like Σ stands for a multiple\r\nsum.)\r\n8. (a) No, a basis for R\r\n3 must have exactly three vectors.\r\n(b) We first extend the original vectors by the standard basis for R\r\n4 and\r\nthen try to eliminate two of them by considering\r\nα\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\n+ β\r\n\r\n\r\n4\r\n3\r\n2\r\n1\r\n\r\n\r\n+ γ\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n\r\n+ δ\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n\r\n+ ε\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n\r\n+ η\r\n\r\n\r\n0\r\n0\r\n0\r\n1\r\n\r\n\r\n= 0 .\r\nSo we study\r\n\r\n\r\n1 4 1 0 0 0\r\n2 3 0 1 0 0\r\n3 2 0 0 1 0\r\n4 1 0 0 0 1\r\n\r\n ∼\r\n\r\n\r\n1 4 1 0 0 0\r\n0 −5 −2 1 0 0\r\n0 −10 −3 0 1 0\r\n0 −15 −4 0 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 −\r\n3\r\n5 −4 0 0\r\n0 1 2\r\n5\r\n1\r\n5\r\n0 0\r\n0 0 1 10 1 0\r\n0 0 2 15 0 1\r\n\r\n ∼\r\n\r\n\r\n1 0 0 2 3\r\n5\r\n0\r\n0 1 0 −\r\n19\r\n5 −\r\n2\r\n5\r\n0\r\n0 0 1 10 1 0\r\n0 0 0 −\r\n5\r\n2 −10 12\r\n\r\n\r\nFrom here we can keep row reducing to achieve RREF, but we can\r\nalready see that the non-pivot variables will be ε and η. Hence we can\r\n347",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/e6c0f278-efe6-4417-9140-a3c60a3f0a0d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7351ff6f0bfc1869014c1a5d002dbb850d9e33951640dd04131db887cd6f19d0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 424
      },
      {
        "segments": [
          {
            "segment_id": "35add827-69bc-4ad6-b444-9879fa919aaa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 348,
            "page_width": 612,
            "page_height": 792,
            "content": "348 Sample Final Exam\r\neject the last two vectors and obtain as our basis\r\n\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n ,\r\n\r\n\r\n4\r\n3\r\n2\r\n1\r\n\r\n ,\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n\r\n\r\n\r\n\r\n.\r\nOf course, this answer is far from unique!\r\n(c) The method is the same as above. Add the standard basis to {u, v}\r\nto obtain the linearly dependent set {u, v, e1, . . . , en}. Then put these\r\nvectors as the columns of a matrix and row reduce. The standard\r\nbasis vectors in columns corresponding to the non-pivot variables can\r\nbe removed.\r\n9. (a)\r\ndet\r\n\r\n\r\nλ −\r\n1\r\n2 −1\r\n−\r\n1\r\n2\r\nλ −\r\n1\r\n2 −\r\n1\r\n2\r\n−1 −\r\n1\r\n2\r\nλ\r\n\r\n = λ\r\n\u0010\r\n(λ−\r\n1\r\n2\r\n\u0011\r\nλ−\r\n1\r\n4\r\n)+ 1\r\n2\r\n\u0010\r\n−\r\nλ\r\n2\r\n−\r\n1\r\n2\r\n\u0011\r\n−\r\n\u0010\r\n−\r\n1\r\n4\r\n+λ\r\n\u0011\r\n= λ\r\n3 −\r\n1\r\n2\r\nλ\r\n2 −\r\n3\r\n2\r\nλ = λ(λ + 1)(λ −\r\n3\r\n2\r\n).\r\nHence the eigenvalues are 0, −1,\r\n3\r\n2\r\n.\r\n(b) When λ = 0 we must solve the homogenous system\r\n\r\n\r\n0\r\n1\r\n2\r\n1 0\r\n1\r\n2\r\n1\r\n2\r\n1\r\n2\r\n0\r\n1\r\n1\r\n2\r\n0 0\r\n\r\n ∼\r\n\r\n\r\n1\r\n1\r\n2\r\n0 0\r\n0\r\n1\r\n4\r\n1\r\n2\r\n0\r\n0\r\n1\r\n2\r\n1 0\r\n\r\n ∼\r\n\r\n\r\n1 0 −1 0\r\n0 1 2 0\r\n0 0 0 0\r\n\r\n .\r\nSo we find the eigenvector\r\n\r\n\r\ns\r\n−2s\r\ns\r\n\r\n where s 6= 0 is arbitrary.\r\nFor λ = −1\r\n\r\n\r\n1\r\n1\r\n2\r\n1 0\r\n1\r\n2\r\n3\r\n2\r\n1\r\n2\r\n0\r\n1\r\n1\r\n2\r\n1 0\r\n\r\n ∼\r\n\r\n\r\n1 0 1 0\r\n0 1 0 0\r\n0 0 0 0\r\n\r\n .\r\nSo we find the eigenvector\r\n\r\n\r\n−s\r\n0\r\ns\r\n\r\n where s 6= 0 is arbitrary.\r\n348",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/35add827-69bc-4ad6-b444-9879fa919aaa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=25bd1976d23b40aec528fa3e0fb2f610c5b68e4f25b45eb02c4ccb6b5ecff4d9",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 355
      },
      {
        "segments": [
          {
            "segment_id": "47ab3243-0852-40f7-9c9c-801f5a7e4dec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 349,
            "page_width": 612,
            "page_height": 792,
            "content": "349\r\nFinally, for λ =\r\n3\r\n2\r\n\r\n\r\n−\r\n3\r\n2\r\n1\r\n2\r\n1 0\r\n1\r\n2 −1\r\n1\r\n2\r\n0\r\n1\r\n1\r\n2 −\r\n3\r\n2\r\n0\r\n\r\n ∼\r\n\r\n\r\n1\r\n1\r\n2 −\r\n3\r\n2\r\n0\r\n0 −\r\n5\r\n4\r\n5\r\n4\r\n0\r\n0\r\n5\r\n4 −\r\n5\r\n4\r\n0\r\n\r\n ∼\r\n\r\n\r\n1 0 −1 0\r\n0 1 −1 0\r\n0 0 0 0\r\n\r\n .\r\nSo we find the eigenvector\r\n\r\n\r\ns\r\ns\r\ns\r\n\r\n where s 6= 0 is arbitrary.\r\nIf the mistake X is in the direction of the eigenvector\r\n\r\n\r\n1\r\n−2\r\n1\r\n\r\n, then Y = 0.\r\nI.e., the satellite returns to the origin O. For all subsequent orbits it will\r\nagain return to the origin. NASA would be very pleased in this case.\r\nIf the mistake X is in the direction\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n, then Y = −X. Hence the\r\nsatellite will move to the point opposite to X. After next orbit will move\r\nback to X. It will continue this wobbling motion indefinitely. Since this is a\r\nstable situation, again, the elite engineers will pat themselves on the back.\r\nFinally, if the mistake X is in the direction\r\n\r\n\r\n1\r\n1\r\n1\r\n\r\n , the satellite will move to a\r\npoint Y =\r\n3\r\n2X which is further away from the origin. The same will happen\r\nfor all subsequent orbits, with the satellite moving a factor 3/2 further away\r\nfrom O each orbit (in reality, after several orbits, the approximations used\r\nby the engineers in their calculations probably fail and a new computation\r\nwill be needed). In this case, the satellite will be lost in outer space and the\r\nengineers will likely lose their jobs!\r\n10. (a) A basis for B3is\r\n\r\n\r\n\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\n\r\n\r\n\r\n(b) 3.\r\n(c) 2\r\n3 = 8.\r\n(d) dimB3 = 3.\r\n(e) Because the vectors {v1, v2, v3} are a basis any element v ∈ B3can be\r\nwritten uniquely as v = b\r\n1v1+b2v2+b3v3 for some triplet of bits\r\n\r\n\r\nb\r\n1\r\nb\r\n2\r\nb\r\n3\r\n\r\n.\r\n349",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/47ab3243-0852-40f7-9c9c-801f5a7e4dec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=aebedf87468dc49d87939d958e2e985aac2ff2d238c61b524167128e45e0054d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 386
      },
      {
        "segments": [
          {
            "segment_id": "98121f42-7144-4b92-a52a-dda33294a845",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 350,
            "page_width": 612,
            "page_height": 792,
            "content": "350 Sample Final Exam\r\nHence, to compute L(v) we use linearity of L\r\nL(v) = L(b\r\n1\r\nv1 + b\r\n2\r\nv2 + b\r\n3\r\nv3) = b\r\n1L(v1) + b2L(v2) + b3L(v3)\r\n=\r\n\r\nL(v1) L(v2) L(v3)\r\n\u0001\r\n\r\n\r\nb\r\n1\r\nb\r\n2\r\nb\r\n3\r\n\r\n .\r\n(f) From the notation of the previous part, we see that we can list linear\r\ntransformations L : B3 → B by writing out all possible bit-valued row\r\nvectors\r\n\r\n0 0 0\u0001\r\n,\r\n\r\n1 0 0\u0001\r\n,\r\n\r\n0 1 0\u0001\r\n,\r\n\r\n0 0 1\u0001\r\n,\r\n\r\n1 1 0\u0001\r\n,\r\n\r\n1 0 1\u0001\r\n,\r\n\r\n0 1 1\u0001\r\n,\r\n\r\n1 1 1\u0001\r\n.\r\nThere are 23 = 8 different linear transformations L : B3 → B, exactly\r\nthe same as the number of elements in B3.\r\n(g) Yes, essentially just because L1 and L2 are linear transformations. In\r\ndetail for any bits (a, b) and vectors (u, v) in B3it is easy to check the\r\nlinearity property for (αL1 + βL2)\r\n(αL1 + βL2)(au + bv) = αL1(au + bv) + βL2(au + bv)\r\n= αaL1(u) + αbL1(v) + βaL1(u) + βbL1(v)\r\n= a(αL1(u) + βL2(v)) + b(αL1(u) + βL2(v))\r\n= a(αL1 + βL2)(u) + b(αL1 + βL2)(v).\r\nHere the first line used the definition of (αL1 + βL2), the second line\r\ndepended on the linearity of L1 and L2, the third line was just algebra\r\nand the fourth used the definition of (αL1 + βL2) again.\r\n(h) Yes. The easiest way to see this is the identification above of these\r\nmaps with bit-valued column vectors. In that notation, a basis is\r\nn \r\n1 0 0\u0001\r\n,\r\n\r\n0 1 0\u0001\r\n,\r\n\r\n0 0 1\u0001 o\r\n.\r\n350",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/98121f42-7144-4b92-a52a-dda33294a845.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=474a7e98bed3a0a5c0d59a58669dc0b9113943e19b6802bc42dc5b42bc1ecbd0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 284
      },
      {
        "segments": [
          {
            "segment_id": "0b38006d-51b3-481e-8841-81e3fd0deec4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 351,
            "page_width": 612,
            "page_height": 792,
            "content": "351\r\nSince this (spanning) set has three (linearly independent) elements,\r\nthe vector space of linear maps B3 → B has dimension 3. This is an\r\nexample of a general notion called the dual vector space.\r\n11. (a) d\r\n2X\r\ndt2 =\r\nd\r\n2 cos(ωt)\r\ndt2\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n = −ω\r\n2\r\ncos(ωt)\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n .\r\nHence\r\nF = cos(ωt)\r\n\r\n\r\n−a − b\r\n−a − 2b − c\r\n−b − c\r\n\r\n = cos(ωt)\r\n\r\n\r\n−1 −1 0\r\n−1 −2 −1\r\n0 −1 −1\r\n\r\n\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n\r\n= −ω\r\n2\r\ncos(ωt)\r\n\r\n\r\na\r\nb\r\nc\r\n\r\n ,\r\nso\r\nM =\r\n\r\n\r\n−1 −1 0\r\n−1 −2 −1\r\n0 −1 −1\r\n\r\n .\r\n(b)\r\ndet\r\n\r\n\r\nλ + 1 1 0\r\n1 λ + 2 1\r\n0 1 λ + 1\r\n\r\n = (λ + 1)\r\n(λ + 2)(λ + 1) − 1\r\n\u0001\r\n− (λ + 1)\r\n= (λ + 1)(λ + 2)(λ + 1) − 2\r\n\u0001\r\n= (λ + 1)λ\r\n2 + 3λ) = λ(λ + 1)(λ + 3)\r\nso the eigenvalues are λ = 0, −1, −3.\r\nFor the eigenvectors, when λ = 0 we study:\r\nM − 0.I =\r\n\r\n\r\n−1 −1 0\r\n−1 −2 −1\r\n0 −1 −1\r\n\r\n ∼\r\n\r\n\r\n1 1 0\r\n0 −1 −1\r\n0 −1 −1\r\n\r\n ∼\r\n\r\n\r\n1 0 −1\r\n0 1 1\r\n0 0 0\r\n\r\n ,\r\nso\r\n\r\n\r\n1\r\n−1\r\n1\r\n\r\n is an eigenvector.\r\nFor λ = −1\r\nM − (−1).I =\r\n\r\n\r\n0 −1 0\r\n−1 −1 −1\r\n0 −1 0\r\n\r\n ∼\r\n\r\n\r\n1 0 1\r\n0 1 0\r\n0 0 0\r\n\r\n ,\r\n351",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0b38006d-51b3-481e-8841-81e3fd0deec4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=352f76f2cf80bba24f42959f3de7c4e5b03b98eb6d604429e0c4b77c0812e425",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "a9303f6b-51d7-4b0d-aae5-69c2bd23481a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 352,
            "page_width": 612,
            "page_height": 792,
            "content": "352 Sample Final Exam\r\nso\r\n\r\n\r\n−1\r\n0\r\n1\r\n\r\n is an eigenvector.\r\nFor λ = −3\r\nM − (−3).I =\r\n\r\n\r\n2 −1 0\r\n−1 1 −1\r\n0 −1 2\r\n\r\n ∼\r\n\r\n\r\n1 −1 1\r\n0 1 −2\r\n0 −1 2\r\n\r\n ∼\r\n\r\n\r\n1 0 −1\r\n0 1 −2\r\n0 0 0\r\n\r\n ,\r\nso\r\n\r\n\r\n1\r\n2\r\n1\r\n\r\n is an eigenvector.\r\n(c) The characteristic frequencies are 0, 1,\r\n√\r\n3.\r\n(d) The orthogonal change of basis matrix\r\nP =\r\n\r\n\r\n√\r\n1\r\n3\r\n− √\r\n1\r\n2\r\n√\r\n1\r\n6\r\n− √\r\n1\r\n3\r\n0 √\r\n2\r\n6\r\n√\r\n1\r\n3\r\n√\r\n1\r\n2\r\n√\r\n1\r\n6\r\n\r\n\r\nIt obeys MP = P D where\r\nD =\r\n\r\n\r\n0 0 0\r\n0 −1 0\r\n0 0 −3\r\n\r\n .\r\n(e) Yes, the direction given by the eigenvector\r\n\r\n\r\n1\r\n−1\r\n1\r\n\r\n because its eigen\u0002value is zero. This is probably a bad design for a bridge because it can\r\nbe displaced in this direction with no force!\r\n12. (a) If we call M =\r\n\u0012\r\na b\r\nb d\u0013\r\n, then XTMX = ax2 + 2bxy + dy2. Similarly\r\nputting C =\r\n\u0012\r\nc\r\ne\r\n\u0013\r\nyields XT C + C\r\nT X = 2X C = 2cx + 2ey. Thus\r\n0 = ax2 + 2bxy + dy2 + 2cx + 2ey + f\r\n=\r\n\r\nx y\u0001\r\n\u0012\r\na b\r\nb d\u0013 \u0012xy\r\n\u0013\r\n+\r\n\r\nx y\u0001\r\n\u0012\r\nc\r\ne\r\n\u0013\r\n+\r\n\r\nc e\u0001\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n+ f .\r\n352",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a9303f6b-51d7-4b0d-aae5-69c2bd23481a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ad2c29ba49ec974aa072c466d985af4714b16e48e85882dd2c78935a34f9933e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 273
      },
      {
        "segments": [
          {
            "segment_id": "75868b73-9a3e-4673-a5be-bc9acafddaba",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 353,
            "page_width": 612,
            "page_height": 792,
            "content": "353\r\n(b) Yes, the matrix M is symmetric, so it will have a basis of eigenvectors\r\nand is similar to a diagonal matrix of real eigenvalues.\r\nTo find the eigenvalues notice that det \u0012\r\na − λ b\r\nb d − λ\r\n\u0013\r\n= (a − λ)(d −\r\nλ) − b\r\n2 =\r\n\r\nλ −\r\na+d\r\n2\r\n\u00012 − b\r\n2 −\r\n\r\na−d\r\n2\r\n\u00012\r\n. So the eigenvalues are\r\nλ =\r\na + d\r\n2\r\n+\r\nr\r\nb\r\n2 +\r\na − d\r\n2\r\n\u00012\r\nand µ =\r\na + d\r\n2\r\n−\r\nr\r\nb\r\n2 +\r\na − d\r\n2\r\n\u00012\r\n.\r\n(c) The trick is to write\r\nXTMX +C\r\nT X +XT C = (XT +CTM−1\r\n)M(X +M−1C)−C\r\nTM−1C ,\r\nso that\r\n(XT + C\r\nTM−1\r\n)M(X + M−1C) = C\r\nTMC − f .\r\nHence Y = X + M−1C and g = C\r\nTMC − f.\r\n(d) The cosine of the angle between vectors V and W is given by\r\nV W\r\n√\r\nV V W W\r\n=\r\nV\r\nTW\r\n√\r\nV T V WTW\r\n.\r\nSo replacing V → P V and W → PW will always give a factor P\r\nTP\r\ninside all the products, but P\r\nTP = I for orthogonal matrices. Hence\r\nnone of the dot products in the above formula changes, so neither does\r\nthe angle between V and W.\r\n(e) If we take the eigenvectors of M, normalize them (i.e. divide them\r\nby their lengths), and put them in a matrix P (as columns) then P\r\nwill be an orthogonal matrix. (If it happens that λ = µ, then we\r\nalso need to make sure the eigenvectors spanning the two dimensional\r\neigenspace corresponding to λ are orthogonal.) Then, since M times\r\nthe eigenvectors yields just the eigenvectors back again multiplied by\r\ntheir eigenvalues, it follows that MP = P D where D is the diagonal\r\nmatrix made from eigenvalues.\r\n(f) If Y = P Z, then Y\r\nTMY = ZTPTMP Z = ZTPTP DZ = ZT DZ\r\nwhere D =\r\n\u0012\r\nλ 0\r\n0 µ\r\n\u0013\r\n.\r\n(g) Using part (f) and (c) we have\r\nλz2 + µw2 = g .\r\n353",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/75868b73-9a3e-4673-a5be-bc9acafddaba.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ec27e113172c05b2a32080af2967a0c46012d118e9ed9b23d1e87bec3ab1b3c0",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 363
      },
      {
        "segments": [
          {
            "segment_id": "4f426b2c-51ce-4159-996d-f5e1204d8717",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 354,
            "page_width": 612,
            "page_height": 792,
            "content": "354 Sample Final Exam\r\n(h) When λ = µ and g/λ = R2, we get the equation for a circle radius R in\r\nthe (z, w)-plane. When λ, µ and g are postive, we have the equation for\r\nan ellipse. Vanishing g along with λ and µ of opposite signs gives a pair\r\nof straight lines. When g is non-vanishing, but λ and µ have opposite\r\nsigns, the result is a pair of hyperbolæ. These shapes all come from\r\ncutting a cone with a plane, and are therefore called conic sections.\r\n13. We show that L is bijective if and only if M is invertible.\r\n(a) We suppose that L is bijective.\r\ni. Since L is injective, its kernel consists of the zero vector alone.\r\nHence\r\nL = dim ker L = 0.\r\nSo by the Dimension Formula,\r\ndim V = L + rankL = rankL.\r\nSince L is surjective, L(V ) = W. Thus\r\nrankL = dim L(V ) = dim W.\r\nThereby\r\ndim V = rankL = dim W.\r\nii. Since dim V = dim W, the matrix M is square so we can talk\r\nabout its eigenvalues. Since L is injective, its kernel is the zero\r\nvector alone. That is, the only solution to LX = 0 is X = 0V .\r\nBut LX is the same as MX, so the only solution to MX = 0 is\r\nX = 0V . So M does not have zero as an eigenvalue.\r\niii. Since MX = 0 has no non-zero solutions, the matrix M is invert\u0002ible.\r\n(b) Now we suppose that M is an invertible matrix.\r\ni. Since M is invertible, the system MX = 0 has no non-zero solu\u0002tions. But LX is the same as MX, so the only solution to LX = 0\r\nis X = 0V . So L does not have zero as an eigenvalue.\r\nii. Since LX = 0 has no non-zero solutions, the kernel of L is the\r\nzero vector alone. So L is injective.\r\niii. Since M is invertible, we must have that dim V = dim W. By the\r\nDimension Formula, we have\r\ndim V = L + rankL\r\n354",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4f426b2c-51ce-4159-996d-f5e1204d8717.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a5e9c2d9d9ded65db147f589388e6ce7719289ec0501f51e647e005cd78a896d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 360
      },
      {
        "segments": [
          {
            "segment_id": "7b88e06e-aa36-46e9-8147-bd57ba62d467",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 355,
            "page_width": 612,
            "page_height": 792,
            "content": "355\r\nand since ker L = {0V } we have L = dim ker L = 0, so\r\ndim W = dim V = rankL = dim L(V ).\r\nSince L(V ) is a subspace of W with the same dimension as W, it\r\nmust be equal to W. To see why, pick a basis B of L(V ). Each\r\nelement of B is a vector in W, so the elements of B form a linearly\r\nindependent set in W. Therefore B is a basis of W, since the size\r\nof B is equal to dim W. So L(V ) = span B = W. So L is surjective.\r\n14. (a) F4 = F2 + F3 = 2 + 3 = 5.\r\n(b) The number of pairs of doves in any given year equals the number of\r\nthe previous years plus those that hatch and there are as many of them\r\nas pairs of doves in the year before the previous year.\r\n(c) X1 =\r\n\u0012\r\nF1\r\nF0\r\n\u0013\r\n=\r\n\u0012\r\n1\r\n0\r\n\u0013\r\nand X2 =\r\n\u0012\r\nF2\r\nF1\r\n\u0013\r\n=\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n.\r\nMX1 =\r\n\u0012\r\n1 1\r\n1 0\u0013 \u001210\r\n\u0013\r\n=\r\n\u0012\r\n1\r\n1\r\n\u0013\r\n= X2 .\r\n(d) We just need to use the recursion relationship of part (b) in the top\r\nslot of Xn+1:\r\nXn+1 =\r\n\u0012\r\nFn+1\r\nFn\r\n\u0013\r\n=\r\n\u0012\r\nFn + Fn−1\r\nFn\r\n\u0013\r\n=\r\n\u0012\r\n1 1\r\n1 0\u0013 \u0012 Fn\r\nFn−1\r\n\u0013\r\n= MXn .\r\n(e) Notice M is symmetric so this is guaranteed to work.\r\ndet \u0012\r\n1 − λ 1\r\n1 −λ\r\n\u0013\r\n= λ(λ − 1) − 1 = λ −\r\n1\r\n2\r\n\u00012 −\r\n5\r\n4\r\n,\r\nso the eigenvalues are 1±\r\n√\r\n5\r\n2\r\n. Hence the eigenvectors are \r\n1±\r\n√\r\n5\r\n2\r\n1\r\n!\r\n,\r\nrespectively (notice that 1+√\r\n5\r\n2 + 1 = 1+√\r\n5\r\n2\r\n.\r\n1+√\r\n5\r\n2\r\nand 1−\r\n√\r\n5\r\n2 + 1 =\r\n1−\r\n√\r\n5\r\n2\r\n.\r\n1−\r\n√\r\n5\r\n2\r\n). Thus M = P DP −1 with\r\nD =\r\n 1+√\r\n5\r\n2\r\n0\r\n0\r\n1−\r\n√\r\n5\r\n2\r\n!\r\nand P =\r\n \r\n1+√5\r\n2\r\n1−\r\n√\r\n5\r\n2\r\n1 1 !\r\n.\r\n(f) Mn = (P DP −1)\r\nn = P DP −1P DP −1\r\n. . . P DP −1 = P DnP\r\n−1\r\n.\r\n355",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7b88e06e-aa36-46e9-8147-bd57ba62d467.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2e5a92402d4efe09c7f553c1ae1775a4404dab6c114a40606f770d14545f3244",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 395
      },
      {
        "segments": [
          {
            "segment_id": "74b815c1-bec2-4430-83db-7a5b057456ac",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 356,
            "page_width": 612,
            "page_height": 792,
            "content": "356 Sample Final Exam\r\n(g) Just use the matrix recursion relation of part (d) repeatedly:\r\nXn+1 = MXn = M2Xn−1 = · · · = MnX1 .\r\n(h) The eigenvalues are ϕ =\r\n1+√\r\n5\r\n2\r\nand 1 − ϕ =\r\n1−\r\n√\r\n5\r\n2\r\n.\r\n(i)\r\nXn+1 =\r\n\u0012\r\nFn+1\r\nFn\r\n\u0013\r\n= MnXn = P DnP\r\n−1X1\r\n= P\r\n\u0012\r\nϕ 0\r\n0 1 − ϕ\r\n\u0013n\r\n \r\n√\r\n1\r\n5\r\n?\r\n− √\r\n1\r\n5\r\n?\r\n! \u0012\r\n1\r\n0\r\n\u0013\r\n= P\r\n\u0012\r\nϕ\r\nn 0\r\n0 (1 − ϕ)\r\nn\r\n\u0013 \r\n√\r\n1\r\n5\r\n− √\r\n1\r\n5\r\n!\r\n=\r\n \r\n1+√5\r\n2\r\n1−\r\n√\r\n5\r\n2\r\n1 1 ! ϕ\r\nn\r\n√\r\n5\r\n−\r\n(1−ϕ)\r\nn\r\n√\r\n5\r\n!\r\n=\r\n \r\n?\r\nϕ\r\nn−(1−ϕ)n\r\n√\r\n5\r\n!\r\n.\r\nHence\r\nFn =\r\nϕ\r\nn − (1 − ϕ)n\r\n√\r\n5\r\n.\r\nThese are the famous Fibonacci numbers.\r\n15. Call the three vectors u, v and w, respectively. Then\r\nv\r\n⊥ = v −\r\nu v\r\nu u\r\nu = v −\r\n3\r\n4\r\nu =\r\n\r\n\r\n1\r\n4\r\n−\r\n3\r\n4\r\n1\r\n4\r\n1\r\n4\r\n\r\n\r\n,\r\nand\r\nw\r\n⊥ = w −\r\nu w\r\nu u\r\nu −\r\nv\r\n⊥ w\r\nv⊥ v⊥\r\nv\r\n⊥ = w −\r\n3\r\n4\r\nu −\r\n3\r\n4\r\n3\r\n4\r\nv\r\n⊥ =\r\n\r\n\r\n−1\r\n0\r\n0\r\n1\r\n\r\n\r\nDividing by lengths, an orthonormal basis for span{u, v, w} is\r\n\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n1\r\n2\r\n1\r\n2\r\n1\r\n2\r\n\r\n\r\n,\r\n\r\n\r\n√\r\n3\r\n6\r\n−\r\n√\r\n3\r\n2\r\n√\r\n3\r\n6\r\n√\r\n3\r\n6\r\n\r\n\r\n,\r\n\r\n\r\n−\r\n√\r\n2\r\n2\r\n0\r\n0\r\n√\r\n2\r\n2\r\n\r\n\r\n\r\n\r\n\r\n.\r\n16. (a) The columns of M span imL in the basis given for W.\r\n356",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/74b815c1-bec2-4430-83db-7a5b057456ac.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=996fdbcd8189199342a735bef4d286616a0ce1902585d9f0077a914231a4233f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 309
      },
      {
        "segments": [
          {
            "segment_id": "69feae15-12d3-49c8-9828-7afa3114831d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 357,
            "page_width": 612,
            "page_height": 792,
            "content": "357\r\n(b) The rows of M span (kerL)\r\n⊥\r\n(c) First we put M in RREF:\r\nM =\r\n\r\n\r\n1 2 1 3\r\n2 1 −1 2\r\n1 0 0 −1\r\n4 1 −1 0\r\n\r\n ∼\r\n\r\n\r\n1 2 1 3\r\n0 −3 −3 −4\r\n0 −2 −1 −4\r\n0 −7 −5 −12\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 −1\r\n1\r\n3\r\n0 1 1 4\r\n3\r\n0 0 1 −\r\n4\r\n3\r\n0 0 2 −\r\n8\r\n3\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 0 −1\r\n0 1 0 8\r\n3\r\n0 0 1 −\r\n4\r\n3\r\n0 0 0 0\r\n\r\n\r\n.\r\nHence\r\nkerL = span{v1 −\r\n8\r\n3\r\nv2 +\r\n4\r\n3\r\nv3 + v4}\r\nand\r\nimL = span{v1 + 2v2 + v3 + 4v4, 2v1 + v2 + v4, v1 − v2 − v4} .\r\nThus dim ker L = 1 and dim imL = 3 so\r\ndim ker L + dim imL = 1 + 3 = 4 = dim V .\r\n17. (a)\r\n\r\n\r\n\r\n5 = 4a − 2c + c\r\n2 = a − b + c\r\n0 = a + b + c\r\n3 = 4a + 2b + c .\r\n(b,c,d)\r\n\r\n\r\n4 −2 1 5\r\n1 −1 1 2\r\n1 1 1 0\r\n4 2 1 3\r\n\r\n ∼\r\n\r\n\r\n1 1 1 0\r\n0 −6 −3 5\r\n0 −2 0 2\r\n0 −2 −3 3\r\n\r\n ∼\r\n\r\n\r\n1 0 1 −1\r\n0 1 0 1\r\n0 0 −3 11\r\n0 0 −3 3\r\n\r\n\r\nThe system has no solutions because c = −1 and c = −\r\n11\r\n3\r\nis impossible.\r\n(e) Let\r\nM =\r\n\r\n\r\n4 −2 1\r\n1 −1 1\r\n1 1 1\r\n4 2 1\r\n\r\n\r\nand V =\r\n\r\n\r\n5\r\n2\r\n0\r\n3\r\n\r\n .\r\n357",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/69feae15-12d3-49c8-9828-7afa3114831d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=37b3cf70ddf3917be49b286fa74ec26bb97d14d28ca59ba35c316e6530437f8d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 321
      },
      {
        "segments": [
          {
            "segment_id": "becd6c87-02ef-4a47-9751-e6e881beda50",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 358,
            "page_width": 612,
            "page_height": 792,
            "content": "358 Sample Final Exam\r\nThen\r\nMTM =\r\n\r\n\r\n34 0 10\r\n0 10 0\r\n10 0 4\r\n\r\n and MT V =\r\n\r\n\r\n34\r\n−6\r\n10\r\n\r\n .\r\nSo\r\n\r\n\r\n34 0 10 34\r\n0 10 0 −6\r\n10 0 4 10\r\n\r\n ∼\r\n\r\n\r\n1 0 2\r\n5\r\n1\r\n0 10 0 −6\r\n0 0 −\r\n18\r\n5\r\n0\r\n\r\n ∼\r\n\r\n\r\n1 0 0 1\r\n0 1 0 −\r\n3\r\n5\r\n0 0 1 0\r\n\r\n\r\nThe least squares solution is a = 1, b = −\r\n3\r\n5\r\nand c = 0.\r\n(b) The Captain predicts y(2) = 1.2\r\n2 −\r\n3\r\n5\r\n.2 + 0 = 14\r\n5\r\n.\r\n18. We show that L is bijective if and only if M is invertible.\r\n(a) We suppose that L is bijective.\r\ni. Since L is injective, its kernel consists of the zero vector alone. So\r\nL = dim ker L = 0.\r\nBy the dimension formula,\r\ndim V = L + rankL = rankL.\r\nSince L is surjective, L(V ) = W. So\r\nrankL = dim L(V ) = dim W.\r\nSo\r\ndim V = rankL = dim W.\r\nii. Since dim V = dim W, the matrix M is square so we can talk\r\nabout its eigenvalues. Since L is injective, its kernel is the zero\r\nvector alone. That is, the only solution to LX = 0 is X = 0V .\r\nBut LX is the same as MX, so the only solution to MX = 0 is\r\nX = 0V . So M does not have zero as an eigenvalue.\r\niii. Since MX = 0 has no non-zero solutions, the matrix M is invert\u0002ible.\r\n(b) Now we suppose that M is an invertible matrix.\r\ni. Since M is invertible, the system MX = 0 has no non-zero solu\u0002tions. But LX is the same as MX, so the only solution to LX = 0\r\nis X = 0V . So L does not have zero as an eigenvalue.\r\n358",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/becd6c87-02ef-4a47-9751-e6e881beda50.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e02fa7ae4334716f8adae2374f85996577dc480a011f51ced6bd544cdf11edf4",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "8c6e4ce2-9e65-439f-a1b4-be740db63686",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 359,
            "page_width": 612,
            "page_height": 792,
            "content": "359\r\nii. Since LX = 0 has no non-zero solutions, the kernel of L is the\r\nzero vector alone. So L is injective.\r\niii. Since M is invertible, we must have that dim V = dim W. By the\r\nDimension Formula, we have\r\ndim V = L + rankL\r\nand since ker L = {0V } we have L = dim ker L = 0, so\r\ndim W = dim V = rankL = dim L(V ).\r\nSince L(V ) is a subspace of W with the same dimension as W, it\r\nmust be equal to W. To see why, pick a basis B of L(V ). Each\r\nelement of B is a vector in W, so the elements of B form a linearly\r\nindependent set in W. Therefore B is a basis of W, since the size\r\nof B is equal to dim W. So L(V ) = span B = W. So L is surjective.\r\n359",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8c6e4ce2-9e65-439f-a1b4-be740db63686.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=939c4e7d7d59b9dbc3af8b5c3a42161239cd458df038ee037ee2682bb14aef5d",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "92fcd64d-145c-4433-b7ea-dd2ac7a9c954",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 360,
            "page_width": 612,
            "page_height": 792,
            "content": "360 Sample Final Exam\r\n360",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/92fcd64d-145c-4433-b7ea-dd2ac7a9c954.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fea2835b70c671d566f3558eb18e359099acbf6de30f12d93a427455ed5779ba",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 506
      },
      {
        "segments": [
          {
            "segment_id": "44024dc6-03f5-4a53-8287-46501da05587",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 361,
            "page_width": 612,
            "page_height": 792,
            "content": "G\r\nMovie Scripts\r\nG.1 What is Linear Algebra?\r\nHint for Review Problem 5\r\nLooking at the problem statement we find some important information, first\r\nthat oranges always have twice as much sugar as apples, and second that the\r\ninformation about the barrel is recorded as (s, f), where s = units of sugar in\r\nthe barrel and f = number of pieces of fruit in the barrel.\r\nWe are asked to find a linear transformation relating this new representation\r\nto the one in the lecture, where in the lecture x = the number of apples and\r\ny = the number of oranges. This means we must create a system of equations\r\nrelating the variable x and y to the variables s and f in matrix form. Your\r\nanswer should be the matrix that transforms one set of variables into the\r\nother.\r\nHint: Let λ represent the amount of sugar in each apple.\r\n1. To find the first equation relate f to the variables x and y.\r\n2. To find the second equation, use the hint to figure out how much sugar\r\nis in x apples, and y oranges in terms of λ. Then write an equation for s\r\nusing x, y and λ.\r\nG.2 Systems of Linear Equations\r\nAugmented Matrix Notation\r\nWhy is the augmented matrix\r\n\u0012\r\n1 1 27\r\n2 −1 0\r\n\u0013\r\n,\r\n361",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/44024dc6-03f5-4a53-8287-46501da05587.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b96f2e13a4f36e194a0f6832c0135ddfc6672c6ca3c59d1095e1c6e5b1f8e994",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "267f5073-2908-472e-a653-c27b9676649f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 362,
            "page_width": 612,
            "page_height": 792,
            "content": "362 Movie Scripts\r\nequivalent to the system of equations\r\nx + y = 27\r\n2x − y = 0 ?\r\nWell the augmented matrix is just a new notation for the matrix equation\r\n\u0012\r\n1 1\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\nand if you review your matrix multiplication remember that\r\n\u0012\r\n1 1\r\n2 −1\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\nx + y\r\n2x − y\r\n\u0013\r\nThis means that\r\n\u0012\r\nx + y\r\n2x − y\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n,\r\nwhich is our original equation.\r\nEquivalence of Augmented Matrices\r\nLets think about what it means for the two augmented matrices\r\n\u0012\r\n1 1 27\r\n2 −1 0\r\n\u0013\r\nand \u0012\r\n1 0 9\r\n0 1 18 \u0013\r\nto be equivalent: They are certainly not equal, because they don’t match in\r\neach component, but since these augmented matrices represent a system, we\r\nmight want to introduce a new kind of equivalence relation.\r\nWell we could look at the system of linear equations this represents\r\nx + y = 27\r\n2x − y = 0\r\nand notice that the solution is x = 9 and y = 18. The other augmented matrix\r\nrepresents the system\r\nx + 0 · y = 9\r\n0 · x + y = 18\r\nThis clearly has the same solution. The first and second system are related\r\nin the sense that their solutions are the same. Notice that it is really\r\nnice to have the augmented matrix in the second form, because the matrix\r\nmultiplication can be done in your head.\r\n362",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/267f5073-2908-472e-a653-c27b9676649f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6feef6d9166258d96f8ed34ad3bd2f3fdc27f54e2567c8897058e290e23be128",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 492
      },
      {
        "segments": [
          {
            "segment_id": "c68ad8ad-6aea-41ac-9305-adbee1c7925b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 363,
            "page_width": 612,
            "page_height": 792,
            "content": "G.2 Systems of Linear Equations 363\r\nHints for Review Question 10\r\nThis question looks harder than it actually is:\r\nRow equivalence of matrices is an example of an equivalence\r\nrelation. Recall that a relation ∼ on a set of objects U\r\nis an equivalence relation if the following three properties\r\nare satisfied:\r\n• Reflexive: For any x ∈ U, we have x ∼ x.\r\n• Symmetric: For any x, y ∈ U, if x ∼ y then y ∼ x.\r\n• Transitive: For any x, y and z ∈ U, if x ∼ y and y ∼ z\r\nthen x ∼ z.\r\n(For a more complete discussion of equivalence relations, see\r\nWebwork Homework 0, Problem 4)\r\nShow that row equivalence of augmented matrices is an equivalence\r\nrelation.\r\nFirstly remember that an equivalence relation is just a more general ver\u0002sion of ‘‘equals’’. Here we defined row equivalence for augmented matrices\r\nwhose linear systems have solutions by the property that their solutions are\r\nthe same.\r\nSo this question is really about the word same. Lets do a silly example:\r\nLets replace the set of augmented matrices by the set of people who have hair.\r\nWe will call two people equivalent if they have the same hair color. There are\r\nthree properties to check:\r\n• Reflexive: This just requires that you have the same hair color as\r\nyourself so obviously holds.\r\n• Symmetric: If the first person, Bob (say) has the same hair color as a\r\nsecond person Betty(say), then Bob has the same hair color as Betty, so\r\nthis holds too.\r\n363",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c68ad8ad-6aea-41ac-9305-adbee1c7925b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4caf59f7b419c92ab8f8f2979e65f22bc37b4436486c14b40ac45382be037b99",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "be089dff-2903-445f-9d3e-e45ded561136",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 364,
            "page_width": 612,
            "page_height": 792,
            "content": "364 Movie Scripts\r\n• Transitive: If Bob has the same hair color as Betty (say) and Betty has\r\nthe same color as Brenda (say), then it follows that Bob and Brenda have\r\nthe same hair color, so the transitive property holds too and we are\r\ndone.\r\n364",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/be089dff-2903-445f-9d3e-e45ded561136.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=04bca3514e295d5080b8bf8045258ed90ad5ed772df351df73f5d766e9d2beeb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 307
      },
      {
        "segments": [
          {
            "segment_id": "75adf97f-4ba8-4ce4-a38c-ffc60633b503",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 365,
            "page_width": 612,
            "page_height": 792,
            "content": "G.2 Systems of Linear Equations 365\r\nSolution set in set notation\r\nHere is an augmented matrix, let’s think about what the solution set looks\r\nlike\r\n\u0012\r\n1 0 3 2\r\n0 1 0 1\r\n\u0013\r\nThis looks like the system\r\n1 · x1 + 3x3 = 2\r\n1 · x2 = 1\r\nNotice that when the system is written this way the copy of the 2 × 2 identity\r\nmatrix \u0012\r\n1 0\r\n0 1 \u0013\r\nmakes it easy to write a solution in terms of the variables\r\nx1 and x2. We will call x1 and x2 the pivot variables. The third column \u0012\r\n3\r\n0\r\n\u0013\r\ndoes not look like part of an identity matrix, and there is no 3 × 3 identity\r\nin the augmented matrix. Notice there are more variables than equations and\r\nthat this means we will have to write the solutions for the system in terms of\r\nthe variable x3. We’ll call x3 the free variable.\r\nLet x3 = µ. (We could also just add a ‘‘dummy’’ equation x3 = x3.) Then we\r\ncan rewrite the first equation in our system\r\nx1 + 3x3 = 2\r\nx1 + 3µ = 2\r\nx1 = 2 − 3µ.\r\nThen since the second equation doesn’t depend on µ we can keep the equation\r\nx2 = 1,\r\nand for a third equation we can write\r\nx3 = µ\r\nso that we get the system\r\n\r\n\r\nx1\r\nx2\r\nx3\r\n\r\n =\r\n\r\n\r\n2 − 3µ\r\n1\r\nµ\r\n\r\n\r\n=\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n +\r\n\r\n\r\n−3µ\r\n0\r\nµ\r\n\r\n\r\n=\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n + µ\r\n\r\n\r\n−3\r\n0\r\n1\r\n\r\n .\r\n365",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/75adf97f-4ba8-4ce4-a38c-ffc60633b503.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e05dfb47ca5d16ce6ed94e705393e09eaee24170165ade46efdbdf6f0c9b7696",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 287
      },
      {
        "segments": [
          {
            "segment_id": "edcc7fde-345e-45e8-bee6-6aaa4221c1e9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 366,
            "page_width": 612,
            "page_height": 792,
            "content": "366 Movie Scripts\r\nAny value of µ will give a solution of the system, and any system can be written\r\nin this form for some value of µ. Since there are multiple solutions, we can\r\nalso express them as a set:\r\n\r\n\r\n\r\n\r\n\r\nx1\r\nx2\r\nx3\r\n\r\n =\r\n\r\n\r\n2\r\n1\r\n0\r\n\r\n + µ\r\n\r\n\r\n−3\r\n0\r\n1\r\n\r\n µ ∈ R\r\n\r\n\r\n\r\n.\r\nWorked Examples of Gaussian Elimination\r\nLet us consider that we are given two systems of equations that give rise to\r\nthe following two (augmented) matrices:\r\n\r\n\r\n2 5 2 0 2\r\n1 1 1 0 1\r\n1 4 1 0 1\r\n\r\n\r\n\r\n\r\n5 2 9\r\n0 5 10\r\n0 3 6\r\n\r\n\r\nand we want to find the solution to those systems. We will do so by doing\r\nGaussian elimination.\r\nFor the first matrix we have\r\n\r\n\r\n2 5 2 0 2\r\n1 1 1 0 1\r\n1 4 1 0 1\r\n\r\n\r\nR1↔R2 ∼\r\n\r\n\r\n1 1 1 0 1\r\n2 5 2 0 2\r\n1 4 1 0 1\r\n\r\n\r\nR2−2R1;R3−R1 ∼\r\n\r\n\r\n1 1 1 0 1\r\n0 3 0 0 0\r\n0 3 0 0 0\r\n\r\n\r\n1\r\n3 R2\r\n∼\r\n\r\n\r\n1 1 1 0 1\r\n0 1 0 0 0\r\n0 3 0 0 0\r\n\r\n\r\nR1−R2;R3−3R2 ∼\r\n\r\n\r\n1 0 1 0 1\r\n0 1 0 0 0\r\n0 0 0 0 0\r\n\r\n\r\n1. We begin by interchanging the first two rows in order to get a 1 in the\r\nupper-left hand corner and avoiding dealing with fractions.\r\n2. Next we subtract row 1 from row 3 and twice from row 2 to get zeros in the\r\nleft-most column.\r\n3. Then we scale row 2 to have a 1 in the eventual pivot.\r\n4. Finally we subtract row 2 from row 1 and three times from row 2 to get it\r\ninto Reduced Row Echelon Form.\r\nTherefore we can write x = 1 − λ, y = 0, z = λ and w = µ, or in vector form\r\n\r\n\r\nx\r\ny\r\nz\r\nw\r\n\r\n =\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n\r\n+ λ\r\n\r\n\r\n−1\r\n0\r\n1\r\n0\r\n\r\n\r\n+ µ\r\n\r\n\r\n0\r\n0\r\n0\r\n1\r\n\r\n .\r\n366",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/edcc7fde-345e-45e8-bee6-6aaa4221c1e9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b6f0cdff7132fbc5d63f1e011605f41bfbb301dcf43a2f0cc2219ee4ad58c543",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 406
      },
      {
        "segments": [
          {
            "segment_id": "6ae040be-630c-4d6f-bb2c-51defaa22d40",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 367,
            "page_width": 612,
            "page_height": 792,
            "content": "G.2 Systems of Linear Equations 367\r\nNow for the second system we have\r\n\r\n\r\n5 2 9\r\n0 5 10\r\n0 3 6\r\n\r\n\r\n1\r\n5 R2\r\n∼\r\n\r\n\r\n5 2 9\r\n0 1 2\r\n0 3 6\r\n\r\n\r\nR3−3R2 ∼\r\n\r\n\r\n5 2 9\r\n0 1 2\r\n0 0 0\r\n\r\n\r\nR1−2R2 ∼\r\n\r\n\r\n5 0 5\r\n0 1 2\r\n0 0 0\r\n\r\n\r\n1\r\n5 R1\r\n∼\r\n\r\n\r\n1 0 1\r\n0 1 2\r\n0 0 0\r\n\r\n\r\nWe scale the second and third rows appropriately in order to avoid fractions,\r\nthen subtract the corresponding rows as before. Finally scale the first row\r\nand hence we have x = 1 and y = 2 as a unique solution.\r\nHints for Review Question 10\r\nThis question looks harder than it actually is:\r\nRow equivalence of matrices is an example of an equivalence\r\nrelation. Recall that a relation ∼ on a set of objects U\r\nis an equivalence relation if the following three properties\r\nare satisfied:\r\n• Reflexive: For any x ∈ U, we have x ∼ x.\r\n• Symmetric: For any x, y ∈ U, if x ∼ y then y ∼ x.\r\n• Transitive: For any x, y and z ∈ U, if x ∼ y and y ∼ z\r\nthen x ∼ z.\r\n(For a more complete discussion of equivalence relations, see\r\nWebwork Homework 0, Problem 4)\r\nShow that row equivalence of augmented matrices is an equivalence\r\nrelation.\r\nFirstly remember that an equivalence relation is just a more general ver\u0002sion of ‘‘equals’’. Here we defined row equivalence for augmented matrices\r\nwhose linear systems have solutions by the property that their solutions are\r\nthe same.\r\nSo this question is really about the word same. Lets do a silly example:\r\nLets replace the set of augmented matrices by the set of people who have hair.\r\n367",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6ae040be-630c-4d6f-bb2c-51defaa22d40.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=11a7bdc7e825cd4bcac0f84cbf28d877f439c3c21ed12b37e989741f2e5e8c96",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "7b8d5f39-585e-454d-88ae-7e83ed6ba8b7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 368,
            "page_width": 612,
            "page_height": 792,
            "content": "368 Movie Scripts\r\nWe will call two people equivalent if they have the same hair color. There are\r\nthree properties to check:\r\n• Reflexive: This just requires that you have the same hair color as\r\nyourself so obviously holds.\r\n• Symmetric: If the first person, Bob (say) has the same hair color as a\r\nsecond person Betty(say), then Bob has the same hair color as Betty, so\r\nthis holds too.\r\n• Transitive: If Bob has the same hair color as Betty (say) and Betty has\r\nthe same color as Brenda (say), then it follows that Bob and Brenda have\r\nthe same hair color, so the transitive property holds too and we are\r\ndone.\r\n368",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7b8d5f39-585e-454d-88ae-7e83ed6ba8b7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e6534aac424f92e9612d1be28d1febdee48d7849ab5fb06b7089ce3ddd6c150d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 431
      },
      {
        "segments": [
          {
            "segment_id": "ac14743b-0e22-4daf-811c-56015a4a36c3",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 369,
            "page_width": 612,
            "page_height": 792,
            "content": "G.2 Systems of Linear Equations 369\r\nHint for Review Question 5\r\nThe first part for Review Question 5 is simple--just write out the associated\r\nlinear system and you will find the equation 0 = 6 which is inconsistent.\r\nTherefore we learn that we must avoid a row of zeros preceding a non-vanishing\r\nentry after the vertical bar.\r\nTurning to the system of equations, we first write out the augmented matrix\r\nand then perform two row operations\r\n\r\n\r\n1 −3 0 6\r\n1 0 3 −3\r\n2 k 3 − k 1\r\n\r\n\r\nR2−R1;R3−2R1 ∼\r\n\r\n\r\n1 −3 0 6\r\n0 3 3 −9\r\n0 k + 6 3 − k −11\r\n\r\n .\r\nNext we would like to subtract some amount of R2 from R3 to achieve a zero in\r\nthe third entry of the second column. But if\r\nk + 6 = 3 − k ⇒ k = −\r\n3\r\n2\r\n,\r\nthis would produce zeros in the third row before the vertical line. You should\r\nalso check that this does not make the whole third line zero. You now have\r\nenough information to write a complete solution.\r\nPlanes\r\nHere we want to describe the mathematics of planes in space. The video is\r\nsummarised by the following picture:\r\nA plane is often called R\r\n2 because it is spanned by two coordinates, and space\r\nis called R\r\n3 and has three coordinates, usually called (x, y, z). The equation\r\nfor a plane is\r\nax + by + cz = d .\r\n369",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ac14743b-0e22-4daf-811c-56015a4a36c3.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c1950441eb14c097e837d38822aad9c897c9d3fb386ccb79f18cec02f3537fa1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 257
      },
      {
        "segments": [
          {
            "segment_id": "058a297b-5cbe-4ceb-90f3-61df257a8209",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 370,
            "page_width": 612,
            "page_height": 792,
            "content": "370 Movie Scripts\r\nLets simplify this by calling V = (x, y, z) the vector of unknowns and N =\r\n(a, b, c). Using the dot product in R\r\n3 we have\r\nN V = d .\r\nRemember that when vectors are perpendicular their dot products vanish. I.e.\r\nU V = 0 ⇔ U ⊥ V . This means that if a vector V0 solves our equation N V = d,\r\nthen so too does V0 + C whenever C is perpendicular to N. This is because\r\nN (V0 + C) = N V0 + N C = d + 0 = d .\r\nBut C is ANY vector perpendicular to N, so all the possibilities for C span\r\na plane whose normal vector is N. Hence we have shown that solutions to the\r\nequation ax + by + cz = 0 are a plane with normal vector N = (a, b, c).\r\nPictures and Explanation\r\nThis video considers solutions sets for linear systems with three unknowns.\r\nThese are often called (x, y, z) and label points in R\r\n3. Lets work case by case:\r\n• If you have no equations at all, then any (x, y, z) is a solution, so the\r\nsolution set is all of R\r\n3. The picture looks a little silly:\r\n• For a single equation, the solution is a plane. This is explained in\r\nthis video or the accompanying script. The picture looks like this:\r\n• For two equations, we must look at two planes. These usually intersect\r\nalong a line, so the solution set will also (usually) be a line:\r\n370",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/058a297b-5cbe-4ceb-90f3-61df257a8209.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1e78640c8bbbaeda46be693f5eb2fde6a382ad829e3aa0ad4c04a0e2b3add507",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "5903a2f3-abca-4f8d-8ae1-88e11ed62695",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 371,
            "page_width": 612,
            "page_height": 792,
            "content": "G.3 Vectors in Space n-Vectors 371\r\n• For three equations, most often their intersection will be a single\r\npoint so the solution will then be unique:\r\n• Of course stuff can go wrong. Two different looking equations could\r\ndetermine the same plane, or worse equations could be inconsistent. If\r\nthe equations are inconsistent, there will be no solutions at all. For\r\nexample, if you had four equations determining four parallel planes the\r\nsolution set would be empty. This looks like this:\r\nG.3 Vectors in Space n-Vectors\r\nReview of Parametric Notation\r\nThe equation for a plane in three variables x, y and z looks like\r\nax + by + cz = d\r\nwhere a, b, c, and d are constants. Lets look at the example\r\nx + 2y + 5z = 3 .\r\n371",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5903a2f3-abca-4f8d-8ae1-88e11ed62695.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=498e1649edeea59f87431ab6febb6877ded6c165db3cde08086531deb33ea139",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 401
      },
      {
        "segments": [
          {
            "segment_id": "6bada299-4c8e-4a9c-a959-bfd1b432c4a9",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 372,
            "page_width": 612,
            "page_height": 792,
            "content": "372 Movie Scripts\r\nIn fact this is a system of linear equations whose solutions form a plane with\r\nnormal vector (1, 2, 5). As an augmented matrix the system is simply\r\n\u0010\r\n1 2 5\r\n\f\r\n\f\r\n\f\r\n3\r\n\u0011\r\n.\r\nThis is actually RREF! So we can let x be our pivot variable and y, z be\r\nrepresented by free parameters λ1 and λ2:\r\nx = λ1 , y = λ2 .\r\nThus we write the solution as\r\nx = −2λ1 −5λ2 +3\r\ny = λ1\r\nz = λ2\r\nor in vector notation\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n3\r\n0\r\n0\r\n\r\n + λ1\r\n\r\n\r\n−2\r\n1\r\n0\r\n\r\n + λ2\r\n\r\n\r\n−5\r\n0\r\n1\r\n\r\n .\r\nThis describes a plane parametric equation. Planes are ‘‘two-dimensional’’\r\nbecause they are described by two free variables. Here’s a picture of the\r\nresulting plane:\r\nThe Story of Your Life\r\nThis video talks about the weird notion of a ‘‘length-squared’’ for a vector\r\nv = (x, t) given by ||v||2 = x\r\n2 − t2 used in Einstein’s theory of relativity. The\r\n372",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6bada299-4c8e-4a9c-a959-bfd1b432c4a9.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1d73fc5e7f330937d17f77479a4cd7627f461912dbd273778c14688cecdca052",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 187
      },
      {
        "segments": [
          {
            "segment_id": "645cb982-b186-4c75-8e79-ac37d6bcb94e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 373,
            "page_width": 612,
            "page_height": 792,
            "content": "G.4 Vector Spaces 373\r\nidea is to plot the story of your life on a plane with coordinates (x, t). The\r\ncoordinate x encodes where an event happened (for real life situations, we\r\nmust replace x → (x, y, z) ∈ R\r\n3). The coordinate t says when events happened.\r\nTherefore you can plot your life history as a worldline as shown:\r\nEach point on the worldline corresponds to a place and time of an event in your\r\nlife. The slope of the worldline has to do with your speed. Or to be precise,\r\nthe inverse slope is your velocity. Einstein realized that the maximum speed\r\npossible was that of light, often called c. In the diagram above c = 1 and\r\ncorresponds to the lines x = ±t ⇒ x\r\n2 − t2 = 0. This should get you started in\r\nyour search for vectors with zero length.\r\nG.4 Vector Spaces\r\nExamples of Each Rule\r\nLets show that R\r\n2 is a vector space. To do this (unless we invent some clever\r\ntricks) we will have to check all parts of the definition. Its worth doing\r\nthis once, so here we go:\r\nBefore we start, remember that for R\r\n2 we define vector addition and scalar\r\nmultiplication component-wise.\r\n(+i) Additive closure: We need to make sure that when we add \u0012\r\nx1\r\nx2\r\n\u0013\r\nand \u0012\r\ny1\r\ny2\r\n\u0013\r\nthat we do not get something outside the original vector space R\r\n2. This\r\njust relies on the underlying structure of real numbers whose sums are\r\nagain real numbers so, using our component-wise addition law we have\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n:= \u0012\r\nx1 + x2\r\ny1 + y2\r\n\u0013\r\n∈ R\r\n2\r\n.\r\n(+ii) Additive commutativity: We want to check that when we add any two vectors\r\nwe can do so in either order, i.e.\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n?=\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n+\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n.\r\n373",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/645cb982-b186-4c75-8e79-ac37d6bcb94e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b32d44c04564696ba919496e76bdeece1043bfe9ddcf2e91a5686440040aedea",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 332
      },
      {
        "segments": [
          {
            "segment_id": "50e1cf66-06dc-4f73-b690-2e885cb560bd",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 374,
            "page_width": 612,
            "page_height": 792,
            "content": "374 Movie Scripts\r\nThis again relies on the underlying real numbers which for any x, y ∈ R\r\nobey\r\nx + y = y + x .\r\nThis fact underlies the middle step of the following computation\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n=\r\n\u0012\r\nx1 + y1\r\nx2 + y2\r\n\u0013\r\n=\r\n\u0012\r\ny1 + x1\r\ny2 + x2\r\n\u0013\r\n=\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n+\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n,\r\nwhich demonstrates what we wished to show.\r\n(+iii) Additive Associativity: This shows that we needn’t specify with paren\u0002theses which order we intend to add triples of vectors because their\r\nsums will agree for either choice. What we have to check is\r\n\u0012\u0012x1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\u0013 +\u0012\r\nz1\r\nz2\r\n\u0013\r\n?=\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\u0012y1\r\ny2\r\n\u0013\r\n+\r\n\u0012\r\nz1\r\nz2\r\n\u0013\u0013 .\r\nAgain this relies on the underlying associativity of real numbers:\r\n(x + y) + z = x + (y + z).\r\nThe computation required is\r\n\u0012\u0012x1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\u0013 +\u0012\r\nz1\r\nz2\r\n\u0013\r\n=\r\n\u0012\r\nx1 + y1\r\nx2 + y2\r\n\u0013\r\n+\r\n\u0012\r\nz1\r\nz2\r\n\u0013\r\n=\r\n\u0012\r\n(x1 + y1) + z1\r\n(x2 + y2) + z2\r\n\u0013\r\n=\r\n\u0012\r\nx1 + (y1 + z1)\r\nx2 + (y2 + z2)\r\n\u0013\r\n=\r\n\u0012\r\nx1\r\ny1\r\n\u0013\r\n+\r\n\u0012\r\ny1 + z1\r\ny2 + z2\r\n\u0013\r\n=\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\u0012y1\r\ny2\r\n\u0013\r\n+\r\n\u0012\r\nz1\r\nz2\r\n\u0013\u0013 .\r\n(iv) Zero: There needs to exist a vector ~0 that works the way we would expect\r\nzero to behave, i.e.\r\n\u0012\r\nx1\r\ny1\r\n\u0013\r\n+~0 = \u0012\r\nx1\r\ny1\r\n\u0013\r\n.\r\nIt is easy to find, the answer is\r\n~0 = \u0012\r\n0\r\n0\r\n\u0013\r\n.\r\nYou can easily check that when this vector is added to any vector, the\r\nresult is unchanged.\r\n(+v) Additive Inverse: We need to check that when we have \u0012\r\nx1\r\nx2\r\n\u0013\r\n, there is\r\nanother vector that can be added to it so the sum is ~0. (Note that it\r\nis important to first figure out what ~0 is here!) The answer for the\r\nadditive inverse of \u0012\r\nx1\r\nx2\r\n\u0013\r\nis \u0012\r\n−x1\r\n−x2\r\n\u0013\r\nbecause\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\n−x1\r\n−x2\r\n\u0013\r\n=\r\n\u0012\r\nx1 − x1\r\nx2 − x2\r\n\u0013\r\n=\r\n\u0012\r\n0\r\n0\r\n\u0013\r\n= ~0 .\r\n374",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/50e1cf66-06dc-4f73-b690-2e885cb560bd.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a6077415f66e220e13bebc03377805fea1095a703487e31db1e3249020f58ebc",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 400
      },
      {
        "segments": [
          {
            "segment_id": "be2f5685-7244-4777-bf1d-5b7da82baa13",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 375,
            "page_width": 612,
            "page_height": 792,
            "content": "G.4 Vector Spaces 375\r\nWe are half-way done, now we need to consider the rules for scalar multipli\u0002cation. Notice, that we multiply vectors by scalars (i.e. numbers) but do NOT\r\nmultiply a vectors by vectors.\r\n(·i) Multiplicative closure: Again, we are checking that an operation does\r\nnot produce vectors outside the vector space. For a scalar a ∈ R, we\r\nrequire that a\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\nlies in R\r\n2. First we compute using our component\u0002wise rule for scalars times vectors:\r\na\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n=\r\n\u0012\r\nax1\r\nax2\r\n\u0013\r\n.\r\nSince products of real numbers ax1 and ax2 are again real numbers we see\r\nthis is indeed inside R\r\n2.\r\n(·ii) Multiplicative distributivity: The equation we need to check is\r\n(a + b)\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n?= a\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+ b\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n.\r\nOnce again this is a simple LHS=RHS proof using properties of the real\r\nnumbers. Starting on the left we have\r\n(a + b)\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n=\r\n\u0012\r\n(a + b)x1\r\n(a + b)x2\r\n\u0013\r\n=\r\n\u0012\r\nax1 + bx1\r\nax2 + bx2\r\n\u0013\r\n=\r\n\u0012\r\nax1\r\nax2\r\n\u0013\r\n+\r\n\u0012\r\nbx1\r\nbx2\r\n\u0013\r\n= a\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+ b\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n,\r\nas required.\r\n(·iii) Additive distributivity: This time we need to check the equation The\r\nequation we need to check is\r\na\r\n\u0012\u0012x1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\u0013 ?= a\u0012\r\nx1\r\nx2\r\n\u0013\r\n+ a\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n,\r\ni.e., one scalar but two different vectors. The method is by now becoming\r\nfamiliar\r\na\r\n\u0012\u0012x1\r\nx2\r\n\u0013\r\n+\r\n\u0012\r\ny1\r\ny2\r\n\u0013\u0013 = a\u0012\u0012x1 + y1\r\nx2 + y2\r\n\u0013\u0013 =\u0012\r\na(x1 + y1)\r\na(x2 + y2)\r\n\u0013\r\n=\r\n\u0012\r\nax1 + ay1\r\nax2 + ay2\r\n\u0013\r\n=\r\n\u0012\r\nax1\r\nax2\r\n\u0013\r\n+\r\n\u0012\r\nay1\r\nay2\r\n\u0013\r\n= a\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n+ a\r\n\u0012\r\ny1\r\ny2\r\n\u0013\r\n,\r\nagain as required.\r\n375",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/be2f5685-7244-4777-bf1d-5b7da82baa13.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b4d9ca74ae054a66d56d8e58bf604c62ccc8de179c6d66a2de0ac6c96f45cf32",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 327
      },
      {
        "segments": [
          {
            "segment_id": "2b347a63-9dd3-4dc6-9da5-04e8489aac1f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 376,
            "page_width": 612,
            "page_height": 792,
            "content": "376 Movie Scripts\r\n(·iv) Multiplicative associativity. Just as for addition, this is the re\u0002quirement that the order of bracketing does not matter. We need to\r\nestablish whether\r\n(a.b) ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n?= a ·\r\n\u0012\r\nb ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\u0013 .\r\nThis clearly holds for real numbers a.(b.x) = (a.b).x. The computation is\r\n(a.b) ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n=\r\n\u0012\r\n(a.b).x1\r\n(a.b).x2\r\n\u0013\r\n=\r\n\u0012\r\na.(b.x1)\r\na.(b.x2)\r\n\u0013\r\n= a. \u0012\r\n(b.x1)\r\n(b.x2)\r\n\u0013\r\n= a ·\r\n\u0012\r\nb ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\u0013 ,\r\nwhich is what we want.\r\n(·v) Unity: We need to find a special scalar acts the way we would expect\r\n‘‘1’’ to behave. I.e.\r\n‘‘1’’ ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n=\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n.\r\nThere is an obvious choice for this special scalar---just the real number\r\n1 itself. Indeed, to be pedantic lets calculate\r\n1 ·\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n=\r\n\u0012\r\n1.x1\r\n1.x2\r\n\u0013\r\n=\r\n\u0012\r\nx1\r\nx2\r\n\u0013\r\n.\r\nNow we are done---we have really proven the R\r\n2 is a vector space so lets write\r\na little square \u0003 to celebrate.\r\nExample of a Vector Space\r\nThis video talks about the definition of a vector space. Even though the\r\ndefintion looks long, complicated and abstract, it is actually designed to\r\nmodel a very wide range of real life situations. As an example, consider the\r\nvector space\r\nV = {all possible ways to hit a hockey puck} .\r\nThe different ways of hitting a hockey puck can all be considered as vectors.\r\nYou can think about adding vectors by having two players hitting the puck at\r\nthe same time. This picture shows vectors N and J corresponding to the ways\r\nNicole Darwitz and Jenny Potter hit a hockey puck, plus the vector obtained\r\nwhen they hit the puck together.\r\n376",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2b347a63-9dd3-4dc6-9da5-04e8489aac1f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f69bf68916face9834287236ff64d73ca483f8aabe964aa3a9ee19fd0fcde3f2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 303
      },
      {
        "segments": [
          {
            "segment_id": "8768cee6-733d-4480-9d01-60f72dabb9ee",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 377,
            "page_width": 612,
            "page_height": 792,
            "content": "G.5 Linear Transformations 377\r\nYou can also model the new vector 2J obtained by scalar multiplication by\r\n2 by thinking about Jenny hitting the puck twice (or a world with two Jenny\r\nPotters....). Now ask yourself questions like whether the multiplicative\r\ndistributive law\r\n2J + 2N = 2(J + N)\r\nmake sense in this context.\r\nHint for Review Question 5\r\nLets worry about the last part of the problem. The problem can be solved\r\nby considering a non-zero simple polynomial, such as a degree 0 polynomial,\r\nand multiplying by i ∈ C. That is to say we take a vector p ∈ P\r\nR\r\n3 and then\r\nconsidering i·p. This will violate one of the vector space rules about scalars,\r\nand you should take from this that the scalar field matters.\r\nAs a second hint, consider Q (the field of rational numbers). This is not\r\na vector space over R since √2 · 1 = √2 ∈/ Q, so it is not closed under scalar\r\nmultiplication, but it is clearly a vector space over Q.\r\nG.5 Linear Transformations\r\nHint for Review Question 5\r\nThe first thing we see in the problem is a definition of this new space Pn.\r\nElements of Pn are polynomials that look like\r\na0 + a1t + a2t\r\n2 + . . . + antn\r\nwhere the ai’s are constants. So this means if L is a linear transformation\r\nfrom P2 → P3 that the inputs of L are degree two polynomials which look like\r\na0 + a1t + a2t\r\n2\r\nand the output will have degree three and look like\r\nb0 + b1t + b2t\r\n2 + b3t3\r\nWe also know that L is a linear transformation, so what does that mean in\r\nthis case? Well, by linearity we know that we can separate out the sum, and\r\npull out the constants so we get\r\nL(a0 + a1t + a2t\r\n2\r\n) = a0L(1) + a1L(t) + a2L(t\r\n2\r\n)\r\nJust this should be really helpful for the first two parts of the problem. The\r\nthird part of the problem is asking us to think about this as a linear algebra\r\nproblem, so lets think about how we could write this in the vector notation we\r\nuse in the class. We could write\r\n377",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/8768cee6-733d-4480-9d01-60f72dabb9ee.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47b6d5cd49306ba6bde2f4f82070525751c92362aaff273596e0d44caa4206c2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 379
      },
      {
        "segments": [
          {
            "segment_id": "c7c06bad-2769-4619-9cf8-b1ef5210b0ec",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 378,
            "page_width": 612,
            "page_height": 792,
            "content": "378 Movie Scripts\r\na0 + a1t + a2t\r\n2\r\nas\r\n\r\n\r\na0\r\na1\r\na2\r\n\r\n\r\nAnd think for a second about how you add polynomials, you match up terms of\r\nthe same degree and add the constants component-wise. So it makes some sense\r\nto think about polynomials this way, since vector addition is also component\u0002wise.\r\nWe could also write the output\r\nb0 + b1t + b2t\r\n2 + b3t3\r\nas\r\n\r\n\r\nb0\r\nb1\r\nb2\r\n\r\n b3\r\nThen lets look at the information given in the problem and think about it\r\nin terms of column vectors\r\n• L(1) = 4 but we can think of the input 1 = 1 + 0t + 0t\r\n2 and the output\r\n4 = 4 + 0t + 0t\r\n20t3 and write this as L(\r\n\r\n\r\n1\r\n0\r\n0\r\n\r\n) =\r\n\r\n\r\n4\r\n0\r\n0\r\n0\r\n\r\n\r\n• L(t) = t\r\n3 This can be written as L(\r\n\r\n\r\n0\r\n1\r\n0\r\n\r\n) =\r\n\r\n\r\n0\r\n0\r\n0\r\n1\r\n\r\n\r\n• L(t\r\n2\r\n) = t − 1 It might be a little trickier to figure out how to write\r\nt − 1 but if we write the polynomial out with the terms in order and with\r\nzeroes next to the terms that do not appear, we can see that\r\nt − 1 = −1 + t + 0t\r\n2 + 0t3\r\ncorresponds to\r\n\r\n\r\n−1\r\n1\r\n0\r\n0\r\n\r\n\r\nSo this can be written as L(\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n) =\r\n\r\n\r\n−1\r\n1\r\n0\r\n0\r\n\r\n\r\nNow to think about how you would write the linear transformation L as\r\na matrix, first think about what the dimensions of the matrix would be.\r\nThen look at the first two parts of this problem to help you figure out\r\nwhat the entries should be.\r\n378",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/c7c06bad-2769-4619-9cf8-b1ef5210b0ec.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4c42802f09c63d2f2175e65fe22fc0da54dc2acc24e1417483a9d842fcbe4caa",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 319
      },
      {
        "segments": [
          {
            "segment_id": "2300a5ff-cfec-4ab3-8cfd-1bdafd1b3a94",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 379,
            "page_width": 612,
            "page_height": 792,
            "content": "G.6 Matrices 379\r\nG.6 Matrices\r\nAdjacency Matrix Example\r\nLets think about a graph as a mini-facebook. In this tiny facebook there are\r\nonly four people, Alice, Bob, Carl, and David.\r\nSuppose we have the following relationships\r\n• Alice and Bob are friends.\r\n• Alice and Carl are friends.\r\n• Carl and Bob are friends.\r\n• David and Bob are friends.\r\nNow draw a picture where each person is a dot, and then draw a line between\r\nthe dots of people who are friends. This is an example of a graph if you think\r\nof the people as nodes, and the friendships as edges.\r\nNow lets make a 4 × 4 matrix, which is an adjacency matrix for the graph.\r\nMake a column and a row for each of the four people. It will look a lot like a\r\ntable. When two people are friends put a 1 the the row of one and the column\r\nof the other. For example Alice and Carl are friends so we can label the table\r\nbelow.\r\nA B C D\r\nA 1\r\nB\r\nC 1\r\nD\r\nWe can continue to label the entries for each friendship. Here lets assume\r\nthat people are friends with themselves, so the diagonal will be all ones.\r\n379",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2300a5ff-cfec-4ab3-8cfd-1bdafd1b3a94.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=83ef636d59ad4d676968d0b3f158d0e33717f2fbe8a27c34dff9579ae46944d1",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "894ad8c9-6024-48ff-b152-ace1c83daee1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 380,
            "page_width": 612,
            "page_height": 792,
            "content": "380 Movie Scripts\r\nA B C D\r\nA 1 1 1 0\r\nB 1 1 1 1\r\nC 1 1 1 0\r\nD 0 1 0 1\r\nThen take the entries of this table as a matrix\r\n\r\n\r\n1 1 1 0\r\n1 1 1 1\r\n1 1 1 0\r\n0 1 0 1\r\n\r\n\r\nNotice that this table is symmetric across the diagonal, the same way a\r\nmultiplication table would be symmetric. This is because on facebook friend\u0002ship is symmetric in the sense that you can’t be friends with someone if they\r\naren’t friends with you too. This is an example of a symmetric matrix.\r\nYou could think about what you would have to do differently to draw a graph\r\nfor something like twitter where you don’t have to follow everyone who follows\r\nyou. The adjacency matrix might not be symmetric then.\r\nDo Matrices Commute?\r\nThis video shows you a funny property of matrices. Some matrix properties\r\nlook just like those for numbers. For example numbers obey\r\na(bc) = (ab)c\r\nand so do matrices:\r\nA(BC) = (AB)C.\r\nThis says the order of bracketing does not matter and is called associativity.\r\nNow we ask ourselves whether the basic property of numbers\r\nab = ba ,\r\nholds for matrices\r\nAB ?= BA .\r\nFor this, firstly note that we need to work with square matrices even for both\r\norderings to even make sense. Lets take a simple 2 × 2 example, let\r\nA =\r\n\u0012\r\n1 a\r\n0 1\u0013\r\n, B =\r\n\u0012\r\n1 b\r\n0 1\u0013\r\n, C =\r\n\u0012\r\n1 0\r\na 1\r\n\u0013\r\n.\r\nIn fact, computing AB and BA we get the same result\r\nAB = BA =\r\n\u0012\r\n1 a + b\r\n0 1\u0013\r\n,\r\n380",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/894ad8c9-6024-48ff-b152-ace1c83daee1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b16a3e13467dd342adc53a30798bcb42ec59a85b02823b36f4e09725f43c67a1",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 501
      },
      {
        "segments": [
          {
            "segment_id": "7e825fef-332c-4d93-877b-1670d41d52ff",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 381,
            "page_width": 612,
            "page_height": 792,
            "content": "G.6 Matrices 381\r\nso this pair of matrices do commute. Lets try A and C:\r\nAC =\r\n\u0012\r\n1 + a\r\n2 a\r\na 1\r\n\u0013\r\n, and CA =\r\n\u0012\r\n1 a\r\na 1 + a\r\n2\r\n\u0013\r\nso\r\nAC 6= CA\r\nand this pair of matrices does not commute. Generally, matrices usually do not\r\ncommute, and the problem of finding those that do is a very interesting one.\r\nMatrix Exponential Example\r\nThis video shows you how to compute\r\nexp \u0012\r\n0 θ\r\n−θ 0\r\n\u0013\r\n.\r\nFor this we need to remember that the matrix exponential is defined by its\r\npower series\r\nexp M := I + M +\r\n1\r\n2!M2 +\r\n1\r\n3!M3 + · · · .\r\nNow lets call\r\n\u0012\r\n0 θ\r\n−θ 0\r\n\u0013\r\n= iθ\r\nwhere the matrix\r\ni := \u0012\r\n0 1\r\n−1 0\u0013\r\nand by matrix multiplication is seen to obey\r\ni\r\n2 = −I , i3 = −i , i4 = I .\r\nUsing these facts we compute by organizing terms according to whether they\r\nhave an i or not:\r\nexp iθ = I +\r\n1\r\n2! θ\r\n2\r\n(−I) + 1\r\n4! (+I) + · · ·\r\n+ iθ +\r\n1\r\n3! θ\r\n3\r\n(−i) + 1\r\n5! i + · · ·\r\n= I(1 −\r\n1\r\n2! θ\r\n2 +\r\n1\r\n4! θ\r\n4 + · · ·)\r\n+ i(θ −\r\n1\r\n3! θ\r\n3 +\r\n1\r\n5! θ\r\n5 + · · ·)\r\n= I cos θ + isin θ\r\n=\r\n\u0012\r\ncos θ sin θ\r\n− sin θ cos θ\r\n\u0013\r\n.\r\nHere we used the familiar Taylor series for the cosine and sine functions. A\r\nfun thing to think about is how the above matrix acts on vector in the plane.\r\n381",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/7e825fef-332c-4d93-877b-1670d41d52ff.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=442710cd9cdc518262844dfb6839e947876112741f5b3b1dd2897c32a5a7b024",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 297
      },
      {
        "segments": [
          {
            "segment_id": "3ca7de37-5f96-4261-8e8b-c9d180f1561a",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 382,
            "page_width": 612,
            "page_height": 792,
            "content": "382 Movie Scripts\r\nProof Explanation\r\nIn this video we will talk through the steps required to prove\r\ntr MN = tr NM .\r\nThere are some useful things to remember, first we can write\r\nM = (mi\r\nj\r\n) and N = (n\r\ni\r\nj\r\n)\r\nwhere the upper index labels rows and the lower one columns. Then\r\nMN =\r\nX\r\nl\r\nmi\r\nln\r\nl\r\nj\r\n\u0001\r\n,\r\nwhere the ‘‘open’’ indices i and j label rows and columns, but the index l is\r\na ‘‘dummy’’ index because it is summed over. (We could have given it any name\r\nwe liked!).\r\nFinally the trace is the sum over diagonal entries for which the row and\r\ncolumn numbers must coincide\r\ntr M =\r\nX\r\ni\r\nmi\r\ni\r\n.\r\nHence starting from the left of the statement we want to prove, we have\r\nLHS = tr MN =\r\nX\r\ni\r\nX\r\nl\r\nmi\r\nln\r\nl\r\ni\r\n.\r\nNext we do something obvious, just change the order of the entries mi\r\nl\r\nand n\r\nl\r\ni\r\n(they are just numbers) so\r\nX\r\ni\r\nX\r\nl\r\nmi\r\nln\r\nl\r\ni =\r\nX\r\ni\r\nX\r\nl\r\nn\r\nl\r\nimi\r\nl\r\n.\r\nEqually obvious, we now rename i → l and l → i so\r\nX\r\ni\r\nX\r\nl\r\nmi\r\nln\r\nl\r\ni =\r\nX\r\nl\r\nX\r\ni\r\nn\r\ni\r\nlml\r\ni\r\n.\r\nFinally, since we have finite sums it is legal to change the order of summa\u0002tions\r\nX\r\nl\r\nX\r\ni\r\nn\r\ni\r\nlmli =\r\nX\r\ni\r\nX\r\nl\r\nn\r\ni\r\nlmli\r\n.\r\nThis expression is the same as the one on the line above where we started\r\nexcept the m and n have been swapped so\r\nX\r\ni\r\nX\r\nl\r\nmi\r\nln\r\nl\r\ni = tr NM = RHS .\r\nThis completes the proof. \u0003\r\n382",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3ca7de37-5f96-4261-8e8b-c9d180f1561a.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=9b91ec81d393710eb499a3de03dd1b5e0d93f50420c7ce45317768e21bfe3a36",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 302
      },
      {
        "segments": [
          {
            "segment_id": "2a0c305e-2441-42d8-bc23-8cda4b971a42",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 383,
            "page_width": 612,
            "page_height": 792,
            "content": "G.6 Matrices 383\r\nHint for Review Question 4\r\nThis problem just amounts to remembering that the dot product of x = (x1, x2, . . . , xn)\r\nand y = (y1, y2, . . . , yn) is\r\nx1y1 + x2y2 + · · · + xnyn .\r\nThen try multiplying the above row vector times y\r\nT and compare.\r\nHint for Review Question 5\r\nThe majority of the problem comes down to showing that matrices are right\r\ndistributive. Let Mk is all n × k matrices for any n, and define the map\r\nfR : Mk → Mm by fR(M) = MR where R is some k × m matrix. It should be\r\nclear that fR(α · M) = (αM)R = α(MR) = αfR(M) for any scalar α. Now all\r\nthat needs to be proved is that\r\nfR(M + N) = (M + N)R = MR + NR = fR(M) + fR(N),\r\nand you can show this by looking at each entry.\r\nWe can actually generalize the concept of this problem. Let V be some\r\nvector space and M be some collection of matrices, and we say that M is a\r\nleft-action on V if\r\n(M · N) ◦ v = M ◦ (N ◦ v)\r\nfor all M, N ∈ N and v ∈ V where · denoted multiplication in M (i.e. standard\r\nmatrix multiplication) and ◦ denotes the matrix is a linear map on a vector\r\n(i.e. M(v)). There is a corresponding notion of a right action where\r\nv ◦ (M · N) = (v ◦ M) ◦ N\r\nwhere we treat v ◦ M as M(v) as before, and note the order in which the\r\nmatrices are applied. People will often omit the left or right because they\r\nare essentially the same, and just say that M acts on V .\r\nHint for Review Question 8\r\nThis is a hint for computing exponents of matrices. So what is e\r\nA if A is a\r\nmatrix? We remember that the Taylor series for\r\ne\r\nx =\r\nX∞\r\nn=0\r\nx\r\nn\r\nn!\r\n.\r\nSo as matrices we can think about\r\ne\r\nA =\r\nX∞\r\nn=0\r\nAn\r\nn!\r\n.\r\n383",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2a0c305e-2441-42d8-bc23-8cda4b971a42.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=181fa9cc7bd569358e0240b6ef25edf9ba4dd7f27cc4f20bf0f69e6252bc7423",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 362
      },
      {
        "segments": [
          {
            "segment_id": "286de13f-0cb7-464a-bdec-acf3423c84a1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 384,
            "page_width": 612,
            "page_height": 792,
            "content": "384 Movie Scripts\r\nThis means we are going to have an idea of what An looks like for any n. Lets\r\nlook at the example of one of the matrices in the problem. Let\r\nA =\r\n\u0012\r\n1 λ\r\n0 1 \u0013\r\n.\r\nLets compute An for the first few n.\r\nA\r\n0 =\r\n\u0012\r\n1 0\r\n0 1 \u0013\r\nA\r\n1 =\r\n\u0012\r\n1 λ\r\n0 1 \u0013\r\nA\r\n2 = A · A =\r\n\u0012\r\n1 2λ\r\n0 1 \u0013\r\nA\r\n3 = A2\r\n· A =\r\n\u0012\r\n1 3λ\r\n0 1 \u0013\r\n.\r\nThere is a pattern here which is that\r\nA\r\nn =\r\n\u0012\r\n1 nλ\r\n0 1 \u0013\r\n,\r\nthen we can think about the first few terms of the sequence\r\ne\r\nA =\r\nX∞\r\nn=0\r\nAn\r\nn!\r\n= A\r\n0 + A +\r\n1\r\n2!A\r\n2 +\r\n1\r\n3!A\r\n3 + . . . .\r\nLooking at the entries when we add this we get that the upper left-most entry\r\nlooks like this:\r\n1 + 1 +\r\n1\r\n2\r\n+\r\n1\r\n3! + . . . =\r\nX∞\r\nn=0\r\n1\r\nn!\r\n= e\r\n1\r\n.\r\nContinue this process with each of the entries using what you know about Taylor\r\nseries expansions to find the sum of each entry.\r\n2 × 2 Example\r\nLets go though and show how this 2×2 example satisfies all of these properties.\r\nLets look at\r\nM =\r\n\u0012\r\n7 3\r\n11 5 \u0013\r\nWe have a rule to compute the inverse\r\n\u0012\r\na b\r\nc d \u0013−1\r\n=\r\n1\r\nad − bc \u0012\r\nd −b\r\n−c a \u0013\r\n384",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/286de13f-0cb7-464a-bdec-acf3423c84a1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=473de79c8b920024b1dbdb5dae7518b566c748a78557429c0f3eb611aed4e831",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 269
      },
      {
        "segments": [
          {
            "segment_id": "95b90488-1af0-4ab3-ac61-011dc832d423",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 385,
            "page_width": 612,
            "page_height": 792,
            "content": "G.6 Matrices 385\r\nSo this means that\r\nM−1 =\r\n1\r\n35 − 33 \u0012\r\n5 −3\r\n−11 7 \u0013\r\nLets check that M−1M = I = MM−1.\r\nM−1M =\r\n1\r\n35 − 33 \u0012\r\n5 −3\r\n−11 7 \u0013 \u0012 7 3\r\n11 5 \u0013\r\n=\r\n1\r\n2\r\n\u0012\r\n2 0\r\n0 2 \u0013\r\n= I\r\nYou can compute MM−1, this should work the other way too.\r\nNow lets think about products of matrices\r\nLet A =\r\n\u0012\r\n1 3\r\n1 5 \u0013\r\nand B =\r\n\u0012\r\n1 0\r\n2 1 \u0013\r\nNotice that M = AB. We have a rule which says that (AB)\r\n−1 = B−1A−1.\r\nLets check to see if this works\r\nA\r\n−1 =\r\n1\r\n2\r\n\u0012\r\n5 −3\r\n−1 1 \u0013\r\nand B\r\n−1 =\r\n\u0012\r\n1 0\r\n−2 1 \u0013\r\nand\r\nB\r\n−1A−1 =\r\n\u0012\r\n1 0\r\n−2 1 \u0013 \u0012 5 −3−1 1 \u0013\r\n=\r\n1\r\n2\r\n\u0012\r\n2 0\r\n0 2 \u0013\r\nHint for Review Problem 3\r\nFirstnote that (b) implies (a) is the easy direction: just think about what it\r\nmeans for M to be non-singular and for a linear function to be well-defined.\r\nTherefore we assume that M is singular which implies that there exists a non\u0002zero vector X0 such that MX0 = 0. Now assume there exists some vector XV\r\nsuch that MXV = V , and look at what happens to XV + c · X0 for any c in your\r\nfield. Lastly don’t forget to address what happens if XV does not exist.\r\nHint for Review Question 4\r\nIn the text, only inverses for square matrices were discussed, but there is a\r\nnotion of left and right inverses for matrices that are not square. It helps\r\nto look at an example with bits to see why. To start with we look at vector\r\nspaces\r\nZ\r\n3\r\n2 = {(x, y, z)|x, y, z = 0, 1} and Z\r\n2\r\n2 = {(x, y)|x, y = 0, 1} .\r\nThese have 8 and 4 vectors, respectively, that can be depicted as corners of\r\na cube or square:\r\n385",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/95b90488-1af0-4ab3-ac61-011dc832d423.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=77d84cb73269d87cfec1e3425206b67108f30c8cdf39c8c503e33c790c039773",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 350
      },
      {
        "segments": [
          {
            "segment_id": "51cc4d82-4a37-4c20-9976-8e25942f3afc",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 386,
            "page_width": 612,
            "page_height": 792,
            "content": "386 Movie Scripts\r\nZ\r\n3\r\n2 or Z\r\n2\r\n2\r\nNow lets consider a linear transformation\r\nL : Z\r\n3\r\n2 −→ Z\r\n2\r\n2\r\n.\r\nThis must be represented by a matrix, and lets take the example\r\nL\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\u0012\r\n0 1 1\r\n1 1 0\u0013\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n := AX .\r\nSince we have bits, we can work out what L does to every vector, this is listed\r\nbelow\r\n(0, 0, 0) L7→ (0, 0)\r\n(0, 0, 1) L7→ (1, 0)\r\n(1, 1, 0) L7→ (1, 0)\r\n(1, 0, 0) L7→ (0, 1)\r\n(0, 1, 1) L7→ (0, 1)\r\n(0, 1, 0) L7→ (1, 1)\r\n(1, 0, 1) L7→ (1, 1)\r\n(1, 1, 1) L7→ (1, 1)\r\nNow lets think about left and right inverses. A left inverse B to the matrix\r\nA would obey\r\nBA = I\r\nand since the identity matrix is square, B must be 2 × 3. It would have to\r\nundo the action of A and return vectors in Z\r\n3\r\n2 to where they started from. But\r\nabove, we see that different vectors in Z\r\n3\r\n2 are mapped to the same vector in Z\r\n2\r\n2\r\nby the linear transformation L with matrix A. So B cannot exist. However a\r\nright inverse C obeying\r\nAC = I\r\ncan. It would be 2×2. Its job is to take a vector in Z\r\n2\r\n2 back to one in Z\r\n3\r\n2 in a\r\nway that gets undone by the action of A. This can be done, but not uniquely.\r\n386",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/51cc4d82-4a37-4c20-9976-8e25942f3afc.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ba52dfdeb3a917c30b06f28cac3e484c2b83be916c07d8fadc264776905ec72f",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 269
      },
      {
        "segments": [
          {
            "segment_id": "32ed230b-0370-4d3e-8201-ad4d02abdf7c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 387,
            "page_width": 612,
            "page_height": 792,
            "content": "G.6 Matrices 387\r\nUsing an LU Decomposition\r\nLets go through how to use a LU decomposition to speed up solving a system of\r\nequations. Suppose you want to solve for x in the equation Mx = b\r\n\r\n\r\n1 0 −5\r\n3 −1 −14\r\n1 0 −3\r\n\r\n x =\r\n\r\n\r\n6\r\n19\r\n4\r\n\r\n\r\nwhere you are given the decomposition of M into the product of L and U which\r\nare lower and upper and lower triangular matrices respectively.\r\nM =\r\n\r\n\r\n1 0 −5\r\n3 −1 −14\r\n1 0 −3\r\n\r\n =\r\n\r\n\r\n1 0 0\r\n3 1 0\r\n1 0 2\r\n\r\n\r\n\r\n\r\n1 0 −5\r\n0 −1 1\r\n0 0 1\r\n\r\n = LU\r\nFirst you should solve L(Ux) = b for Ux. The augmented matrix you would use\r\nlooks like this\r\n\r\n\r\n1 0 0 6\r\n3 1 0 19\r\n1 0 2 4\r\n\r\n\r\nThis is an easy augmented matrix to solve because it is upper triangular. If\r\nyou were to write out the three equations using variables, you would find that\r\nthe first equation has already been solved, and is ready to be plugged into\r\nthe second equation. This backward substitution makes solving the system much\r\nfaster. Try it and in a few steps you should be able to get\r\n\r\n\r\n1 0 0 6\r\n0 1 0 1\r\n0 0 1 −1\r\n\r\n\r\nThis tells us that Ux =\r\n\r\n\r\n6\r\n1\r\n−1\r\n\r\n. Now the second part of the problem is to solve\r\nfor x. The augmented matrix you get is\r\n\r\n\r\n1 0 −5 6\r\n0 −1 1 1\r\n0 0 1 −1\r\n\r\n\r\nIt should take only a few step to transform it into\r\n\r\n\r\n1 0 0 1\r\n0 1 0 −2\r\n0 0 1 −1\r\n\r\n ,\r\nwhich gives us the answer x =\r\n\r\n\r\n1\r\n−2\r\n−1\r\n\r\n.\r\n387",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/32ed230b-0370-4d3e-8201-ad4d02abdf7c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2c0b85a449be8cecd8ef86801872d171df802b4a37538273bb83fc4844990761",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 335
      },
      {
        "segments": [
          {
            "segment_id": "1367f406-b27f-42a3-b761-6694e9944c16",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 388,
            "page_width": 612,
            "page_height": 792,
            "content": "388 Movie Scripts\r\nAnother LU Decomposition Example\r\nHere we will perform an LU decomposition on the matrix\r\nM =\r\n\r\n\r\n1 7 2\r\n−3 −21 4\r\n1 6 3\r\n\r\n\r\nfollowing the procedure outlined in Section 7.7.2. So initially we have L1 =\r\nI3 and U1 = M, and hence\r\nL2 =\r\n\r\n\r\n1 0 0\r\n−3 1 0\r\n1 0 1\r\n\r\n U2 =\r\n\r\n\r\n1 7 2\r\n0 0 10\r\n0 −1 −1\r\n\r\n .\r\nHowever we now have a problem since 0 · c = 0 for any value of c since we are\r\nworking over a field, but we can quickly remedy this by swapping the second and\r\nthird rows of U2 to get U\r\n0\r\n2 and note that we just interchange the corresponding\r\nrows all columns left of and including the column we added values to in L2 to\r\nget L\r\n0\r\n2. Yet this gives us a small problem as L\r\n0\r\n2U\r\n0\r\n2 6= M; in fact it gives us\r\nthe similar matrix M0 with the second and third rows swapped. In our original\r\nproblem MX = V , we also need to make the corresponding swap on our vector\r\nV to get a V\r\n0 since all of this amounts to changing the order of our two\r\nequations, and note that this clearly does not change the solution. Back to\r\nour example, we have\r\nL\r\n0\r\n2 =\r\n\r\n\r\n1 0 0\r\n1 1 0\r\n−3 0 1\r\n\r\n U\r\n0\r\n2 =\r\n\r\n\r\n1 7 2\r\n0 −1 −1\r\n0 0 10\r\n\r\n ,\r\nand note that U\r\n0\r\n2 is upper triangular. Finally you can easily see that\r\nL\r\n0\r\n2U\r\n0\r\n2 =\r\n\r\n\r\n1 7 2\r\n1 6 3\r\n−3 −21 4\r\n\r\n = M0\r\nwhich solves the problem of L\r\n0\r\n2U\r\n0\r\n2X = M0X = V\r\n0. (We note that as augmented\r\nmatrices (M0|V\r\n0\r\n) ∼ (M|V ).)\r\nBlock LDU Explanation\r\nThis video explains how to do a block LDU decomposition. Firstly remember\r\nsome key facts about block matrices: It is important that the blocks fit\r\ntogether properly. For example, if we have matrices\r\nmatrix shape\r\nX r × r\r\nY r × t\r\nZ t × r\r\nW t × t\r\n388",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1367f406-b27f-42a3-b761-6694e9944c16.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0ba5fc6f2abf1ecb4d783ae834181a35e4280fe8390aed907f86228386dadd58",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 393
      },
      {
        "segments": [
          {
            "segment_id": "b5a16af8-6677-4797-95d2-58e6fdf83005",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 389,
            "page_width": 612,
            "page_height": 792,
            "content": "G.7 Determinants 389\r\nwe could fit these together as a (r + t) × (r + t) square block matrix\r\nM =\r\n\u0012\r\nX Y\r\nZ W\r\n\u0013\r\n.\r\nMatrix multiplication works for blocks just as for matrix entries:\r\nM2 =\r\n\u0012\r\nX Y\r\nZ W\r\n\u0013 \u0012 X Y\r\nZ W\r\n\u0013\r\n=\r\n\u0012\r\nX2 + Y Z XY + Y W\r\nZX + W Z ZY + W2\r\n\u0013\r\n.\r\nNow lets specialize to the case where the square matrix X has an inverse.\r\nThen we can multiply out the following triple product of a lower triangular,\r\na block diagonal and an upper triangular matrix:\r\n\u0012\r\nI 0\r\nZX−1I\r\n\u0013 \u0012 X 0\r\n0 W − ZX−1Y\r\n\u0013 \u0012 I X−1Y\r\n0 I\r\n\u0013\r\n=\r\n\u0012\r\nX 0\r\nZ W − ZX−1Y\r\n\u0013 \u0012 I X−1Y\r\n0 I\r\n\u0013\r\n=\r\n\u0012\r\nX Y\r\nZX−1Y + Z W − ZX−1Y\r\n\u0013\r\n=\r\n\u0012\r\nX Y\r\nZ W\r\n\u0013\r\n= M .\r\nThis shows that the LDU decomposition given in Section 7.7 is correct.\r\nG.7 Determinants\r\nPermutation Example\r\nLets try to get the hang of permutations. A permutation is a function which\r\nscrambles things. Suppose we had\r\nThis looks like a function σ that has values\r\nσ(1) = 3, σ(2) = 2, σ(3) = 4, σ(4) = 1 .\r\n389",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b5a16af8-6677-4797-95d2-58e6fdf83005.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=08cb59691e88c78e152d33c331371249a4ecd3ecfb300f6d1cd26e4e7fa9ac00",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 220
      },
      {
        "segments": [
          {
            "segment_id": "34026a57-548f-49d0-8bb8-bcf51737bbde",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 390,
            "page_width": 612,
            "page_height": 792,
            "content": "390 Movie Scripts\r\nThen we could write this as\r\n\u0014\r\n1 2 3 4\r\nσ(1) σ(2) σ(3) σ(4)\u0015\r\n=\r\n\u0014\r\n1 2 3 4\r\n3 2 4 1\u0015\r\nWe could write this permutation in two steps by saying that first we swap 3\r\nand 4, and then we swap 1 and 3. The order here is important.\r\nThis is an even permutation, since the number of swaps we used is two (an even\r\nnumber).\r\nElementary Matrices\r\nThis video will explain some of the ideas behind elementary matrices. First\r\nthink back to linear systems, for example n equations in n unknowns:\r\n\r\n\r\n\r\na\r\n1\r\n1x\r\n1 + a1\r\n2x\r\n2 + · · · + a1\r\nnx\r\nn = v1\r\na\r\n2\r\n1x\r\n1 + a2\r\n2x\r\n2 + · · · + a2\r\nnx\r\nn = v2\r\n.\r\n.\r\n.\r\na\r\nn\r\n1 x\r\n1 + an\r\n2 x\r\n2 + · · · + an\r\nnx\r\nn = vn .\r\nWe know it is helpful to store the above information with matrices and vectors\r\nM :=\r\n\r\n\r\na\r\n1\r\n1 a\r\n1\r\n2\r\n· · · a\r\n1\r\nn\r\na\r\n2\r\n1 a\r\n2\r\n2\r\n· · · a\r\n2\r\nn\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\na\r\nn\r\n1 a\r\nn\r\n2\r\n· · · a\r\nn\r\nn\r\n\r\n\r\n, X :=\r\n\r\n\r\nx\r\n1\r\nx\r\n2\r\n.\r\n.\r\n.\r\nx\r\nn\r\n\r\n\r\n, V :=\r\n\r\n\r\nv\r\n1\r\nv\r\n2\r\n.\r\n.\r\n.\r\nv\r\nn\r\n\r\n\r\n.\r\nHere we will focus on the case the M is square because we are interested in\r\nits inverse M−1 (if it exists) and its determinant (whose job it will be to\r\ndetermine the existence of M−1).\r\nWe know at least three ways of handling this linear system problem:\r\n1. As an augmented matrix\r\n\r\nM V\r\n\u0001\r\n.\r\nHere our plan would be to perform row operations until the system looks\r\nlike\r\n\r\nI M−1V\r\n\u0001\r\n,\r\n(assuming that M−1 exists).\r\n390",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/34026a57-548f-49d0-8bb8-bcf51737bbde.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d3a6b8b0b9127b917218b354e9b461456bbf250d1de67d04a1267d108551d1da",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 341
      },
      {
        "segments": [
          {
            "segment_id": "d961e45f-5ff8-4dae-9bd0-571a837db617",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 391,
            "page_width": 612,
            "page_height": 792,
            "content": "G.7 Determinants 391\r\n2. As a matrix equation\r\nMX = V ,\r\nwhich we would solve by finding M−1 (again, if it exists), so that\r\nX = M−1V .\r\n3. As a linear transformation\r\nL : R\r\nn −→ Rn\r\nvia\r\nR\r\nn 3 X 7−→ MX ∈ Rn\r\n.\r\nIn this case we have to study the equation L(X) = V because V ∈ R\r\nn.\r\nLets focus on the first two methods. In particular we want to think about\r\nhow the augmented matrix method can give information about finding M−1. In\r\nparticular, how it can be used for handling determinants.\r\nThe main idea is that the row operations changed the augmented matrices,\r\nbut we also know how to change a matrix M by multiplying it by some other\r\nmatrix E, so that M → EM. In particular can we find ‘‘elementary matrices’’\r\nthe perform row operations?\r\nOnce we find these elementary matrices is is very important to ask how they\r\neffect the determinant, but you can think about that for your own self right\r\nnow.\r\nLets tabulate our names for the matrices that perform the various row\r\noperations:\r\nRow operation Elementary Matrix\r\nRi ↔ Rj Ei\r\nj\r\nRi → λRi Ri(λ)\r\nRi → Ri + λRj S\r\ni\r\nj\r\n(λ)\r\nTo finish off the video, here is how all these elementary matrices work\r\nfor a 2 × 2 example. Lets take\r\nM =\r\n\u0012\r\na b\r\nc d\u0013\r\n.\r\nA good thing to think about is what happens to det M = ad − bc under the\r\noperations below.\r\n• Row swap:\r\nE\r\n1\r\n2 =\r\n\u0012\r\n0 1\r\n1 0\u0013\r\n, E1\r\n2M =\r\n\u0012\r\n0 1\r\n1 0\u0013 \u0012a bc d\u0013\r\n=\r\n\u0012\r\nc d\r\na b\u0013\r\n.\r\n391",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/d961e45f-5ff8-4dae-9bd0-571a837db617.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=4853286c47ac82c8b9a38bab3b78252a740d700ffe02b8d8ab24d6a5ca00576a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 293
      },
      {
        "segments": [
          {
            "segment_id": "1ee5eaf2-28ae-4ea8-9c36-e5e9c80d2766",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 392,
            "page_width": 612,
            "page_height": 792,
            "content": "392 Movie Scripts\r\n• Scalar multiplying:\r\nR\r\n1\r\n(λ) = \u0012\r\nλ 0\r\n0 1\u0013\r\n, E1\r\n2M =\r\n\u0012\r\nλ 0\r\n0 1\u0013 \u0012a b\r\nc d\u0013\r\n=\r\n\u0012\r\nλa λb\r\nc d\u0013\r\n.\r\n• Row sum:\r\nS\r\n1\r\n2\r\n(λ) = \u0012\r\n1 λ\r\n0 1\u0013\r\n, S1\r\n2\r\n(λ)M =\r\n\u0012\r\n1 λ\r\n0 1\u0013 \u0012a bc d\u0013\r\n=\r\n\u0012\r\na + λc b + λd\r\nc d\u0013\r\n.\r\nElementary Determinants\r\nThis video will show you how to calculate determinants of elementary matrices.\r\nFirst remember that the job of an elementary row matrix is to perform row\r\noperations, so that if E is an elementary row matrix and M some given matrix,\r\nEM\r\nis the matrix M with a row operation performed on it.\r\nThe next thing to remember is that the determinant of the identity is 1.\r\nMoreover, we also know what row operations do to determinants:\r\n• Row swap Ei\r\nj: flips the sign of the determinant.\r\n• Scalar multiplication Ri(λ): multiplying a row by λ multiplies the de\u0002terminant by λ.\r\n• Row addition S\r\ni\r\nj\r\n(λ): adding some amount of one row to another does not\r\nchange the determinant.\r\nThe corresponding elementary matrices are obtained by performing exactly\r\nthese operations on the identity:\r\nE\r\ni\r\nj =\r\n\r\n\r\n1\r\n...\r\n0 1\r\n...\r\n1 0\r\n...\r\n1\r\n\r\n\r\n,\r\nR\r\ni\r\n(λ) =\r\n\r\n\r\n1\r\n...\r\nλ\r\n...\r\n1\r\n\r\n\r\n,\r\n392",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1ee5eaf2-28ae-4ea8-9c36-e5e9c80d2766.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=f2d8462190cf623ee2ba08dee6b07d03c1dfc1b95f209ef65b09c11379e49f9b",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 243
      },
      {
        "segments": [
          {
            "segment_id": "5b33a880-5be5-4d93-b09d-94dee8237409",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 393,
            "page_width": 612,
            "page_height": 792,
            "content": "G.7 Determinants 393\r\nS\r\ni\r\nj\r\n(λ) =\r\n\r\n\r\n1\r\n...\r\n1 λ\r\n...\r\n1\r\n...\r\n1\r\n\r\n\r\nSo to calculate their determinants, we just have to apply the above list\r\nof what happens to the determinant of a matrix under row operations to the\r\ndeterminant of the identity. This yields\r\ndet E\r\ni\r\nj = −1 , det R\r\ni\r\n(λ) = λ , det S\r\ni\r\nj\r\n(λ) = 1 .\r\nDeterminants and Inverses\r\nLets figure out the relationship between determinants and invertibility. If\r\nwe have a system of equations Mx = b and we have the inverse M−1 then if we\r\nmultiply on both sides we get x = M−1Mx = M−1b. If the inverse exists we\r\ncan solve for x and get a solution that looks like a point.\r\nSo what could go wrong when we want solve a system of equations and get a\r\nsolution that looks like a point? Something would go wrong if we didn’t have\r\nenough equations for example if we were just given\r\nx + y = 1\r\nor maybe, to make this a square matrix M we could write this as\r\nx + y = 1\r\n0 = 0\r\nThe matrix for this would be M =\r\n\u0014\r\n1 1\r\n0 0\u0015\r\nand det(M) = 0. When we compute the\r\ndeterminant, this row of all zeros gets multiplied in every term. If instead\r\nwe were given redundant equations\r\nx + y = 1\r\n2x + 2y = 2\r\nThe matrix for this would be M =\r\n\u0014\r\n1 1\r\n2 2\u0015\r\nand det(M) = 0. But we know that\r\nwith an elementary row operation, we could replace the second row with a row\r\n393",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5b33a880-5be5-4d93-b09d-94dee8237409.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bf23d1f4e1968c3490a707cf7da53304164709252d26f555c1c6dbf25a4701c6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 286
      },
      {
        "segments": [
          {
            "segment_id": "1d1f0da1-9426-44ca-98a6-79e2c34ff173",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 394,
            "page_width": 612,
            "page_height": 792,
            "content": "394 Movie Scripts\r\nof all zeros. Somehow the determinant is able to detect that there is only one\r\nequation here. Even if we had a set of contradictory set of equations such as\r\nx + y = 1\r\n2x + 2y = 0,\r\nwhere it is not possible for both of these equations to be true, the matrix M\r\nis still the same, and still has a determinant zero.\r\nLets look at a three by three example, where the third equation is the sum\r\nof the first two equations.\r\nx + y + z = 1\r\ny + z = 1\r\nx + 2y + 2z = 2\r\nand the matrix for this is\r\nM =\r\n\r\n\r\n1 1 1\r\n0 1 1\r\n1 2 2\r\n\r\n\r\nIf we were trying to find the inverse to this matrix using elementary\r\nmatrices\r\n\r\n\r\n1 1 1 1 0 0\r\n0 1 1 0 1 0\r\n1 2 2 0 0 1\r\n\r\n =\r\n\r\n\r\n1 1 1 1 0 0\r\n0 1 1 0 1 0\r\n0 0 0 −1 −1 1\r\n\r\n\r\nAnd we would be stuck here. The last row of all zeros cannot be converted\r\ninto the bottom row of a 3 × 3 identity matrix. this matrix has no inverse,\r\nand the row of all zeros ensures that the determinant will be zero. It can\r\nbe difficult to see when one of the rows of a matrix is a linear combination\r\nof the others, and what makes the determinant a useful tool is that with this\r\nreasonably simple computation we can find out if the matrix is invertible, and\r\nif the system will have a solution of a single point or column vector.\r\nAlternative Proof\r\nHere we will prove more directly that the determinant of a product of matrices\r\nis the product of their determinants. First we reference that for a matrix\r\nM with rows ri, if M0 is the matrix with rows r\r\n0\r\nj = rj + λri for j 6= i and\r\nr\r\n0\r\ni = ri, then det(M) = det(M0\r\n) Essentially we have M0 as M multiplied by the\r\nelementary row sum matrices S\r\ni\r\nj\r\n(λ). Hence we can create an upper-triangular\r\nmatrix U such that det(M) = det(U) by first using the first row to set m1\r\ni\r\n7→ 0\r\nfor all i > 1, then iteratively (increasing k by 1 each time) for fixed k using\r\nthe k-th row to set mk\r\ni\r\n7→ 0 for all i > k.\r\n394",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/1d1f0da1-9426-44ca-98a6-79e2c34ff173.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a1d47a9c733f3cfa1953f9822de966600b22cca5d14388334d0f1729a43fe340",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 428
      },
      {
        "segments": [
          {
            "segment_id": "0b143a7d-b298-453c-b901-0dbb489e44b8",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 395,
            "page_width": 612,
            "page_height": 792,
            "content": "G.7 Determinants 395\r\nNow note that for two upper-triangular matrices U = (u\r\nj\r\ni\r\n) and U\r\n0 = (u\r\n0j\r\ni\r\n),\r\nby matrix multiplication we have X = UU0 = (x\r\nj\r\ni\r\n) is upper-triangular and\r\nx\r\ni\r\ni = u\r\ni\r\niu\r\n0i\r\ni . Also since every permutation would contain a lower diagonal entry\r\n(which is 0) have det(U) = Q\r\ni\r\nu\r\ni\r\ni. Let A and A0 have corresponding upper\u0002triangular matrices U and U\r\n0 respectively (i.e. det(A) = det(U)), we note\r\nthat AA0 has a corresponding upper-triangular matrix UU0, and hence we have\r\ndet(AA0) = det(UU0) = Y\r\ni\r\nu\r\ni\r\niu\r\n0i\r\ni\r\n=\r\n Y\r\ni\r\nu\r\ni\r\ni\r\n! Y\r\ni\r\nu\r\n0i\r\ni\r\n!\r\n= det(U) det(U\r\n0\r\n) = det(A) det(A\r\n0\r\n).\r\nPractice taking Determinants\r\nLets practice taking determinants of 2 × 2 and 3 × 3 matrices.\r\nFor 2 × 2 matrices we have a formula\r\ndet \u0012\r\na b\r\nc d\u0013\r\n= ad − bc .\r\nThis formula might be easier to remember if you think about this picture.\r\nNow we can look at three by three matrices and see a few ways to compute\r\nthe determinant. We have a similar pattern for 3 × 3 matrices. Consider the\r\nexample\r\ndet\r\n\r\n\r\n1 2 3\r\n3 1 2\r\n0 0 1\r\n\r\n = ((1 · 1 · 1) + (2 · 2 · 0) + (3 · 3 · 0)) − ((3 · 1 · 0) + (1 · 2 · 0) + (3 · 2 · 1)) = −5\r\nWe can draw a picture with similar diagonals to find the terms that will be\r\npositive and the terms that will be negative.\r\n395",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/0b143a7d-b298-453c-b901-0dbb489e44b8.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=b312f95dbf13db3c54a9f350865ebec9a6866063e6b4ca03c0847a321df12801",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 292
      },
      {
        "segments": [
          {
            "segment_id": "2e0884fb-a41a-4ea3-9b4a-5c8871fe11b6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 396,
            "page_width": 612,
            "page_height": 792,
            "content": "396 Movie Scripts\r\nAnother way to compute the determinant of a matrix is to use this recursive\r\nformula. Here I take the coefficients of the first row and multiply them by\r\nthe determinant of the minors and the cofactor. Then we can use the formula\r\nfor a two by two determinant to compute the determinant of the minors\r\ndet\r\n\r\n\r\n1 2 3\r\n3 1 2\r\n0 0 1\r\n\r\n = 1\r\n\f\r\n\f\r\n\f\r\n\f\r\n1 2\r\n0 1\r\n\f\r\n\f\r\n\f\r\n\f − 2\r\n\f\r\n\f\r\n\f\r\n\f\r\n3 2\r\n0 1\r\n\f\r\n\f\r\n\f\r\n\f\r\n+ 3\r\n\f\r\n\f\r\n\f\r\n\f\r\n3 1\r\n0 0\r\n\f\r\n\f\r\n\f\r\n\f\r\n= 1(1 − 0) − 2(3 − 0) + 3(0 − 0) = −5\r\nDecide which way you prefer and get good at taking determinants, you’ll need\r\nto compute them in a lot of problems.\r\nHint for Review Problem 5\r\nFor an arbitrary 3 × 3 matrix A = (a\r\ni\r\nj\r\n), we have\r\ndet(A) = a\r\n1\r\n1a\r\n2\r\n2a\r\n3\r\n3 + a\r\n1\r\n2a\r\n2\r\n3a\r\n3\r\n1 + a\r\n1\r\n3a\r\n2\r\n1a\r\n3\r\n2 − a\r\n1\r\n1a\r\n2\r\n3a\r\n3\r\n2 − a\r\n1\r\n2a\r\n2\r\n1a\r\n3\r\n3 − a\r\n1\r\n3a\r\n2\r\n2a\r\n3\r\n1\r\nand so the complexity is 5a + 12m. Now note that in general, the complexity\r\ncn of the expansion minors formula of an arbitrary n × n matrix should be\r\ncn = (n − 1)a + ncn−1m\r\nsince det(A) = Pn\r\ni=1(−1)ia\r\n1\r\ni\r\ncofactor(a\r\n1\r\ni\r\n) and cofactor(a\r\n1\r\ni\r\n) is an (n − 1) × (n − 1)\r\nmatrix. This is one way to prove part (c).\r\n396",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2e0884fb-a41a-4ea3-9b4a-5c8871fe11b6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6c4a1c97913dbdf23fad1bc7a893423a4799137cde7feffd3151b5b758589315",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 266
      },
      {
        "segments": [
          {
            "segment_id": "42272034-4260-4bc0-ab9c-ac663b013a49",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 397,
            "page_width": 612,
            "page_height": 792,
            "content": "G.8 Subspaces and Spanning Sets 397\r\nG.8 Subspaces and Spanning Sets\r\nLinear systems as spanning sets\r\nSuppose that we were given a set of linear equations l\r\nj\r\n(x\r\n1\r\n, x2, . . . , xn) and we\r\nwant to find out if l\r\nj\r\n(X) = v\r\nj for all j for some vector V = (vj\r\n). We know that\r\nwe can express this as the matrix equation\r\nX\r\ni\r\nl\r\nj\r\ni x\r\ni = vj\r\nwhere l\r\nj\r\ni\r\nis the coefficient of the variable x\r\ni in the equation lj. However, this\r\nis also stating that V is in the span of the vectors {Li}i where Li = (l\r\nj\r\ni\r\n)j. For\r\nexample, consider the set of equations\r\n2x + 3y − z = 5\r\n−x + 3y + z = 1\r\nx + y − 2z = 3\r\nwhich corresponds to the matrix equation\r\n\r\n\r\n2 3 −1\r\n−1 3 1\r\n1 1 −2\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n5\r\n1\r\n3\r\n\r\n .\r\nWe can thus express this problem as determining if the vector\r\nV =\r\n\r\n\r\n5\r\n1\r\n3\r\n\r\n\r\nlies in the span of\r\n\r\n\r\n\r\n\r\n\r\n2\r\n−1\r\n1\r\n\r\n ,\r\n\r\n\r\n3\r\n3\r\n1\r\n\r\n ,\r\n\r\n\r\n−1\r\n1\r\n−2\r\n\r\n\r\n\r\n\r\n\r\n.\r\nHint for Review Problem 2\r\nFor the first part, try drawing an example in R\r\n3:\r\n397",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/42272034-4260-4bc0-ab9c-ac663b013a49.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=057e96c8a3ea412174aee837f64c451a475a9c9757b10f8dc3c80fbe43abfb67",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "60eb65c8-7444-4489-a53a-0a6b17f72c40",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 398,
            "page_width": 612,
            "page_height": 792,
            "content": "398 Movie Scripts\r\nHere we have taken the subspace W to be a plane through the origin and U to\r\nbe a line through the origin. The hint now is to think about what happens when\r\nyou add a vector u ∈ U to a vector w ∈ W. Does this live in the union U ∪ W?\r\nFor the second part, we take a more theoretical approach. Lets suppose\r\nthat v ∈ U ∩ W and v\r\n0 ∈ U ∩ W. This implies\r\nv ∈ U and v\r\n0 ∈ U .\r\nSo, since U is a subspace and all subspaces are vector spaces, we know that\r\nthe linear combination\r\nαv + βv0 ∈ U .\r\nNow repeat the same logic for W and you will be nearly done.\r\nG.9 Linear Independence\r\nWorked Example\r\nThis video gives some more details behind the example for the following four\r\nvectors in R\r\n3 Consider the following vectors in R3:\r\nv1 =\r\n\r\n\r\n4\r\n−1\r\n3\r\n\r\n , v2 =\r\n\r\n\r\n−3\r\n7\r\n4\r\n\r\n , v3 =\r\n\r\n\r\n5\r\n12\r\n17\r\n\r\n , v4 =\r\n\r\n\r\n−1\r\n1\r\n0\r\n\r\n .\r\nThe example asks whether they are linearly independent, and the answer is\r\nimmediate: NO, four vectors can never be linearly independent in R\r\n3. This\r\nvector space is simply not big enough for that, but you need to understand the\r\n398",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/60eb65c8-7444-4489-a53a-0a6b17f72c40.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=139c10a29e26d70df4a3d31c5d011343db1b53a4035a5fc2506fd38caa91e721",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 493
      },
      {
        "segments": [
          {
            "segment_id": "529d8edf-0f39-4d7e-91c1-a919454969a5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 399,
            "page_width": 612,
            "page_height": 792,
            "content": "G.9 Linear Independence 399\r\nnotion of the dimension of a vector space to see why. So we think the vectors\r\nv1, v2, v3 and v4 are linearly dependent, which means we need to show that there\r\nis a solution to\r\nα1v1 + α2v2 + α3v3 + α4v4 = 0\r\nfor the numbers α1, α2, α3 and α4 not all vanishing.\r\nTo find this solution we need to set up a linear system. Writing out the\r\nabove linear combination gives\r\n4α1 −3α2 +5α3 −α4 = 0 ,\r\n−α1 +7α2 +12α3 +α4 = 0 ,\r\n3α1 +4α2 +17α3 = 0 .\r\nThis can be easily handled using an augmented matrix whose columns are just\r\nthe vectors we started with\r\n\r\n\r\n4 −3 5 −1 0 ,\r\n−1 7 12 1 0 ,\r\n3 4 17 0 0 .\r\n\r\n .\r\nSince there are only zeros on the right hand column, we can drop it. Now we\r\nperform row operations to achieve RREF\r\n\r\n\r\n4 −3 5 −1\r\n−1 7 12 1\r\n3 4 17 0\r\n\r\n ∼\r\n\r\n\r\n1 0 71\r\n25 −\r\n4\r\n25\r\n0 1 53\r\n25\r\n3\r\n25\r\n0 0 0 0\r\n\r\n .\r\nThis says that α3 and α4 are not pivot variable so are arbitrary, we set them\r\nto µ and ν, respectively. Thus\r\nα1 =\r\n\u0010\r\n−\r\n71\r\n25\r\nµ +\r\n4\r\n25\r\nν\r\n\u0011\r\n, α2 =\r\n\u0010\r\n−\r\n53\r\n25\r\nµ −\r\n3\r\n25\r\nν\r\n\u0011\r\n, α3 = µ , α4 = ν .\r\nThus we have found a relationship among our four vectors\r\n\u0010\r\n−\r\n71\r\n25\r\nµ +\r\n4\r\n25\r\nν\r\n\u0011\r\nv1 +\r\n\u0010\r\n−\r\n53\r\n25\r\nµ −\r\n3\r\n25\r\nν\r\n\u0011\r\nv2 + µ v3 + µ4 v4 = 0 .\r\nIn fact this is not just one relation, but infinitely many, for any choice of\r\nµ, ν. The relationship quoted in the notes is just one of those choices.\r\nFinally, since the vectors v1, v2, v3 and v4 are linearly dependent, we\r\ncan try to eliminate some of them. The pattern here is to keep the vectors\r\nthat correspond to columns with pivots. For example, setting µ = −1 (say) and\r\nν = 0 in the above allows us to solve for v3 while µ = 0 and ν = −1 (say) gives\r\nv4, explicitly we get\r\nv3 =\r\n71\r\n25\r\nv1 +\r\n53\r\n25\r\nv2 , v4 = −\r\n4\r\n25\r\nv3 +\r\n3\r\n25\r\nv4 .\r\nThis eliminates v3 and v4 and leaves a pair of linearly independent vectors v1\r\nand v2.\r\n399",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/529d8edf-0f39-4d7e-91c1-a919454969a5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=943d70f3b8aa02776baad34151562aa54a65541796df2207aabbfe21afb3e224",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 434
      },
      {
        "segments": [
          {
            "segment_id": "f3cf07c2-324b-432f-8bf1-86fe15e8f5c4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 400,
            "page_width": 612,
            "page_height": 792,
            "content": "400 Movie Scripts\r\nWorked Proof\r\nHere we will work through a quick version of the proof of Theorem 10.1.1. Let\r\n{vi} denote a set of linearly dependent vectors, so P\r\ni\r\nc\r\nivi = 0 where there\r\nexists some c\r\nk 6= 0. Now without loss of generality we order our vectors such\r\nthat c\r\n1 6= 0, and we can do so since addition is commutative (i.e. a+b = b+a).\r\nTherefore we have\r\nc\r\n1\r\nv1 = −\r\nXn\r\ni=2\r\nc\r\ni\r\nvi\r\nv1 = −\r\nXn\r\ni=2\r\nc\r\ni\r\nc\r\n1\r\nvi\r\nand we note that this argument is completely reversible since every c\r\ni 6= 0 is\r\ninvertible and 0/ci = 0.\r\nHint for Review Problem 1\r\nLets first remember how Z2 works. The only two elements are 1 and 0. Which\r\nmeans when you add 1 + 1 you get 0. It also means when you have a vector ~v ∈ Bn\r\nand you want to multiply it by a scalar, your only choices are 1 and 0. This\r\nis kind of neat because it means that the possibilities are finite, so we can\r\nlook at an entire vector space.\r\nNow lets think about B3 there is choice you have to make for each co\u0002ordinate, you can either put a 1 or a 0, there are three places where you\r\nhave to make a decision between two things. This means that you have 2\r\n3 = 8\r\npossibilities for vectors in B3.\r\nWhen you want to think about finding a set S that will span B3 and is\r\nlinearly independent, you want to think about how many vectors you need. You\r\nwill need you have enough so that you can make every vector in B3 using linear\r\ncombinations of elements in S but you don’t want too many so that some of\r\nthem are linear combinations of each other. I suggest trying something really\r\nsimple perhaps something that looks like the columns of the identity matrix\r\nFor part (c) you have to show that you can write every one of the elements\r\nas a linear combination of the elements in S, this will check to make sure S\r\nactually spans B3.\r\nFor part (d) if you have two vectors that you think will span the space,\r\nyou can prove that they do by repeating what you did in part (c), check that\r\nevery vector can be written using only copies of of these two vectors. If you\r\ndon’t think it will work you should show why, perhaps using an argument that\r\ncounts the number of possible vectors in the span of two vectors.\r\n400",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/f3cf07c2-324b-432f-8bf1-86fe15e8f5c4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=36e892be72e28639b94fcfb32052df1a42c4e44ed62e0cd3160edd6f79185ebe",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 438
      },
      {
        "segments": [
          {
            "segment_id": "25fb70b5-4014-4ac8-8bdc-46ce7008684c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 401,
            "page_width": 612,
            "page_height": 792,
            "content": "G.10 Basis and Dimension 401\r\nG.10 Basis and Dimension\r\nProof Explanation\r\nLets walk through the proof of theorem 11.0.1. We want to show that for\r\nS = {v1, . . . , vn} a basis for a vector space V , then every vector w ∈ V can be\r\nwritten uniquely as a linear combination of vectors in the basis S:\r\nw = c\r\n1\r\nv1 + · · · + c\r\nn\r\nvn.\r\nWe should remember that since S is a basis for V , we know two things\r\n• V = span S\r\n• v1, . . . , vn are linearly independent, which means that whenever we have\r\na\r\n1v1 + . . . + anvn = 0 this implies that ai = 0 for all i = 1, . . . , n.\r\nThis first fact makes it easy to say that there exist constants c\r\ni such that\r\nw = c\r\n1v1 + · · · + cnvn. What we don’t yet know is that these c1\r\n, . . . cn are unique.\r\nIn order to show that these are unique, we will suppose that they are not,\r\nand show that this causes a contradiction. So suppose there exists a second\r\nset of constants d\r\ni such that\r\nw = d\r\n1\r\nv1 + · · · + d\r\nn\r\nvn .\r\nFor this to be a contradiction we need to have c\r\ni 6= di for some i. Then look\r\nwhat happens when we take the difference of these two versions of w:\r\n0V = w − w\r\n= (c\r\n1\r\nv1 + · · · + c\r\nn\r\nvn) − (d\r\n1\r\nv1 + · · · + d\r\nn\r\nvn)\r\n= (c\r\n1 − d1\r\n)v1 + · · · + (c\r\nn − dn\r\n)vn.\r\nSince the vi’s are linearly independent this implies that c\r\ni − di = 0 for all i,\r\nthis means that we cannot have c\r\ni 6= di, which is a contradiction.\r\nWorked Example\r\nIn this video we will work through an example of how to extend a set of linearly\r\nindependent vectors to a basis. For fun, we will take the vector space\r\nV = {(x, y, z, w)|x, y, z, w ∈ Z\r\n5\r\n} .\r\nThis is like four dimensional space R\r\n4 except that the numbers can only be\r\n{0, 1, 2, 3, 4}. This is like bits, but now the rule is\r\n0 = 5 .\r\n401",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/25fb70b5-4014-4ac8-8bdc-46ce7008684c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e878b915f404af222d3d9b7b3d4b6f3a70b6cb184932cebab4c7ea0b69b74d26",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 417
      },
      {
        "segments": [
          {
            "segment_id": "6f1b1839-34d1-4ac2-9437-61f6a47c8473",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 402,
            "page_width": 612,
            "page_height": 792,
            "content": "402 Movie Scripts\r\nThus, for example, 1\r\n4 = 4 because 4 = 16 = 1 + 3 × 5 = 1. Don’t get too caught up\r\non this aspect, its a choice of base field designed to make computations go\r\nquicker!\r\nNow, here’s the problem we will solve:\r\nFind a basis for V that includes the vectors\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\nand\r\n\r\n\r\n0\r\n3\r\n2\r\n1\r\n\r\n.\r\nThe way to proceed is to add a known (and preferably simple) basis to the\r\nvectors given, thus we consider\r\nv1 =\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\n, v2 =\r\n\r\n\r\n0\r\n3\r\n2\r\n1\r\n\r\n\r\n, e1 =\r\n\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n\r\n, e2 =\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n\r\n, e3 =\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n\r\n, e4 =\r\n\r\n\r\n0\r\n0\r\n0\r\n1\r\n\r\n .\r\nThe last four vectors are clearly a basis (make sure you understand this....)\r\nand are called the canonical basis. We want to keep v1 and v2 but find a way to\r\nturf out two of the vectors in the canonical basis leaving us a basis of four\r\nvectors. To do that, we have to study linear independence, or in other words\r\na linear system problem defined by\r\n0 = α1e1 + α2e2 + α3v1 + α4v2 + α5e3 + α6e4 .\r\nWe want to find solutions for the α\r\n0\r\ns which allow us to determine two of the\r\ne\r\n0\r\ns. For that we use an augmented matrix\r\n\r\n\r\n1 0 1 0 0 0 0\r\n2 3 0 1 0 0 0\r\n3 2 0 0 1 0 0\r\n4 1 0 0 0 1 0\r\n\r\n .\r\nNext comes a bunch of row operations. Note that we have dropped the last column\r\nof zeros since it has no information--you can fill in the row operations used\r\nabove the ∼’s as an exercise:\r\n\r\n\r\n1 0 1 0 0 0\r\n2 3 0 1 0 0\r\n3 2 0 0 1 0\r\n4 1 0 0 0 1\r\n\r\n ∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 3 3 1 0 0\r\n0 2 2 0 1 0\r\n0 1 1 0 0 1\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 1 1 2 0 0\r\n0 2 2 0 1 0\r\n0 1 1 0 0 1\r\n\r\n ∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 1 1 2 0 0\r\n0 0 0 1 1 0\r\n0 0 0 3 0 1\r\n\r\n\r\n402",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/6f1b1839-34d1-4ac2-9437-61f6a47c8473.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=20eaedc8616e34f2101a5172e373a2067145d3f38024429d1cb159ed1fb10139",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 454
      },
      {
        "segments": [
          {
            "segment_id": "a3a411c9-826d-4474-bc8e-6e2f1e514cf0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 403,
            "page_width": 612,
            "page_height": 792,
            "content": "G.11 Eigenvalues and Eigenvectors 403\r\n∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 1 1 0 3 0\r\n0 0 0 1 1 0\r\n0 0 0 0 2 1\r\n\r\n ∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 1 1 0 3 0\r\n0 0 0 1 1 0\r\n0 0 0 0 1 3\r\n\r\n\r\n∼\r\n\r\n\r\n1 0 1 0 0 0\r\n0 1 1 0 0 1\r\n0 0 0 1 0 2\r\n0 0 0 0 1 3\r\n\r\n\r\nThe pivots are underlined. The columns corresponding to non-pivot variables\r\nare the ones that can be eliminated--their coefficients (the α’s) will be\r\narbitrary, so set them all to zero save for the one next to the vector you are\r\nsolving for which can be taken to be unity. Thus that vector can certainly be\r\nexpressed in terms of previous ones. Hence, altogether, our basis is\r\n\r\n\r\n\r\n\r\n\r\n1\r\n2\r\n3\r\n4\r\n\r\n ,\r\n\r\n\r\n0\r\n3\r\n2\r\n1\r\n\r\n ,\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n ,\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n\r\n\r\n\r\n\r\n.\r\nFinally, as a check, note that e1 = v1 + v2 which explains why we had to throw\r\nit away.\r\nHint for Review Problem 2\r\nSince there are two possible values for each entry, we have |Bn| = 2n. We note\r\nthat dim Bn = n as well. Explicitly we have B1 = {(0),(1)} so there is only 1\r\nbasis for B1. Similarly we have\r\nB\r\n2 =\r\n\u001a\u00120\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n,\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n,\r\n\u0012\r\n1\r\n1\r\n\u0013\u001b\r\nand so choosing any two non-zero vectors will form a basis. Now in general we\r\nnote that we can build up a basis {ei} by arbitrarily (independently) choosing\r\nthe first i−1 entries, then setting the i-th entry to 1 and all higher entries\r\nto 0.\r\nG.11 Eigenvalues and Eigenvectors\r\n2 × 2 Example\r\nHere is an example of how to find the eigenvalues and eigenvectors of a 2 × 2\r\nmatrix.\r\nM =\r\n\u0012\r\n4 2\r\n1 3\u0013\r\n.\r\n403",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/a3a411c9-826d-4474-bc8e-6e2f1e514cf0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e1362686f93e3f7abca67ea46a3454842fc523d805a297a468ba6f949fc4b295",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 365
      },
      {
        "segments": [
          {
            "segment_id": "86c27d8e-f0db-479c-8c8f-46d92f3ce236",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 404,
            "page_width": 612,
            "page_height": 792,
            "content": "404 Movie Scripts\r\nRemember that an eigenvector v with eigenvalue λ for M will be a vector such\r\nthat Mv = λv i.e. M(v) − λI(v) = ~0. When we are talking about a nonzero v\r\nthen this means that det(M − λI) = 0. We will start by finding the eigenvalues\r\nthat make this statement true. First we compute\r\ndet(M − λI) = det \u0012\u00124 2\r\n1 3\u0013\r\n−\r\n\u0012\r\nλ 0\r\n0 λ\r\n\u0013\u0013 = det \u0012\r\n4 − λ 2\r\n1 3 − λ\r\n\u0013\r\nso det(M − λI) = (4 − λ)(3 − λ) − 2 · 1. We set this equal to zero to find values\r\nof λ that make this true:\r\n(4 − λ)(3 − λ) − 2 · 1 = 10 − 7λ + λ\r\n2 = (2 − λ)(5 − λ) = 0 .\r\nThis means that λ = 2 and λ = 5 are solutions. Now if we want to find the\r\neigenvectors that correspond to these values we look at vectors v such that\r\n\u0012\r\n4 − λ 2\r\n1 3 − λ\r\n\u0013\r\nv = ~0 .\r\nFor λ = 5\r\n\u0012\r\n4 − 5 2\r\n1 3 − 5\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n−1 2\r\n1 −2\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n= ~0 .\r\nThis gives us the equalities −x+ 2y = 0 and x−2y = 0 which both give the line\r\ny =\r\n1\r\n2\r\nx. Any point on this line, so for example \u0012\r\n2\r\n1\r\n\u0013\r\n, is an eigenvector with\r\neigenvalue λ = 5.\r\nNow lets find the eigenvector for λ = 2\r\n\u0012\r\n4 − 2 2\r\n1 3 − 2\r\n\u0013 \u0012x\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n2 2\r\n1 1\u0013 \u0012xy\r\n\u0013\r\n= ~0,\r\nwhich gives the equalities 2x + 2y = 0 and x + y = 0. (Notice that these equa\u0002tions are not independent of one another, so our eigenvalue must be correct.)\r\nThis means any vector v =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\nwhere y = −x , such as \u0012\r\n1\r\n−1\r\n\u0013\r\n, or any scalar\r\nmultiple of this vector , i.e. any vector on the line y = −x is an eigenvector\r\nwith eigenvalue 2. This solution could be written neatly as\r\nλ1 = 5, v1 =\r\n\u0012\r\n2\r\n1\r\n\u0013\r\nand λ2 = 2, v2 =\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n.\r\nJordan Block Example\r\nConsider the matrix\r\nJ2 =\r\n\u0012\r\nλ 1\r\n0 λ\r\n\u0013\r\n,\r\n404",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/86c27d8e-f0db-479c-8c8f-46d92f3ce236.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b09960acfb5388074eed7dff1e030d6073dc6f9704f4b960021156cebe3ba3d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 413
      },
      {
        "segments": [
          {
            "segment_id": "3dbe02da-6aa5-47bd-a9bd-48e8d58769a5",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 405,
            "page_width": 612,
            "page_height": 792,
            "content": "G.11 Eigenvalues and Eigenvectors 405\r\nand we note that we can just read off the eigenvector e1 with eigenvalue λ.\r\nHowever the characteristic polynomial of J2 is PJ2(µ) = (µ − λ)\r\n2 so the only\r\npossible eigenvalue is λ, but we claim it does not have a second eigenvector\r\nv. To see this, we require that\r\nλv1 + v\r\n2 = λv1\r\nλv2 = λv2\r\nwhich clearly implies that v\r\n2 = 0. This is known as a Jordan 2-cell, and in\r\ngeneral, a Jordan n-cell with eigenvalue λ is (similar to) the n × n matrix\r\nJn =\r\n\r\n\r\nλ 1 0 · · · 0\r\n0 λ 1\r\n... 0\r\n.\r\n.\r\n.\r\n...\r\n...\r\n...\r\n.\r\n.\r\n.\r\n0 · · · 0 λ 1\r\n0 · · · 0 0 λ\r\n\r\n\r\nwhich has a single eigenvector e1.\r\nNow consider the following matrix\r\nM =\r\n\r\n\r\n3 1 0\r\n0 3 1\r\n0 0 2\r\n\r\n\r\nand we see that PM(λ) = (λ − 3)2(λ − 2). Therefore for λ = 3 we need to find the\r\nsolutions to (M − 3I3)v = 0 or in equation form:\r\nv\r\n2 = 0\r\nv\r\n3 = 0\r\n−v\r\n3 = 0,\r\nand we immediately see that we must have V = e1. Next for λ = 2, we need to\r\nsolve (M − 2I3)v = 0 or\r\nv\r\n1 + v2 = 0\r\nv\r\n2 + v3 = 0\r\n0 = 0,\r\nand thus we choose v\r\n1 = 1, which implies v2 = −1 and v3 = 1. Hence this is the\r\nonly other eigenvector for M.\r\nThis is a specific case of Problem 13.7.\r\nEigenvalues\r\nEigenvalues and eigenvectors are extremely important. In this video we review\r\nthe theory of eigenvalues. Consider a linear transformation\r\nL : V −→ V\r\n405",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3dbe02da-6aa5-47bd-a9bd-48e8d58769a5.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ef29bd779f93dc93b8d7e142b5ac672667f8be0b2cce16c5ddff8e1e2e34f6eb",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 310
      },
      {
        "segments": [
          {
            "segment_id": "cb3cdc61-5b70-4113-a55a-f44240325099",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 406,
            "page_width": 612,
            "page_height": 792,
            "content": "406 Movie Scripts\r\nwhere dim V = n < ∞. Since V is finite dimensional, we can represent L by a\r\nsquare matrix M by choosing a basis for V .\r\nSo the eigenvalue equation\r\nLv = λv\r\nbecomes\r\nMv = λv,\r\nwhere v is a column vector and M is an n×n matrix (both expressed in whatever\r\nbasis we chose for V ). The scalar λ is called an eigenvalue of M and the job\r\nof this video is to show you how to find all the eigenvalues of M.\r\nThe first step is to put all terms on the left hand side of the equation,\r\nthis gives\r\n(M − λI)v = 0 .\r\nNotice how we used the identity matrix I in order to get a matrix times v\r\nequaling zero. Now here comes a VERY important fact\r\nNu = 0 and u 6= 0 ⇐⇒ det N = 0.\r\nI.e., a square matrix can have an eigenvector with vanishing eigenvalue if and only if its\r\ndeterminant vanishes! Hence\r\ndet(M − λI) = 0.\r\nThe quantity on the left (up to a possible minus sign) equals the so-called\r\ncharacteristic polynomial\r\nPM(λ) := det(λI − M).\r\nIt is a polynomial of degree n in the variable λ. To see why, try a simple\r\n2 × 2 example\r\ndet \u0012\u0012a b\r\nc d\u0013\r\n−\r\n\u0012\r\nλ 0\r\n0 λ\r\n\u0013\u0013 = det \u0012\r\na − λ b\r\nc d − λ\r\n\u0013\r\n= (a − λ)(d − λ) − bc ,\r\nwhich is clearly a polynomial of order 2 in λ. For the n × n case, the order n\r\nterm comes from the product of diagonal matrix elements also.\r\nThere is an amazing fact about polynomials called the fundamental theorem\r\nof algebra: they can always be factored over complex numbers. This means that\r\n406",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/cb3cdc61-5b70-4113-a55a-f44240325099.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1dfe06eeeca2040b1613c55927d36946b019361c78fbcedc6627a39a84d709ef",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 305
      },
      {
        "segments": [
          {
            "segment_id": "bb41768a-071a-45a5-99a7-4a49f978d4c0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 407,
            "page_width": 612,
            "page_height": 792,
            "content": "G.11 Eigenvalues and Eigenvectors 407\r\ndegree n polynomials have n complex roots (counted with multiplicity). The\r\nword can does not mean that explicit formulas for this are known (in fact\r\nexplicit formulas can only be give for degree four or less). The necessity\r\nfor complex numbers is easily seems from a polynomial like\r\nz\r\n2 + 1\r\nwhose roots would require us to solve z\r\n2 = −1 which is impossible for real\r\nnumber z. However, introducing the imaginary unit i with\r\ni\r\n2 = −1 ,\r\nwe have\r\nz\r\n2 + 1 = (z − i)(z + i).\r\nReturning to our characteristic polynomial, we call on the fundamental theorem\r\nof algebra to write\r\nPM(λ) = (λ − λ1)(λ − λ2)· · ·(λ − λn).\r\nThe roots λ1, λ2,...,λn are the eigenvalues of M (or its underlying linear\r\ntransformation L).\r\nEigenspaces\r\nConsider the linear map\r\nL =\r\n\r\n\r\n−4 6 6\r\n0 2 0\r\n−3 3 5\r\n\r\n .\r\nDirect computation will show that we have\r\nL = Q\r\n\r\n\r\n−1 0 0\r\n0 2 0\r\n0 0 2\r\n\r\n Q\r\n−1\r\nwhere\r\nQ =\r\n\r\n\r\n2 1 1\r\n0 0 1\r\n1 1 0\r\n\r\n .\r\nTherefore the vectors\r\nv\r\n(2)\r\n1 =\r\n\r\n\r\n1\r\n0\r\n1\r\n\r\n v\r\n(2)\r\n2 =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n\r\nspan the eigenspace E(2) of the eigenvalue 2, and for an explicit example, if\r\nwe take\r\nv = 2v\r\n(2)\r\n1 − v\r\n(2)\r\n2 =\r\n\r\n\r\n1\r\n−1\r\n2\r\n\r\n\r\n407",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bb41768a-071a-45a5-99a7-4a49f978d4c0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=d62c9e08296be65234bdbbf6ed57625edd83164eb571441b42027bc71821a2e7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 262
      },
      {
        "segments": [
          {
            "segment_id": "ec861b16-3a98-4f01-9b8f-78e9dd507bc4",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 408,
            "page_width": 612,
            "page_height": 792,
            "content": "408 Movie Scripts\r\nwe have\r\nLv =\r\n\r\n\r\n2\r\n−2\r\n4\r\n\r\n = 2v\r\nso v ∈ E(2). In general, we note the linearly independent vectors v\r\n(λ)\r\ni\r\nwith the\r\nsame eigenvalue λ span an eigenspace since for any v =\r\nP\r\ni\r\nc\r\niv\r\n(λ)\r\ni\r\n, we have\r\nLv =\r\nX\r\ni\r\nc\r\niLv(λ)\r\ni =\r\nX\r\ni\r\nc\r\niλv(λ)\r\ni = λ\r\nX\r\ni\r\nc\r\ni\r\nv\r\n(λ)\r\ni = λv.\r\nHint for Review Problem 9\r\nWe are looking at the matrix M, and a sequence of vectors starting with\r\nv(0) = \u0012\r\nx(0)\r\ny(0)\u0013\r\nand defined recursively so that\r\nv(1) = \u0012\r\nx(1)\r\ny(1)\u0013\r\n= M\r\n\u0012\r\nx(0)\r\ny(0)\u0013\r\n.\r\nWe first examine the eigenvectors and eigenvalues of\r\nM =\r\n\u0012\r\n3 2\r\n2 3\u0013\r\n.\r\nWe can find the eigenvalues and vectors by solving\r\ndet(M − λI) = 0\r\nfor λ.\r\ndet \u0012\r\n3 − λ 2\r\n2 3 − λ\r\n\u0013\r\n= 0\r\nBy computing the determinant and solving for λ we can find the eigenvalues λ =\r\n1 and 5, and the corresponding eigenvectors. You should do the computations\r\nto find these for yourself.\r\nWhen we think about the question in part (b) which asks to find a vector\r\nv(0) such that v(0) = v(1) = v(2). . ., we must look for a vector that satisfies\r\nv = Mv. What eigenvalue does this correspond to? If you found a v(0) with\r\nthis property would cv(0) for a scalar c also work? Remember that eigenvectors\r\nhave to be nonzero, so what if c = 0?\r\nFor part (c) if we tried an eigenvector would we have restrictions on what\r\nthe eigenvalue should be? Think about what it means to be pointed in the same\r\ndirection.\r\n408",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/ec861b16-3a98-4f01-9b8f-78e9dd507bc4.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=de59260d9ee1743c611e9c67d34f2a3ad784a8860c22b7a45bd2c71b13660dad",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 296
      },
      {
        "segments": [
          {
            "segment_id": "32ff0c7d-990a-45e6-9658-f0645899fbf0",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 409,
            "page_width": 612,
            "page_height": 792,
            "content": "G.12 Diagonalization 409\r\nG.12 Diagonalization\r\nNon Diagonalizable Example\r\nFirst recall that the derivative operator is linear and that we can write it\r\nas the matrix\r\nd\r\ndx =\r\n\r\n\r\n0 1 0 0 · · ·\r\n0 0 2 0 · · ·\r\n0 0 0 3 · · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n...\r\n\r\n\r\n.\r\nWe note that this transforms into an infinite Jordan cell with eigenvalue 0\r\nor\r\n\r\n\r\n0 1 0 0 · · ·\r\n0 0 1 0 · · ·\r\n0 0 0 1 · · ·\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n...\r\n\r\n\r\nwhich is in the basis {n\r\n−1xn}n (where for n = 0, we just have 1). Therefore\r\nwe note that 1 (constant polynomials) is the only eigenvector with eigenvalue\r\n0 for polynomials since they have finite degree, and so the derivative is\r\nnot diagonalizable. Note that we are ignoring infinite cases for simplicity,\r\nbut if you want to consider infinite terms such as convergent series or all\r\nformal power series where there is no conditions on convergence, there are\r\nmany eigenvectors. Can you find some? This is an example of how things can\r\nchange in infinite dimensional spaces.\r\nFor a more finite example, consider the space P\r\nC\r\n3 of complex polynomials of\r\ndegree at most 3, and recall that the derivative D can be written as\r\nD =\r\n\r\n\r\n0 1 0 0\r\n0 0 2 0\r\n0 0 0 3\r\n0 0 0 0\r\n\r\n .\r\nYou can easily check that the only eigenvector is 1 with eigenvalue 0 since D\r\nalways lowers the degree of a polynomial by 1 each time it is applied. Note\r\nthat this is a nilpotent matrix since D4 = 0, but the only nilpotent matrix\r\nthat is ‘‘diagonalizable’’ is the 0 matrix.\r\nChange of Basis Example\r\nThis video returns to the example of a barrel filled with fruit\r\n409",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/32ff0c7d-990a-45e6-9658-f0645899fbf0.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=fc56c5c1201dc507f995ffb9dadaddf2f00a3c76818ff04d0fb1aea591f0c442",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "902587d0-b130-4f24-b029-89e4ab55f57c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 410,
            "page_width": 612,
            "page_height": 792,
            "content": "410 Movie Scripts\r\nas a demonstration of changing basis.\r\nSince this was a linear systems problem, we can try to represent what’s in\r\nthe barrel using a vector space. The first representation was the one where\r\n(x, y) = (apples, oranges):\r\nApples\r\nOranges\r\n(x, y)\r\nCalling the basis vectors ~e1 := (1, 0) and ~e2 := (0, 1), this representation would\r\nlabel what’s in the barrel by a vector\r\n~x := x~e1 + y~e2 =\r\n\r\n~e1 ~e2\r\n\u0001\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n.\r\nSince this is the method ordinary people would use, we will call this the\r\n‘‘engineer’s’’ method!\r\nBut this is not the approach nutritionists would use. They would note the\r\namount of sugar and total number of fruit (s, f):\r\n410",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/902587d0-b130-4f24-b029-89e4ab55f57c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=3e7fd1eef1268a26f8e9ccf7b027a90c6a9982c6cdee59420e63599229dc279d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 461
      },
      {
        "segments": [
          {
            "segment_id": "195b6944-6e68-40d9-a041-841e09ab3126",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 411,
            "page_width": 612,
            "page_height": 792,
            "content": "G.12 Diagonalization 411\r\nsugar\r\nfruit\r\n(s, f)\r\nWARNING: To make sense of what comes next you need to allow for the possibity\r\nof a negative amount of fruit or sugar. This would be just like a bank, where\r\nif money is owed to somebody else, we can use a minus sign.\r\nThe vector ~x says what is in the barrel and does not depend which mathe\u0002matical description is employed. The way nutritionists label ~x is in terms of\r\na pair of basis vectors ~f1 and ~f2:\r\n~x = s\r\n~f1 + f~f2 =\r\n\u0010\r\n~f1~f2\r\n\u0011 \u0012\r\ns\r\nf\r\n\u0013\r\n.\r\nThus our vector space now has a bunch of interesting vectors:\r\nThe vector ~x labels generally the contents of the barrel. The vector ~e1 corre\u0002sponds to one apple and one orange. The vector ~e2 is one orange and no apples.\r\nThe vector ~f1 means one unit of sugar and zero total fruit (to achieve this\r\nyou could lend out some apples and keep a few oranges). Finally the vector ~f2\r\nrepresents a total of one piece of fruit and no sugar.\r\nYou might remember that the amount of sugar in an apple is called λ while\r\noranges have twice as much sugar as apples. Thus\r\n\u001a\r\ns = λ (x + 2y)\r\nf = x + y .\r\n411",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/195b6944-6e68-40d9-a041-841e09ab3126.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=041b879e9a6c97c4dca052d23fd143916a70f043fa69f92e3922b3d4a52847f2",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 220
      },
      {
        "segments": [
          {
            "segment_id": "5cd93774-0019-49bb-acee-52045606006c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 412,
            "page_width": 612,
            "page_height": 792,
            "content": "412 Movie Scripts\r\nEssentially, this is already our change of basis formula, but lets play around\r\nand put it in our notations. First we can write this as a matrix\r\n\u0012\r\ns\r\nf\r\n\u0013\r\n=\r\n\u0012\r\nλ 2λ\r\n1 1\u0013 \u0012x\r\ny\r\n\u0013\r\n.\r\nWe can easily invert this to get\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n=\r\n\u0012\r\n−\r\n1\r\nλ\r\n2\r\n1\r\nλ −1\r\n\u0013 \u0012s\r\nf\r\n\u0013\r\n.\r\nPutting this in the engineer’s formula for ~x gives\r\n~x =\r\n\r\n~e1 ~e2\r\n\u0001\r\n\u0012\r\n−\r\n1\r\nλ\r\n2\r\n1\r\nλ −1\r\n\u0013 \u0012s\r\nf\r\n\u0013\r\n=\r\n\r\n−\r\n1\r\nλ\r\n\r\n~e1 − ~e2\r\n\u0001\r\n2~e1 − 2~e2\r\n\u0001\r\n\u0012\r\ns\r\nf\r\n\u0013\r\n.\r\nComparing to the nutritionist’s formula for the same object ~x we learn that\r\n~f1 = −\r\n1\r\nλ\r\n\r\n~e1 − ~e2\r\n\u0001\r\nand ~f2 = 2~e1 − 2~e2 .\r\nRearranging these equation we find the change of base matrix P from the engi\u0002neer’s basis to the nutritionist’s basis:\r\n\u0010\r\n~f1~f2\r\n\u0011\r\n=\r\n\r\n~e1 ~e2\r\n\u0001\r\n\u0012\r\n−\r\n1\r\nλ\r\n2\r\n1\r\nλ −1\r\n\u0013\r\n=: \r\n~e1 ~e2\r\n\u0001\r\nP .\r\nWe can also go the other direction, changing from the nutritionist’s basis to\r\nthe engineer’s basis\r\n\r\n~e1 ~e2\r\n\u0001\r\n=\r\n\u0010\r\n~f1~f2\r\n\u0011 \u0012\r\nλ 2λ\r\n1 1\u0013\r\n=: \u0010\r\n~f1~f2\r\n\u0011\r\nQ .\r\nOf course, we must have\r\nQ = P\r\n−1\r\n,\r\n(which is in fact how we constructed P in the first place).\r\nFinally, lets consider the very first linear systems problem, where you\r\nwere given that there were 27 pieces of fruit in total and twice as many oranges\r\nas apples. In equations this says just\r\nx + y = 27 and 2x − y = 0 .\r\nBut we can also write this as a matrix system\r\nMX = V\r\nwhere\r\nM := \u0012\r\n1 1\r\n2 −1\r\n\u0013\r\n, X := \u0012\r\nx\r\ny\r\n\u0013\r\nV := \u0012\r\n0\r\n27\u0013\r\n.\r\n412",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/5cd93774-0019-49bb-acee-52045606006c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=c33ce89e4b973570a43065d3546ffbfe452126e8a87840069176ab3d24723225",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 320
      },
      {
        "segments": [
          {
            "segment_id": "934144ab-0ce7-4097-90b6-d2b1f554c2ba",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 413,
            "page_width": 612,
            "page_height": 792,
            "content": "G.12 Diagonalization 413\r\nNote that\r\n~x =\r\n\r\n~e1 ~e2\r\n\u0001\r\nX .\r\nAlso lets call\r\n~v := \r\n~e1 ~e2\r\n\u0001\r\nV .\r\nNow the matrix M is the matrix of some linear transformation L in the basis\r\nof the engineers. Lets convert it to the basis of the nutritionists:\r\nL~x = L\r\n\u0010\r\n~f1~f2\r\n\u0011 \u0012\r\ns\r\nf\r\n\u0013\r\n= L\r\n\r\n~e1 ~e2\r\n\u0001\r\nP\r\n\u0012\r\ns\r\nf\r\n\u0013\r\n=\r\n\u0012\r\n~e1\r\n~e2\r\n\u0013\r\nMP \u0012\r\ns\r\nf\r\n\u0013\r\n.\r\nNote here that the linear transformation on acts on vectors -- these are the\r\nobjects we have written with a~ sign on top of them. It does not act on columns\r\nof numbers!\r\nWe can easily compute MP and find\r\nMP =\r\n\u0012\r\n1 1\r\n2 −1\r\n\u0013 \u0012−\r\n1\r\nλ\r\n2\r\n1\r\nλ −1\r\n\u0013\r\n=\r\n\u0012\r\n0 1\r\n−\r\n3\r\nλ\r\n5\r\n\u0013\r\n.\r\nNote that P\r\n−1MP is the matrix of L in the nutritionists basis, but we don’t\r\nneed this quantity right now.\r\nThus the last task is to solve the system, lets solve for sugar and fruit.\r\nWe need to solve\r\nMP \u0012\r\ns\r\nf\r\n\u0013\r\n=\r\n\u0012\r\n0 1\r\n−\r\n3\r\nλ\r\n5\r\n\u0013 \u0012s\r\nf\r\n\u0013\r\n=\r\n\u0012\r\n27\r\n0\r\n\u0013\r\n.\r\nThis is solved immediately by forward substitution (the nutritionists basis\r\nis nice since it directly gives f):\r\nf = 27 and s = 45λ .\r\n2 × 2 Example\r\nLets diagonalize the matrix M from a previous example\r\nEigenvalues and Eigenvectors: 2 × 2 Example\r\nM =\r\n\u0012\r\n4 2\r\n1 3\u0013\r\nWe found the eigenvalues and eigenvectors of M, our solution was\r\nλ1 = 5, v1 =\r\n\u0012\r\n2\r\n1\r\n\u0013\r\nand λ2 = 2, v2 =\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n.\r\n413",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/934144ab-0ce7-4097-90b6-d2b1f554c2ba.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a6c8decb3de0ee35c8097edf86cc66cad0e14e24ce04ba8606620035380c8b93",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 293
      },
      {
        "segments": [
          {
            "segment_id": "9f459d0c-b241-45d8-b3c8-6d1aec70535c",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 414,
            "page_width": 612,
            "page_height": 792,
            "content": "414 Movie Scripts\r\nSo we can diagonalize this matrix using the formula D = P\r\n−1MP where P =\r\n(v1, v2). This means\r\nP =\r\n\u0012\r\n2 1\r\n1 −1\r\n\u0013\r\nand P\r\n−1 = −\r\n1\r\n3\r\n\u0012\r\n1 1\r\n1 −2\r\n\u0013\r\nThe inverse comes from the formula for inverses of 2 × 2 matrices:\r\n\u0012\r\na b\r\nc d\u0013−1\r\n=\r\n1\r\nad − bc \u0012\r\nd −b\r\n−c a\u0013\r\n, so long as ad − bc 6= 0.\r\nSo we get:\r\nD = −\r\n1\r\n3\r\n\u0012\r\n1 1\r\n1 −2\r\n\u0013 \u00124 2\r\n1 3\u0013 \u00122 1\r\n1 −1\r\n\u0013\r\n=\r\n\u0012\r\n5 0\r\n0 2\u0013\r\nBut this doesn’t really give any intuition into why this happens. Let look\r\nat what happens when we apply this matrix D = P\r\n−1MP to a vector v =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\n.\r\nNotice that applying P translates v =\r\n\u0012\r\nx\r\ny\r\n\u0013\r\ninto xv1 + yv2.\r\nP\r\n−1MP \u0012\r\nx\r\ny\r\n\u0013\r\n= P\r\n−1M\r\n\u0012\r\n2x + y\r\nx − y\r\n\u0013\r\n= P\r\n−1M[\r\n\u0012\r\n2x\r\nx\r\n\u0013\r\n+\r\n\u0012\r\ny\r\n−y\r\n\u0013\r\n]\r\n= P\r\n−1\r\n[(x)M\r\n\u0012\r\n2\r\n1\r\n\u0013\r\n+ (y)M\r\n\u0012\r\n1\r\n−1\r\n\u0013\r\n]\r\n= P\r\n−1\r\n[(x)Mv1 + (y) · Mv2]\r\nRemember that we know what M does to v1 and v2, so we get\r\nP\r\n−1\r\n[(x)Mv1 + (y)Mv2] = P\r\n−1\r\n[(xλ1)v1 + (yλ2)v2]\r\n= (5x)P\r\n−1v1 + (2y)P−1v2\r\n= (5x)\r\n\u0012\r\n1\r\n0\r\n\u0013\r\n+ (2y)\r\n\u0012\r\n0\r\n1\r\n\u0013\r\n=\r\n\u0012\r\n5x\r\n2y\r\n\u0013\r\nNotice that multiplying by P\r\n−1 converts v1 and v2 back in to \u0012\r\n1\r\n0\r\n\u0013\r\nand \u0012\r\n0\r\n1\r\n\u0013\r\nrespectively. This shows us why D = P\r\n−1MP should be the diagonal matrix:\r\nD =\r\n\u0012\r\nλ1 0\r\n0 λ2\r\n\u0013\r\n=\r\n\u0012\r\n5 0\r\n0 2\u0013\r\n414",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/9f459d0c-b241-45d8-b3c8-6d1aec70535c.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7627f47818f1841c010fce52bdb2f9205c2ba4a69f3edb5ffba6a22222f4e0c7",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 311
      },
      {
        "segments": [
          {
            "segment_id": "bc8f2fd4-af04-4df6-8a86-34760263b8e1",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 415,
            "page_width": 612,
            "page_height": 792,
            "content": "G.13 Orthonormal Bases and Complements 415\r\nG.13 Orthonormal Bases and Complements\r\nAll Orthonormal Bases for R\r\n2\r\nWe wish to find all orthonormal bases for the space R\r\n2, and they are {eθ\r\n1\r\n, eθ\r\n2}\r\nup to reordering where\r\ne\r\nθ\r\n1 =\r\n\u0012\r\ncos θ\r\nsin θ\r\n\u0013\r\n, eθ\r\n2 =\r\n\u0012\r\n− sin θ\r\ncos θ\r\n\u0013\r\n,\r\nfor some θ ∈ [0, 2π). Now first we need to show that for a fixed θ that the pair\r\nis orthogonal:\r\ne\r\nθ\r\n1\r\ne\r\nθ\r\n2 = − sin θ cos θ + cos θ sin θ = 0.\r\nAlso we have\r\nke\r\nθ\r\n1k\r\n2 = keθ\r\n2k\r\n2 = sin2\r\nθ + cos2θ = 1,\r\nand hence {e\r\nθ\r\n1\r\n, eθ\r\n2} is an orthonormal basis. To show that every orthonormal\r\nbasis of R\r\n2 is {eθ\r\n1\r\n, eθ\r\n2} for some θ, consider an orthonormal basis {b1, b2} and\r\nnote that b1 forms an angle φ with the vector e1 (which is e\r\n0\r\n1). Thus b1 = e\r\nφ\r\n1\r\nand\r\nif b2 = e\r\nφ\r\n2\r\n, we are done, otherwise b2 = −e\r\nφ\r\n2\r\nand it is the reflected version.\r\nHowever we can do the same thing except starting with b2 and get b2 = e\r\nψ\r\n1\r\nand\r\nb1 = e\r\nψ\r\n2\r\nsince we have just interchanged two basis vectors which corresponds to\r\na reflection which picks up a minus sign as in the determinant.\r\ncos θ\r\nsin θ\r\nθ\r\ncos θ\r\n-sin θ\r\n415",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bc8f2fd4-af04-4df6-8a86-34760263b8e1.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=29f1996e27ed5f2aeb6a0af7f0c6304bc9bc49e73bf6eb150c2942c317d63062",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "69ee4cb6-0251-47ed-9695-8a599ab6b362",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 416,
            "page_width": 612,
            "page_height": 792,
            "content": "416 Movie Scripts\r\nA 4 × 4 Gram Schmidt Example\r\nLets do an example of how to \"Gram-Schmidt\" some vectors in R\r\n4. Given the\r\nfollowing vectors\r\nv1 =\r\n\r\n\r\no\r\n1\r\n0\r\n0\r\n\r\n\r\n, v2 =\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n\r\n, v3 =\r\n\r\n\r\n3\r\n0\r\n1\r\n0\r\n\r\n , and v4 =\r\n\r\n\r\n1\r\n1\r\n0\r\n2\r\n\r\n ,\r\nwe start with v1\r\nv\r\n⊥\r\n1 = v1 =\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n .\r\nNow the work begins\r\nv\r\n⊥\r\n2 = v2 −\r\n(v\r\n⊥\r\n1\r\n· v2)\r\nkv\r\n⊥\r\n1\r\nk\r\n2\r\nv\r\n⊥\r\n1\r\n=\r\n\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n −\r\n1\r\n1\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n\r\n=\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n\r\nThis gets a little longer with every step.\r\nv\r\n⊥\r\n3 = v3 −\r\n(v\r\n⊥\r\n1\r\n· v3)\r\nkv\r\n⊥\r\n1\r\nk\r\n2\r\nv\r\n⊥\r\n1 −\r\n(v\r\n⊥\r\n2\r\n· v3)\r\nkv\r\n⊥\r\n2\r\nk\r\n2\r\nv\r\n⊥\r\n2\r\n=\r\n\r\n\r\n3\r\n0\r\n1\r\n0\r\n\r\n −\r\n0\r\n1\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n −\r\n1\r\n1\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n =\r\n\r\n\r\n3\r\n0\r\n0\r\n0\r\n\r\n\r\nThis last step requires subtracting off the term of the form u·v\r\nu·u\r\nu for each of\r\nthe previously defined basis vectors.\r\n416",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/69ee4cb6-0251-47ed-9695-8a599ab6b362.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=736e6b202552756925c604b383ab7a557e6f155f5865809f2607a278d15577e6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 508
      },
      {
        "segments": [
          {
            "segment_id": "b124245c-c78a-4850-a443-eab05d028d9b",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 417,
            "page_width": 612,
            "page_height": 792,
            "content": "G.13 Orthonormal Bases and Complements 417\r\nv\r\n⊥\r\n4 = v4 −\r\n(v\r\n⊥\r\n1\r\n· v4)\r\nkv\r\n⊥\r\n1\r\nk\r\n2\r\nv\r\n⊥\r\n1 −\r\n(v\r\n⊥\r\n2\r\n· v4)\r\nkv\r\n⊥\r\n2\r\nk\r\n2\r\nv\r\n⊥\r\n2 −\r\n(v\r\n⊥\r\n3\r\n· v4)\r\nkv\r\n⊥\r\n3\r\nk\r\n2\r\nv\r\n⊥\r\n3\r\n=\r\n\r\n\r\n1\r\n1\r\n0\r\n2\r\n\r\n −\r\n1\r\n1\r\n\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n −\r\n0\r\n1\r\n\r\n\r\n0\r\n0\r\n1\r\n0\r\n\r\n −\r\n3\r\n9\r\n\r\n\r\n3\r\n0\r\n0\r\n0\r\n\r\n\r\n=\r\n\r\n\r\n0\r\n0\r\n0\r\n2\r\n\r\n\r\nNow v\r\n⊥\r\n1 , v\r\n⊥\r\n2 , v\r\n⊥\r\n3 , and v\r\n⊥\r\n4 are an orthogonal basis. Notice that even with very,\r\nvery nice looking vectors we end up having to do quite a bit of arithmetic.\r\nThis a good reason to use programs like matlab to check your work.\r\nAnother QR Decomposition Example\r\nWe can alternatively think of the QR decomposition as performing the Gram\u0002Schmidt procedure on the column space, the vector space of the column vectors\r\nof the matrix, of the matrix M. The resulting orthonormal basis will be\r\nstored in Q and the negative of the coefficients will be recorded in R. Note\r\nthat R is upper triangular by how Gram-Schmidt works. Here we will explicitly\r\ndo an example with the matrix\r\nM =\r\n\r\nm1 m2 m3\r\n\r\n =\r\n\r\n\r\n1 1 −1\r\n0 1 2\r\n−1 1 1\r\n\r\n .\r\nFirst we normalize m1 to get m0\r\n1 =\r\nm1\r\nkm1k\r\nwhere km1k = r\r\n1\r\n1 =\r\n√\r\n2 which gives the\r\ndecomposition\r\nQ1 =\r\n\r\n\r\n√\r\n1\r\n2\r\n1 −1\r\n0 1 2\r\n− √\r\n1\r\n2\r\n1 1\r\n\r\n , R1 =\r\n\r\n\r\n√\r\n2 0 0\r\n0 1 0\r\n0 0 1\r\n\r\n .\r\nNext we find\r\nt2 = m2 − (m0\r\n1 m2)m01 = m2 − r\r\n1\r\n2m01 = m2 − 0m01\r\nnoting that\r\nm0\r\n1 m0\r\n1 = km01k\r\n2 = 1\r\nand kt2k = r\r\n2\r\n2 =\r\n√\r\n3, and so we get m0\r\n2 =\r\nt2\r\nkt2k\r\nwith the decomposition\r\nQ2 =\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n3\r\n−1\r\n0 √\r\n1\r\n3\r\n2\r\n− √\r\n1\r\n2\r\n√\r\n1\r\n3\r\n1\r\n\r\n , R2 =\r\n\r\n\r\n√\r\n2 0 0\r\n0\r\n√\r\n3 0\r\n0 0 1\r\n\r\n .\r\n417",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b124245c-c78a-4850-a443-eab05d028d9b.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e0587d2f856e78fbb7c540e0b8897dbd61d383925c9b2686c332a243d637f431",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 416
      },
      {
        "segments": [
          {
            "segment_id": "2426dfba-6231-4a62-bc4f-bda0628484ed",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 418,
            "page_width": 612,
            "page_height": 792,
            "content": "418 Movie Scripts\r\nFinally we calculate\r\nt3 = m3 − (m0\r\n1 m3)m0\r\n1 − (m02 m3)m02\r\n= m3 − r\r\n1\r\n3m01 − r\r\n2\r\n3m02 = m3 +\r\n√\r\n2m0\r\n1 −\r\n2\r\n√\r\n3\r\nm0\r\n2\r\n,\r\nagain noting m0\r\n2 m02 = km02k = 1, and let m03 =\r\nt3\r\nkt3k\r\nwhere kt3k = r\r\n3\r\n3 = 2q\r\n2\r\n3\r\n. Thus\r\nwe get our final M = QR decomposition as\r\nQ =\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n3\r\n− √\r\n1\r\n2\r\n0 √\r\n1\r\n3\r\nq\r\n2\r\n3\r\n− √\r\n1\r\n2\r\n1\r\n3 − √\r\n1\r\n6\r\n\r\n , R =\r\n\r\n\r\n√\r\n2 0 −\r\n√\r\n2\r\n0\r\n√\r\n3 √\r\n2\r\n3\r\n0 0 2q\r\n2\r\n3\r\n\r\n .\r\nOverview\r\nThis video depicts the ideas of a subspace sum, a direct sum and an orthogonal\r\ncomplement in R\r\n3. Firstly, lets start with the subspace sum. Remember that\r\neven if U and V are subspaces, their union U ∪ V is usually not a subspace.\r\nHowever, the span of their union certainly is and is called the subspace sum\r\nU + V = span(U ∪ V ).\r\nYou need to be aware that this is a sum of vector spaces (not vectors). A\r\npicture of this is a pair of planes in R\r\n3:\r\nHere U + V = R\r\n3.\r\nNext lets consider a direct sum. This is just the subspace sum for the\r\ncase when U ∩ V = {0}. For that we can keep the plane U but must replace V by\r\na line:\r\n418",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2426dfba-6231-4a62-bc4f-bda0628484ed.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=516580b370986150320a4a89d808a662e692ff363ac7f1665d631c23688528e3",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "168838c8-42d3-4ea6-8cce-a3eaa14ba1aa",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 419,
            "page_width": 612,
            "page_height": 792,
            "content": "G.13 Orthonormal Bases and Complements 419\r\nTaking a direct sum we again get the whole space, U ⊕ V = R\r\n3.\r\nNow we come to an orthogonal complement. There is not really a notion of\r\nsubtraction for subspaces but the orthogonal complement comes close. Given U\r\nit provides a space U\r\n⊥ such that the direct sum returns the whole space:\r\nU ⊕ U\r\n⊥ = R3\r\n.\r\nThe orthogonal complement U\r\n⊥ is the subspace made from all vectors perpen\u0002dicular to any vector in U. Here, we need to just tilt the line V above until\r\nit hits U at a right angle:\r\nNotice, we can apply the same operation to U\r\n⊥ and just get U back again, i.e.\r\n\r\nU\r\n⊥\r\n\u0001⊥\r\n= U .\r\nHint for Review Question 2\r\nYou are asked to consider an orthogonal basis {v1, v2, . . . vn}. Because this is a\r\nbasis any v ∈ V can be uniquely expressed as\r\nv = c\r\n1\r\nv1 + c\r\n2\r\nv2 + · · · + v\r\nn\r\ncn ,\r\nand the number n = dim V . Since this is an orthogonal basis\r\nvi vj = 0 , i 6= j .\r\nSo different vectors in the basis are orthogonal:\r\n419",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/168838c8-42d3-4ea6-8cce-a3eaa14ba1aa.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6ebeb05cc75ec90ee10e4d18a99a6cb908320cafff2542effa8b7f80068e921d",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 484
      },
      {
        "segments": [
          {
            "segment_id": "03f71252-64db-46a3-b585-cf59bdaa8de7",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 420,
            "page_width": 612,
            "page_height": 792,
            "content": "420 Movie Scripts\r\nHowever, the basis is not orthonormal so we know nothing about the lengths of\r\nthe basis vectors (save that they cannot vanish).\r\nTo complete the hint, lets use the dot product to compute a formula for c\r\n1\r\nin terms of the basis vectors and v. Consider\r\nv1 v = c\r\n1\r\nv1 v1 + c\r\n2\r\nv1 v\r\n2 + · · · + cn\r\nv1 vn = c\r\n1\r\nv1 v1 .\r\nSolving for c\r\n1 (remembering that v1 v1 6= 0) gives\r\nc\r\n1 =\r\nv1 v\r\nv1 v1\r\n.\r\nThis should get you started on this problem.\r\nHint for Review Problem 3\r\nLets work part by part:\r\n(a) Is the vector v\r\n⊥ = v −\r\nu·v\r\nu·u\r\nu in the plane P?\r\nRemember that the dot product gives you a scalar not a vector, so if you\r\nthink about this formula u·v\r\nu·u\r\nis a scalar, so this is a linear combination\r\nof v and u. Do you think it is in the span?\r\n(b) What is the angle between v\r\n⊥ and u?\r\nThis part will make more sense if you think back to the dot product for\u0002mulas you probably first saw in multivariable calculus. Remember that\r\nu · v = kukkvk cos(θ),\r\nand in particular if they are perpendicular θ =\r\nπ\r\n2\r\nand cos( π\r\n2\r\n) = 0 you will\r\nget u · v = 0.\r\nNow try to compute the dot product of u and v\r\n⊥ to find kukkv⊥k cos(θ)\r\nu · v\r\n⊥ = u ·\r\n\u0010\r\nv −\r\nu · v\r\nu · u\r\nu\r\n\u0011\r\n= u · v − u ·\r\n\u0010u · v\r\nu · u\r\n\u0011\r\nu\r\n= u · v −\r\n\u0010u · v\r\nu · u\r\n\u0011\r\nu · u\r\nNow you finish simplifying and see if you can figure out what θ has to be.\r\n(c) Given your solution to the above, how can you find a third vector perpen\u0002dicular to both u and v\r\n⊥?\r\nRemember what other things you learned in multivariable calculus? This\r\nmight be a good time to remind your self what the cross product does.\r\n420",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/03f71252-64db-46a3-b585-cf59bdaa8de7.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a80388d9e79cbe901f39b34dbafff910505973343b0d95a6738f7a056e795ae4",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 364
      },
      {
        "segments": [
          {
            "segment_id": "768670c1-c29e-443a-b760-64c5f01c58b6",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 421,
            "page_width": 612,
            "page_height": 792,
            "content": "G.13 Orthonormal Bases and Complements 421\r\n(d) Construct an orthonormal basis for R\r\n3 from u and v.\r\nIf you did part (c) you can probably find 3 orthogonal vectors to make\r\na orthogonal basis. All you need to do to turn this into an orthonormal\r\nbasis is make these into unit vectors.\r\n(e) Test your abstract formulae starting with\r\nu =\r\n\r\n1 2 0\u0001\r\nand v =\r\n\r\n0 1 1\u0001\r\n.\r\nTry it out, and if you get stuck try drawing a sketch of the vectors you\r\nhave.\r\nHint for Review Problem 10\r\nThis video shows you a way to solve problem 10 that’s different to the method\r\ndescribed in the Lecture. The first thing is to think of\r\nM =\r\n\r\n\r\n1 0 2\r\n−1 2 0\r\n−1 2 2\r\n\r\n\r\nas a set of 3 vectors\r\nv1 =\r\n\r\n\r\n0\r\n−1\r\n−1\r\n\r\n , v2 =\r\n\r\n\r\n0\r\n2\r\n−2\r\n\r\n , v3 =\r\n\r\n\r\n2\r\n0\r\n2\r\n\r\n .\r\nThen you need to remember that we are searching for a decomposition\r\nM = QR\r\nwhere Q is an orthogonal matrix. Thus the upper triangular matrix R = QTM\r\nand QT Q = I. Moreover, orthogonal matrices perform rotations. To see this\r\ncompare the inner product u v = u\r\nT v of vectors u and v with that of Qu and\r\nQv:\r\n(Qu) (Qv) = (Qu)\r\nT\r\n(Qv) = u\r\nT QT Qv = uT\r\nv = u v .\r\nSince the dot product doesn’t change, we learn that Q does not change angles\r\nor lengths of vectors.\r\nNow, here’s an interesting procedure: rotate v1, v2 and v3 such that v1 is\r\nalong the x-axis, v2 is in the xy-plane. Then if you put these in a matrix you\r\nget something of the form\r\n\r\n\r\na b c\r\n0 d e\r\n0 0 f\r\n\r\n\r\nwhich is exactly what we want for R!\r\n421",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/768670c1-c29e-443a-b760-64c5f01c58b6.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=47396e0197fc762b26c8a6fcdb8c9a26c9567f97c0649001067d1fe0a02e535c",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 328
      },
      {
        "segments": [
          {
            "segment_id": "388e8e76-8357-41c7-b94a-40b08a09043e",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 422,
            "page_width": 612,
            "page_height": 792,
            "content": "422 Movie Scripts\r\nMoreover, the vector\r\n\r\n\r\na\r\n0\r\n0\r\n\r\n\r\nis the rotated v1 so must have length ||v1|| =\r\n√\r\n3. Thus a =\r\n√\r\n3.\r\nThe rotated v2 is\r\n\r\n\r\nb\r\nd\r\n0\r\n\r\n\r\nand must have length ||v2|| = 2√\r\n2. Also the dot product between\r\n\r\n\r\na\r\n0\r\n0\r\n\r\n and\r\n\r\n\r\nb\r\nd\r\n0\r\n\r\n\r\nis ab and must equal v1 v2 = 0. (That v1 and v2 were orthogonal is just a\r\ncoincidence here... .) Thus b = 0. So now we know most of the matrix R\r\nR =\r\n\r\n\r\n√\r\n3 0 c\r\n0 2√2 e\r\n0 0 f\r\n\r\n .\r\nYou can work out the last column using the same ideas. Thus it only remains to\r\ncompute Q from\r\nQ = MR−1.\r\nG.14 Diagonalizing Symmetric Matrices\r\n3 × 3 Example\r\nLets diagonalize the matrix\r\nM =\r\n\r\n\r\n1 2 0\r\n2 1 0\r\n0 0 5\r\n\r\n\r\nIf we want to diagonalize this matrix, we should be happy to see that it\r\nis symmetric, since this means we will have real eigenvalues, which means\r\nfactoring won’t be too hard. As an added bonus if we have three distinct\r\neigenvalues the eigenvectors we find will automatically be orthogonal, which\r\nmeans that the inverse of the matrix P will be easy to compute. We can start\r\n422",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/388e8e76-8357-41c7-b94a-40b08a09043e.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=77ac7e27464f1784d16febf41008c76c1b116991c3349ce5bdec4e36f07ef91e",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 237
      },
      {
        "segments": [
          {
            "segment_id": "fadbaf1e-2fbf-4c53-9e2c-feea6ecf3824",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 423,
            "page_width": 612,
            "page_height": 792,
            "content": "G.14 Diagonalizing Symmetric Matrices 423\r\nby finding the eigenvalues of this\r\ndet\r\n\r\n\r\n1 − λ 2 0\r\n2 1 − λ 0\r\n0 0 5 − λ\r\n\r\n = (1 − λ)\r\n\f\r\n\f\r\n\f\r\n\f\r\n1 − λ 0\r\n0 5 − λ\r\n\f\r\n\f\r\n\f\r\n\f\r\n− (2)\r\n\f\r\n\f\r\n\f\r\n\f\r\n2 0\r\n0 5 − λ\r\n\f\r\n\f\r\n\f\r\n\f\r\n+ 0\r\n\f\r\n\f\r\n\f\r\n\f\r\n2 1 − λ\r\n0 0\r\n\f\r\n\f\r\n\f\r\n\f\r\n= (1 − λ)(1 − λ)(5 − λ) + (−2)(2)(5 − λ) + 0\r\n= (1 − 2λ + λ\r\n2\r\n)(5 − λ) + (−2)(2)(5 − λ)\r\n= ((1 − 4) − 2λ + λ\r\n2\r\n)(5 − λ)\r\n= (−3 − 2λ + λ\r\n2\r\n)(5 − λ)\r\n= (1 + λ)(3 − λ)(5 − λ)\r\nSo we get λ = −1, 3, 5 as eigenvectors. First find v1 for λ1 = −1\r\n(M + I)\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n2 2 0\r\n2 2 0\r\n0 0 6\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n0\r\n0\r\n0\r\n\r\n ,\r\nimplies that 2x + 2y = 0 and 6z = 0,which means any multiple of v1 =\r\n\r\n\r\n1\r\n−1\r\n0\r\n\r\n is\r\nan eigenvector with eigenvalue λ1 = −1. Now for v2 with λ2 = 3\r\n(M − 3I)\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n−2 2 0\r\n2 −2 0\r\n0 0 4\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n0\r\n0\r\n0\r\n\r\n ,\r\nand we can find that that v2 =\r\n\r\n\r\n1\r\n1\r\n0\r\n\r\n would satisfy −2x + 2y = 0, 2x − 2y = 0 and\r\n4z = 0.\r\nNow for v3 with λ3 = 5\r\n(M − 5I)\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n−4 2 0\r\n2 −4 0\r\n0 0 0\r\n\r\n\r\n\r\n\r\nx\r\ny\r\nz\r\n\r\n =\r\n\r\n\r\n0\r\n0\r\n0\r\n\r\n ,\r\nNow we want v3 to satisfy −4x + 2y = 0 and 2x − 4y = 0, which imply x = y = 0,\r\nbut since there are no restrictions on the z coordinate we have v3 =\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n.\r\nNotice that the eigenvectors form an orthogonal basis. We can create an\r\northonormal basis by rescaling to make them unit vectors. This will help us\r\n423",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/fadbaf1e-2fbf-4c53-9e2c-feea6ecf3824.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=bc1b19dae6bcc76346feaafcf295beb1b3dca460c19f7e426737e1473ca8fbb3",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 402
      },
      {
        "segments": [
          {
            "segment_id": "bde1cda0-06eb-498a-9fdf-4097f560f796",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 424,
            "page_width": 612,
            "page_height": 792,
            "content": "424 Movie Scripts\r\nbecause if P = [v1, v2, v3] is created from orthonormal vectors then P\r\n−1 = PT ,\r\nwhich means computing P\r\n−1 should be easy. So lets say\r\nv1 =\r\n\r\n\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n0\r\n\r\n , v2 =\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n\r\n , and v3 =\r\n\r\n\r\n0\r\n0\r\n1\r\n\r\n\r\nso we get\r\nP =\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n− √\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n0 0 1\r\n\r\n and P\r\n−1 =\r\n\r\n\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n0\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n0 0 1\r\n\r\n\r\nSo when we compute D = P\r\n−1MP we’ll get\r\n\r\n\r\n√\r\n1\r\n2\r\n− √\r\n1\r\n2\r\n0\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n0 0 1\r\n\r\n\r\n\r\n\r\n1 2 0\r\n2 5 0\r\n0 0 5\r\n\r\n\r\n\r\n\r\n√\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n− √\r\n1\r\n2\r\n√\r\n1\r\n2\r\n0\r\n0 0 1\r\n\r\n =\r\n\r\n\r\n−1 0 0\r\n0 3 0\r\n0 0 5\r\n\r\n\r\nHint for Review Problem 1\r\nFor part (a), we can consider any complex number z as being a vector in R\r\n2 where\r\ncomplex conjugation corresponds to the matrix \u0012\r\n1 0\r\n0 −1\r\n\u0013\r\n. Can you describe zz¯\r\nin terms of kzk? For part (b), think about what values a ∈ R can take if\r\na = −a? Part (c), just compute it and look back at part (a).\r\nFor part (d), note that x\r\n†x is just a number, so we can divide by it.\r\nParts (e) and (f) follow right from definitions. For part (g), first notice\r\nthat every row vector is the (unique) transpose of a column vector, and also\r\nthink about why (AAT)\r\nT = AAT for any matrix A. Additionally you should see\r\nthat x\r\nT = x\r\n† and mention this. Finally for part (h), show that\r\nx\r\n†Mx\r\nx\r\n†x\r\n=\r\n\u0012\r\nx\r\n†Mx\r\nx\r\n†x\r\n\u0013T\r\nand reduce each side separately to get λ = λ.\r\nG.15 Kernel, Range, Nullity, Rank\r\nInvertibility Conditions\r\nHere I am going to discuss some of the conditions on the invertibility of a\r\nmatrix stated in Theorem 16.3.1. Condition 1 states that X = M−1V uniquely,\r\nwhich is clearly equivalent to 4. Similarly, every square matrix M uniquely\r\n424",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/bde1cda0-06eb-498a-9fdf-4097f560f796.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=e865a7403647ea463690db0da1aad0ac157f98284e1bbfa6618f4f2084615b6a",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 419
      },
      {
        "segments": [
          {
            "segment_id": "b6bda2a6-9e8f-45c8-a975-8b822bdfa663",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 425,
            "page_width": 612,
            "page_height": 792,
            "content": "G.15 Kernel, Range, Nullity, Rank 425\r\ncorresponds to a linear transformation L: R\r\nn → Rn, so condition 3 is equiva\u0002lent to condition 1.\r\nCondition 6 implies 4 by the adjoint construct the inverse, but the con\u0002verse is not so obvious. For the converse (4 implying 6), we refer back the\r\nproofs in Chapter 18 and 19. Note that if det M = 0, there exists an eigen\u0002value of M equal to 0, which implies M is not invertible. Thus condition 8\r\nis equivalent to conditions 4, 5, 9, and 10.\r\nThe map M is injective if it does not have a null space by definition,\r\nhowever eigenvectors with eigenvalue 0 form a basis for the null space. Hence\r\nconditions 8 and 14 are equivalent, and 14, 15, and 16 are equivalent by the\r\nDimension Formula (also known as the Rank-Nullity Theorem).\r\nNow conditions 11, 12, and 13 are all equivalent by the definition of a\r\nbasis. Finally if a matrix M is not row-equivalent to the identity matrix,\r\nthen det M = 0, so conditions 2 and 8 are equivalent.\r\nHint for Review Problem 3\r\nLets work through this problem.\r\nLet L: V → W be a linear transformation. Show that kerL = {0V } if and\r\nonly if L is one-to-one:\r\n1. First, suppose that kerL = {0V }. Show that L is one-to-one.\r\nRemember what one-one means, it means whenever L(x) = L(y) we can be\r\ncertain that x = y. While this might seem like a weird thing to require\r\nthis statement really means that each vector in the range gets mapped to\r\na unique vector in the range.\r\nWe know we have the one-one property, but we also don’t want to forget\r\nsome of the more basic properties of linear transformations namely that\r\nthey are linear, which means L(ax + by) = aL(x) + bL(y) for scalars a and\r\nb.\r\nWhat if we rephrase the one-one property to say whenever L(x) − L(y) = 0\r\nimplies that x − y = 0? Can we connect that to the statement that kerL =\r\n{0V }? Remember that if L(v) = 0 then v ∈ kerL = {0V }.\r\n2. Now, suppose that L is one-to-one. Show that kerL = {0V }. That is, show\r\nthat 0V is in kerL, and then show that there are no other vectors in\r\nkerL.\r\nWhat would happen if we had a nonzero kernel? If we had some vector v\r\nwith L(v) = 0 and v 6= 0, we could try to show that this would contradict\r\nthe given that L is one-one. If we found x and y with L(x) = L(y), then\r\nwe know x = y. But if L(v) = 0 then L(x) + L(v) = L(y). Does this cause a\r\nproblem?\r\n425",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/b6bda2a6-9e8f-45c8-a975-8b822bdfa663.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=7566743dd8c625f7b8580c75377b7789ed420d4b5bf69a1a7adeb2a40be45ca6",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 465
      },
      {
        "segments": [
          {
            "segment_id": "2eec8f11-56d7-45c8-8af4-232b646bfd9f",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 426,
            "page_width": 612,
            "page_height": 792,
            "content": "426 Movie Scripts\r\nG.16 Least Squares and Singular Values\r\nLeast Squares: Hint for Review Problem 1\r\nLets work through this problem. Let L : U → V be a linear transformation.\r\nSuppose v ∈ L(U) and you have found a vector ups that obeys L(ups) = v.\r\nExplain why you need to compute kerL to describe the solution space of the\r\nlinear system L(u) = v.\r\nRemember the property of linearity that comes along with any linear trans\u0002formation: L(ax + by) = aL(x) + bL(y) for scalars a and b. This allows us to\r\nbreak apart and recombine terms inside the transformation.\r\nNow suppose we have a solution x where L(x) = v. If we have an vector\r\ny ∈ kerL then we know L(y) = 0. If we add the equations together L(x) + L(y) =\r\nL(x + y) = v + 0 we get another solution for free. Now we have two solutions,\r\nis that all?\r\nHint for Review Problem ??\r\nFor the first part, what is the transpose of a 1 × 1 matrix? For the other two\r\nparts, note that v v = v\r\nT v. Can you express this in terms of kvk? Also you\r\nneed the trivial kernel only for the last part and just think about the null\r\nspace of M. It might help to substitute w = Mx.\r\n426",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/2eec8f11-56d7-45c8-8af4-232b646bfd9f.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=1ad20e291938384d260b5cdbae2f392b8150391c8d311a0e01dbd95f560049d0",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "3beba06c-c135-43fc-a46b-241e6a088e74",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 427,
            "page_width": 612,
            "page_height": 792,
            "content": "Index\r\nAction, 363\r\nAngle between vectors, 78\r\nAnti-symmetric matrix, 131\r\nBack substitution, 142\r\nBase field, 93\r\nBasis, 197\r\nconcept of, 179\r\nexample of, 192\r\nbasis, 102, 103\r\nBit matrices, 136\r\nBit Matrix, 137\r\nBlock matrix, 124\r\nCalculus Superhero, 279\r\nCanonical basis, see also Standard ba\u0002sis, 382\r\nCaptain Conundrum, 84, 279\r\nCauchy–Schwarz inequality, 79\r\nChange of basis, 224\r\nChange of basis matrix, 225\r\nCharacteristic polynomial, 167, 214,\r\n216\r\nClosure, 181\r\nadditive, 87\r\nmultiplicative, 87\r\nCodomain, 30, 264\r\nCofactor, 172\r\nColumn Space, 120\r\nconcept of, 24\r\nColumn space, 268\r\nColumn vector, 116\r\nof a vector, 110\r\nComponents of a vector, 110\r\nConic sections, 319\r\nConjugation, 229\r\nCramer’s rule, 174\r\nDeterminant, 154\r\n2 × 2 matrix, 152\r\n3 × 3 matrix, 152\r\nDiagonal matrix, 120\r\nDiagonalizable, 224\r\nDiagonalization, 223\r\nconcept of, 213\r\nDimension, 197\r\nconcept of, 102\r\nnotion of, 179\r\n427",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/3beba06c-c135-43fc-a46b-241e6a088e74.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=842d68cac8b49471feccddcd51a950222dc01a8b756a4edf08fbd666e1f54d96",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 365
      },
      {
        "segments": [
          {
            "segment_id": "39f06b99-ffa1-4ea1-8ea2-2a98de7fd46d",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 428,
            "page_width": 612,
            "page_height": 792,
            "content": "428 INDEX\r\nDimension formula, 269\r\nDirect sum, 247\r\nDomain, 30, 264\r\nDot product, 78\r\nDual vector space, 331\r\nDyad, 237\r\nEigenspace, 219\r\nEigenvalue, 211, 215\r\nmultiplicity of, 216\r\nEigenvector, 211, 215\r\nEinstein, Albert, 61\r\nElementary matrix, 156\r\nswapping rows, 157\r\nElite NASA engineers, 316\r\nEquivalence relation, 232\r\nEROs, 36\r\nEuclidean length, 77\r\nEven permutation, 153\r\nExpansion by minors, 168\r\nFibonacci numbers, 336\r\nField, 289\r\nForward substitution, 142\r\nfree variables, 39\r\nFundamental theorem of algebra, 216\r\nFundamental Theorem of Linear Al\u0002gebra, 272\r\nGalois, 94\r\nGaussian elimination, 33\r\nGolden ratio, 321\r\nGoofing up, 135\r\nGram–Schmidt orthogonalization pro\u0002cedure, 244\r\nGraph theory, 116\r\nhomogeneous equation, 59\r\nHomogeneous solution\r\nan example, 59\r\nHomomorphism, 97\r\nHyperplane, 57, 76\r\nIdentity matrix, 121\r\n2 × 2, 34\r\nInner product, 236\r\nInvariant direction, 211\r\nInverse Matrix, 47\r\nInvertible, 132\r\ninvertiblech3, 47\r\nInvolution, 250\r\nJordan cell, 232, 385\r\nKernel, 266\r\nKirchoff’s laws, 314\r\nKronecker delta, 236\r\nLaw of Cosines, 77\r\nLeast squares, 277\r\nsolutions, 278\r\nLeft singular vectors, 284\r\nLength of a vector, 78\r\nLinear combination, 21, 219\r\nLinear dependence theorem, 189\r\nLinear independence\r\nconcept of, 179\r\nLinear Map, 97\r\nLinear Operator, 97\r\nlinear programming, 63\r\nLinear System\r\nconcept of, 22\r\nLinear Transformation, 97\r\nconcept of, 24\r\nLinearly dependent, 188\r\nLinearly independent, 188\r\nlower triangular, 50\r\nLower triangular matrix, 141\r\n428",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/39f06b99-ffa1-4ea1-8ea2-2a98de7fd46d.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=950df04fb1574029ddc49eda49be1219dc54afc46e449ba731a2e80aa2e070cc",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "97308984-337c-42bc-9572-948f3b8bbc16",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 429,
            "page_width": 612,
            "page_height": 792,
            "content": "INDEX 429\r\nLower unit triangular matrix, 144\r\nLU decomposition, 141\r\nMagnitude, see also Length of a vec\u0002tor\r\nMatrix, 115\r\ndiagonal of, 120\r\nentries of, 116\r\nMatrix equation, 25\r\nMatrix exponential, 126\r\nMatrix of a linear transformation, 202\r\nMinimal spanning set, 192\r\nMinor, 168\r\nMultiplicative function, 168\r\nNewton’s Principiæ, 318\r\nNon-invertible, 132\r\nNon-pivot variables, 39\r\nNonsingular, 132\r\nNorm, see also Length of a vector\r\nNullity, 269\r\nOdd permutation, 153\r\nOrthogonal, 78, 236\r\nOrthogonal basis, 237\r\nOrthogonal complement, 248\r\nOrthogonal decomposition, 242\r\nOrthogonal matrix, 240\r\nOrthonormal basis, 237\r\nOuter product, 236\r\nParallelepiped, 174\r\nParticular solution\r\nan example, 58\r\nPauli Matrices, 110\r\nPermutation, 152\r\nPermutation matrices, 231\r\n“Perp”, 249\r\nPivot variables, 39\r\nPre-image, 264\r\nProjection, 221\r\nQR decomposition, 245\r\nQueen Quandary, 320\r\nRandom, 274\r\nRank, 268\r\nRecursion relation, 321\r\nReduced row echelon form, 37\r\nRight singular vector, 283\r\nRow Space, 120\r\nRow vector, 116\r\nScalar multiplication\r\nn-vectors, 74\r\nSign function, 153\r\nSimilar matrices, 229\r\nsingular, 132\r\nSingular values, 262\r\nSkew-symmetric matrix, see Anti-symmetric\r\nmatrix\r\nSolution set, 39, 57\r\nset notation, 58\r\nsolution set, 39\r\nSpan, 182\r\nSquare matrices, 125\r\nSquare matrix, 120\r\nStandard basis, 201, 204\r\nfor R\r\n2\r\n, 106\r\nSubspace, 179\r\nnotion of, 179\r\nSubspace theorem, 180\r\nSum of vectors spaces, 247\r\nSymmetric matrix, 121, 255\r\nTarget, see Codomain\r\nTarget Space, see also Codomain\r\nTrace, 127\r\n429",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/97308984-337c-42bc-9572-948f3b8bbc16.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=6d066d283b14a91429f263f1976cb935ad75098750c1a018c6ec56db1c539bce",
            "html": null,
            "markdown": null
          },
          {
            "segment_id": "4365c88d-64fe-4415-9d20-c9d96e0cc489",
            "bbox": {
              "left": 0,
              "top": 0,
              "width": 612,
              "height": 792
            },
            "page_number": 430,
            "page_width": 612,
            "page_height": 792,
            "content": "430 INDEX\r\nTranspose, 121\r\nof a column vector, 116\r\nTriangle inequality, 80\r\nUpper triangular matrix, 50, 141\r\nVandermonde determinant, 316\r\nVector addition\r\nn-vectors, 74\r\nVector space, 87\r\nfinite dimensional, 197\r\nZero vector\r\nn-vectors, 74\r\n430",
            "segment_type": "Page",
            "ocr": null,
            "image": "https://storage.googleapis.com/chunkr-bucket-dev/ccf89702-e38e-4089-bd6b-77e3ba63c341/d3029f04-aeee-4dff-a72d-f3ce0c16981d/images/4365c88d-64fe-4415-9d20-c9d96e0cc489.jpg?x-id=GetObject&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=GOOG1E6ZKWCYPX4LV42MGE7WJ66QU2EMDPF3DJ2IFHNTQIGHNC2STOGTWF75E%2F20241112%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20241112T042112Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=ff85aa288509effaa08bde30f71f8a241a34d4df16b771f6f5e7405689311e43",
            "html": null,
            "markdown": null
          }
        ],
        "chunk_length": 462
      }
    ],
    "extracted_json": {
      "title": "Document Metadata",
      "schema_type": "object",
      "extracted_fields": [
        {
          "name": "title",
          "field_type": "string",
          "value": "```json\n{\n \"title\": \"Linear Algebra\"\n}\n```"
        },
        {
          "name": "author",
          "field_type": "string",
          "value": "`Katrina Glaeser, Rohit Thomas and Travis Scrimshaw`\n"
        },
        {
          "name": "date_published",
          "field_type": "string",
          "value": "```json\n{\"date_published\": \"2013\"}\n```"
        },
        {
          "name": "location",
          "field_type": "string",
          "value": "Davis California\n"
        }
      ]
    }
  }
}