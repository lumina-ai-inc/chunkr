.lh
.env
.venv
venv
output
test
output-gpu
staging
examples
annotated
annotated-gpu
sample
input
.whisper
.env
__pycache__
.DS_Store
node_modules
.turbo
*.log
dist
dist-ssr
*.local
.env
.cache
server/dist
public/dist
input2
output
test
output-gpu
staging
examples
annotated
annotated-gpu
sample
samples
test_images
# Ignore Rust build artifacts
target/
**/*.rs.bk

# Ignore environment variable files
.env

# Ignore specific IDE/editor files
.idea/
.vscode/
*.swp

# Ignore compiled libraries
*.rlib

# Ignore Cargo.lock if it's a library
Cargo.lock

# Ignore backup files
*.bak
*.tmp

.lh
.dev/otel-collector/otel-collector-config.yaml
*secret.yaml

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in.dev/otel-collector/otel-collector-config.yaml
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

log.py
logs.md
commit.py
commits.md

# Ignore SSH keys
id_rsa
id_rsa.pub
id_ed25519
id_ed25519.pub
*.pem
commits.md
test_images

*.crt
*.key

test.py

ocr_log.csv
ocr_aggregate_results.csv

output.json## Running otel collector

```bash
docker run -p 4317:4317 -p 4318:4318 \
  -v $(pwd)/otel-collector-config.yaml:/etc/otel-collector-config.yaml \
  -e SIGNOZ_ENDPOINT=ingest.us.signoz.cloud:443 \
  -e SIGNOZ_INGESTION_KEY=your-key-here \
  otel/opentelemetry-collector-contrib:latest \
  --config=/etc/otel-collector-config.yaml
```

output.html

*.dylib
microsoft/table-transformer-structure-recognition-v1.1-all
score.py
# ui_table_test.py
# table_test.py
figures
images
input_pdfs


# Terraform files
**/.terraform/*
*.tfstate
*.tfstate.*
*.tfvars
*.tfvars.json
backend.hcl
backend.*.hcl
override.tf
override.tf.json
*_override.tf
*_override.tf.json
.terraformrc
terraform.rc
crash.log
crash.*.log

# Exclude example files
!*.example.tfvars
!backend.example.hcl
!backend.hcl.example

.ruff_cache

uv.lock
output_structured_extraction
request.sh
certs
models.yaml
/pdfs
*.pdf
*.pdfs
*.pdfs.zip
*.pdfs.zip.part
*.pdfs.zip.part.1
*.pdfs.zip.part.2
*.pdfs.zip.part.3

otel-collector-config.yaml