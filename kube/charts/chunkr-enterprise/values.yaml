ingress:
  enabled: true
  type: cloudflare
  className: cloudflare
  annotations:
    kubernetes.io/ingress.class: nginx
  domain: chunkr.ai
  subdomains:
    root: true
  tls:
    enabled: false
    secretName: tls-secret
  cloudflare:
    enabled: true
    replicas: 2
    image:
      repository: cloudflare/cloudflared
      tag: 2025.2.0
      pullPolicy: Always
    config:
      tunnelName: chunkr
      services:
        - name: server
        - name: keycloak
        - name: web
        - name: minio
        - name: embeddings
        - name: reranker
        - name: analytics-web
        - name: analytics-server
        - name: sparse-doc-embeddings
        - name: sparse-query-embeddings
common:
  standardEnv:
    - name: AUTH__KEYCLOAK_URL
      value: >-
        https://{{ .Values.services.keycloak.ingress.subdomain }}.{{
        .Values.ingress.domain }}
    - name: AWS__ENDPOINT
      value: http://{{- .Release.Name }}-minio:9000
    - name: AWS__PRESIGNED_URL_ENDPOINT
      value: >-
        https://{{ .Values.services.minio.ingress.subdomain }}.{{
        .Values.ingress.domain }}
    - name: AWS__REGION
      value: us-east-1
    - name: LLM__MODELS_PATH
      value: /app/models.yaml
    - name: PG__URL
      value: >-
        postgresql://{{ .Values.services.postgres.credentials.username }}:{{
        .Values.services.postgres.credentials.password }}@{{- .Release.Name
        }}-postgres:5432/chunkr
    - name: REDIS__URL
      value: redis://{{- .Release.Name }}-redis:6379
    - name: SEARCH__DENSE_VECTOR_URL
      value: http://{{- .Release.Name }}-embeddings:8000
    - name: WORKER__GENERAL_OCR_URL
      value: http://{{- .Release.Name }}-ocr:8000
    - name: WORKER__SEGMENTATION_URL
      value: http://{{- .Release.Name }}-segmentation:8000
    - name: WORKER__SERVER_URL
      value: >-
        https://{{ .Values.services.server.ingress.subdomain }}.{{
        .Values.ingress.domain }}
    - name: EMAIL__SERVER_URL
      value: http://{{- .Release.Name }}-emails:8000
global:
  image:
    registry: luminainc
    pullPolicy: Always
  storageClass: standard
  gpuWorkload:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: workload-type
                  operator: In
                  values:
                    - chunkr-gpu
            topologyKey: kubernetes.io/hostname
    tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - key: DeletionCandidateOfClusterAutoscaler
        operator: Exists
        effect: PreferNoSchedule
    resources:
      limits:
        nvidia.com/gpu: 1
      requests:
        nvidia.com/gpu: 1
    volumes:
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 5Gi
    volumeMounts:
      - name: dshm
        mountPath: /dev/shm
nvidia:
  timeSlicing:
    enabled: true
    replicas: 8
    timeSlice: 2ms
services:
  server:
    enabled: true
    useStandardEnv: true
    image:
      repository: server-azure
      tag: 1.17.1-enterprise
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    ingress:
      enabled: true
      subdomain: api
    envFrom:
      - secretRef:
          name: chunkr-secret
    volumes:
      - name: llm-models-config
        configMap:
          name: llm-models-configmap
    volumeMounts:
      - name: llm-models-config
        mountPath: /app/models.yaml
        subPath: models.yaml
        readOnly: true
  task:
    enabled: true
    useStandardEnv: true
    image:
      repository: task-azure
      tag: 1.17.1-enterprise
    imagePullSecrets:
      - name: regcred
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: '3'
    volumes:
      - name: llm-models-config
        configMap:
          name: llm-models-configmap
    volumeMounts:
      - name: llm-models-config
        mountPath: /app/models.yaml
        subPath: models.yaml
        readOnly: true
  web:
    enabled: true
    image:
      repository: web
      tag: 1.17.1-enterprise
    port: 8000
    targetPort: 8000
    ingress:
      enabled: true
      subdomain: www
    env:
      - name: VITE_API_URL
        value: >-
          https://{{ .Values.services.server.ingress.subdomain }}.{{
          .Values.ingress.domain }}
      - name: VITE_DOCS_URL
        value: https://docs.chunkr.ai
      - name: VITE_FEATURE_FLAG_PIPELINE
        value: 'true'
      - name: VITE_KEYCLOAK_CLIENT_ID
        value: chunkr
      - name: VITE_KEYCLOAK_POST_LOGOUT_REDIRECT_URI
        value: >-
          https://{{ .Values.services.web.ingress.subdomain }}.{{
          .Values.ingress.domain }}
      - name: VITE_KEYCLOAK_REALM
        value: chunkr
      - name: VITE_KEYCLOAK_REDIRECT_URI
        value: >-
          https://{{ .Values.services.web.ingress.subdomain }}.{{
          .Values.ingress.domain }}/dashboard
      - name: VITE_KEYCLOAK_URL
        value: >-
          https://{{ .Values.services.keycloak.ingress.subdomain }}.{{
          .Values.ingress.domain }}
      - name: VITE_STRIPE_API_KEY
        valueFrom:
          secretKeyRef:
            name: chunkr-secret
            key: VITE_STRIPE_API_KEY
  ocr:
    enabled: true
    image:
      repository: doctr
      tag: 1.17.1-enterprise
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    useGPU: true
    enableTopologySpreadConstraints: true
    env:
      - name: MAX_BATCH_SIZE
        value: '100'
    labels:
      workload-type: chunkr-gpu
  segmentation:
    enabled: true
    image:
      repository: segmentation
      tag: 1.5.0
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    useGPU: true
    enableTopologySpreadConstraints: true
    labels:
      workload-type: chunkr-gpu
    env:
      - name: MAX_BATCH_SIZE
        value: '100'
      - name: OVERLAP_THRESHOLD
        value: '0.1'
      - name: SCORE_THRESHOLD
        value: '0.15'
      - name: CONF_THRESHOLD
        value: '0.1'
  emails:
    enabled: true
    image:
      repository: emails
      tag: 1.17.1-enterprise
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    envFrom:
      - secretRef:
          name: chunkr-secret
  analytics-web:
    enabled: true
    image:
      repository: analytics-web
      tag: 1.11.0-enterprise
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    ingress:
      enabled: true
      subdomain: analytics
    env:
      - name: VITE_API_URL
        value: >-
          https://{{ index .Values.services "analytics-server" "ingress"
          "subdomain" }}.{{ .Values.ingress.domain }}
  analytics-server:
    enabled: true
    image:
      repository: analytics-server
      tag: 1.11.0-enterprise
    imagePullSecrets:
      - name: regcred
    port: 8000
    targetPort: 8000
    ingress:
      enabled: true
      subdomain: analytics-api
    env:
      - name: API_KEY
        valueFrom:
          secretKeyRef:
            name: chunkr-secret
            key: ANALYTICS__API_KEY
      - name: DATABASE_URL
        valueFrom:
          secretKeyRef:
            name: chunkr-secret
            key: PG__URL
