ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
  domain: "chunkr.ai"

global:
  image:
    registry: luminainc
    pullPolicy: Always

  # Shared GPU configuration
  gpuWorkload:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - ${SERVICE_NAME}
            topologyKey: "kubernetes.io/hostname"
    tolerations:
    - key: "nvidia.com/gpu"
      operator: "Exists"
      effect: "NoSchedule"
    resources:
      limits:
        nvidia.com/gpu: 1
      requests:
        nvidia.com/gpu: 1
    volumes:
    - name: dshm
      emptyDir:
        medium: Memory
        sizeLimit: 5Gi
    volumeMounts:
    - name: dshm
      mountPath: /dev/shm
  
services:
  chunkr:
    enabled: true
    image:
      repository: chunkr
      tag: "68a05839"
    port: 8000
    ingress:
      enabled: true
      subdomain: "api" 
    envFrom:
      - secretRef:
          name: chunkr-secret
  web:
      enabled: true
      image:
        repository: web
        tag: "0c5f457a"
      port: 8000
      targetPort: 8000
      envFrom:
        - secretRef:
            name: web-secrets

  keycloak:
    enabled: true
    image:
      repository: keycloak
      tag: "25.0.2"
      registry: quay.io/keycloak
    port: 8080
    targetPort: 8080
    args: ["start-dev", "--import-realm"]
    envFrom:
      - secretRef:
          name: keycloak-secret
    readinessProbe:
      httpGet:
        path: /realms/master
        port: 8080

  rrq:
    enabled: true
    image:
      repository: rrq
      tag: "9326b10"
    port: 8000
    targetPort: 8000
    envFrom:
      - secretRef:
          name: rrq-secret

  rrq-analytics:
    enabled: true
    image:
      repository: rrq-analytics
      tag: "459b00d"
    port: 8000
    targetPort: 8000
    envFrom:
      - secretRef:
          name: rrq-secret

  # Workers
  fast:
    enabled: true
    image:
      repository: fast
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"

  high-quality:
    enabled: true
    image:
      repository: high-quality
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"

  ocr:
    enabled: true
    image:
      repository: ocr
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"
  
  postprocess:
    enabled: true
    image:
      repository: postprocess
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"

  preprocess:
    enabled: true
    image:
      repository: preprocess
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"
  
  structured-extraction:
    enabled: true
    image:
      repository: structured-extraction
      tag: "68a05839"
    envFrom:
      - secretRef:
          name: chunkr-secret
    env:
      - name: PG__POOL__MAX_SIZE
        value: "3"

  # Services
  doctr:
    enabled: true
    image:
      repository: doctr
      tag: "07c654a8"
    port: 8000
    targetPort: 8000
    useGPU: true 

  embeddings:
    enabled: true
    image:
      repository: text-embeddings-inference
      tag: "1.5"
      registry: ghcr.io/huggingface
    port: 8000
    targetPort: 80
    args: ["--model-id", "BAAI/bge-m3"]
    useGPU: true 
  
  paddle-ocr:
    enabled: false 
    image:
      repository: paddle-ocr
      tag: "07c654a8"
    port: 8000
    targetPort: 8000
    useGPU: true 

  pdla:
    enabled: true
    image:
      repository: pdla
      tag: "8c4bfb6d"
    port: 8000
    targetPort: 8000
    useGPU: true 
    command: ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "--chdir", "./src", "app:app", "--bind", "0.0.0.0:8000", "--timeout", "10000"]

  table-ocr:
    enabled: false
    image:
      repository: table-ocr
      tag: "68a05839"
    port: 8000
    targetPort: 8000
    useGPU: true 