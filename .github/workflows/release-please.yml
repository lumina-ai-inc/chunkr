name: Release Please

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'compose.yaml'
      - 'compose-cpu.yaml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created || github.event_name == 'workflow_dispatch' }}
      release_tag: ${{ steps.release.outputs.tag_name || format('{0}', github.event.inputs.tag) }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Debug releases created
        run: |
          echo "Releases created: ${{ steps.release.outputs.releases_created || github.event_name == 'workflow_dispatch' }}"
          echo "Release tag: ${{ steps.release.outputs.tag_name || format('{0}', github.event.inputs.tag) }}"
  
  build-and-publish:
    needs: [release-please]
    if: ${{ (github.event_name == 'workflow_dispatch') || (needs.release-please.outputs.releases_created == 'true') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [server, task, web, doctr]
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract version without 'v' prefix
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            TAG="${{ needs.release-please.outputs.release_tag }}"
            echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/${{ matrix.component }}/Dockerfile
          push: true
          tags: |
            luminainc/${{ matrix.component }}:${{ steps.version.outputs.VERSION }}
            luminainc/${{ matrix.component }}:latest

  update-compose-files:
    needs: [release-please]
    if: ${{ (github.event_name == 'workflow_dispatch') || (needs.release-please.outputs.releases_created == 'true') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            VERSION="${{ needs.release-please.outputs.release_tag }}"
            echo "VERSION=${VERSION#v}" >> $GITHUB_OUTPUT
          fi
      
      - name: Update compose.yaml
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          # Only update images that are part of the matrix (server, task, web, doctr)
          sed -i -E '/luminainc\/(server|task|web|doctr):/s/(image: luminainc\/[^:]+:)[^[:space:]]*/\1'$VERSION'/' compose.yaml
          sed -i -E '/luminainc\/(server|task|web|doctr):/s/(image: luminainc\/[^:]+:)[^[:space:]]*/\1'$VERSION'/' compose-cpu.yaml
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore: update compose files to version ${{ steps.get_version.outputs.VERSION }}"
          title: "chore: update compose files to version ${{ steps.get_version.outputs.VERSION }}"
          body: |
            This PR updates the Docker image versions in compose files to match the latest release.
            
            Auto-generated by Release Please workflow.
          branch: update-compose-files-${{ steps.get_version.outputs.VERSION }}
          base: main
          delete-branch: true
