name: Rust Lint

on:
  push:
    branches: [ main ]
    paths:
      - 'core/**/*.rs'
  pull_request:
    branches: [ main ]
    paths:
      - 'core/**/*.rs'
  workflow_dispatch:  # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Check and Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=./core/Cargo.toml --all -- --check
      
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=./core/Cargo.toml -- -D warnings
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path=./core/Cargo.toml --all-features
          
  format:
    name: Auto Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      
      - name: Format code
        run: cd core && cargo fmt
      
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
      
      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "style(core): auto-format Rust code with rustfmt"
          title: "style(core): Auto-format Rust code"
          body: |
            This PR was automatically created by the Rust Lint workflow.
            It applies automatic formatting to the Rust code using `cargo fmt`.
          branch: auto-format-rust
          base: main 

  clippy-fix:
    name: Auto Fix Clippy Warnings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      
      - name: Fix clippy warnings
        run: cd core && cargo clippy --fix --allow-dirty --allow-staged
      
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
      
      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "fix(core): auto-fix clippy warnings"
          title: "fix(core): Auto-fix clippy warnings"
          body: |
            This PR was automatically created by the Rust Lint workflow.
            It applies automatic fixes to Rust code using `cargo clippy --fix`.
          branch: auto-fix-clippy
          base: main 